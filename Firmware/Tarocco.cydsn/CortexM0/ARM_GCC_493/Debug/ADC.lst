ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADC_Init,"ax",%progbits
  18              		.align	2
  19              		.global	ADC_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	ADC_Init, %function
  23              	ADC_Init:
  24              	.LFB1:
  25              		.file 1 "Generated_Source\\PSoC4\\ADC.c"
   1:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:Generated_Source\PSoC4/ADC.c **** * Version 2.40
   4:Generated_Source\PSoC4/ADC.c **** *
   5:Generated_Source\PSoC4/ADC.c **** * Description:
   6:Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC.c **** *
   9:Generated_Source\PSoC4/ADC.c **** * Note:
  10:Generated_Source\PSoC4/ADC.c **** *
  11:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/ADC.c **** 
  18:Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:Generated_Source\PSoC4/ADC.c **** 
  20:Generated_Source\PSoC4/ADC.c **** 
  21:Generated_Source\PSoC4/ADC.c **** /***************************************
  22:Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:Generated_Source\PSoC4/ADC.c **** 
  28:Generated_Source\PSoC4/ADC.c **** 
  29:Generated_Source\PSoC4/ADC.c **** /***************************************
  30:Generated_Source\PSoC4/ADC.c **** * Local data allocation
  31:Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 2


  33:Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000000u };
  34:Generated_Source\PSoC4/ADC.c **** 
  35:Generated_Source\PSoC4/ADC.c **** 
  36:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC.c **** *
  40:Generated_Source\PSoC4/ADC.c **** * Summary:
  41:Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC.c **** *
  45:Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC.c **** *  None.
  47:Generated_Source\PSoC4/ADC.c **** *
  48:Generated_Source\PSoC4/ADC.c **** * Return:
  49:Generated_Source\PSoC4/ADC.c **** *  None.
  50:Generated_Source\PSoC4/ADC.c **** *
  51:Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:Generated_Source\PSoC4/ADC.c **** *
  62:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:Generated_Source\PSoC4/ADC.c **** {
  65:Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  67:Generated_Source\PSoC4/ADC.c ****     {
  68:Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  69:Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  70:Generated_Source\PSoC4/ADC.c ****     }
  71:Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  72:Generated_Source\PSoC4/ADC.c **** }
  73:Generated_Source\PSoC4/ADC.c **** 
  74:Generated_Source\PSoC4/ADC.c **** 
  75:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC.c **** *
  79:Generated_Source\PSoC4/ADC.c **** * Summary:
  80:Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:Generated_Source\PSoC4/ADC.c **** *
  84:Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC.c **** *  None.
  86:Generated_Source\PSoC4/ADC.c **** *
  87:Generated_Source\PSoC4/ADC.c **** * Return:
  88:Generated_Source\PSoC4/ADC.c **** *  None.
  89:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 3


  90:Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC.c **** *
  93:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:Generated_Source\PSoC4/ADC.c **** {
  26              		.loc 1 95 0
  27              		.cfi_startproc
  28 0000 08B5     		push	{r3, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 3, -8
  31              		.cfi_offset 14, -4
  96:Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC.c **** 
 100:Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC.c ****         {
 103:Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 4


 141:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC.c ****         };
 168:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC.c **** 
 170:Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  32              		.loc 1 172 0
  33 0002 0E20     		mov	r0, #14
  34 0004 0321     		mov	r1, #3
  35 0006 FFF7FEFF 		bl	CyIntSetPriority
  36              	.LVL0:
 173:Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  37              		.loc 1 173 0
  38 000a 0E20     		mov	r0, #14
  39 000c 2549     		ldr	r1, .L6
  40 000e FFF7FEFF 		bl	CyIntSetVector
  41              	.LVL1:
 174:Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC.c **** 
 176:Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
  42              		.loc 1 177 0
  43 0012 0122     		mov	r2, #1
  44 0014 244B     		ldr	r3, .L6+4
  45 0016 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
  46              		.loc 1 180 0
  47 0018 244B     		ldr	r3, .L6+8
  48 001a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 5


 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  49              		.loc 1 178 0
  50 001c 002B     		cmp	r3, #0
  51 001e 01DA     		bge	.L5
  52 0020 2349     		ldr	r1, .L6+12
  53 0022 00E0     		b	.L2
  54              	.L5:
  55 0024 2349     		ldr	r1, .L6+16
  56              	.L2:
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  57              		.loc 1 178 0 is_stmt 0 discriminator 4
  58 0026 244A     		ldr	r2, .L6+20
  59 0028 1368     		ldr	r3, [r2]
  60 002a 0B43     		orr	r3, r1
  61 002c 1360     		str	r3, [r2]
 181:Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
  62              		.loc 1 182 0 is_stmt 1 discriminator 4
  63 002e 234A     		ldr	r2, .L6+24
  64 0030 234B     		ldr	r3, .L6+28
  65 0032 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
  66              		.loc 1 183 0 discriminator 4
  67 0034 234A     		ldr	r2, .L6+32
  68 0036 244B     		ldr	r3, .L6+36
  69 0038 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
  70              		.loc 1 184 0 discriminator 4
  71 003a 8022     		mov	r2, #128
  72 003c 1206     		lsl	r2, r2, #24
  73 003e 234B     		ldr	r3, .L6+40
  74 0040 1A60     		str	r2, [r3]
 185:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
  75              		.loc 1 185 0 discriminator 4
  76 0042 234B     		ldr	r3, .L6+44
  77 0044 234A     		ldr	r2, .L6+48
  78 0046 1360     		str	r3, [r2]
 186:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
  79              		.loc 1 186 0 discriminator 4
  80 0048 234A     		ldr	r2, .L6+52
  81 004a 1360     		str	r3, [r2]
 187:Generated_Source\PSoC4/ADC.c ****     
 188:Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
  82              		.loc 1 190 0 discriminator 4
  83 004c 234A     		ldr	r2, .L6+56
  84 004e 1368     		ldr	r3, [r2]
  85 0050 8021     		mov	r1, #128
  86 0052 4902     		lsl	r1, r1, #9
  87 0054 0B43     		orr	r3, r1
  88 0056 1360     		str	r3, [r2]
 191:Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 193:Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 194:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 6


 196:Generated_Source\PSoC4/ADC.c **** 
 197:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
  89              		.loc 1 197 0 discriminator 4
  90 0058 0023     		mov	r3, #0
  91 005a 214A     		ldr	r2, .L6+60
  92 005c 1360     		str	r3, [r2]
 198:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
  93              		.loc 1 198 0 discriminator 4
  94 005e 214A     		ldr	r2, .L6+64
  95 0060 1360     		str	r3, [r2]
 199:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
  96              		.loc 1 199 0 discriminator 4
  97 0062 0122     		mov	r2, #1
  98 0064 204B     		ldr	r3, .L6+68
  99 0066 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/ADC.c **** 
 201:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 100              		.loc 1 202 0 discriminator 4
 101 0068 0132     		add	r2, r2, #1
 102 006a 204B     		ldr	r3, .L6+72
 103 006c 1A60     		str	r2, [r3]
 203:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC.c **** 
 205:Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 104              		.loc 1 206 0 discriminator 4
 105 006e 204A     		ldr	r2, .L6+76
 106 0070 1168     		ldr	r1, [r2]
 107              	.LVL2:
 207:Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 108              		.loc 1 207 0 discriminator 4
 109 0072 204B     		ldr	r3, .L6+80
 110 0074 0B40     		and	r3, r1
 111              	.LVL3:
 208:Generated_Source\PSoC4/ADC.c ****     
 209:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 112              		.loc 1 211 0 discriminator 4
 113 0076 C021     		mov	r1, #192
 114 0078 8904     		lsl	r1, r1, #18
 115 007a 0B43     		orr	r3, r1
 116              	.LVL4:
 212:Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 214:Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC.c ****     #else
 216:Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 217:Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 219:Generated_Source\PSoC4/ADC.c ****         #else
 220:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 221:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 222:Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 223:Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 7


 225:Generated_Source\PSoC4/ADC.c ****     
 226:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 117              		.loc 1 226 0 discriminator 4
 118 007c 1360     		str	r3, [r2]
 119              	.LVL5:
 227:Generated_Source\PSoC4/ADC.c **** 
 228:Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 230:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC.c **** 
 232:Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 120              		.loc 1 232 0 discriminator 4
 121 007e 0023     		mov	r3, #0
 122              	.LVL6:
 123 0080 0DE0     		b	.L3
 124              	.LVL7:
 125              	.L4:
 233:Generated_Source\PSoC4/ADC.c ****     {
 234:Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 235:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 237:Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC.c ****         
 239:Generated_Source\PSoC4/ADC.c ****         
 240:Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC.c ****         */
 244:Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC.c **** 
 249:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC.c ****         {
 253:Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 126              		.loc 1 253 0
 127 0082 9A00     		lsl	r2, r3, #2
 128 0084 1C49     		ldr	r1, .L6+84
 129 0086 8C46     		mov	ip, r1
 130 0088 6244     		add	r2, r2, ip
 131 008a 0021     		mov	r1, #0
 132 008c 1160     		str	r1, [r2]
 133              	.LVL8:
 254:Generated_Source\PSoC4/ADC.c **** 
 255:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 256:Generated_Source\PSoC4/ADC.c ****             {
 257:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 258:Generated_Source\PSoC4/ADC.c ****             }
 259:Generated_Source\PSoC4/ADC.c **** 
 260:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 261:Generated_Source\PSoC4/ADC.c ****             {
 262:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 263:Generated_Source\PSoC4/ADC.c ****             }
 264:Generated_Source\PSoC4/ADC.c ****         }
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 8


 265:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADC.c ****             else
 267:Generated_Source\PSoC4/ADC.c ****             {
 268:Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 269:Generated_Source\PSoC4/ADC.c **** 
 270:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/ADC.c ****                 {
 272:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 273:Generated_Source\PSoC4/ADC.c ****                 }
 274:Generated_Source\PSoC4/ADC.c **** 
 275:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:Generated_Source\PSoC4/ADC.c ****                 {
 277:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/ADC.c ****                 }
 279:Generated_Source\PSoC4/ADC.c ****             }
 280:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC.c **** 
 282:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 283:Generated_Source\PSoC4/ADC.c ****         {
 284:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 285:Generated_Source\PSoC4/ADC.c ****         }
 286:Generated_Source\PSoC4/ADC.c ****         else
 287:Generated_Source\PSoC4/ADC.c ****         {
 288:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 289:Generated_Source\PSoC4/ADC.c ****         }
 290:Generated_Source\PSoC4/ADC.c **** 
 291:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 292:Generated_Source\PSoC4/ADC.c ****         {
 293:Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 295:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC.c ****             #else
 298:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 134              		.loc 1 298 0
 135 008e 5800     		lsl	r0, r3, #1
 136 0090 1A4A     		ldr	r2, .L6+88
 137 0092 8152     		strh	r1, [r0, r2]
 299:Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 300:Generated_Source\PSoC4/ADC.c ****         }
 301:Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC.c ****         {
 303:Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 306:Generated_Source\PSoC4/ADC.c ****             #else
 307:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 308:Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 309:Generated_Source\PSoC4/ADC.c ****         }
 310:Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 138              		.loc 1 311 0
 139 0094 9900     		lsl	r1, r3, #2
 140 0096 1A48     		ldr	r0, .L6+92
 141 0098 1A4A     		ldr	r2, .L6+96
 142 009a 8850     		str	r0, [r1, r2]
 232:Generated_Source\PSoC4/ADC.c ****     {
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 9


 143              		.loc 1 232 0
 144 009c 0133     		add	r3, r3, #1
 145              	.LVL9:
 146              	.L3:
 232:Generated_Source\PSoC4/ADC.c ****     {
 147              		.loc 1 232 0 is_stmt 0 discriminator 1
 148 009e 002B     		cmp	r3, #0
 149 00a0 EFD0     		beq	.L4
 312:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 313:Generated_Source\PSoC4/ADC.c ****     }
 314:Generated_Source\PSoC4/ADC.c **** }
 150              		.loc 1 314 0 is_stmt 1
 151              		@ sp needed
 152 00a2 08BD     		pop	{r3, pc}
 153              	.L7:
 154              		.align	2
 155              	.L6:
 156 00a4 00000000 		.word	ADC_ISR
 157 00a8 20001A40 		.word	1075445792
 158 00ac 80031A40 		.word	1075446656
 159 00b0 C0021050 		.word	1343226560
 160 00b4 C0020050 		.word	1342177984
 161 00b8 00001A40 		.word	1075445760
 162 00bc AC000A80 		.word	-2146828116
 163 00c0 04001A40 		.word	1075445764
 164 00c4 0000DC05 		.word	98304000
 165 00c8 18001A40 		.word	1075445784
 166 00cc 1C001A40 		.word	1075445788
 167 00d0 04000400 		.word	262148
 168 00d4 10001A40 		.word	1075445776
 169 00d8 14001A40 		.word	1075445780
 170 00dc 00031A40 		.word	1075446528
 171 00e0 28021A40 		.word	1075446312
 172 00e4 38021A40 		.word	1075446328
 173 00e8 18021A40 		.word	1075446296
 174 00ec 000F1A40 		.word	1075449600
 175 00f0 30001A40 		.word	1075445808
 176 00f4 FFFFFFDF 		.word	-536870913
 177 00f8 80001A40 		.word	1075445888
 178 00fc 00000000 		.word	ADC_offset
 179 0100 204E0000 		.word	20000
 180 0104 00000000 		.word	ADC_countsPer10Volt
 181              		.cfi_endproc
 182              	.LFE1:
 183              		.size	ADC_Init, .-ADC_Init
 184              		.section	.text.ADC_Enable,"ax",%progbits
 185              		.align	2
 186              		.global	ADC_Enable
 187              		.code	16
 188              		.thumb_func
 189              		.type	ADC_Enable, %function
 190              	ADC_Enable:
 191              	.LFB2:
 315:Generated_Source\PSoC4/ADC.c **** 
 316:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 10


 319:Generated_Source\PSoC4/ADC.c **** *
 320:Generated_Source\PSoC4/ADC.c **** * Summary:
 321:Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC.c **** *
 323:Generated_Source\PSoC4/ADC.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC.c **** *  None.
 325:Generated_Source\PSoC4/ADC.c **** *
 326:Generated_Source\PSoC4/ADC.c **** * Return:
 327:Generated_Source\PSoC4/ADC.c **** *  None.
 328:Generated_Source\PSoC4/ADC.c **** *
 329:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 331:Generated_Source\PSoC4/ADC.c **** {
 192              		.loc 1 331 0
 193              		.cfi_startproc
 194 0000 08B5     		push	{r3, lr}
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 3, -8
 197              		.cfi_offset 14, -4
 332:Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 198              		.loc 1 332 0
 199 0002 074B     		ldr	r3, .L10
 200 0004 1B68     		ldr	r3, [r3]
 201 0006 002B     		cmp	r3, #0
 202 0008 08DB     		blt	.L8
 333:Generated_Source\PSoC4/ADC.c ****     {
 334:Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC.c **** 
 336:Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 337:Generated_Source\PSoC4/ADC.c ****             {
 338:Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC.c ****             }
 340:Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC.c ****         
 342:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 203              		.loc 1 342 0
 204 000a 054A     		ldr	r2, .L10
 205 000c 1368     		ldr	r3, [r2]
 206 000e 8021     		mov	r1, #128
 207 0010 0906     		lsl	r1, r1, #24
 208 0012 0B43     		orr	r3, r1
 209 0014 1360     		str	r3, [r2]
 343:Generated_Source\PSoC4/ADC.c ****         
 344:Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 210              		.loc 1 345 0
 211 0016 0A20     		mov	r0, #10
 212 0018 FFF7FEFF 		bl	CyDelayUs
 213              	.LVL10:
 214              	.L8:
 346:Generated_Source\PSoC4/ADC.c ****     }
 347:Generated_Source\PSoC4/ADC.c **** }
 215              		.loc 1 347 0
 216              		@ sp needed
 217 001c 08BD     		pop	{r3, pc}
 218              	.L11:
 219 001e C046     		.align	2
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 11


 220              	.L10:
 221 0020 00001A40 		.word	1075445760
 222              		.cfi_endproc
 223              	.LFE2:
 224              		.size	ADC_Enable, .-ADC_Enable
 225              		.section	.text.ADC_Start,"ax",%progbits
 226              		.align	2
 227              		.global	ADC_Start
 228              		.code	16
 229              		.thumb_func
 230              		.type	ADC_Start, %function
 231              	ADC_Start:
 232              	.LFB0:
  64:Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
 233              		.loc 1 64 0
 234              		.cfi_startproc
 235 0000 08B5     		push	{r3, lr}
 236              		.cfi_def_cfa_offset 8
 237              		.cfi_offset 3, -8
 238              		.cfi_offset 14, -4
  66:Generated_Source\PSoC4/ADC.c ****     {
 239              		.loc 1 66 0
 240 0002 064B     		ldr	r3, .L14
 241 0004 1B78     		ldrb	r3, [r3]
 242 0006 002B     		cmp	r3, #0
 243 0008 04D1     		bne	.L13
  68:Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
 244              		.loc 1 68 0
 245 000a FFF7FEFF 		bl	ADC_Init
 246              	.LVL11:
  69:Generated_Source\PSoC4/ADC.c ****     }
 247              		.loc 1 69 0
 248 000e 0122     		mov	r2, #1
 249 0010 024B     		ldr	r3, .L14
 250 0012 1A70     		strb	r2, [r3]
 251              	.L13:
  71:Generated_Source\PSoC4/ADC.c **** }
 252              		.loc 1 71 0
 253 0014 FFF7FEFF 		bl	ADC_Enable
 254              	.LVL12:
  72:Generated_Source\PSoC4/ADC.c **** 
 255              		.loc 1 72 0
 256              		@ sp needed
 257 0018 08BD     		pop	{r3, pc}
 258              	.L15:
 259 001a C046     		.align	2
 260              	.L14:
 261 001c 00000000 		.word	.LANCHOR0
 262              		.cfi_endproc
 263              	.LFE0:
 264              		.size	ADC_Start, .-ADC_Start
 265              		.section	.text.ADC_Stop,"ax",%progbits
 266              		.align	2
 267              		.global	ADC_Stop
 268              		.code	16
 269              		.thumb_func
 270              		.type	ADC_Stop, %function
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 12


 271              	ADC_Stop:
 272              	.LFB3:
 348:Generated_Source\PSoC4/ADC.c **** 
 349:Generated_Source\PSoC4/ADC.c **** 
 350:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 352:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC.c **** *
 354:Generated_Source\PSoC4/ADC.c **** * Summary:
 355:Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC.c **** *  mode.
 357:Generated_Source\PSoC4/ADC.c **** *
 358:Generated_Source\PSoC4/ADC.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC.c **** *  None.
 360:Generated_Source\PSoC4/ADC.c **** *
 361:Generated_Source\PSoC4/ADC.c **** * Return:
 362:Generated_Source\PSoC4/ADC.c **** *  None.
 363:Generated_Source\PSoC4/ADC.c **** *
 364:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 366:Generated_Source\PSoC4/ADC.c **** {
 273              		.loc 1 366 0
 274              		.cfi_startproc
 367:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 275              		.loc 1 367 0
 276 0000 024A     		ldr	r2, .L17
 277 0002 1368     		ldr	r3, [r2]
 278 0004 5B00     		lsl	r3, r3, #1
 279 0006 5B08     		lsr	r3, r3, #1
 280 0008 1360     		str	r3, [r2]
 368:Generated_Source\PSoC4/ADC.c **** }
 281              		.loc 1 368 0
 282              		@ sp needed
 283 000a 7047     		bx	lr
 284              	.L18:
 285              		.align	2
 286              	.L17:
 287 000c 00001A40 		.word	1075445760
 288              		.cfi_endproc
 289              	.LFE3:
 290              		.size	ADC_Stop, .-ADC_Stop
 291              		.section	.text.ADC_StartConvert,"ax",%progbits
 292              		.align	2
 293              		.global	ADC_StartConvert
 294              		.code	16
 295              		.thumb_func
 296              		.type	ADC_StartConvert, %function
 297              	ADC_StartConvert:
 298              	.LFB4:
 369:Generated_Source\PSoC4/ADC.c **** 
 370:Generated_Source\PSoC4/ADC.c **** 
 371:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 373:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC.c **** *
 375:Generated_Source\PSoC4/ADC.c **** * Summary:
 376:Generated_Source\PSoC4/ADC.c **** *  Description:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 13


 377:Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC.c **** *
 380:Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADC.c **** *
 384:Generated_Source\PSoC4/ADC.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC.c **** *  None.
 386:Generated_Source\PSoC4/ADC.c **** *
 387:Generated_Source\PSoC4/ADC.c **** * Return:
 388:Generated_Source\PSoC4/ADC.c **** *  None.
 389:Generated_Source\PSoC4/ADC.c **** *
 390:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 392:Generated_Source\PSoC4/ADC.c **** {
 299              		.loc 1 392 0
 300              		.cfi_startproc
 393:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 394:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 395:Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 301              		.loc 1 396 0
 302 0000 0122     		mov	r2, #1
 303 0002 014B     		ldr	r3, .L20
 304 0004 1A60     		str	r2, [r3]
 397:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 398:Generated_Source\PSoC4/ADC.c **** 
 399:Generated_Source\PSoC4/ADC.c **** }
 305              		.loc 1 399 0
 306              		@ sp needed
 307 0006 7047     		bx	lr
 308              	.L21:
 309              		.align	2
 310              	.L20:
 311 0008 24001A40 		.word	1075445796
 312              		.cfi_endproc
 313              	.LFE4:
 314              		.size	ADC_StartConvert, .-ADC_StartConvert
 315              		.section	.text.ADC_StopConvert,"ax",%progbits
 316              		.align	2
 317              		.global	ADC_StopConvert
 318              		.code	16
 319              		.thumb_func
 320              		.type	ADC_StopConvert, %function
 321              	ADC_StopConvert:
 322              	.LFB5:
 400:Generated_Source\PSoC4/ADC.c **** 
 401:Generated_Source\PSoC4/ADC.c **** 
 402:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 404:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC.c **** *
 406:Generated_Source\PSoC4/ADC.c **** * Summary:
 407:Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC.c **** *
 409:Generated_Source\PSoC4/ADC.c **** * Parameters:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 14


 410:Generated_Source\PSoC4/ADC.c **** *  None.
 411:Generated_Source\PSoC4/ADC.c **** *
 412:Generated_Source\PSoC4/ADC.c **** * Return:
 413:Generated_Source\PSoC4/ADC.c **** *  None.
 414:Generated_Source\PSoC4/ADC.c **** *
 415:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 417:Generated_Source\PSoC4/ADC.c **** {
 323              		.loc 1 417 0
 324              		.cfi_startproc
 418:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 419:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 420:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 421:Generated_Source\PSoC4/ADC.c **** }
 325              		.loc 1 421 0
 326              		@ sp needed
 327 0000 7047     		bx	lr
 328              		.cfi_endproc
 329              	.LFE5:
 330              		.size	ADC_StopConvert, .-ADC_StopConvert
 331 0002 C046     		.section	.text.ADC_IsEndConversion,"ax",%progbits
 332              		.align	2
 333              		.global	ADC_IsEndConversion
 334              		.code	16
 335              		.thumb_func
 336              		.type	ADC_IsEndConversion, %function
 337              	ADC_IsEndConversion:
 338              	.LFB6:
 422:Generated_Source\PSoC4/ADC.c **** 
 423:Generated_Source\PSoC4/ADC.c **** 
 424:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 426:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC.c **** *
 428:Generated_Source\PSoC4/ADC.c **** * Summary:
 429:Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC.c **** *  completed.
 436:Generated_Source\PSoC4/ADC.c **** *
 437:Generated_Source\PSoC4/ADC.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC.c **** *
 445:Generated_Source\PSoC4/ADC.c **** * Return:
 446:Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC.c **** *
 449:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 15


 451:Generated_Source\PSoC4/ADC.c **** {
 339              		.loc 1 451 0
 340              		.cfi_startproc
 341              	.LVL13:
 342 0000 021C     		mov	r2, r0
 343              	.LVL14:
 452:Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 453:Generated_Source\PSoC4/ADC.c **** 
 454:Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 344              		.loc 1 454 0
 345 0002 8307     		lsl	r3, r0, #30
 346 0004 0CD0     		beq	.L27
 347              	.LVL15:
 348              	.L26:
 455:Generated_Source\PSoC4/ADC.c ****     {
 456:Generated_Source\PSoC4/ADC.c ****         do
 457:Generated_Source\PSoC4/ADC.c ****         {
 458:Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 349              		.loc 1 458 0 discriminator 2
 350 0006 074B     		ldr	r3, .L28
 351 0008 1B68     		ldr	r3, [r3]
 352 000a 0120     		mov	r0, #1
 353 000c 1840     		and	r0, r3
 354              	.LVL16:
 459:Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 355              		.loc 1 459 0 discriminator 2
 356 000e 01D1     		bne	.L25
 357              		.loc 1 459 0 is_stmt 0 discriminator 1
 358 0010 9307     		lsl	r3, r2, #30
 359 0012 F8D4     		bmi	.L26
 360              	.L25:
 460:Generated_Source\PSoC4/ADC.c **** 
 461:Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 361              		.loc 1 461 0 is_stmt 1
 362 0014 0028     		cmp	r0, #0
 363 0016 04D0     		beq	.L24
 462:Generated_Source\PSoC4/ADC.c ****         {
 463:Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 364              		.loc 1 464 0
 365 0018 0122     		mov	r2, #1
 366              	.LVL17:
 367 001a 024B     		ldr	r3, .L28
 368 001c 1A60     		str	r2, [r3]
 369 001e 00E0     		b	.L24
 370              	.LVL18:
 371              	.L27:
 452:Generated_Source\PSoC4/ADC.c **** 
 372              		.loc 1 452 0
 373 0020 0020     		mov	r0, #0
 374              	.LVL19:
 375              	.L24:
 465:Generated_Source\PSoC4/ADC.c ****         }
 466:Generated_Source\PSoC4/ADC.c ****     }
 467:Generated_Source\PSoC4/ADC.c **** 
 468:Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 16


 470:Generated_Source\PSoC4/ADC.c ****         {
 471:Generated_Source\PSoC4/ADC.c ****             do
 472:Generated_Source\PSoC4/ADC.c ****             {
 473:Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/ADC.c **** 
 477:Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/ADC.c ****             {
 479:Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/ADC.c ****             }
 482:Generated_Source\PSoC4/ADC.c ****         }
 483:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC.c **** 
 485:Generated_Source\PSoC4/ADC.c ****     return (status);
 486:Generated_Source\PSoC4/ADC.c **** }
 376              		.loc 1 486 0
 377              		@ sp needed
 378 0022 7047     		bx	lr
 379              	.L29:
 380              		.align	2
 381              	.L28:
 382 0024 10021A40 		.word	1075446288
 383              		.cfi_endproc
 384              	.LFE6:
 385              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 386              		.section	.text.ADC_GetResult16,"ax",%progbits
 387              		.align	2
 388              		.global	ADC_GetResult16
 389              		.code	16
 390              		.thumb_func
 391              		.type	ADC_GetResult16, %function
 392              	ADC_GetResult16:
 393              	.LFB7:
 487:Generated_Source\PSoC4/ADC.c **** 
 488:Generated_Source\PSoC4/ADC.c **** 
 489:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 491:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC.c **** *
 493:Generated_Source\PSoC4/ADC.c **** * Summary:
 494:Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/ADC.c **** *
 496:Generated_Source\PSoC4/ADC.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC.c **** *
 500:Generated_Source\PSoC4/ADC.c **** * Return:
 501:Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC.c **** *
 503:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC.c **** {
 394              		.loc 1 505 0
 395              		.cfi_startproc
 396              	.LVL20:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 17


 397 0000 10B5     		push	{r4, lr}
 398              		.cfi_def_cfa_offset 8
 399              		.cfi_offset 4, -8
 400              		.cfi_offset 14, -4
 401 0002 041E     		sub	r4, r0, #0
 506:Generated_Source\PSoC4/ADC.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC.c **** 
 508:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 402              		.loc 1 509 0
 403 0004 02D0     		beq	.L31
 404              		.loc 1 509 0 is_stmt 0 discriminator 1
 405 0006 0020     		mov	r0, #0
 406              	.LVL21:
 407 0008 FFF7FEFF 		bl	CyHalt
 408              	.LVL22:
 409              	.L31:
 510:Generated_Source\PSoC4/ADC.c **** 
 511:Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 410              		.loc 1 511 0 is_stmt 1
 411 000c 002C     		cmp	r4, #0
 412 000e 07D1     		bne	.L33
 512:Generated_Source\PSoC4/ADC.c ****     {
 513:Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 413              		.loc 1 513 0
 414 0010 A400     		lsl	r4, r4, #2
 415              	.LVL23:
 416 0012 054B     		ldr	r3, .L34
 417 0014 9C46     		mov	ip, r3
 418 0016 6444     		add	r4, r4, ip
 419 0018 2068     		ldr	r0, [r4]
 420 001a 0004     		lsl	r0, r0, #16
 421 001c 000C     		lsr	r0, r0, #16
 422              	.LVL24:
 423 001e 00E0     		b	.L32
 424              	.LVL25:
 425              	.L33:
 514:Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC.c ****     }
 516:Generated_Source\PSoC4/ADC.c ****     else
 517:Generated_Source\PSoC4/ADC.c ****     {
 518:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 520:Generated_Source\PSoC4/ADC.c ****         #else
 521:Generated_Source\PSoC4/ADC.c ****             result = 0u;
 426              		.loc 1 521 0
 427 0020 0020     		mov	r0, #0
 428              	.LVL26:
 429              	.L32:
 522:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC.c ****     }
 524:Generated_Source\PSoC4/ADC.c **** 
 525:Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 430              		.loc 1 525 0
 431 0022 00B2     		sxth	r0, r0
 432              	.LVL27:
 526:Generated_Source\PSoC4/ADC.c **** }
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 18


 433              		.loc 1 526 0
 434              		@ sp needed
 435 0024 10BD     		pop	{r4, pc}
 436              	.L35:
 437 0026 C046     		.align	2
 438              	.L34:
 439 0028 80011A40 		.word	1075446144
 440              		.cfi_endproc
 441              	.LFE7:
 442              		.size	ADC_GetResult16, .-ADC_GetResult16
 443              		.section	.text.ADC_SetChanMask,"ax",%progbits
 444              		.align	2
 445              		.global	ADC_SetChanMask
 446              		.code	16
 447              		.thumb_func
 448              		.type	ADC_SetChanMask, %function
 449              	ADC_SetChanMask:
 450              	.LFB8:
 527:Generated_Source\PSoC4/ADC.c **** 
 528:Generated_Source\PSoC4/ADC.c **** 
 529:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 531:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC.c **** *
 533:Generated_Source\PSoC4/ADC.c **** * Summary:
 534:Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC.c **** *
 536:Generated_Source\PSoC4/ADC.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC.c **** *
 545:Generated_Source\PSoC4/ADC.c **** * Return:
 546:Generated_Source\PSoC4/ADC.c **** *  None.
 547:Generated_Source\PSoC4/ADC.c **** *
 548:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC.c **** {
 451              		.loc 1 550 0
 452              		.cfi_startproc
 453              	.LVL28:
 551:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 454              		.loc 1 551 0
 455 0000 0123     		mov	r3, #1
 456 0002 1840     		and	r0, r3
 457              	.LVL29:
 458 0004 014B     		ldr	r3, .L37
 459 0006 1860     		str	r0, [r3]
 552:Generated_Source\PSoC4/ADC.c **** }
 460              		.loc 1 552 0
 461              		@ sp needed
 462 0008 7047     		bx	lr
 463              	.L38:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 19


 464 000a C046     		.align	2
 465              	.L37:
 466 000c 20001A40 		.word	1075445792
 467              		.cfi_endproc
 468              	.LFE8:
 469              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 470              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 471              		.align	2
 472              		.global	ADC_SetLowLimit
 473              		.code	16
 474              		.thumb_func
 475              		.type	ADC_SetLowLimit, %function
 476              	ADC_SetLowLimit:
 477              	.LFB9:
 553:Generated_Source\PSoC4/ADC.c **** 
 554:Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC.c **** 
 556:Generated_Source\PSoC4/ADC.c **** 
 557:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 559:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC.c ****     *
 561:Generated_Source\PSoC4/ADC.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC.c ****     *
 564:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 565:Generated_Source\PSoC4/ADC.c ****     *  None.
 566:Generated_Source\PSoC4/ADC.c ****     *
 567:Generated_Source\PSoC4/ADC.c ****     * Return:
 568:Generated_Source\PSoC4/ADC.c ****     *  None.
 569:Generated_Source\PSoC4/ADC.c ****     *
 570:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC.c ****     {
 573:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/ADC.c ****     }
 575:Generated_Source\PSoC4/ADC.c **** 
 576:Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC.c **** 
 578:Generated_Source\PSoC4/ADC.c **** 
 579:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 581:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC.c **** *
 583:Generated_Source\PSoC4/ADC.c **** * Summary:
 584:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC.c **** *
 586:Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC.c **** *
 589:Generated_Source\PSoC4/ADC.c **** * Return:
 590:Generated_Source\PSoC4/ADC.c **** *  None.
 591:Generated_Source\PSoC4/ADC.c **** *
 592:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC.c **** {
 478              		.loc 1 594 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 20


 479              		.cfi_startproc
 480              	.LVL30:
 595:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 481              		.loc 1 595 0
 482 0000 054A     		ldr	r2, .L40
 483 0002 1368     		ldr	r3, [r2]
 484 0004 1B0C     		lsr	r3, r3, #16
 485 0006 1B04     		lsl	r3, r3, #16
 486 0008 1360     		str	r3, [r2]
 596:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 487              		.loc 1 596 0
 488 000a 1368     		ldr	r3, [r2]
 489 000c 0004     		lsl	r0, r0, #16
 490              	.LVL31:
 491 000e 000C     		lsr	r0, r0, #16
 492 0010 1843     		orr	r0, r3
 493 0012 1060     		str	r0, [r2]
 597:Generated_Source\PSoC4/ADC.c **** }
 494              		.loc 1 597 0
 495              		@ sp needed
 496 0014 7047     		bx	lr
 497              	.L41:
 498 0016 C046     		.align	2
 499              	.L40:
 500 0018 18001A40 		.word	1075445784
 501              		.cfi_endproc
 502              	.LFE9:
 503              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 504              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 505              		.align	2
 506              		.global	ADC_SetHighLimit
 507              		.code	16
 508              		.thumb_func
 509              		.type	ADC_SetHighLimit, %function
 510              	ADC_SetHighLimit:
 511              	.LFB10:
 598:Generated_Source\PSoC4/ADC.c **** 
 599:Generated_Source\PSoC4/ADC.c **** 
 600:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 602:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC.c **** *
 604:Generated_Source\PSoC4/ADC.c **** * Summary:
 605:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC.c **** *
 607:Generated_Source\PSoC4/ADC.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC.c **** *
 610:Generated_Source\PSoC4/ADC.c **** * Return:
 611:Generated_Source\PSoC4/ADC.c **** *  None.
 612:Generated_Source\PSoC4/ADC.c **** *
 613:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC.c **** {
 512              		.loc 1 615 0
 513              		.cfi_startproc
 514              	.LVL32:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 21


 616:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 515              		.loc 1 616 0
 516 0000 044A     		ldr	r2, .L43
 517 0002 1368     		ldr	r3, [r2]
 518 0004 1B04     		lsl	r3, r3, #16
 519 0006 1B0C     		lsr	r3, r3, #16
 520 0008 1360     		str	r3, [r2]
 617:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 521              		.loc 1 617 0
 522 000a 1368     		ldr	r3, [r2]
 523 000c 0004     		lsl	r0, r0, #16
 524              	.LVL33:
 525 000e 1843     		orr	r0, r3
 526 0010 1060     		str	r0, [r2]
 618:Generated_Source\PSoC4/ADC.c **** }
 527              		.loc 1 618 0
 528              		@ sp needed
 529 0012 7047     		bx	lr
 530              	.L44:
 531              		.align	2
 532              	.L43:
 533 0014 18001A40 		.word	1075445784
 534              		.cfi_endproc
 535              	.LFE10:
 536              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 537              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 538              		.align	2
 539              		.global	ADC_SetLimitMask
 540              		.code	16
 541              		.thumb_func
 542              		.type	ADC_SetLimitMask, %function
 543              	ADC_SetLimitMask:
 544              	.LFB11:
 619:Generated_Source\PSoC4/ADC.c **** 
 620:Generated_Source\PSoC4/ADC.c **** 
 621:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 623:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC.c **** *
 625:Generated_Source\PSoC4/ADC.c **** * Summary:
 626:Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC.c **** *
 628:Generated_Source\PSoC4/ADC.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC.c **** *
 634:Generated_Source\PSoC4/ADC.c **** * Return:
 635:Generated_Source\PSoC4/ADC.c **** *  None.
 636:Generated_Source\PSoC4/ADC.c **** *
 637:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC.c **** {
 545              		.loc 1 639 0
 546              		.cfi_startproc
 547              	.LVL34:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 22


 640:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 548              		.loc 1 640 0
 549 0000 0123     		mov	r3, #1
 550 0002 1840     		and	r0, r3
 551              	.LVL35:
 552 0004 014B     		ldr	r3, .L46
 553 0006 1860     		str	r0, [r3]
 641:Generated_Source\PSoC4/ADC.c **** }
 554              		.loc 1 641 0
 555              		@ sp needed
 556 0008 7047     		bx	lr
 557              	.L47:
 558 000a C046     		.align	2
 559              	.L46:
 560 000c 38021A40 		.word	1075446328
 561              		.cfi_endproc
 562              	.LFE11:
 563              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 564              		.section	.text.ADC_SetSatMask,"ax",%progbits
 565              		.align	2
 566              		.global	ADC_SetSatMask
 567              		.code	16
 568              		.thumb_func
 569              		.type	ADC_SetSatMask, %function
 570              	ADC_SetSatMask:
 571              	.LFB12:
 642:Generated_Source\PSoC4/ADC.c **** 
 643:Generated_Source\PSoC4/ADC.c **** 
 644:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 646:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC.c **** *
 648:Generated_Source\PSoC4/ADC.c **** * Summary:
 649:Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADC.c **** *
 651:Generated_Source\PSoC4/ADC.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC.c **** *
 657:Generated_Source\PSoC4/ADC.c **** * Return:
 658:Generated_Source\PSoC4/ADC.c **** *  None.
 659:Generated_Source\PSoC4/ADC.c **** *
 660:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC.c **** {
 572              		.loc 1 662 0
 573              		.cfi_startproc
 574              	.LVL36:
 663:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 575              		.loc 1 663 0
 576 0000 0123     		mov	r3, #1
 577 0002 1840     		and	r0, r3
 578              	.LVL37:
 579 0004 014B     		ldr	r3, .L49
 580 0006 1860     		str	r0, [r3]
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 23


 664:Generated_Source\PSoC4/ADC.c **** }
 581              		.loc 1 664 0
 582              		@ sp needed
 583 0008 7047     		bx	lr
 584              	.L50:
 585 000a C046     		.align	2
 586              	.L49:
 587 000c 28021A40 		.word	1075446312
 588              		.cfi_endproc
 589              	.LFE12:
 590              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 591              		.section	.text.ADC_SetOffset,"ax",%progbits
 592              		.align	2
 593              		.global	ADC_SetOffset
 594              		.code	16
 595              		.thumb_func
 596              		.type	ADC_SetOffset, %function
 597              	ADC_SetOffset:
 598              	.LFB13:
 665:Generated_Source\PSoC4/ADC.c **** 
 666:Generated_Source\PSoC4/ADC.c **** 
 667:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 669:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC.c **** *
 671:Generated_Source\PSoC4/ADC.c **** * Summary:
 672:Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC.c **** *
 677:Generated_Source\PSoC4/ADC.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC.c **** *
 682:Generated_Source\PSoC4/ADC.c **** * Return:
 683:Generated_Source\PSoC4/ADC.c **** *  None.
 684:Generated_Source\PSoC4/ADC.c **** *
 685:Generated_Source\PSoC4/ADC.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC.c **** *
 688:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADC.c **** {
 599              		.loc 1 690 0
 600              		.cfi_startproc
 601              	.LVL38:
 602 0000 38B5     		push	{r3, r4, r5, lr}
 603              		.cfi_def_cfa_offset 16
 604              		.cfi_offset 3, -16
 605              		.cfi_offset 4, -12
 606              		.cfi_offset 5, -8
 607              		.cfi_offset 14, -4
 608 0002 041C     		mov	r4, r0
 609 0004 0D1C     		mov	r5, r1
 691:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 24


 692:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 610              		.loc 1 692 0
 611 0006 0028     		cmp	r0, #0
 612 0008 02D0     		beq	.L52
 613              		.loc 1 692 0 is_stmt 0 discriminator 1
 614 000a 0020     		mov	r0, #0
 615              	.LVL39:
 616 000c FFF7FEFF 		bl	CyHalt
 617              	.LVL40:
 618              	.L52:
 693:Generated_Source\PSoC4/ADC.c **** 
 694:Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 619              		.loc 1 694 0 is_stmt 1
 620 0010 6400     		lsl	r4, r4, #1
 621              	.LVL41:
 622 0012 014B     		ldr	r3, .L53
 623 0014 E552     		strh	r5, [r4, r3]
 695:Generated_Source\PSoC4/ADC.c **** }
 624              		.loc 1 695 0
 625              		@ sp needed
 626 0016 38BD     		pop	{r3, r4, r5, pc}
 627              	.L54:
 628              		.align	2
 629              	.L53:
 630 0018 00000000 		.word	ADC_offset
 631              		.cfi_endproc
 632              	.LFE13:
 633              		.size	ADC_SetOffset, .-ADC_SetOffset
 634              		.section	.text.ADC_SetGain,"ax",%progbits
 635              		.align	2
 636              		.global	ADC_SetGain
 637              		.code	16
 638              		.thumb_func
 639              		.type	ADC_SetGain, %function
 640              	ADC_SetGain:
 641              	.LFB14:
 696:Generated_Source\PSoC4/ADC.c **** 
 697:Generated_Source\PSoC4/ADC.c **** 
 698:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 700:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC.c **** *
 702:Generated_Source\PSoC4/ADC.c **** * Summary:
 703:Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC.c **** *
 711:Generated_Source\PSoC4/ADC.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADC.c **** *
 715:Generated_Source\PSoC4/ADC.c **** * Return:
 716:Generated_Source\PSoC4/ADC.c **** *  None.
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 25


 717:Generated_Source\PSoC4/ADC.c **** *
 718:Generated_Source\PSoC4/ADC.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC.c **** *
 722:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC.c **** {
 642              		.loc 1 724 0
 643              		.cfi_startproc
 644              	.LVL42:
 645 0000 38B5     		push	{r3, r4, r5, lr}
 646              		.cfi_def_cfa_offset 16
 647              		.cfi_offset 3, -16
 648              		.cfi_offset 4, -12
 649              		.cfi_offset 5, -8
 650              		.cfi_offset 14, -4
 651 0002 041C     		mov	r4, r0
 652 0004 0D1C     		mov	r5, r1
 725:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 653              		.loc 1 726 0
 654 0006 0028     		cmp	r0, #0
 655 0008 02D0     		beq	.L56
 656              		.loc 1 726 0 is_stmt 0 discriminator 1
 657 000a 0020     		mov	r0, #0
 658              	.LVL43:
 659 000c FFF7FEFF 		bl	CyHalt
 660              	.LVL44:
 661              	.L56:
 727:Generated_Source\PSoC4/ADC.c **** 
 728:Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 662              		.loc 1 728 0 is_stmt 1
 663 0010 A400     		lsl	r4, r4, #2
 664              	.LVL45:
 665 0012 014B     		ldr	r3, .L57
 666 0014 E550     		str	r5, [r4, r3]
 729:Generated_Source\PSoC4/ADC.c **** }
 667              		.loc 1 729 0
 668              		@ sp needed
 669              	.LVL46:
 670 0016 38BD     		pop	{r3, r4, r5, pc}
 671              	.L58:
 672              		.align	2
 673              	.L57:
 674 0018 00000000 		.word	ADC_countsPer10Volt
 675              		.cfi_endproc
 676              	.LFE14:
 677              		.size	ADC_SetGain, .-ADC_SetGain
 678              		.global	__aeabi_idiv
 679              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 680              		.align	2
 681              		.global	ADC_CountsTo_mVolts
 682              		.code	16
 683              		.thumb_func
 684              		.type	ADC_CountsTo_mVolts, %function
 685              	ADC_CountsTo_mVolts:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 26


 686              	.LFB15:
 730:Generated_Source\PSoC4/ADC.c **** 
 731:Generated_Source\PSoC4/ADC.c **** 
 732:Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 733:Generated_Source\PSoC4/ADC.c **** 
 734:Generated_Source\PSoC4/ADC.c **** 
 735:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC.c ****     *
 739:Generated_Source\PSoC4/ADC.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC.c ****     *
 743:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC.c ****     *
 747:Generated_Source\PSoC4/ADC.c ****     * Return:
 748:Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC.c ****     *
 750:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC.c ****     *
 755:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC.c ****     {
 687              		.loc 1 757 0
 688              		.cfi_startproc
 689              	.LVL47:
 690 0000 38B5     		push	{r3, r4, r5, lr}
 691              		.cfi_def_cfa_offset 16
 692              		.cfi_offset 3, -16
 693              		.cfi_offset 4, -12
 694              		.cfi_offset 5, -8
 695              		.cfi_offset 14, -4
 696 0002 041C     		mov	r4, r0
 697 0004 0D1C     		mov	r5, r1
 758:Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC.c **** 
 760:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 698              		.loc 1 761 0
 699 0006 0028     		cmp	r0, #0
 700 0008 02D0     		beq	.L60
 701              		.loc 1 761 0 is_stmt 0 discriminator 1
 702 000a 0020     		mov	r0, #0
 703              	.LVL48:
 704 000c FFF7FEFF 		bl	CyHalt
 705              	.LVL49:
 706              	.L60:
 762:Generated_Source\PSoC4/ADC.c **** 
 763:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 27


 766:Generated_Source\PSoC4/ADC.c ****             {
 767:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADC.c ****             }
 769:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC.c **** 
 771:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 707              		.loc 1 772 0 is_stmt 1
 708 0010 6300     		lsl	r3, r4, #1
 709 0012 0F4A     		ldr	r2, .L63
 710 0014 995A     		ldrh	r1, [r3, r2]
 711 0016 691A     		sub	r1, r5, r1
 712 0018 09B2     		sxth	r1, r1
 713              	.LVL50:
 773:Generated_Source\PSoC4/ADC.c **** 
 774:Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 714              		.loc 1 774 0
 715 001a 0E48     		ldr	r0, .L63+4
 716 001c 021C     		mov	r2, r0
 717 001e 4A43     		mul	r2, r1
 775:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 718              		.loc 1 775 0
 719 0020 0029     		cmp	r1, #0
 720 0022 06DD     		ble	.L61
 721              		.loc 1 775 0 is_stmt 0 discriminator 1
 722 0024 A300     		lsl	r3, r4, #2
 723 0026 0C49     		ldr	r1, .L63+8
 724              	.LVL51:
 725 0028 5B58     		ldr	r3, [r3, r1]
 726 002a D80F     		lsr	r0, r3, #31
 727 002c C018     		add	r0, r0, r3
 728 002e 4310     		asr	r3, r0, #1
 729 0030 06E0     		b	.L62
 730              	.LVL52:
 731              	.L61:
 732              		.loc 1 775 0 discriminator 2
 733 0032 A300     		lsl	r3, r4, #2
 734 0034 0849     		ldr	r1, .L63+8
 735              	.LVL53:
 736 0036 5B58     		ldr	r3, [r3, r1]
 737 0038 D80F     		lsr	r0, r3, #31
 738 003a C318     		add	r3, r0, r3
 739 003c 5B10     		asr	r3, r3, #1
 740 003e 5B42     		neg	r3, r3
 741              	.L62:
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 742              		.loc 1 774 0 is_stmt 1
 743 0040 D018     		add	r0, r2, r3
 776:Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 744              		.loc 1 776 0
 745 0042 A400     		lsl	r4, r4, #2
 746              	.LVL54:
 747 0044 044B     		ldr	r3, .L63+8
 748 0046 E158     		ldr	r1, [r4, r3]
 749 0048 FFF7FEFF 		bl	__aeabi_idiv
 750              	.LVL55:
 777:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 28


 778:Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 751              		.loc 1 778 0
 752 004c 00B2     		sxth	r0, r0
 779:Generated_Source\PSoC4/ADC.c ****     }
 753              		.loc 1 779 0
 754              		@ sp needed
 755 004e 38BD     		pop	{r3, r4, r5, pc}
 756              	.L64:
 757              		.align	2
 758              	.L63:
 759 0050 00000000 		.word	ADC_offset
 760 0054 10270000 		.word	10000
 761 0058 00000000 		.word	ADC_countsPer10Volt
 762              		.cfi_endproc
 763              	.LFE15:
 764              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 765              		.global	__aeabi_lmul
 766              		.global	__aeabi_ldivmod
 767              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 768              		.align	2
 769              		.global	ADC_CountsTo_uVolts
 770              		.code	16
 771              		.thumb_func
 772              		.type	ADC_CountsTo_uVolts, %function
 773              	ADC_CountsTo_uVolts:
 774              	.LFB16:
 780:Generated_Source\PSoC4/ADC.c **** 
 781:Generated_Source\PSoC4/ADC.c **** 
 782:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC.c ****     *
 786:Generated_Source\PSoC4/ADC.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC.c ****     *
 790:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC.c ****     *
 794:Generated_Source\PSoC4/ADC.c ****     * Return:
 795:Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC.c ****     *
 797:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC.c ****     *
 802:Generated_Source\PSoC4/ADC.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC.c ****     *
 809:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 29


 811:Generated_Source\PSoC4/ADC.c ****     {
 775              		.loc 1 811 0
 776              		.cfi_startproc
 777              	.LVL56:
 778 0000 38B5     		push	{r3, r4, r5, lr}
 779              		.cfi_def_cfa_offset 16
 780              		.cfi_offset 3, -16
 781              		.cfi_offset 4, -12
 782              		.cfi_offset 5, -8
 783              		.cfi_offset 14, -4
 784 0002 051C     		mov	r5, r0
 785 0004 0C1C     		mov	r4, r1
 812:Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC.c **** 
 814:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 786              		.loc 1 815 0
 787 0006 0028     		cmp	r0, #0
 788 0008 02D0     		beq	.L66
 789              		.loc 1 815 0 is_stmt 0 discriminator 1
 790 000a 0020     		mov	r0, #0
 791              	.LVL57:
 792 000c FFF7FEFF 		bl	CyHalt
 793              	.LVL58:
 794              	.L66:
 816:Generated_Source\PSoC4/ADC.c **** 
 817:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC.c ****             {
 821:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC.c ****             }
 823:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC.c **** 
 825:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 795              		.loc 1 826 0 is_stmt 1
 796 0010 6A00     		lsl	r2, r5, #1
 797 0012 084B     		ldr	r3, .L67
 798 0014 D05A     		ldrh	r0, [r2, r3]
 799 0016 201A     		sub	r0, r4, r0
 800 0018 00B2     		sxth	r0, r0
 801              	.LVL59:
 827:Generated_Source\PSoC4/ADC.c **** 
 828:Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 802              		.loc 1 828 0
 803 001a C117     		asr	r1, r0, #31
 804 001c 064A     		ldr	r2, .L67+4
 805 001e 0023     		mov	r3, #0
 806 0020 FFF7FEFF 		bl	__aeabi_lmul
 807              	.LVL60:
 808 0024 AD00     		lsl	r5, r5, #2
 809              	.LVL61:
 810 0026 054B     		ldr	r3, .L67+8
 811 0028 EA58     		ldr	r2, [r5, r3]
 812 002a D317     		asr	r3, r2, #31
 813 002c FFF7FEFF 		bl	__aeabi_ldivmod
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 30


 814              	.LVL62:
 829:Generated_Source\PSoC4/ADC.c **** 
 830:Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 831:Generated_Source\PSoC4/ADC.c ****     }
 815              		.loc 1 831 0
 816              		@ sp needed
 817 0030 38BD     		pop	{r3, r4, r5, pc}
 818              	.L68:
 819 0032 C046     		.align	2
 820              	.L67:
 821 0034 00000000 		.word	ADC_offset
 822 0038 80969800 		.word	10000000
 823 003c 00000000 		.word	ADC_countsPer10Volt
 824              		.cfi_endproc
 825              	.LFE16:
 826              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 827              		.global	__aeabi_i2f
 828              		.global	__aeabi_fmul
 829              		.global	__aeabi_fdiv
 830              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 831              		.align	2
 832              		.global	ADC_CountsTo_Volts
 833              		.code	16
 834              		.thumb_func
 835              		.type	ADC_CountsTo_Volts, %function
 836              	ADC_CountsTo_Volts:
 837              	.LFB17:
 832:Generated_Source\PSoC4/ADC.c **** 
 833:Generated_Source\PSoC4/ADC.c **** 
 834:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC.c ****     *
 838:Generated_Source\PSoC4/ADC.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC.c ****     *
 842:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC.c ****     *
 846:Generated_Source\PSoC4/ADC.c ****     * Return:
 847:Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC.c ****     *
 849:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC.c ****     *
 854:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC.c ****     {
 838              		.loc 1 856 0
 839              		.cfi_startproc
 840              	.LVL63:
 841 0000 38B5     		push	{r3, r4, r5, lr}
 842              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 31


 843              		.cfi_offset 3, -16
 844              		.cfi_offset 4, -12
 845              		.cfi_offset 5, -8
 846              		.cfi_offset 14, -4
 847 0002 041C     		mov	r4, r0
 848 0004 0D1C     		mov	r5, r1
 857:Generated_Source\PSoC4/ADC.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC.c **** 
 859:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 849              		.loc 1 860 0
 850 0006 0028     		cmp	r0, #0
 851 0008 02D0     		beq	.L70
 852              		.loc 1 860 0 is_stmt 0 discriminator 1
 853 000a 0020     		mov	r0, #0
 854              	.LVL64:
 855 000c FFF7FEFF 		bl	CyHalt
 856              	.LVL65:
 857              	.L70:
 861:Generated_Source\PSoC4/ADC.c **** 
 862:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADC.c ****             {
 866:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADC.c ****             }
 868:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC.c **** 
 870:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 858              		.loc 1 871 0 is_stmt 1
 859 0010 6200     		lsl	r2, r4, #1
 860 0012 0A4B     		ldr	r3, .L71
 861 0014 D05A     		ldrh	r0, [r2, r3]
 862 0016 281A     		sub	r0, r5, r0
 863 0018 00B2     		sxth	r0, r0
 864              	.LVL66:
 872:Generated_Source\PSoC4/ADC.c **** 
 873:Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 865              		.loc 1 873 0
 866 001a FFF7FEFF 		bl	__aeabi_i2f
 867              	.LVL67:
 868 001e 0849     		ldr	r1, .L71+4
 869 0020 FFF7FEFF 		bl	__aeabi_fmul
 870              	.LVL68:
 871 0024 051C     		add	r5, r0, #0
 872 0026 A400     		lsl	r4, r4, #2
 873              	.LVL69:
 874 0028 064B     		ldr	r3, .L71+8
 875 002a E058     		ldr	r0, [r4, r3]
 876 002c FFF7FEFF 		bl	__aeabi_i2f
 877              	.LVL70:
 878 0030 011C     		add	r1, r0, #0
 879 0032 281C     		add	r0, r5, #0
 880 0034 FFF7FEFF 		bl	__aeabi_fdiv
 881              	.LVL71:
 874:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 32


 875:Generated_Source\PSoC4/ADC.c ****         return( volts );
 876:Generated_Source\PSoC4/ADC.c ****     }
 882              		.loc 1 876 0
 883              		@ sp needed
 884 0038 38BD     		pop	{r3, r4, r5, pc}
 885              	.L72:
 886 003a C046     		.align	2
 887              	.L71:
 888 003c 00000000 		.word	ADC_offset
 889 0040 00002041 		.word	1092616192
 890 0044 00000000 		.word	ADC_countsPer10Volt
 891              		.cfi_endproc
 892              	.LFE17:
 893              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 894              		.comm	ADC_countsPer10Volt,4,4
 895              		.comm	ADC_offset,2,4
 896              		.global	ADC_initVar
 897              		.bss
 898              		.set	.LANCHOR0,. + 0
 899              		.type	ADC_initVar, %object
 900              		.size	ADC_initVar, 1
 901              	ADC_initVar:
 902 0000 00       		.space	1
 903              		.text
 904              	.Letext0:
 905              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 906              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 907              		.section	.debug_info,"",%progbits
 908              	.Ldebug_info0:
 909 0000 94050000 		.4byte	0x594
 910 0004 0400     		.2byte	0x4
 911 0006 00000000 		.4byte	.Ldebug_abbrev0
 912 000a 04       		.byte	0x4
 913 000b 01       		.uleb128 0x1
 914 000c 80000000 		.4byte	.LASF61
 915 0010 01       		.byte	0x1
 916 0011 AD020000 		.4byte	.LASF62
 917 0015 32000000 		.4byte	.LASF63
 918 0019 00000000 		.4byte	.Ldebug_ranges0+0
 919 001d 00000000 		.4byte	0
 920 0021 00000000 		.4byte	.Ldebug_line0
 921 0025 02       		.uleb128 0x2
 922 0026 01       		.byte	0x1
 923 0027 06       		.byte	0x6
 924 0028 27010000 		.4byte	.LASF0
 925 002c 02       		.uleb128 0x2
 926 002d 01       		.byte	0x1
 927 002e 08       		.byte	0x8
 928 002f 11030000 		.4byte	.LASF1
 929 0033 02       		.uleb128 0x2
 930 0034 02       		.byte	0x2
 931 0035 05       		.byte	0x5
 932 0036 2A030000 		.4byte	.LASF2
 933 003a 02       		.uleb128 0x2
 934 003b 02       		.byte	0x2
 935 003c 07       		.byte	0x7
 936 003d 08020000 		.4byte	.LASF3
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 33


 937 0041 02       		.uleb128 0x2
 938 0042 04       		.byte	0x4
 939 0043 05       		.byte	0x5
 940 0044 4A010000 		.4byte	.LASF4
 941 0048 02       		.uleb128 0x2
 942 0049 04       		.byte	0x4
 943 004a 07       		.byte	0x7
 944 004b D7010000 		.4byte	.LASF5
 945 004f 02       		.uleb128 0x2
 946 0050 08       		.byte	0x8
 947 0051 05       		.byte	0x5
 948 0052 19010000 		.4byte	.LASF6
 949 0056 02       		.uleb128 0x2
 950 0057 08       		.byte	0x8
 951 0058 07       		.byte	0x7
 952 0059 58000000 		.4byte	.LASF7
 953 005d 03       		.uleb128 0x3
 954 005e 04       		.byte	0x4
 955 005f 05       		.byte	0x5
 956 0060 696E7400 		.ascii	"int\000"
 957 0064 02       		.uleb128 0x2
 958 0065 04       		.byte	0x4
 959 0066 07       		.byte	0x7
 960 0067 C3010000 		.4byte	.LASF8
 961 006b 04       		.uleb128 0x4
 962 006c 7B010000 		.4byte	.LASF9
 963 0070 02       		.byte	0x2
 964 0071 9801     		.2byte	0x198
 965 0073 2C000000 		.4byte	0x2c
 966 0077 04       		.uleb128 0x4
 967 0078 00000000 		.4byte	.LASF10
 968 007c 02       		.byte	0x2
 969 007d 9901     		.2byte	0x199
 970 007f 3A000000 		.4byte	0x3a
 971 0083 04       		.uleb128 0x4
 972 0084 92010000 		.4byte	.LASF11
 973 0088 02       		.byte	0x2
 974 0089 9A01     		.2byte	0x19a
 975 008b 48000000 		.4byte	0x48
 976 008f 04       		.uleb128 0x4
 977 0090 89030000 		.4byte	.LASF12
 978 0094 02       		.byte	0x2
 979 0095 9C01     		.2byte	0x19c
 980 0097 33000000 		.4byte	0x33
 981 009b 04       		.uleb128 0x4
 982 009c 3A010000 		.4byte	.LASF13
 983 00a0 02       		.byte	0x2
 984 00a1 9D01     		.2byte	0x19d
 985 00a3 41000000 		.4byte	0x41
 986 00a7 04       		.uleb128 0x4
 987 00a8 47020000 		.4byte	.LASF14
 988 00ac 02       		.byte	0x2
 989 00ad 9E01     		.2byte	0x19e
 990 00af B3000000 		.4byte	0xb3
 991 00b3 02       		.uleb128 0x2
 992 00b4 04       		.byte	0x4
 993 00b5 04       		.byte	0x4
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 34


 994 00b6 D6020000 		.4byte	.LASF15
 995 00ba 02       		.uleb128 0x2
 996 00bb 08       		.byte	0x8
 997 00bc 04       		.byte	0x4
 998 00bd 8B010000 		.4byte	.LASF16
 999 00c1 04       		.uleb128 0x4
 1000 00c2 86020000 		.4byte	.LASF17
 1001 00c6 02       		.byte	0x2
 1002 00c7 A301     		.2byte	0x1a3
 1003 00c9 4F000000 		.4byte	0x4f
 1004 00cd 02       		.uleb128 0x2
 1005 00ce 01       		.byte	0x1
 1006 00cf 08       		.byte	0x8
 1007 00d0 48030000 		.4byte	.LASF18
 1008 00d4 04       		.uleb128 0x4
 1009 00d5 41020000 		.4byte	.LASF19
 1010 00d9 02       		.byte	0x2
 1011 00da 4402     		.2byte	0x244
 1012 00dc E0000000 		.4byte	0xe0
 1013 00e0 05       		.uleb128 0x5
 1014 00e1 83000000 		.4byte	0x83
 1015 00e5 04       		.uleb128 0x4
 1016 00e6 4D030000 		.4byte	.LASF20
 1017 00ea 02       		.byte	0x2
 1018 00eb 5402     		.2byte	0x254
 1019 00ed F1000000 		.4byte	0xf1
 1020 00f1 06       		.uleb128 0x6
 1021 00f2 04       		.byte	0x4
 1022 00f3 F7000000 		.4byte	0xf7
 1023 00f7 07       		.uleb128 0x7
 1024 00f8 02       		.uleb128 0x2
 1025 00f9 04       		.byte	0x4
 1026 00fa 07       		.byte	0x7
 1027 00fb 4F020000 		.4byte	.LASF21
 1028 00ff 08       		.uleb128 0x8
 1029 0100 29000000 		.4byte	.LASF25
 1030 0104 01       		.byte	0x1
 1031 0105 5E       		.byte	0x5e
 1032 0106 00000000 		.4byte	.LFB1
 1033 010a 08010000 		.4byte	.LFE1-.LFB1
 1034 010e 01       		.uleb128 0x1
 1035 010f 9C       		.byte	0x9c
 1036 0110 69010000 		.4byte	0x169
 1037 0114 09       		.uleb128 0x9
 1038 0115 3D030000 		.4byte	.LASF22
 1039 0119 01       		.byte	0x1
 1040 011a 60       		.byte	0x60
 1041 011b 83000000 		.4byte	0x83
 1042 011f 00000000 		.4byte	.LLST0
 1043 0123 09       		.uleb128 0x9
 1044 0124 FE010000 		.4byte	.LASF23
 1045 0128 01       		.byte	0x1
 1046 0129 61       		.byte	0x61
 1047 012a 83000000 		.4byte	0x83
 1048 012e 1F000000 		.4byte	.LLST1
 1049 0132 09       		.uleb128 0x9
 1050 0133 0F000000 		.4byte	.LASF24
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 35


 1051 0137 01       		.byte	0x1
 1052 0138 62       		.byte	0x62
 1053 0139 9B000000 		.4byte	0x9b
 1054 013d 55000000 		.4byte	.LLST2
 1055 0141 0A       		.uleb128 0xa
 1056 0142 0A000000 		.4byte	.LVL0
 1057 0146 49050000 		.4byte	0x549
 1058 014a 59010000 		.4byte	0x159
 1059 014e 0B       		.uleb128 0xb
 1060 014f 01       		.uleb128 0x1
 1061 0150 51       		.byte	0x51
 1062 0151 01       		.uleb128 0x1
 1063 0152 33       		.byte	0x33
 1064 0153 0B       		.uleb128 0xb
 1065 0154 01       		.uleb128 0x1
 1066 0155 50       		.byte	0x50
 1067 0156 01       		.uleb128 0x1
 1068 0157 3E       		.byte	0x3e
 1069 0158 00       		.byte	0
 1070 0159 0C       		.uleb128 0xc
 1071 015a 12000000 		.4byte	.LVL1
 1072 015e 5F050000 		.4byte	0x55f
 1073 0162 0B       		.uleb128 0xb
 1074 0163 01       		.uleb128 0x1
 1075 0164 50       		.byte	0x50
 1076 0165 01       		.uleb128 0x1
 1077 0166 3E       		.byte	0x3e
 1078 0167 00       		.byte	0
 1079 0168 00       		.byte	0
 1080 0169 0D       		.uleb128 0xd
 1081 016a 7E030000 		.4byte	.LASF26
 1082 016e 01       		.byte	0x1
 1083 016f 4A01     		.2byte	0x14a
 1084 0171 00000000 		.4byte	.LFB2
 1085 0175 24000000 		.4byte	.LFE2-.LFB2
 1086 0179 01       		.uleb128 0x1
 1087 017a 9C       		.byte	0x9c
 1088 017b 8F010000 		.4byte	0x18f
 1089 017f 0C       		.uleb128 0xc
 1090 0180 1C000000 		.4byte	.LVL10
 1091 0184 79050000 		.4byte	0x579
 1092 0188 0B       		.uleb128 0xb
 1093 0189 01       		.uleb128 0x1
 1094 018a 50       		.byte	0x50
 1095 018b 01       		.uleb128 0x1
 1096 018c 3A       		.byte	0x3a
 1097 018d 00       		.byte	0
 1098 018e 00       		.byte	0
 1099 018f 08       		.uleb128 0x8
 1100 0190 40010000 		.4byte	.LASF27
 1101 0194 01       		.byte	0x1
 1102 0195 3F       		.byte	0x3f
 1103 0196 00000000 		.4byte	.LFB0
 1104 019a 20000000 		.4byte	.LFE0-.LFB0
 1105 019e 01       		.uleb128 0x1
 1106 019f 9C       		.byte	0x9c
 1107 01a0 B7010000 		.4byte	0x1b7
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 36


 1108 01a4 0E       		.uleb128 0xe
 1109 01a5 0E000000 		.4byte	.LVL11
 1110 01a9 FF000000 		.4byte	0xff
 1111 01ad 0E       		.uleb128 0xe
 1112 01ae 18000000 		.4byte	.LVL12
 1113 01b2 69010000 		.4byte	0x169
 1114 01b6 00       		.byte	0
 1115 01b7 0F       		.uleb128 0xf
 1116 01b8 34030000 		.4byte	.LASF28
 1117 01bc 01       		.byte	0x1
 1118 01bd 6D01     		.2byte	0x16d
 1119 01bf 00000000 		.4byte	.LFB3
 1120 01c3 10000000 		.4byte	.LFE3-.LFB3
 1121 01c7 01       		.uleb128 0x1
 1122 01c8 9C       		.byte	0x9c
 1123 01c9 0F       		.uleb128 0xf
 1124 01ca 6F000000 		.4byte	.LASF29
 1125 01ce 01       		.byte	0x1
 1126 01cf 8701     		.2byte	0x187
 1127 01d1 00000000 		.4byte	.LFB4
 1128 01d5 0C000000 		.4byte	.LFE4-.LFB4
 1129 01d9 01       		.uleb128 0x1
 1130 01da 9C       		.byte	0x9c
 1131 01db 0F       		.uleb128 0xf
 1132 01dc 2A020000 		.4byte	.LASF30
 1133 01e0 01       		.byte	0x1
 1134 01e1 A001     		.2byte	0x1a0
 1135 01e3 00000000 		.4byte	.LFB5
 1136 01e7 02000000 		.4byte	.LFE5-.LFB5
 1137 01eb 01       		.uleb128 0x1
 1138 01ec 9C       		.byte	0x9c
 1139 01ed 10       		.uleb128 0x10
 1140 01ee 72020000 		.4byte	.LASF32
 1141 01f2 01       		.byte	0x1
 1142 01f3 C201     		.2byte	0x1c2
 1143 01f5 83000000 		.4byte	0x83
 1144 01f9 00000000 		.4byte	.LFB6
 1145 01fd 28000000 		.4byte	.LFE6-.LFB6
 1146 0201 01       		.uleb128 0x1
 1147 0202 9C       		.byte	0x9c
 1148 0203 28020000 		.4byte	0x228
 1149 0207 11       		.uleb128 0x11
 1150 0208 AA010000 		.4byte	.LASF34
 1151 020c 01       		.byte	0x1
 1152 020d C201     		.2byte	0x1c2
 1153 020f 83000000 		.4byte	0x83
 1154 0213 6B000000 		.4byte	.LLST3
 1155 0217 12       		.uleb128 0x12
 1156 0218 33010000 		.4byte	.LASF31
 1157 021c 01       		.byte	0x1
 1158 021d C401     		.2byte	0x1c4
 1159 021f 83000000 		.4byte	0x83
 1160 0223 B0000000 		.4byte	.LLST4
 1161 0227 00       		.byte	0
 1162 0228 10       		.uleb128 0x10
 1163 0229 A4030000 		.4byte	.LASF33
 1164 022d 01       		.byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 37


 1165 022e F801     		.2byte	0x1f8
 1166 0230 8F000000 		.4byte	0x8f
 1167 0234 00000000 		.4byte	.LFB7
 1168 0238 2C000000 		.4byte	.LFE7-.LFB7
 1169 023c 01       		.uleb128 0x1
 1170 023d 9C       		.byte	0x9c
 1171 023e 72020000 		.4byte	0x272
 1172 0242 11       		.uleb128 0x11
 1173 0243 43030000 		.4byte	.LASF35
 1174 0247 01       		.byte	0x1
 1175 0248 F801     		.2byte	0x1f8
 1176 024a 83000000 		.4byte	0x83
 1177 024e E6000000 		.4byte	.LLST5
 1178 0252 12       		.uleb128 0x12
 1179 0253 9D030000 		.4byte	.LASF36
 1180 0257 01       		.byte	0x1
 1181 0258 FA01     		.2byte	0x1fa
 1182 025a 83000000 		.4byte	0x83
 1183 025e 2B010000 		.4byte	.LLST6
 1184 0262 0C       		.uleb128 0xc
 1185 0263 0C000000 		.4byte	.LVL22
 1186 0267 8A050000 		.4byte	0x58a
 1187 026b 0B       		.uleb128 0xb
 1188 026c 01       		.uleb128 0x1
 1189 026d 50       		.byte	0x50
 1190 026e 01       		.uleb128 0x1
 1191 026f 30       		.byte	0x30
 1192 0270 00       		.byte	0
 1193 0271 00       		.byte	0
 1194 0272 0D       		.uleb128 0xd
 1195 0273 9D020000 		.4byte	.LASF37
 1196 0277 01       		.byte	0x1
 1197 0278 2502     		.2byte	0x225
 1198 027a 00000000 		.4byte	.LFB8
 1199 027e 10000000 		.4byte	.LFE8-.LFB8
 1200 0282 01       		.uleb128 0x1
 1201 0283 9C       		.byte	0x9c
 1202 0284 99020000 		.4byte	0x299
 1203 0288 11       		.uleb128 0x11
 1204 0289 99010000 		.4byte	.LASF38
 1205 028d 01       		.byte	0x1
 1206 028e 2502     		.2byte	0x225
 1207 0290 83000000 		.4byte	0x83
 1208 0294 49010000 		.4byte	.LLST7
 1209 0298 00       		.byte	0
 1210 0299 0D       		.uleb128 0xd
 1211 029a FA020000 		.4byte	.LASF39
 1212 029e 01       		.byte	0x1
 1213 029f 5102     		.2byte	0x251
 1214 02a1 00000000 		.4byte	.LFB9
 1215 02a5 1C000000 		.4byte	.LFE9-.LFB9
 1216 02a9 01       		.uleb128 0x1
 1217 02aa 9C       		.byte	0x9c
 1218 02ab C0020000 		.4byte	0x2c0
 1219 02af 11       		.uleb128 0x11
 1220 02b0 58020000 		.4byte	.LASF40
 1221 02b4 01       		.byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 38


 1222 02b5 5102     		.2byte	0x251
 1223 02b7 83000000 		.4byte	0x83
 1224 02bb 6A010000 		.4byte	.LLST8
 1225 02bf 00       		.byte	0
 1226 02c0 0D       		.uleb128 0xd
 1227 02c1 61020000 		.4byte	.LASF41
 1228 02c5 01       		.byte	0x1
 1229 02c6 6602     		.2byte	0x266
 1230 02c8 00000000 		.4byte	.LFB10
 1231 02cc 18000000 		.4byte	.LFE10-.LFB10
 1232 02d0 01       		.uleb128 0x1
 1233 02d1 9C       		.byte	0x9c
 1234 02d2 E7020000 		.4byte	0x2e7
 1235 02d6 11       		.uleb128 0x11
 1236 02d7 DC020000 		.4byte	.LASF42
 1237 02db 01       		.byte	0x1
 1238 02dc 6602     		.2byte	0x266
 1239 02de 83000000 		.4byte	0x83
 1240 02e2 8B010000 		.4byte	.LLST9
 1241 02e6 00       		.byte	0
 1242 02e7 0D       		.uleb128 0xd
 1243 02e8 B2010000 		.4byte	.LASF43
 1244 02ec 01       		.byte	0x1
 1245 02ed 7E02     		.2byte	0x27e
 1246 02ef 00000000 		.4byte	.LFB11
 1247 02f3 10000000 		.4byte	.LFE11-.LFB11
 1248 02f7 01       		.uleb128 0x1
 1249 02f8 9C       		.byte	0x9c
 1250 02f9 0E030000 		.4byte	0x30e
 1251 02fd 11       		.uleb128 0x11
 1252 02fe 99010000 		.4byte	.LASF38
 1253 0302 01       		.byte	0x1
 1254 0303 7E02     		.2byte	0x27e
 1255 0305 83000000 		.4byte	0x83
 1256 0309 AC010000 		.4byte	.LLST10
 1257 030d 00       		.byte	0
 1258 030e 0D       		.uleb128 0xd
 1259 030f E9010000 		.4byte	.LASF44
 1260 0313 01       		.byte	0x1
 1261 0314 9502     		.2byte	0x295
 1262 0316 00000000 		.4byte	.LFB12
 1263 031a 10000000 		.4byte	.LFE12-.LFB12
 1264 031e 01       		.uleb128 0x1
 1265 031f 9C       		.byte	0x9c
 1266 0320 35030000 		.4byte	0x335
 1267 0324 11       		.uleb128 0x11
 1268 0325 99010000 		.4byte	.LASF38
 1269 0329 01       		.byte	0x1
 1270 032a 9502     		.2byte	0x295
 1271 032c 83000000 		.4byte	0x83
 1272 0330 CD010000 		.4byte	.LLST11
 1273 0334 00       		.byte	0
 1274 0335 0D       		.uleb128 0xd
 1275 0336 8F030000 		.4byte	.LASF45
 1276 033a 01       		.byte	0x1
 1277 033b B102     		.2byte	0x2b1
 1278 033d 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 39


 1279 0341 1C000000 		.4byte	.LFE13-.LFB13
 1280 0345 01       		.uleb128 0x1
 1281 0346 9C       		.byte	0x9c
 1282 0347 7B030000 		.4byte	0x37b
 1283 034b 11       		.uleb128 0x11
 1284 034c 43030000 		.4byte	.LASF35
 1285 0350 01       		.byte	0x1
 1286 0351 B102     		.2byte	0x2b1
 1287 0353 83000000 		.4byte	0x83
 1288 0357 EE010000 		.4byte	.LLST12
 1289 035b 11       		.uleb128 0x11
 1290 035c 6D030000 		.4byte	.LASF46
 1291 0360 01       		.byte	0x1
 1292 0361 B102     		.2byte	0x2b1
 1293 0363 8F000000 		.4byte	0x8f
 1294 0367 1A020000 		.4byte	.LLST13
 1295 036b 0C       		.uleb128 0xc
 1296 036c 10000000 		.4byte	.LVL40
 1297 0370 8A050000 		.4byte	0x58a
 1298 0374 0B       		.uleb128 0xb
 1299 0375 01       		.uleb128 0x1
 1300 0376 50       		.byte	0x50
 1301 0377 01       		.uleb128 0x1
 1302 0378 30       		.byte	0x30
 1303 0379 00       		.byte	0
 1304 037a 00       		.byte	0
 1305 037b 0D       		.uleb128 0xd
 1306 037c CA020000 		.4byte	.LASF47
 1307 0380 01       		.byte	0x1
 1308 0381 D302     		.2byte	0x2d3
 1309 0383 00000000 		.4byte	.LFB14
 1310 0387 1C000000 		.4byte	.LFE14-.LFB14
 1311 038b 01       		.uleb128 0x1
 1312 038c 9C       		.byte	0x9c
 1313 038d C1030000 		.4byte	0x3c1
 1314 0391 11       		.uleb128 0x11
 1315 0392 43030000 		.4byte	.LASF35
 1316 0396 01       		.byte	0x1
 1317 0397 D302     		.2byte	0x2d3
 1318 0399 83000000 		.4byte	0x83
 1319 039d 3B020000 		.4byte	.LLST14
 1320 03a1 11       		.uleb128 0x11
 1321 03a2 07000000 		.4byte	.LASF48
 1322 03a6 01       		.byte	0x1
 1323 03a7 D302     		.2byte	0x2d3
 1324 03a9 9B000000 		.4byte	0x9b
 1325 03ad 67020000 		.4byte	.LLST15
 1326 03b1 0C       		.uleb128 0xc
 1327 03b2 10000000 		.4byte	.LVL44
 1328 03b6 8A050000 		.4byte	0x58a
 1329 03ba 0B       		.uleb128 0xb
 1330 03bb 01       		.uleb128 0x1
 1331 03bc 50       		.byte	0x50
 1332 03bd 01       		.uleb128 0x1
 1333 03be 30       		.byte	0x30
 1334 03bf 00       		.byte	0
 1335 03c0 00       		.byte	0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 40


 1336 03c1 13       		.uleb128 0x13
 1337 03c2 E6020000 		.4byte	.LASF49
 1338 03c6 01       		.byte	0x1
 1339 03c7 F402     		.2byte	0x2f4
 1340 03c9 8F000000 		.4byte	0x8f
 1341 03cd 00000000 		.4byte	.LFB15
 1342 03d1 5C000000 		.4byte	.LFE15-.LFB15
 1343 03d5 01       		.uleb128 0x1
 1344 03d6 9C       		.byte	0x9c
 1345 03d7 19040000 		.4byte	0x419
 1346 03db 11       		.uleb128 0x11
 1347 03dc 43030000 		.4byte	.LASF35
 1348 03e0 01       		.byte	0x1
 1349 03e1 F402     		.2byte	0x2f4
 1350 03e3 83000000 		.4byte	0x83
 1351 03e7 97020000 		.4byte	.LLST16
 1352 03eb 11       		.uleb128 0x11
 1353 03ec 74030000 		.4byte	.LASF50
 1354 03f0 01       		.byte	0x1
 1355 03f1 F402     		.2byte	0x2f4
 1356 03f3 8F000000 		.4byte	0x8f
 1357 03f7 C3020000 		.4byte	.LLST17
 1358 03fb 14       		.uleb128 0x14
 1359 03fc 3A020000 		.4byte	.LASF51
 1360 0400 01       		.byte	0x1
 1361 0401 F602     		.2byte	0x2f6
 1362 0403 8F000000 		.4byte	0x8f
 1363 0407 01       		.uleb128 0x1
 1364 0408 50       		.byte	0x50
 1365 0409 0C       		.uleb128 0xc
 1366 040a 10000000 		.4byte	.LVL49
 1367 040e 8A050000 		.4byte	0x58a
 1368 0412 0B       		.uleb128 0xb
 1369 0413 01       		.uleb128 0x1
 1370 0414 50       		.byte	0x50
 1371 0415 01       		.uleb128 0x1
 1372 0416 30       		.byte	0x30
 1373 0417 00       		.byte	0
 1374 0418 00       		.byte	0
 1375 0419 13       		.uleb128 0x13
 1376 041a 53010000 		.4byte	.LASF52
 1377 041e 01       		.byte	0x1
 1378 041f 2A03     		.2byte	0x32a
 1379 0421 9B000000 		.4byte	0x9b
 1380 0425 00000000 		.4byte	.LFB16
 1381 0429 40000000 		.4byte	.LFE16-.LFB16
 1382 042d 01       		.uleb128 0x1
 1383 042e 9C       		.byte	0x9c
 1384 042f 6F040000 		.4byte	0x46f
 1385 0433 11       		.uleb128 0x11
 1386 0434 43030000 		.4byte	.LASF35
 1387 0438 01       		.byte	0x1
 1388 0439 2A03     		.2byte	0x32a
 1389 043b 83000000 		.4byte	0x83
 1390 043f FA020000 		.4byte	.LLST18
 1391 0443 11       		.uleb128 0x11
 1392 0444 74030000 		.4byte	.LASF50
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 41


 1393 0448 01       		.byte	0x1
 1394 0449 2A03     		.2byte	0x32a
 1395 044b 8F000000 		.4byte	0x8f
 1396 044f 26030000 		.4byte	.LLST19
 1397 0453 15       		.uleb128 0x15
 1398 0454 D0010000 		.4byte	.LASF64
 1399 0458 01       		.byte	0x1
 1400 0459 2C03     		.2byte	0x32c
 1401 045b C1000000 		.4byte	0xc1
 1402 045f 0C       		.uleb128 0xc
 1403 0460 10000000 		.4byte	.LVL58
 1404 0464 8A050000 		.4byte	0x58a
 1405 0468 0B       		.uleb128 0xb
 1406 0469 01       		.uleb128 0x1
 1407 046a 50       		.byte	0x50
 1408 046b 01       		.uleb128 0x1
 1409 046c 30       		.byte	0x30
 1410 046d 00       		.byte	0
 1411 046e 00       		.byte	0
 1412 046f 13       		.uleb128 0x13
 1413 0470 16000000 		.4byte	.LASF53
 1414 0474 01       		.byte	0x1
 1415 0475 5703     		.2byte	0x357
 1416 0477 A7000000 		.4byte	0xa7
 1417 047b 00000000 		.4byte	.LFB17
 1418 047f 48000000 		.4byte	.LFE17-.LFB17
 1419 0483 01       		.uleb128 0x1
 1420 0484 9C       		.byte	0x9c
 1421 0485 C7040000 		.4byte	0x4c7
 1422 0489 11       		.uleb128 0x11
 1423 048a 43030000 		.4byte	.LASF35
 1424 048e 01       		.byte	0x1
 1425 048f 5703     		.2byte	0x357
 1426 0491 83000000 		.4byte	0x83
 1427 0495 52030000 		.4byte	.LLST20
 1428 0499 11       		.uleb128 0x11
 1429 049a 74030000 		.4byte	.LASF50
 1430 049e 01       		.byte	0x1
 1431 049f 5703     		.2byte	0x357
 1432 04a1 8F000000 		.4byte	0x8f
 1433 04a5 7E030000 		.4byte	.LLST21
 1434 04a9 14       		.uleb128 0x14
 1435 04aa F8010000 		.4byte	.LASF54
 1436 04ae 01       		.byte	0x1
 1437 04af 5903     		.2byte	0x359
 1438 04b1 A7000000 		.4byte	0xa7
 1439 04b5 01       		.uleb128 0x1
 1440 04b6 50       		.byte	0x50
 1441 04b7 0C       		.uleb128 0xc
 1442 04b8 10000000 		.4byte	.LVL65
 1443 04bc 8A050000 		.4byte	0x58a
 1444 04c0 0B       		.uleb128 0xb
 1445 04c1 01       		.uleb128 0x1
 1446 04c2 50       		.byte	0x50
 1447 04c3 01       		.uleb128 0x1
 1448 04c4 30       		.byte	0x30
 1449 04c5 00       		.byte	0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 42


 1450 04c6 00       		.byte	0
 1451 04c7 16       		.uleb128 0x16
 1452 04c8 83000000 		.4byte	0x83
 1453 04cc D7040000 		.4byte	0x4d7
 1454 04d0 17       		.uleb128 0x17
 1455 04d1 F8000000 		.4byte	0xf8
 1456 04d5 00       		.byte	0
 1457 04d6 00       		.byte	0
 1458 04d7 18       		.uleb128 0x18
 1459 04d8 5A030000 		.4byte	.LASF55
 1460 04dc 01       		.byte	0x1
 1461 04dd 21       		.byte	0x21
 1462 04de E7040000 		.4byte	0x4e7
 1463 04e2 04       		.byte	0x4
 1464 04e3 00       		.byte	0
 1465 04e4 00       		.byte	0
 1466 04e5 00       		.byte	0
 1467 04e6 00       		.byte	0
 1468 04e7 19       		.uleb128 0x19
 1469 04e8 C7040000 		.4byte	0x4c7
 1470 04ec 1A       		.uleb128 0x1a
 1471 04ed 9E010000 		.4byte	.LASF56
 1472 04f1 01       		.byte	0x1
 1473 04f2 18       		.byte	0x18
 1474 04f3 6B000000 		.4byte	0x6b
 1475 04f7 05       		.uleb128 0x5
 1476 04f8 03       		.byte	0x3
 1477 04f9 00000000 		.4byte	ADC_initVar
 1478 04fd 16       		.uleb128 0x16
 1479 04fe 8F000000 		.4byte	0x8f
 1480 0502 0D050000 		.4byte	0x50d
 1481 0506 17       		.uleb128 0x17
 1482 0507 F8000000 		.4byte	0xf8
 1483 050b 00       		.byte	0
 1484 050c 00       		.byte	0
 1485 050d 1A       		.uleb128 0x1a
 1486 050e 1F030000 		.4byte	.LASF57
 1487 0512 01       		.byte	0x1
 1488 0513 19       		.byte	0x19
 1489 0514 1E050000 		.4byte	0x51e
 1490 0518 05       		.uleb128 0x5
 1491 0519 03       		.byte	0x3
 1492 051a 00000000 		.4byte	ADC_offset
 1493 051e 05       		.uleb128 0x5
 1494 051f FD040000 		.4byte	0x4fd
 1495 0523 16       		.uleb128 0x16
 1496 0524 9B000000 		.4byte	0x9b
 1497 0528 33050000 		.4byte	0x533
 1498 052c 17       		.uleb128 0x17
 1499 052d F8000000 		.4byte	0xf8
 1500 0531 00       		.byte	0
 1501 0532 00       		.byte	0
 1502 0533 1A       		.uleb128 0x1a
 1503 0534 67010000 		.4byte	.LASF58
 1504 0538 01       		.byte	0x1
 1505 0539 1A       		.byte	0x1a
 1506 053a 44050000 		.4byte	0x544
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 43


 1507 053e 05       		.uleb128 0x5
 1508 053f 03       		.byte	0x3
 1509 0540 00000000 		.4byte	ADC_countsPer10Volt
 1510 0544 05       		.uleb128 0x5
 1511 0545 23050000 		.4byte	0x523
 1512 0549 1B       		.uleb128 0x1b
 1513 054a 8C020000 		.4byte	.LASF59
 1514 054e 03       		.byte	0x3
 1515 054f BE       		.byte	0xbe
 1516 0550 5F050000 		.4byte	0x55f
 1517 0554 1C       		.uleb128 0x1c
 1518 0555 6B000000 		.4byte	0x6b
 1519 0559 1C       		.uleb128 0x1c
 1520 055a 6B000000 		.4byte	0x6b
 1521 055e 00       		.byte	0
 1522 055f 1D       		.uleb128 0x1d
 1523 0560 1B020000 		.4byte	.LASF65
 1524 0564 03       		.byte	0x3
 1525 0565 BB       		.byte	0xbb
 1526 0566 E5000000 		.4byte	0xe5
 1527 056a 79050000 		.4byte	0x579
 1528 056e 1C       		.uleb128 0x1c
 1529 056f 6B000000 		.4byte	0x6b
 1530 0573 1C       		.uleb128 0x1c
 1531 0574 E5000000 		.4byte	0xe5
 1532 0578 00       		.byte	0
 1533 0579 1B       		.uleb128 0x1b
 1534 057a 81010000 		.4byte	.LASF60
 1535 057e 03       		.byte	0x3
 1536 057f D8       		.byte	0xd8
 1537 0580 8A050000 		.4byte	0x58a
 1538 0584 1C       		.uleb128 0x1c
 1539 0585 77000000 		.4byte	0x77
 1540 0589 00       		.byte	0
 1541 058a 1E       		.uleb128 0x1e
 1542 058b 0A030000 		.4byte	.LASF66
 1543 058f 03       		.byte	0x3
 1544 0590 E5       		.byte	0xe5
 1545 0591 1C       		.uleb128 0x1c
 1546 0592 6B000000 		.4byte	0x6b
 1547 0596 00       		.byte	0
 1548 0597 00       		.byte	0
 1549              		.section	.debug_abbrev,"",%progbits
 1550              	.Ldebug_abbrev0:
 1551 0000 01       		.uleb128 0x1
 1552 0001 11       		.uleb128 0x11
 1553 0002 01       		.byte	0x1
 1554 0003 25       		.uleb128 0x25
 1555 0004 0E       		.uleb128 0xe
 1556 0005 13       		.uleb128 0x13
 1557 0006 0B       		.uleb128 0xb
 1558 0007 03       		.uleb128 0x3
 1559 0008 0E       		.uleb128 0xe
 1560 0009 1B       		.uleb128 0x1b
 1561 000a 0E       		.uleb128 0xe
 1562 000b 55       		.uleb128 0x55
 1563 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 44


 1564 000d 11       		.uleb128 0x11
 1565 000e 01       		.uleb128 0x1
 1566 000f 10       		.uleb128 0x10
 1567 0010 17       		.uleb128 0x17
 1568 0011 00       		.byte	0
 1569 0012 00       		.byte	0
 1570 0013 02       		.uleb128 0x2
 1571 0014 24       		.uleb128 0x24
 1572 0015 00       		.byte	0
 1573 0016 0B       		.uleb128 0xb
 1574 0017 0B       		.uleb128 0xb
 1575 0018 3E       		.uleb128 0x3e
 1576 0019 0B       		.uleb128 0xb
 1577 001a 03       		.uleb128 0x3
 1578 001b 0E       		.uleb128 0xe
 1579 001c 00       		.byte	0
 1580 001d 00       		.byte	0
 1581 001e 03       		.uleb128 0x3
 1582 001f 24       		.uleb128 0x24
 1583 0020 00       		.byte	0
 1584 0021 0B       		.uleb128 0xb
 1585 0022 0B       		.uleb128 0xb
 1586 0023 3E       		.uleb128 0x3e
 1587 0024 0B       		.uleb128 0xb
 1588 0025 03       		.uleb128 0x3
 1589 0026 08       		.uleb128 0x8
 1590 0027 00       		.byte	0
 1591 0028 00       		.byte	0
 1592 0029 04       		.uleb128 0x4
 1593 002a 16       		.uleb128 0x16
 1594 002b 00       		.byte	0
 1595 002c 03       		.uleb128 0x3
 1596 002d 0E       		.uleb128 0xe
 1597 002e 3A       		.uleb128 0x3a
 1598 002f 0B       		.uleb128 0xb
 1599 0030 3B       		.uleb128 0x3b
 1600 0031 05       		.uleb128 0x5
 1601 0032 49       		.uleb128 0x49
 1602 0033 13       		.uleb128 0x13
 1603 0034 00       		.byte	0
 1604 0035 00       		.byte	0
 1605 0036 05       		.uleb128 0x5
 1606 0037 35       		.uleb128 0x35
 1607 0038 00       		.byte	0
 1608 0039 49       		.uleb128 0x49
 1609 003a 13       		.uleb128 0x13
 1610 003b 00       		.byte	0
 1611 003c 00       		.byte	0
 1612 003d 06       		.uleb128 0x6
 1613 003e 0F       		.uleb128 0xf
 1614 003f 00       		.byte	0
 1615 0040 0B       		.uleb128 0xb
 1616 0041 0B       		.uleb128 0xb
 1617 0042 49       		.uleb128 0x49
 1618 0043 13       		.uleb128 0x13
 1619 0044 00       		.byte	0
 1620 0045 00       		.byte	0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 45


 1621 0046 07       		.uleb128 0x7
 1622 0047 15       		.uleb128 0x15
 1623 0048 00       		.byte	0
 1624 0049 27       		.uleb128 0x27
 1625 004a 19       		.uleb128 0x19
 1626 004b 00       		.byte	0
 1627 004c 00       		.byte	0
 1628 004d 08       		.uleb128 0x8
 1629 004e 2E       		.uleb128 0x2e
 1630 004f 01       		.byte	0x1
 1631 0050 3F       		.uleb128 0x3f
 1632 0051 19       		.uleb128 0x19
 1633 0052 03       		.uleb128 0x3
 1634 0053 0E       		.uleb128 0xe
 1635 0054 3A       		.uleb128 0x3a
 1636 0055 0B       		.uleb128 0xb
 1637 0056 3B       		.uleb128 0x3b
 1638 0057 0B       		.uleb128 0xb
 1639 0058 27       		.uleb128 0x27
 1640 0059 19       		.uleb128 0x19
 1641 005a 11       		.uleb128 0x11
 1642 005b 01       		.uleb128 0x1
 1643 005c 12       		.uleb128 0x12
 1644 005d 06       		.uleb128 0x6
 1645 005e 40       		.uleb128 0x40
 1646 005f 18       		.uleb128 0x18
 1647 0060 9742     		.uleb128 0x2117
 1648 0062 19       		.uleb128 0x19
 1649 0063 01       		.uleb128 0x1
 1650 0064 13       		.uleb128 0x13
 1651 0065 00       		.byte	0
 1652 0066 00       		.byte	0
 1653 0067 09       		.uleb128 0x9
 1654 0068 34       		.uleb128 0x34
 1655 0069 00       		.byte	0
 1656 006a 03       		.uleb128 0x3
 1657 006b 0E       		.uleb128 0xe
 1658 006c 3A       		.uleb128 0x3a
 1659 006d 0B       		.uleb128 0xb
 1660 006e 3B       		.uleb128 0x3b
 1661 006f 0B       		.uleb128 0xb
 1662 0070 49       		.uleb128 0x49
 1663 0071 13       		.uleb128 0x13
 1664 0072 02       		.uleb128 0x2
 1665 0073 17       		.uleb128 0x17
 1666 0074 00       		.byte	0
 1667 0075 00       		.byte	0
 1668 0076 0A       		.uleb128 0xa
 1669 0077 898201   		.uleb128 0x4109
 1670 007a 01       		.byte	0x1
 1671 007b 11       		.uleb128 0x11
 1672 007c 01       		.uleb128 0x1
 1673 007d 31       		.uleb128 0x31
 1674 007e 13       		.uleb128 0x13
 1675 007f 01       		.uleb128 0x1
 1676 0080 13       		.uleb128 0x13
 1677 0081 00       		.byte	0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 46


 1678 0082 00       		.byte	0
 1679 0083 0B       		.uleb128 0xb
 1680 0084 8A8201   		.uleb128 0x410a
 1681 0087 00       		.byte	0
 1682 0088 02       		.uleb128 0x2
 1683 0089 18       		.uleb128 0x18
 1684 008a 9142     		.uleb128 0x2111
 1685 008c 18       		.uleb128 0x18
 1686 008d 00       		.byte	0
 1687 008e 00       		.byte	0
 1688 008f 0C       		.uleb128 0xc
 1689 0090 898201   		.uleb128 0x4109
 1690 0093 01       		.byte	0x1
 1691 0094 11       		.uleb128 0x11
 1692 0095 01       		.uleb128 0x1
 1693 0096 31       		.uleb128 0x31
 1694 0097 13       		.uleb128 0x13
 1695 0098 00       		.byte	0
 1696 0099 00       		.byte	0
 1697 009a 0D       		.uleb128 0xd
 1698 009b 2E       		.uleb128 0x2e
 1699 009c 01       		.byte	0x1
 1700 009d 3F       		.uleb128 0x3f
 1701 009e 19       		.uleb128 0x19
 1702 009f 03       		.uleb128 0x3
 1703 00a0 0E       		.uleb128 0xe
 1704 00a1 3A       		.uleb128 0x3a
 1705 00a2 0B       		.uleb128 0xb
 1706 00a3 3B       		.uleb128 0x3b
 1707 00a4 05       		.uleb128 0x5
 1708 00a5 27       		.uleb128 0x27
 1709 00a6 19       		.uleb128 0x19
 1710 00a7 11       		.uleb128 0x11
 1711 00a8 01       		.uleb128 0x1
 1712 00a9 12       		.uleb128 0x12
 1713 00aa 06       		.uleb128 0x6
 1714 00ab 40       		.uleb128 0x40
 1715 00ac 18       		.uleb128 0x18
 1716 00ad 9742     		.uleb128 0x2117
 1717 00af 19       		.uleb128 0x19
 1718 00b0 01       		.uleb128 0x1
 1719 00b1 13       		.uleb128 0x13
 1720 00b2 00       		.byte	0
 1721 00b3 00       		.byte	0
 1722 00b4 0E       		.uleb128 0xe
 1723 00b5 898201   		.uleb128 0x4109
 1724 00b8 00       		.byte	0
 1725 00b9 11       		.uleb128 0x11
 1726 00ba 01       		.uleb128 0x1
 1727 00bb 31       		.uleb128 0x31
 1728 00bc 13       		.uleb128 0x13
 1729 00bd 00       		.byte	0
 1730 00be 00       		.byte	0
 1731 00bf 0F       		.uleb128 0xf
 1732 00c0 2E       		.uleb128 0x2e
 1733 00c1 00       		.byte	0
 1734 00c2 3F       		.uleb128 0x3f
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 47


 1735 00c3 19       		.uleb128 0x19
 1736 00c4 03       		.uleb128 0x3
 1737 00c5 0E       		.uleb128 0xe
 1738 00c6 3A       		.uleb128 0x3a
 1739 00c7 0B       		.uleb128 0xb
 1740 00c8 3B       		.uleb128 0x3b
 1741 00c9 05       		.uleb128 0x5
 1742 00ca 27       		.uleb128 0x27
 1743 00cb 19       		.uleb128 0x19
 1744 00cc 11       		.uleb128 0x11
 1745 00cd 01       		.uleb128 0x1
 1746 00ce 12       		.uleb128 0x12
 1747 00cf 06       		.uleb128 0x6
 1748 00d0 40       		.uleb128 0x40
 1749 00d1 18       		.uleb128 0x18
 1750 00d2 9742     		.uleb128 0x2117
 1751 00d4 19       		.uleb128 0x19
 1752 00d5 00       		.byte	0
 1753 00d6 00       		.byte	0
 1754 00d7 10       		.uleb128 0x10
 1755 00d8 2E       		.uleb128 0x2e
 1756 00d9 01       		.byte	0x1
 1757 00da 3F       		.uleb128 0x3f
 1758 00db 19       		.uleb128 0x19
 1759 00dc 03       		.uleb128 0x3
 1760 00dd 0E       		.uleb128 0xe
 1761 00de 3A       		.uleb128 0x3a
 1762 00df 0B       		.uleb128 0xb
 1763 00e0 3B       		.uleb128 0x3b
 1764 00e1 05       		.uleb128 0x5
 1765 00e2 27       		.uleb128 0x27
 1766 00e3 19       		.uleb128 0x19
 1767 00e4 49       		.uleb128 0x49
 1768 00e5 13       		.uleb128 0x13
 1769 00e6 11       		.uleb128 0x11
 1770 00e7 01       		.uleb128 0x1
 1771 00e8 12       		.uleb128 0x12
 1772 00e9 06       		.uleb128 0x6
 1773 00ea 40       		.uleb128 0x40
 1774 00eb 18       		.uleb128 0x18
 1775 00ec 9742     		.uleb128 0x2117
 1776 00ee 19       		.uleb128 0x19
 1777 00ef 01       		.uleb128 0x1
 1778 00f0 13       		.uleb128 0x13
 1779 00f1 00       		.byte	0
 1780 00f2 00       		.byte	0
 1781 00f3 11       		.uleb128 0x11
 1782 00f4 05       		.uleb128 0x5
 1783 00f5 00       		.byte	0
 1784 00f6 03       		.uleb128 0x3
 1785 00f7 0E       		.uleb128 0xe
 1786 00f8 3A       		.uleb128 0x3a
 1787 00f9 0B       		.uleb128 0xb
 1788 00fa 3B       		.uleb128 0x3b
 1789 00fb 05       		.uleb128 0x5
 1790 00fc 49       		.uleb128 0x49
 1791 00fd 13       		.uleb128 0x13
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 48


 1792 00fe 02       		.uleb128 0x2
 1793 00ff 17       		.uleb128 0x17
 1794 0100 00       		.byte	0
 1795 0101 00       		.byte	0
 1796 0102 12       		.uleb128 0x12
 1797 0103 34       		.uleb128 0x34
 1798 0104 00       		.byte	0
 1799 0105 03       		.uleb128 0x3
 1800 0106 0E       		.uleb128 0xe
 1801 0107 3A       		.uleb128 0x3a
 1802 0108 0B       		.uleb128 0xb
 1803 0109 3B       		.uleb128 0x3b
 1804 010a 05       		.uleb128 0x5
 1805 010b 49       		.uleb128 0x49
 1806 010c 13       		.uleb128 0x13
 1807 010d 02       		.uleb128 0x2
 1808 010e 17       		.uleb128 0x17
 1809 010f 00       		.byte	0
 1810 0110 00       		.byte	0
 1811 0111 13       		.uleb128 0x13
 1812 0112 2E       		.uleb128 0x2e
 1813 0113 01       		.byte	0x1
 1814 0114 3F       		.uleb128 0x3f
 1815 0115 19       		.uleb128 0x19
 1816 0116 03       		.uleb128 0x3
 1817 0117 0E       		.uleb128 0xe
 1818 0118 3A       		.uleb128 0x3a
 1819 0119 0B       		.uleb128 0xb
 1820 011a 3B       		.uleb128 0x3b
 1821 011b 05       		.uleb128 0x5
 1822 011c 27       		.uleb128 0x27
 1823 011d 19       		.uleb128 0x19
 1824 011e 49       		.uleb128 0x49
 1825 011f 13       		.uleb128 0x13
 1826 0120 11       		.uleb128 0x11
 1827 0121 01       		.uleb128 0x1
 1828 0122 12       		.uleb128 0x12
 1829 0123 06       		.uleb128 0x6
 1830 0124 40       		.uleb128 0x40
 1831 0125 18       		.uleb128 0x18
 1832 0126 9642     		.uleb128 0x2116
 1833 0128 19       		.uleb128 0x19
 1834 0129 01       		.uleb128 0x1
 1835 012a 13       		.uleb128 0x13
 1836 012b 00       		.byte	0
 1837 012c 00       		.byte	0
 1838 012d 14       		.uleb128 0x14
 1839 012e 34       		.uleb128 0x34
 1840 012f 00       		.byte	0
 1841 0130 03       		.uleb128 0x3
 1842 0131 0E       		.uleb128 0xe
 1843 0132 3A       		.uleb128 0x3a
 1844 0133 0B       		.uleb128 0xb
 1845 0134 3B       		.uleb128 0x3b
 1846 0135 05       		.uleb128 0x5
 1847 0136 49       		.uleb128 0x49
 1848 0137 13       		.uleb128 0x13
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 49


 1849 0138 02       		.uleb128 0x2
 1850 0139 18       		.uleb128 0x18
 1851 013a 00       		.byte	0
 1852 013b 00       		.byte	0
 1853 013c 15       		.uleb128 0x15
 1854 013d 34       		.uleb128 0x34
 1855 013e 00       		.byte	0
 1856 013f 03       		.uleb128 0x3
 1857 0140 0E       		.uleb128 0xe
 1858 0141 3A       		.uleb128 0x3a
 1859 0142 0B       		.uleb128 0xb
 1860 0143 3B       		.uleb128 0x3b
 1861 0144 05       		.uleb128 0x5
 1862 0145 49       		.uleb128 0x49
 1863 0146 13       		.uleb128 0x13
 1864 0147 00       		.byte	0
 1865 0148 00       		.byte	0
 1866 0149 16       		.uleb128 0x16
 1867 014a 01       		.uleb128 0x1
 1868 014b 01       		.byte	0x1
 1869 014c 49       		.uleb128 0x49
 1870 014d 13       		.uleb128 0x13
 1871 014e 01       		.uleb128 0x1
 1872 014f 13       		.uleb128 0x13
 1873 0150 00       		.byte	0
 1874 0151 00       		.byte	0
 1875 0152 17       		.uleb128 0x17
 1876 0153 21       		.uleb128 0x21
 1877 0154 00       		.byte	0
 1878 0155 49       		.uleb128 0x49
 1879 0156 13       		.uleb128 0x13
 1880 0157 2F       		.uleb128 0x2f
 1881 0158 0B       		.uleb128 0xb
 1882 0159 00       		.byte	0
 1883 015a 00       		.byte	0
 1884 015b 18       		.uleb128 0x18
 1885 015c 34       		.uleb128 0x34
 1886 015d 00       		.byte	0
 1887 015e 03       		.uleb128 0x3
 1888 015f 0E       		.uleb128 0xe
 1889 0160 3A       		.uleb128 0x3a
 1890 0161 0B       		.uleb128 0xb
 1891 0162 3B       		.uleb128 0x3b
 1892 0163 0B       		.uleb128 0xb
 1893 0164 49       		.uleb128 0x49
 1894 0165 13       		.uleb128 0x13
 1895 0166 1C       		.uleb128 0x1c
 1896 0167 0A       		.uleb128 0xa
 1897 0168 00       		.byte	0
 1898 0169 00       		.byte	0
 1899 016a 19       		.uleb128 0x19
 1900 016b 26       		.uleb128 0x26
 1901 016c 00       		.byte	0
 1902 016d 49       		.uleb128 0x49
 1903 016e 13       		.uleb128 0x13
 1904 016f 00       		.byte	0
 1905 0170 00       		.byte	0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 50


 1906 0171 1A       		.uleb128 0x1a
 1907 0172 34       		.uleb128 0x34
 1908 0173 00       		.byte	0
 1909 0174 03       		.uleb128 0x3
 1910 0175 0E       		.uleb128 0xe
 1911 0176 3A       		.uleb128 0x3a
 1912 0177 0B       		.uleb128 0xb
 1913 0178 3B       		.uleb128 0x3b
 1914 0179 0B       		.uleb128 0xb
 1915 017a 49       		.uleb128 0x49
 1916 017b 13       		.uleb128 0x13
 1917 017c 3F       		.uleb128 0x3f
 1918 017d 19       		.uleb128 0x19
 1919 017e 02       		.uleb128 0x2
 1920 017f 18       		.uleb128 0x18
 1921 0180 00       		.byte	0
 1922 0181 00       		.byte	0
 1923 0182 1B       		.uleb128 0x1b
 1924 0183 2E       		.uleb128 0x2e
 1925 0184 01       		.byte	0x1
 1926 0185 3F       		.uleb128 0x3f
 1927 0186 19       		.uleb128 0x19
 1928 0187 03       		.uleb128 0x3
 1929 0188 0E       		.uleb128 0xe
 1930 0189 3A       		.uleb128 0x3a
 1931 018a 0B       		.uleb128 0xb
 1932 018b 3B       		.uleb128 0x3b
 1933 018c 0B       		.uleb128 0xb
 1934 018d 27       		.uleb128 0x27
 1935 018e 19       		.uleb128 0x19
 1936 018f 3C       		.uleb128 0x3c
 1937 0190 19       		.uleb128 0x19
 1938 0191 01       		.uleb128 0x1
 1939 0192 13       		.uleb128 0x13
 1940 0193 00       		.byte	0
 1941 0194 00       		.byte	0
 1942 0195 1C       		.uleb128 0x1c
 1943 0196 05       		.uleb128 0x5
 1944 0197 00       		.byte	0
 1945 0198 49       		.uleb128 0x49
 1946 0199 13       		.uleb128 0x13
 1947 019a 00       		.byte	0
 1948 019b 00       		.byte	0
 1949 019c 1D       		.uleb128 0x1d
 1950 019d 2E       		.uleb128 0x2e
 1951 019e 01       		.byte	0x1
 1952 019f 3F       		.uleb128 0x3f
 1953 01a0 19       		.uleb128 0x19
 1954 01a1 03       		.uleb128 0x3
 1955 01a2 0E       		.uleb128 0xe
 1956 01a3 3A       		.uleb128 0x3a
 1957 01a4 0B       		.uleb128 0xb
 1958 01a5 3B       		.uleb128 0x3b
 1959 01a6 0B       		.uleb128 0xb
 1960 01a7 27       		.uleb128 0x27
 1961 01a8 19       		.uleb128 0x19
 1962 01a9 49       		.uleb128 0x49
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 51


 1963 01aa 13       		.uleb128 0x13
 1964 01ab 3C       		.uleb128 0x3c
 1965 01ac 19       		.uleb128 0x19
 1966 01ad 01       		.uleb128 0x1
 1967 01ae 13       		.uleb128 0x13
 1968 01af 00       		.byte	0
 1969 01b0 00       		.byte	0
 1970 01b1 1E       		.uleb128 0x1e
 1971 01b2 2E       		.uleb128 0x2e
 1972 01b3 01       		.byte	0x1
 1973 01b4 3F       		.uleb128 0x3f
 1974 01b5 19       		.uleb128 0x19
 1975 01b6 03       		.uleb128 0x3
 1976 01b7 0E       		.uleb128 0xe
 1977 01b8 3A       		.uleb128 0x3a
 1978 01b9 0B       		.uleb128 0xb
 1979 01ba 3B       		.uleb128 0x3b
 1980 01bb 0B       		.uleb128 0xb
 1981 01bc 27       		.uleb128 0x27
 1982 01bd 19       		.uleb128 0x19
 1983 01be 3C       		.uleb128 0x3c
 1984 01bf 19       		.uleb128 0x19
 1985 01c0 00       		.byte	0
 1986 01c1 00       		.byte	0
 1987 01c2 00       		.byte	0
 1988              		.section	.debug_loc,"",%progbits
 1989              	.Ldebug_loc0:
 1990              	.LLST0:
 1991 0000 7E000000 		.4byte	.LVL5
 1992 0004 82000000 		.4byte	.LVL7
 1993 0008 0200     		.2byte	0x2
 1994 000a 30       		.byte	0x30
 1995 000b 9F       		.byte	0x9f
 1996 000c 82000000 		.4byte	.LVL7
 1997 0010 08010000 		.4byte	.LFE1
 1998 0014 0100     		.2byte	0x1
 1999 0016 53       		.byte	0x53
 2000 0017 00000000 		.4byte	0
 2001 001b 00000000 		.4byte	0
 2002              	.LLST1:
 2003 001f 72000000 		.4byte	.LVL2
 2004 0023 76000000 		.4byte	.LVL3
 2005 0027 0100     		.2byte	0x1
 2006 0029 51       		.byte	0x51
 2007 002a 76000000 		.4byte	.LVL3
 2008 002e 80000000 		.4byte	.LVL6
 2009 0032 0100     		.2byte	0x1
 2010 0034 53       		.byte	0x53
 2011 0035 80000000 		.4byte	.LVL6
 2012 0039 82000000 		.4byte	.LVL7
 2013 003d 0200     		.2byte	0x2
 2014 003f 72       		.byte	0x72
 2015 0040 00       		.sleb128 0
 2016 0041 82000000 		.4byte	.LVL7
 2017 0045 9E000000 		.4byte	.LVL9
 2018 0049 0200     		.2byte	0x2
 2019 004b 30       		.byte	0x30
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 52


 2020 004c 9F       		.byte	0x9f
 2021 004d 00000000 		.4byte	0
 2022 0051 00000000 		.4byte	0
 2023              	.LLST2:
 2024 0055 8E000000 		.4byte	.LVL8
 2025 0059 9E000000 		.4byte	.LVL9
 2026 005d 0400     		.2byte	0x4
 2027 005f 0A       		.byte	0xa
 2028 0060 0010     		.2byte	0x1000
 2029 0062 9F       		.byte	0x9f
 2030 0063 00000000 		.4byte	0
 2031 0067 00000000 		.4byte	0
 2032              	.LLST3:
 2033 006b 00000000 		.4byte	.LVL13
 2034 006f 06000000 		.4byte	.LVL15
 2035 0073 0100     		.2byte	0x1
 2036 0075 50       		.byte	0x50
 2037 0076 06000000 		.4byte	.LVL15
 2038 007a 1A000000 		.4byte	.LVL17
 2039 007e 0100     		.2byte	0x1
 2040 0080 52       		.byte	0x52
 2041 0081 1A000000 		.4byte	.LVL17
 2042 0085 20000000 		.4byte	.LVL18
 2043 0089 0400     		.2byte	0x4
 2044 008b F3       		.byte	0xf3
 2045 008c 01       		.uleb128 0x1
 2046 008d 50       		.byte	0x50
 2047 008e 9F       		.byte	0x9f
 2048 008f 20000000 		.4byte	.LVL18
 2049 0093 22000000 		.4byte	.LVL19
 2050 0097 0100     		.2byte	0x1
 2051 0099 50       		.byte	0x50
 2052 009a 22000000 		.4byte	.LVL19
 2053 009e 28000000 		.4byte	.LFE6
 2054 00a2 0400     		.2byte	0x4
 2055 00a4 F3       		.byte	0xf3
 2056 00a5 01       		.uleb128 0x1
 2057 00a6 50       		.byte	0x50
 2058 00a7 9F       		.byte	0x9f
 2059 00a8 00000000 		.4byte	0
 2060 00ac 00000000 		.4byte	0
 2061              	.LLST4:
 2062 00b0 02000000 		.4byte	.LVL14
 2063 00b4 06000000 		.4byte	.LVL15
 2064 00b8 0200     		.2byte	0x2
 2065 00ba 30       		.byte	0x30
 2066 00bb 9F       		.byte	0x9f
 2067 00bc 0E000000 		.4byte	.LVL16
 2068 00c0 20000000 		.4byte	.LVL18
 2069 00c4 0100     		.2byte	0x1
 2070 00c6 50       		.byte	0x50
 2071 00c7 20000000 		.4byte	.LVL18
 2072 00cb 22000000 		.4byte	.LVL19
 2073 00cf 0200     		.2byte	0x2
 2074 00d1 30       		.byte	0x30
 2075 00d2 9F       		.byte	0x9f
 2076 00d3 22000000 		.4byte	.LVL19
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 53


 2077 00d7 28000000 		.4byte	.LFE6
 2078 00db 0100     		.2byte	0x1
 2079 00dd 50       		.byte	0x50
 2080 00de 00000000 		.4byte	0
 2081 00e2 00000000 		.4byte	0
 2082              	.LLST5:
 2083 00e6 00000000 		.4byte	.LVL20
 2084 00ea 08000000 		.4byte	.LVL21
 2085 00ee 0100     		.2byte	0x1
 2086 00f0 50       		.byte	0x50
 2087 00f1 08000000 		.4byte	.LVL21
 2088 00f5 12000000 		.4byte	.LVL23
 2089 00f9 0100     		.2byte	0x1
 2090 00fb 54       		.byte	0x54
 2091 00fc 12000000 		.4byte	.LVL23
 2092 0100 20000000 		.4byte	.LVL25
 2093 0104 0400     		.2byte	0x4
 2094 0106 F3       		.byte	0xf3
 2095 0107 01       		.uleb128 0x1
 2096 0108 50       		.byte	0x50
 2097 0109 9F       		.byte	0x9f
 2098 010a 20000000 		.4byte	.LVL25
 2099 010e 22000000 		.4byte	.LVL26
 2100 0112 0100     		.2byte	0x1
 2101 0114 54       		.byte	0x54
 2102 0115 22000000 		.4byte	.LVL26
 2103 0119 2C000000 		.4byte	.LFE7
 2104 011d 0400     		.2byte	0x4
 2105 011f F3       		.byte	0xf3
 2106 0120 01       		.uleb128 0x1
 2107 0121 50       		.byte	0x50
 2108 0122 9F       		.byte	0x9f
 2109 0123 00000000 		.4byte	0
 2110 0127 00000000 		.4byte	0
 2111              	.LLST6:
 2112 012b 1E000000 		.4byte	.LVL24
 2113 012f 20000000 		.4byte	.LVL25
 2114 0133 0100     		.2byte	0x1
 2115 0135 50       		.byte	0x50
 2116 0136 22000000 		.4byte	.LVL26
 2117 013a 24000000 		.4byte	.LVL27
 2118 013e 0100     		.2byte	0x1
 2119 0140 50       		.byte	0x50
 2120 0141 00000000 		.4byte	0
 2121 0145 00000000 		.4byte	0
 2122              	.LLST7:
 2123 0149 00000000 		.4byte	.LVL28
 2124 014d 04000000 		.4byte	.LVL29
 2125 0151 0100     		.2byte	0x1
 2126 0153 50       		.byte	0x50
 2127 0154 04000000 		.4byte	.LVL29
 2128 0158 10000000 		.4byte	.LFE8
 2129 015c 0400     		.2byte	0x4
 2130 015e F3       		.byte	0xf3
 2131 015f 01       		.uleb128 0x1
 2132 0160 50       		.byte	0x50
 2133 0161 9F       		.byte	0x9f
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 54


 2134 0162 00000000 		.4byte	0
 2135 0166 00000000 		.4byte	0
 2136              	.LLST8:
 2137 016a 00000000 		.4byte	.LVL30
 2138 016e 0E000000 		.4byte	.LVL31
 2139 0172 0100     		.2byte	0x1
 2140 0174 50       		.byte	0x50
 2141 0175 0E000000 		.4byte	.LVL31
 2142 0179 1C000000 		.4byte	.LFE9
 2143 017d 0400     		.2byte	0x4
 2144 017f F3       		.byte	0xf3
 2145 0180 01       		.uleb128 0x1
 2146 0181 50       		.byte	0x50
 2147 0182 9F       		.byte	0x9f
 2148 0183 00000000 		.4byte	0
 2149 0187 00000000 		.4byte	0
 2150              	.LLST9:
 2151 018b 00000000 		.4byte	.LVL32
 2152 018f 0E000000 		.4byte	.LVL33
 2153 0193 0100     		.2byte	0x1
 2154 0195 50       		.byte	0x50
 2155 0196 0E000000 		.4byte	.LVL33
 2156 019a 18000000 		.4byte	.LFE10
 2157 019e 0400     		.2byte	0x4
 2158 01a0 F3       		.byte	0xf3
 2159 01a1 01       		.uleb128 0x1
 2160 01a2 50       		.byte	0x50
 2161 01a3 9F       		.byte	0x9f
 2162 01a4 00000000 		.4byte	0
 2163 01a8 00000000 		.4byte	0
 2164              	.LLST10:
 2165 01ac 00000000 		.4byte	.LVL34
 2166 01b0 04000000 		.4byte	.LVL35
 2167 01b4 0100     		.2byte	0x1
 2168 01b6 50       		.byte	0x50
 2169 01b7 04000000 		.4byte	.LVL35
 2170 01bb 10000000 		.4byte	.LFE11
 2171 01bf 0400     		.2byte	0x4
 2172 01c1 F3       		.byte	0xf3
 2173 01c2 01       		.uleb128 0x1
 2174 01c3 50       		.byte	0x50
 2175 01c4 9F       		.byte	0x9f
 2176 01c5 00000000 		.4byte	0
 2177 01c9 00000000 		.4byte	0
 2178              	.LLST11:
 2179 01cd 00000000 		.4byte	.LVL36
 2180 01d1 04000000 		.4byte	.LVL37
 2181 01d5 0100     		.2byte	0x1
 2182 01d7 50       		.byte	0x50
 2183 01d8 04000000 		.4byte	.LVL37
 2184 01dc 10000000 		.4byte	.LFE12
 2185 01e0 0400     		.2byte	0x4
 2186 01e2 F3       		.byte	0xf3
 2187 01e3 01       		.uleb128 0x1
 2188 01e4 50       		.byte	0x50
 2189 01e5 9F       		.byte	0x9f
 2190 01e6 00000000 		.4byte	0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 55


 2191 01ea 00000000 		.4byte	0
 2192              	.LLST12:
 2193 01ee 00000000 		.4byte	.LVL38
 2194 01f2 0C000000 		.4byte	.LVL39
 2195 01f6 0100     		.2byte	0x1
 2196 01f8 50       		.byte	0x50
 2197 01f9 0C000000 		.4byte	.LVL39
 2198 01fd 12000000 		.4byte	.LVL41
 2199 0201 0100     		.2byte	0x1
 2200 0203 54       		.byte	0x54
 2201 0204 12000000 		.4byte	.LVL41
 2202 0208 1C000000 		.4byte	.LFE13
 2203 020c 0400     		.2byte	0x4
 2204 020e F3       		.byte	0xf3
 2205 020f 01       		.uleb128 0x1
 2206 0210 50       		.byte	0x50
 2207 0211 9F       		.byte	0x9f
 2208 0212 00000000 		.4byte	0
 2209 0216 00000000 		.4byte	0
 2210              	.LLST13:
 2211 021a 00000000 		.4byte	.LVL38
 2212 021e 0F000000 		.4byte	.LVL40-1
 2213 0222 0100     		.2byte	0x1
 2214 0224 51       		.byte	0x51
 2215 0225 0F000000 		.4byte	.LVL40-1
 2216 0229 1C000000 		.4byte	.LFE13
 2217 022d 0400     		.2byte	0x4
 2218 022f F3       		.byte	0xf3
 2219 0230 01       		.uleb128 0x1
 2220 0231 51       		.byte	0x51
 2221 0232 9F       		.byte	0x9f
 2222 0233 00000000 		.4byte	0
 2223 0237 00000000 		.4byte	0
 2224              	.LLST14:
 2225 023b 00000000 		.4byte	.LVL42
 2226 023f 0C000000 		.4byte	.LVL43
 2227 0243 0100     		.2byte	0x1
 2228 0245 50       		.byte	0x50
 2229 0246 0C000000 		.4byte	.LVL43
 2230 024a 12000000 		.4byte	.LVL45
 2231 024e 0100     		.2byte	0x1
 2232 0250 54       		.byte	0x54
 2233 0251 12000000 		.4byte	.LVL45
 2234 0255 1C000000 		.4byte	.LFE14
 2235 0259 0400     		.2byte	0x4
 2236 025b F3       		.byte	0xf3
 2237 025c 01       		.uleb128 0x1
 2238 025d 50       		.byte	0x50
 2239 025e 9F       		.byte	0x9f
 2240 025f 00000000 		.4byte	0
 2241 0263 00000000 		.4byte	0
 2242              	.LLST15:
 2243 0267 00000000 		.4byte	.LVL42
 2244 026b 0F000000 		.4byte	.LVL44-1
 2245 026f 0100     		.2byte	0x1
 2246 0271 51       		.byte	0x51
 2247 0272 0F000000 		.4byte	.LVL44-1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 56


 2248 0276 16000000 		.4byte	.LVL46
 2249 027a 0100     		.2byte	0x1
 2250 027c 55       		.byte	0x55
 2251 027d 16000000 		.4byte	.LVL46
 2252 0281 1C000000 		.4byte	.LFE14
 2253 0285 0800     		.2byte	0x8
 2254 0287 F3       		.byte	0xf3
 2255 0288 01       		.uleb128 0x1
 2256 0289 50       		.byte	0x50
 2257 028a 32       		.byte	0x32
 2258 028b 24       		.byte	0x24
 2259 028c 73       		.byte	0x73
 2260 028d 00       		.sleb128 0
 2261 028e 22       		.byte	0x22
 2262 028f 00000000 		.4byte	0
 2263 0293 00000000 		.4byte	0
 2264              	.LLST16:
 2265 0297 00000000 		.4byte	.LVL47
 2266 029b 0C000000 		.4byte	.LVL48
 2267 029f 0100     		.2byte	0x1
 2268 02a1 50       		.byte	0x50
 2269 02a2 0C000000 		.4byte	.LVL48
 2270 02a6 44000000 		.4byte	.LVL54
 2271 02aa 0100     		.2byte	0x1
 2272 02ac 54       		.byte	0x54
 2273 02ad 44000000 		.4byte	.LVL54
 2274 02b1 5C000000 		.4byte	.LFE15
 2275 02b5 0400     		.2byte	0x4
 2276 02b7 F3       		.byte	0xf3
 2277 02b8 01       		.uleb128 0x1
 2278 02b9 50       		.byte	0x50
 2279 02ba 9F       		.byte	0x9f
 2280 02bb 00000000 		.4byte	0
 2281 02bf 00000000 		.4byte	0
 2282              	.LLST17:
 2283 02c3 00000000 		.4byte	.LVL47
 2284 02c7 0F000000 		.4byte	.LVL49-1
 2285 02cb 0100     		.2byte	0x1
 2286 02cd 51       		.byte	0x51
 2287 02ce 0F000000 		.4byte	.LVL49-1
 2288 02d2 1A000000 		.4byte	.LVL50
 2289 02d6 0400     		.2byte	0x4
 2290 02d8 F3       		.byte	0xf3
 2291 02d9 01       		.uleb128 0x1
 2292 02da 51       		.byte	0x51
 2293 02db 9F       		.byte	0x9f
 2294 02dc 1A000000 		.4byte	.LVL50
 2295 02e0 28000000 		.4byte	.LVL51
 2296 02e4 0100     		.2byte	0x1
 2297 02e6 51       		.byte	0x51
 2298 02e7 32000000 		.4byte	.LVL52
 2299 02eb 36000000 		.4byte	.LVL53
 2300 02ef 0100     		.2byte	0x1
 2301 02f1 51       		.byte	0x51
 2302 02f2 00000000 		.4byte	0
 2303 02f6 00000000 		.4byte	0
 2304              	.LLST18:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 57


 2305 02fa 00000000 		.4byte	.LVL56
 2306 02fe 0C000000 		.4byte	.LVL57
 2307 0302 0100     		.2byte	0x1
 2308 0304 50       		.byte	0x50
 2309 0305 0C000000 		.4byte	.LVL57
 2310 0309 26000000 		.4byte	.LVL61
 2311 030d 0100     		.2byte	0x1
 2312 030f 55       		.byte	0x55
 2313 0310 26000000 		.4byte	.LVL61
 2314 0314 40000000 		.4byte	.LFE16
 2315 0318 0400     		.2byte	0x4
 2316 031a F3       		.byte	0xf3
 2317 031b 01       		.uleb128 0x1
 2318 031c 50       		.byte	0x50
 2319 031d 9F       		.byte	0x9f
 2320 031e 00000000 		.4byte	0
 2321 0322 00000000 		.4byte	0
 2322              	.LLST19:
 2323 0326 00000000 		.4byte	.LVL56
 2324 032a 0F000000 		.4byte	.LVL58-1
 2325 032e 0100     		.2byte	0x1
 2326 0330 51       		.byte	0x51
 2327 0331 0F000000 		.4byte	.LVL58-1
 2328 0335 1A000000 		.4byte	.LVL59
 2329 0339 0400     		.2byte	0x4
 2330 033b F3       		.byte	0xf3
 2331 033c 01       		.uleb128 0x1
 2332 033d 51       		.byte	0x51
 2333 033e 9F       		.byte	0x9f
 2334 033f 1A000000 		.4byte	.LVL59
 2335 0343 23000000 		.4byte	.LVL60-1
 2336 0347 0100     		.2byte	0x1
 2337 0349 50       		.byte	0x50
 2338 034a 00000000 		.4byte	0
 2339 034e 00000000 		.4byte	0
 2340              	.LLST20:
 2341 0352 00000000 		.4byte	.LVL63
 2342 0356 0C000000 		.4byte	.LVL64
 2343 035a 0100     		.2byte	0x1
 2344 035c 50       		.byte	0x50
 2345 035d 0C000000 		.4byte	.LVL64
 2346 0361 28000000 		.4byte	.LVL69
 2347 0365 0100     		.2byte	0x1
 2348 0367 54       		.byte	0x54
 2349 0368 28000000 		.4byte	.LVL69
 2350 036c 48000000 		.4byte	.LFE17
 2351 0370 0400     		.2byte	0x4
 2352 0372 F3       		.byte	0xf3
 2353 0373 01       		.uleb128 0x1
 2354 0374 50       		.byte	0x50
 2355 0375 9F       		.byte	0x9f
 2356 0376 00000000 		.4byte	0
 2357 037a 00000000 		.4byte	0
 2358              	.LLST21:
 2359 037e 00000000 		.4byte	.LVL63
 2360 0382 0F000000 		.4byte	.LVL65-1
 2361 0386 0100     		.2byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 58


 2362 0388 51       		.byte	0x51
 2363 0389 0F000000 		.4byte	.LVL65-1
 2364 038d 1A000000 		.4byte	.LVL66
 2365 0391 0400     		.2byte	0x4
 2366 0393 F3       		.byte	0xf3
 2367 0394 01       		.uleb128 0x1
 2368 0395 51       		.byte	0x51
 2369 0396 9F       		.byte	0x9f
 2370 0397 1A000000 		.4byte	.LVL66
 2371 039b 1D000000 		.4byte	.LVL67-1
 2372 039f 0100     		.2byte	0x1
 2373 03a1 50       		.byte	0x50
 2374 03a2 00000000 		.4byte	0
 2375 03a6 00000000 		.4byte	0
 2376              		.section	.debug_aranges,"",%progbits
 2377 0000 A4000000 		.4byte	0xa4
 2378 0004 0200     		.2byte	0x2
 2379 0006 00000000 		.4byte	.Ldebug_info0
 2380 000a 04       		.byte	0x4
 2381 000b 00       		.byte	0
 2382 000c 0000     		.2byte	0
 2383 000e 0000     		.2byte	0
 2384 0010 00000000 		.4byte	.LFB1
 2385 0014 08010000 		.4byte	.LFE1-.LFB1
 2386 0018 00000000 		.4byte	.LFB2
 2387 001c 24000000 		.4byte	.LFE2-.LFB2
 2388 0020 00000000 		.4byte	.LFB0
 2389 0024 20000000 		.4byte	.LFE0-.LFB0
 2390 0028 00000000 		.4byte	.LFB3
 2391 002c 10000000 		.4byte	.LFE3-.LFB3
 2392 0030 00000000 		.4byte	.LFB4
 2393 0034 0C000000 		.4byte	.LFE4-.LFB4
 2394 0038 00000000 		.4byte	.LFB5
 2395 003c 02000000 		.4byte	.LFE5-.LFB5
 2396 0040 00000000 		.4byte	.LFB6
 2397 0044 28000000 		.4byte	.LFE6-.LFB6
 2398 0048 00000000 		.4byte	.LFB7
 2399 004c 2C000000 		.4byte	.LFE7-.LFB7
 2400 0050 00000000 		.4byte	.LFB8
 2401 0054 10000000 		.4byte	.LFE8-.LFB8
 2402 0058 00000000 		.4byte	.LFB9
 2403 005c 1C000000 		.4byte	.LFE9-.LFB9
 2404 0060 00000000 		.4byte	.LFB10
 2405 0064 18000000 		.4byte	.LFE10-.LFB10
 2406 0068 00000000 		.4byte	.LFB11
 2407 006c 10000000 		.4byte	.LFE11-.LFB11
 2408 0070 00000000 		.4byte	.LFB12
 2409 0074 10000000 		.4byte	.LFE12-.LFB12
 2410 0078 00000000 		.4byte	.LFB13
 2411 007c 1C000000 		.4byte	.LFE13-.LFB13
 2412 0080 00000000 		.4byte	.LFB14
 2413 0084 1C000000 		.4byte	.LFE14-.LFB14
 2414 0088 00000000 		.4byte	.LFB15
 2415 008c 5C000000 		.4byte	.LFE15-.LFB15
 2416 0090 00000000 		.4byte	.LFB16
 2417 0094 40000000 		.4byte	.LFE16-.LFB16
 2418 0098 00000000 		.4byte	.LFB17
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 59


 2419 009c 48000000 		.4byte	.LFE17-.LFB17
 2420 00a0 00000000 		.4byte	0
 2421 00a4 00000000 		.4byte	0
 2422              		.section	.debug_ranges,"",%progbits
 2423              	.Ldebug_ranges0:
 2424 0000 00000000 		.4byte	.LFB1
 2425 0004 08010000 		.4byte	.LFE1
 2426 0008 00000000 		.4byte	.LFB2
 2427 000c 24000000 		.4byte	.LFE2
 2428 0010 00000000 		.4byte	.LFB0
 2429 0014 20000000 		.4byte	.LFE0
 2430 0018 00000000 		.4byte	.LFB3
 2431 001c 10000000 		.4byte	.LFE3
 2432 0020 00000000 		.4byte	.LFB4
 2433 0024 0C000000 		.4byte	.LFE4
 2434 0028 00000000 		.4byte	.LFB5
 2435 002c 02000000 		.4byte	.LFE5
 2436 0030 00000000 		.4byte	.LFB6
 2437 0034 28000000 		.4byte	.LFE6
 2438 0038 00000000 		.4byte	.LFB7
 2439 003c 2C000000 		.4byte	.LFE7
 2440 0040 00000000 		.4byte	.LFB8
 2441 0044 10000000 		.4byte	.LFE8
 2442 0048 00000000 		.4byte	.LFB9
 2443 004c 1C000000 		.4byte	.LFE9
 2444 0050 00000000 		.4byte	.LFB10
 2445 0054 18000000 		.4byte	.LFE10
 2446 0058 00000000 		.4byte	.LFB11
 2447 005c 10000000 		.4byte	.LFE11
 2448 0060 00000000 		.4byte	.LFB12
 2449 0064 10000000 		.4byte	.LFE12
 2450 0068 00000000 		.4byte	.LFB13
 2451 006c 1C000000 		.4byte	.LFE13
 2452 0070 00000000 		.4byte	.LFB14
 2453 0074 1C000000 		.4byte	.LFE14
 2454 0078 00000000 		.4byte	.LFB15
 2455 007c 5C000000 		.4byte	.LFE15
 2456 0080 00000000 		.4byte	.LFB16
 2457 0084 40000000 		.4byte	.LFE16
 2458 0088 00000000 		.4byte	.LFB17
 2459 008c 48000000 		.4byte	.LFE17
 2460 0090 00000000 		.4byte	0
 2461 0094 00000000 		.4byte	0
 2462              		.section	.debug_line,"",%progbits
 2463              	.Ldebug_line0:
 2464 0000 72020000 		.section	.debug_str,"MS",%progbits,1
 2464      02004B00 
 2464      00000201 
 2464      FB0E0D00 
 2464      01010101 
 2465              	.LASF10:
 2466 0000 75696E74 		.ascii	"uint16\000"
 2466      313600
 2467              	.LASF48:
 2468 0007 61646347 		.ascii	"adcGain\000"
 2468      61696E00 
 2469              	.LASF24:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 60


 2470 000f 636F756E 		.ascii	"counts\000"
 2470      747300
 2471              	.LASF53:
 2472 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2472      436F756E 
 2472      7473546F 
 2472      5F566F6C 
 2472      747300
 2473              	.LASF25:
 2474 0029 4144435F 		.ascii	"ADC_Init\000"
 2474      496E6974 
 2474      00
 2475              	.LASF63:
 2476 0032 443A5C63 		.ascii	"D:\\code\\cypress\\Tarocco\\Tarocco.cydsn\000"
 2476      6F64655C 
 2476      63797072 
 2476      6573735C 
 2476      5461726F 
 2477              	.LASF7:
 2478 0058 6C6F6E67 		.ascii	"long long unsigned int\000"
 2478      206C6F6E 
 2478      6720756E 
 2478      7369676E 
 2478      65642069 
 2479              	.LASF29:
 2480 006f 4144435F 		.ascii	"ADC_StartConvert\000"
 2480      53746172 
 2480      74436F6E 
 2480      76657274 
 2480      00
 2481              	.LASF61:
 2482 0080 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2482      4320342E 
 2482      392E3320 
 2482      32303135 
 2482      30333033 
 2483 00b3 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2483      20726576 
 2483      6973696F 
 2483      6E203232 
 2483      31323230 
 2484 00e6 67202D73 		.ascii	"g -std=gnu99 -ffunction-sections -ffat-lto-objects\000"
 2484      74643D67 
 2484      6E753939 
 2484      202D6666 
 2484      756E6374 
 2485              	.LASF6:
 2486 0119 6C6F6E67 		.ascii	"long long int\000"
 2486      206C6F6E 
 2486      6720696E 
 2486      7400
 2487              	.LASF0:
 2488 0127 7369676E 		.ascii	"signed char\000"
 2488      65642063 
 2488      68617200 
 2489              	.LASF31:
 2490 0133 73746174 		.ascii	"status\000"
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 61


 2490      757300
 2491              	.LASF13:
 2492 013a 696E7433 		.ascii	"int32\000"
 2492      3200
 2493              	.LASF27:
 2494 0140 4144435F 		.ascii	"ADC_Start\000"
 2494      53746172 
 2494      7400
 2495              	.LASF4:
 2496 014a 6C6F6E67 		.ascii	"long int\000"
 2496      20696E74 
 2496      00
 2497              	.LASF52:
 2498 0153 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2498      436F756E 
 2498      7473546F 
 2498      5F75566F 
 2498      6C747300 
 2499              	.LASF58:
 2500 0167 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2500      636F756E 
 2500      74735065 
 2500      72313056 
 2500      6F6C7400 
 2501              	.LASF9:
 2502 017b 75696E74 		.ascii	"uint8\000"
 2502      3800
 2503              	.LASF60:
 2504 0181 43794465 		.ascii	"CyDelayUs\000"
 2504      6C617955 
 2504      7300
 2505              	.LASF16:
 2506 018b 646F7562 		.ascii	"double\000"
 2506      6C6500
 2507              	.LASF11:
 2508 0192 75696E74 		.ascii	"uint32\000"
 2508      333200
 2509              	.LASF38:
 2510 0199 6D61736B 		.ascii	"mask\000"
 2510      00
 2511              	.LASF56:
 2512 019e 4144435F 		.ascii	"ADC_initVar\000"
 2512      696E6974 
 2512      56617200 
 2513              	.LASF34:
 2514 01aa 7265744D 		.ascii	"retMode\000"
 2514      6F646500 
 2515              	.LASF43:
 2516 01b2 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2516      5365744C 
 2516      696D6974 
 2516      4D61736B 
 2516      00
 2517              	.LASF8:
 2518 01c3 756E7369 		.ascii	"unsigned int\000"
 2518      676E6564 
 2518      20696E74 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 62


 2518      00
 2519              	.LASF64:
 2520 01d0 75566F6C 		.ascii	"uVolts\000"
 2520      747300
 2521              	.LASF5:
 2522 01d7 6C6F6E67 		.ascii	"long unsigned int\000"
 2522      20756E73 
 2522      69676E65 
 2522      6420696E 
 2522      7400
 2523              	.LASF44:
 2524 01e9 4144435F 		.ascii	"ADC_SetSatMask\000"
 2524      53657453 
 2524      61744D61 
 2524      736B00
 2525              	.LASF54:
 2526 01f8 766F6C74 		.ascii	"volts\000"
 2526      7300
 2527              	.LASF23:
 2528 01fe 746D7052 		.ascii	"tmpRegVal\000"
 2528      65675661 
 2528      6C00
 2529              	.LASF3:
 2530 0208 73686F72 		.ascii	"short unsigned int\000"
 2530      7420756E 
 2530      7369676E 
 2530      65642069 
 2530      6E7400
 2531              	.LASF65:
 2532 021b 4379496E 		.ascii	"CyIntSetVector\000"
 2532      74536574 
 2532      56656374 
 2532      6F7200
 2533              	.LASF30:
 2534 022a 4144435F 		.ascii	"ADC_StopConvert\000"
 2534      53746F70 
 2534      436F6E76 
 2534      65727400 
 2535              	.LASF51:
 2536 023a 6D566F6C 		.ascii	"mVolts\000"
 2536      747300
 2537              	.LASF19:
 2538 0241 72656733 		.ascii	"reg32\000"
 2538      3200
 2539              	.LASF14:
 2540 0247 666C6F61 		.ascii	"float32\000"
 2540      74333200 
 2541              	.LASF21:
 2542 024f 73697A65 		.ascii	"sizetype\000"
 2542      74797065 
 2542      00
 2543              	.LASF40:
 2544 0258 6C6F774C 		.ascii	"lowLimit\000"
 2544      696D6974 
 2544      00
 2545              	.LASF41:
 2546 0261 4144435F 		.ascii	"ADC_SetHighLimit\000"
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 63


 2546      53657448 
 2546      6967684C 
 2546      696D6974 
 2546      00
 2547              	.LASF32:
 2548 0272 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2548      4973456E 
 2548      64436F6E 
 2548      76657273 
 2548      696F6E00 
 2549              	.LASF17:
 2550 0286 696E7436 		.ascii	"int64\000"
 2550      3400
 2551              	.LASF59:
 2552 028c 4379496E 		.ascii	"CyIntSetPriority\000"
 2552      74536574 
 2552      5072696F 
 2552      72697479 
 2552      00
 2553              	.LASF37:
 2554 029d 4144435F 		.ascii	"ADC_SetChanMask\000"
 2554      53657443 
 2554      68616E4D 
 2554      61736B00 
 2555              	.LASF62:
 2556 02ad 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC.c\000"
 2556      72617465 
 2556      645F536F 
 2556      75726365 
 2556      5C50536F 
 2557              	.LASF47:
 2558 02ca 4144435F 		.ascii	"ADC_SetGain\000"
 2558      53657447 
 2558      61696E00 
 2559              	.LASF15:
 2560 02d6 666C6F61 		.ascii	"float\000"
 2560      7400
 2561              	.LASF42:
 2562 02dc 68696768 		.ascii	"highLimit\000"
 2562      4C696D69 
 2562      7400
 2563              	.LASF49:
 2564 02e6 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2564      436F756E 
 2564      7473546F 
 2564      5F6D566F 
 2564      6C747300 
 2565              	.LASF39:
 2566 02fa 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2566      5365744C 
 2566      6F774C69 
 2566      6D697400 
 2567              	.LASF66:
 2568 030a 43794861 		.ascii	"CyHalt\000"
 2568      6C7400
 2569              	.LASF1:
 2570 0311 756E7369 		.ascii	"unsigned char\000"
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 64


 2570      676E6564 
 2570      20636861 
 2570      7200
 2571              	.LASF57:
 2572 031f 4144435F 		.ascii	"ADC_offset\000"
 2572      6F666673 
 2572      657400
 2573              	.LASF2:
 2574 032a 73686F72 		.ascii	"short int\000"
 2574      7420696E 
 2574      7400
 2575              	.LASF28:
 2576 0334 4144435F 		.ascii	"ADC_Stop\000"
 2576      53746F70 
 2576      00
 2577              	.LASF22:
 2578 033d 63684E75 		.ascii	"chNum\000"
 2578      6D00
 2579              	.LASF35:
 2580 0343 6368616E 		.ascii	"chan\000"
 2580      00
 2581              	.LASF18:
 2582 0348 63686172 		.ascii	"char\000"
 2582      00
 2583              	.LASF20:
 2584 034d 63796973 		.ascii	"cyisraddress\000"
 2584      72616464 
 2584      72657373 
 2584      00
 2585              	.LASF55:
 2586 035a 4144435F 		.ascii	"ADC_channelsConfig\000"
 2586      6368616E 
 2586      6E656C73 
 2586      436F6E66 
 2586      696700
 2587              	.LASF46:
 2588 036d 6F666673 		.ascii	"offset\000"
 2588      657400
 2589              	.LASF50:
 2590 0374 61646343 		.ascii	"adcCounts\000"
 2590      6F756E74 
 2590      7300
 2591              	.LASF26:
 2592 037e 4144435F 		.ascii	"ADC_Enable\000"
 2592      456E6162 
 2592      6C6500
 2593              	.LASF12:
 2594 0389 696E7431 		.ascii	"int16\000"
 2594      3600
 2595              	.LASF45:
 2596 038f 4144435F 		.ascii	"ADC_SetOffset\000"
 2596      5365744F 
 2596      66667365 
 2596      7400
 2597              	.LASF36:
 2598 039d 72657375 		.ascii	"result\000"
 2598      6C7400
ARM GAS  C:\Users\g\AppData\Local\Temp\ccc53fmt.s 			page 65


 2599              	.LASF33:
 2600 03a4 4144435F 		.ascii	"ADC_GetResult16\000"
 2600      47657452 
 2600      6573756C 
 2600      74313600 
 2601              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
