ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.PWM_1_Enable,"ax",%progbits
  18              		.align	2
  19              		.global	PWM_1_Enable
  20              		.code	16
  21              		.thumb_func
  22              		.type	PWM_1_Enable, %function
  23              	PWM_1_Enable:
  24              	.LFB1:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\PWM_1.c"
   1:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM_1.c **** * File Name: PWM_1.c
   3:.\Generated_Source\PSoC4/PWM_1.c **** * Version 2.10
   4:.\Generated_Source\PSoC4/PWM_1.c **** *
   5:.\Generated_Source\PSoC4/PWM_1.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM_1.c **** *  This file provides the source code to the API for the PWM_1
   7:.\Generated_Source\PSoC4/PWM_1.c **** *  component
   8:.\Generated_Source\PSoC4/PWM_1.c **** *
   9:.\Generated_Source\PSoC4/PWM_1.c **** * Note:
  10:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  11:.\Generated_Source\PSoC4/PWM_1.c **** *
  12:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/PWM_1.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/PWM_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/PWM_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/PWM_1.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/PWM_1.c **** 
  19:.\Generated_Source\PSoC4/PWM_1.c **** #include "PWM_1.h"
  20:.\Generated_Source\PSoC4/PWM_1.c **** 
  21:.\Generated_Source\PSoC4/PWM_1.c **** uint8 PWM_1_initVar = 0u;
  22:.\Generated_Source\PSoC4/PWM_1.c **** 
  23:.\Generated_Source\PSoC4/PWM_1.c **** 
  24:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Init
  26:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
  27:.\Generated_Source\PSoC4/PWM_1.c **** *
  28:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
  29:.\Generated_Source\PSoC4/PWM_1.c **** *  Initialize/Restore default PWM_1 configuration.
  30:.\Generated_Source\PSoC4/PWM_1.c **** *
  31:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
  32:.\Generated_Source\PSoC4/PWM_1.c **** *  None
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 2


  33:.\Generated_Source\PSoC4/PWM_1.c **** *
  34:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
  35:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  36:.\Generated_Source\PSoC4/PWM_1.c **** *
  37:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
  38:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Init(void)
  39:.\Generated_Source\PSoC4/PWM_1.c **** {
  40:.\Generated_Source\PSoC4/PWM_1.c **** 
  41:.\Generated_Source\PSoC4/PWM_1.c ****     /* Set values from customizer to CTRL */
  42:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1__QUAD == PWM_1_CONFIG)
  43:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL_REG = PWM_1_CTRL_QUAD_BASE_CONFIG;
  44:.\Generated_Source\PSoC4/PWM_1.c ****         
  45:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to CTRL1 */
  46:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_TRIG_CONTROL1_REG  = PWM_1_QUAD_SIGNALS_MODES;
  47:.\Generated_Source\PSoC4/PWM_1.c **** 
  48:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to INTR */
  49:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_QUAD_INTERRUPT_MASK);
  50:.\Generated_Source\PSoC4/PWM_1.c ****         
  51:.\Generated_Source\PSoC4/PWM_1.c ****          /* Set other values */
  52:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_SetCounterMode(PWM_1_COUNT_DOWN);
  53:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WritePeriod(PWM_1_QUAD_PERIOD_INIT_VALUE);
  54:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WriteCounter(PWM_1_QUAD_PERIOD_INIT_VALUE);
  55:.\Generated_Source\PSoC4/PWM_1.c ****     #endif  /* (PWM_1__QUAD == PWM_1_CONFIG) */
  56:.\Generated_Source\PSoC4/PWM_1.c **** 
  57:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1__TIMER == PWM_1_CONFIG)
  58:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL_REG = PWM_1_CTRL_TIMER_BASE_CONFIG;
  59:.\Generated_Source\PSoC4/PWM_1.c ****         
  60:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to CTRL1 */
  61:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_TRIG_CONTROL1_REG  = PWM_1_TIMER_SIGNALS_MODES;
  62:.\Generated_Source\PSoC4/PWM_1.c ****     
  63:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to INTR */
  64:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_TC_INTERRUPT_MASK);
  65:.\Generated_Source\PSoC4/PWM_1.c ****         
  66:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set other values from customizer */
  67:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WritePeriod(PWM_1_TC_PERIOD_VALUE );
  68:.\Generated_Source\PSoC4/PWM_1.c **** 
  69:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1__COMPARE == PWM_1_TC_COMP_CAP_MODE)
  70:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompare(PWM_1_TC_COMPARE_VALUE);
  71:.\Generated_Source\PSoC4/PWM_1.c **** 
  72:.\Generated_Source\PSoC4/PWM_1.c ****             #if (1u == PWM_1_TC_COMPARE_SWAP)
  73:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_SetCompareSwap(1u);
  74:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_WriteCompareBuf(PWM_1_TC_COMPARE_BUF_VALUE);
  75:.\Generated_Source\PSoC4/PWM_1.c ****             #endif  /* (1u == PWM_1_TC_COMPARE_SWAP) */
  76:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (PWM_1__COMPARE == PWM_1_TC_COMP_CAP_MODE) */
  77:.\Generated_Source\PSoC4/PWM_1.c **** 
  78:.\Generated_Source\PSoC4/PWM_1.c ****         /* Initialize counter value */
  79:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_CY_TCPWM_V2 && PWM_1_TIMER_UPDOWN_CNT_USED && !PWM_1_CY_TCPWM_4000)
  80:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCounter(1u);
  81:.\Generated_Source\PSoC4/PWM_1.c ****         #elif(PWM_1__COUNT_DOWN == PWM_1_TC_COUNTER_MODE)
  82:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCounter(PWM_1_TC_PERIOD_VALUE);
  83:.\Generated_Source\PSoC4/PWM_1.c ****         #else
  84:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCounter(0u);
  85:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_CY_TCPWM_V2 && PWM_1_TIMER_UPDOWN_CNT_USED && !PWM_1_CY_TCPWM_4000) */
  86:.\Generated_Source\PSoC4/PWM_1.c ****     #endif  /* (PWM_1__TIMER == PWM_1_CONFIG) */
  87:.\Generated_Source\PSoC4/PWM_1.c **** 
  88:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1__PWM_SEL == PWM_1_CONFIG)
  89:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL_REG = PWM_1_CTRL_PWM_BASE_CONFIG;
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 3


  90:.\Generated_Source\PSoC4/PWM_1.c **** 
  91:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1__PWM_PR == PWM_1_PWM_MODE)
  92:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL_REG |= PWM_1_CTRL_PWM_RUN_MODE;
  93:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCounter(PWM_1_PWM_PR_INIT_VALUE);
  94:.\Generated_Source\PSoC4/PWM_1.c ****         #else
  95:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL_REG |= PWM_1_CTRL_PWM_ALIGN | PWM_1_CTRL_PWM_KILL_EVENT;
  96:.\Generated_Source\PSoC4/PWM_1.c ****             
  97:.\Generated_Source\PSoC4/PWM_1.c ****             /* Initialize counter value */
  98:.\Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1_CY_TCPWM_V2 && PWM_1_PWM_UPDOWN_CNT_USED && !PWM_1_CY_TCPWM_4000)
  99:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_WriteCounter(1u);
 100:.\Generated_Source\PSoC4/PWM_1.c ****             #elif (PWM_1__RIGHT == PWM_1_PWM_ALIGN)
 101:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_WriteCounter(PWM_1_PWM_PERIOD_VALUE);
 102:.\Generated_Source\PSoC4/PWM_1.c ****             #else 
 103:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_WriteCounter(0u);
 104:.\Generated_Source\PSoC4/PWM_1.c ****             #endif  /* (PWM_1_CY_TCPWM_V2 && PWM_1_PWM_UPDOWN_CNT_USED && !PWM_1_CY_TCPWM_4000) */
 105:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (PWM_1__PWM_PR == PWM_1_PWM_MODE) */
 106:.\Generated_Source\PSoC4/PWM_1.c **** 
 107:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1__PWM_DT == PWM_1_PWM_MODE)
 108:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL_REG |= PWM_1_CTRL_PWM_DEAD_TIME_CYCLE;
 109:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (PWM_1__PWM_DT == PWM_1_PWM_MODE) */
 110:.\Generated_Source\PSoC4/PWM_1.c **** 
 111:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1__PWM == PWM_1_PWM_MODE)
 112:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL_REG |= PWM_1_CTRL_PWM_PRESCALER;
 113:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (PWM_1__PWM == PWM_1_PWM_MODE) */
 114:.\Generated_Source\PSoC4/PWM_1.c **** 
 115:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to CTRL1 */
 116:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_TRIG_CONTROL1_REG  = PWM_1_PWM_SIGNALS_MODES;
 117:.\Generated_Source\PSoC4/PWM_1.c ****     
 118:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to INTR */
 119:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_PWM_INTERRUPT_MASK);
 120:.\Generated_Source\PSoC4/PWM_1.c **** 
 121:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to CTRL2 */
 122:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1__PWM_PR == PWM_1_PWM_MODE)
 123:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_TRIG_CONTROL2_REG =
 124:.\Generated_Source\PSoC4/PWM_1.c ****                     (PWM_1_CC_MATCH_NO_CHANGE    |
 125:.\Generated_Source\PSoC4/PWM_1.c ****                     PWM_1_OVERLOW_NO_CHANGE      |
 126:.\Generated_Source\PSoC4/PWM_1.c ****                     PWM_1_UNDERFLOW_NO_CHANGE);
 127:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 128:.\Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1__LEFT == PWM_1_PWM_ALIGN)
 129:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_TRIG_CONTROL2_REG = PWM_1_PWM_MODE_LEFT;
 130:.\Generated_Source\PSoC4/PWM_1.c ****             #endif  /* ( PWM_1_PWM_LEFT == PWM_1_PWM_ALIGN) */
 131:.\Generated_Source\PSoC4/PWM_1.c **** 
 132:.\Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1__RIGHT == PWM_1_PWM_ALIGN)
 133:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_TRIG_CONTROL2_REG = PWM_1_PWM_MODE_RIGHT;
 134:.\Generated_Source\PSoC4/PWM_1.c ****             #endif  /* ( PWM_1_PWM_RIGHT == PWM_1_PWM_ALIGN) */
 135:.\Generated_Source\PSoC4/PWM_1.c **** 
 136:.\Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1__CENTER == PWM_1_PWM_ALIGN)
 137:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_TRIG_CONTROL2_REG = PWM_1_PWM_MODE_CENTER;
 138:.\Generated_Source\PSoC4/PWM_1.c ****             #endif  /* ( PWM_1_PWM_CENTER == PWM_1_PWM_ALIGN) */
 139:.\Generated_Source\PSoC4/PWM_1.c **** 
 140:.\Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1__ASYMMETRIC == PWM_1_PWM_ALIGN)
 141:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_TRIG_CONTROL2_REG = PWM_1_PWM_MODE_ASYM;
 142:.\Generated_Source\PSoC4/PWM_1.c ****             #endif  /* (PWM_1__ASYMMETRIC == PWM_1_PWM_ALIGN) */
 143:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (PWM_1__PWM_PR == PWM_1_PWM_MODE) */
 144:.\Generated_Source\PSoC4/PWM_1.c **** 
 145:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set other values from customizer */
 146:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WritePeriod(PWM_1_PWM_PERIOD_VALUE );
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 4


 147:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WriteCompare(PWM_1_PWM_COMPARE_VALUE);
 148:.\Generated_Source\PSoC4/PWM_1.c **** 
 149:.\Generated_Source\PSoC4/PWM_1.c ****         #if (1u == PWM_1_PWM_COMPARE_SWAP)
 150:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_SetCompareSwap(1u);
 151:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompareBuf(PWM_1_PWM_COMPARE_BUF_VALUE);
 152:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (1u == PWM_1_PWM_COMPARE_SWAP) */
 153:.\Generated_Source\PSoC4/PWM_1.c **** 
 154:.\Generated_Source\PSoC4/PWM_1.c ****         #if (1u == PWM_1_PWM_PERIOD_SWAP)
 155:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_SetPeriodSwap(1u);
 156:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WritePeriodBuf(PWM_1_PWM_PERIOD_BUF_VALUE);
 157:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (1u == PWM_1_PWM_PERIOD_SWAP) */
 158:.\Generated_Source\PSoC4/PWM_1.c ****     #endif  /* (PWM_1__PWM_SEL == PWM_1_CONFIG) */
 159:.\Generated_Source\PSoC4/PWM_1.c ****     
 160:.\Generated_Source\PSoC4/PWM_1.c **** }
 161:.\Generated_Source\PSoC4/PWM_1.c **** 
 162:.\Generated_Source\PSoC4/PWM_1.c **** 
 163:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Enable
 165:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 166:.\Generated_Source\PSoC4/PWM_1.c **** *
 167:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 168:.\Generated_Source\PSoC4/PWM_1.c **** *  Enables the PWM_1.
 169:.\Generated_Source\PSoC4/PWM_1.c **** *
 170:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 171:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 172:.\Generated_Source\PSoC4/PWM_1.c **** *
 173:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 174:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 175:.\Generated_Source\PSoC4/PWM_1.c **** *
 176:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 177:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Enable(void)
 178:.\Generated_Source\PSoC4/PWM_1.c **** {
  26              		.loc 1 178 0
  27              		.cfi_startproc
  28 0000 08B5     		push	{r3, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 3, -8
  31              		.cfi_offset 14, -4
 179:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 180:.\Generated_Source\PSoC4/PWM_1.c **** 
 181:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
  32              		.loc 1 181 0
  33 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  34              	.LVL0:
 182:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_BLOCK_CONTROL_REG |= PWM_1_MASK;
  35              		.loc 1 182 0
  36 0006 044A     		ldr	r2, .L2
  37 0008 1168     		ldr	r1, [r2]
  38 000a 0123     		mov	r3, #1
  39 000c 0B43     		orr	r3, r1
  40 000e 1360     		str	r3, [r2]
 183:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
  41              		.loc 1 183 0
  42 0010 FFF7FEFF 		bl	CyExitCriticalSection
  43              	.LVL1:
 184:.\Generated_Source\PSoC4/PWM_1.c **** 
 185:.\Generated_Source\PSoC4/PWM_1.c ****     /* Start Timer or PWM if start input is absent */
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 5


 186:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1__PWM_SEL == PWM_1_CONFIG)
 187:.\Generated_Source\PSoC4/PWM_1.c ****         #if (0u == PWM_1_PWM_START_SIGNAL_PRESENT)
 188:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_TriggerCommand(PWM_1_MASK, PWM_1_CMD_START);
 189:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (0u == PWM_1_PWM_START_SIGNAL_PRESENT) */
 190:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1__PWM_SEL == PWM_1_CONFIG) */
 191:.\Generated_Source\PSoC4/PWM_1.c **** 
 192:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1__TIMER == PWM_1_CONFIG)
 193:.\Generated_Source\PSoC4/PWM_1.c ****         #if (0u == PWM_1_TC_START_SIGNAL_PRESENT)
 194:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_TriggerCommand(PWM_1_MASK, PWM_1_CMD_START);
 195:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (0u == PWM_1_TC_START_SIGNAL_PRESENT) */
 196:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1__TIMER == PWM_1_CONFIG) */
 197:.\Generated_Source\PSoC4/PWM_1.c ****     
 198:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1__QUAD == PWM_1_CONFIG)
 199:.\Generated_Source\PSoC4/PWM_1.c ****         #if (0u != PWM_1_QUAD_AUTO_START)
 200:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_TriggerCommand(PWM_1_MASK, PWM_1_CMD_RELOAD);
 201:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (0u != PWM_1_QUAD_AUTO_START) */
 202:.\Generated_Source\PSoC4/PWM_1.c ****     #endif  /* (PWM_1__QUAD == PWM_1_CONFIG) */
 203:.\Generated_Source\PSoC4/PWM_1.c **** }
  44              		.loc 1 203 0
  45              		@ sp needed
  46 0014 08BD     		pop	{r3, pc}
  47              	.L3:
  48 0016 C046     		.align	2
  49              	.L2:
  50 0018 00000540 		.word	1074069504
  51              		.cfi_endproc
  52              	.LFE1:
  53              		.size	PWM_1_Enable, .-PWM_1_Enable
  54              		.section	.text.PWM_1_Stop,"ax",%progbits
  55              		.align	2
  56              		.global	PWM_1_Stop
  57              		.code	16
  58              		.thumb_func
  59              		.type	PWM_1_Stop, %function
  60              	PWM_1_Stop:
  61              	.LFB3:
 204:.\Generated_Source\PSoC4/PWM_1.c **** 
 205:.\Generated_Source\PSoC4/PWM_1.c **** 
 206:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 207:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Start
 208:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 209:.\Generated_Source\PSoC4/PWM_1.c **** *
 210:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 211:.\Generated_Source\PSoC4/PWM_1.c **** *  Initializes the PWM_1 with default customizer
 212:.\Generated_Source\PSoC4/PWM_1.c **** *  values when called the first time and enables the PWM_1.
 213:.\Generated_Source\PSoC4/PWM_1.c **** *  For subsequent calls the configuration is left unchanged and the component is
 214:.\Generated_Source\PSoC4/PWM_1.c **** *  just enabled.
 215:.\Generated_Source\PSoC4/PWM_1.c **** *
 216:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 217:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 218:.\Generated_Source\PSoC4/PWM_1.c **** *
 219:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 220:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 221:.\Generated_Source\PSoC4/PWM_1.c **** *
 222:.\Generated_Source\PSoC4/PWM_1.c **** * Global variables:
 223:.\Generated_Source\PSoC4/PWM_1.c **** *  PWM_1_initVar: global variable is used to indicate initial
 224:.\Generated_Source\PSoC4/PWM_1.c **** *  configuration of this component.  The variable is initialized to zero and set
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 6


 225:.\Generated_Source\PSoC4/PWM_1.c **** *  to 1 the first time PWM_1_Start() is called. This allows
 226:.\Generated_Source\PSoC4/PWM_1.c **** *  enabling/disabling a component without re-initialization in all subsequent
 227:.\Generated_Source\PSoC4/PWM_1.c **** *  calls to the PWM_1_Start() routine.
 228:.\Generated_Source\PSoC4/PWM_1.c **** *
 229:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 230:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Start(void)
 231:.\Generated_Source\PSoC4/PWM_1.c **** {
 232:.\Generated_Source\PSoC4/PWM_1.c ****     if (0u == PWM_1_initVar)
 233:.\Generated_Source\PSoC4/PWM_1.c ****     {
 234:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_Init();
 235:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_initVar = 1u;
 236:.\Generated_Source\PSoC4/PWM_1.c ****     }
 237:.\Generated_Source\PSoC4/PWM_1.c **** 
 238:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_Enable();
 239:.\Generated_Source\PSoC4/PWM_1.c **** }
 240:.\Generated_Source\PSoC4/PWM_1.c **** 
 241:.\Generated_Source\PSoC4/PWM_1.c **** 
 242:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 243:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Stop
 244:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 245:.\Generated_Source\PSoC4/PWM_1.c **** *
 246:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 247:.\Generated_Source\PSoC4/PWM_1.c **** *  Disables the PWM_1.
 248:.\Generated_Source\PSoC4/PWM_1.c **** *
 249:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 250:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 251:.\Generated_Source\PSoC4/PWM_1.c **** *
 252:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 253:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 254:.\Generated_Source\PSoC4/PWM_1.c **** *
 255:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 256:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Stop(void)
 257:.\Generated_Source\PSoC4/PWM_1.c **** {
  62              		.loc 1 257 0
  63              		.cfi_startproc
  64 0000 08B5     		push	{r3, lr}
  65              		.cfi_def_cfa_offset 8
  66              		.cfi_offset 3, -8
  67              		.cfi_offset 14, -4
 258:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 259:.\Generated_Source\PSoC4/PWM_1.c **** 
 260:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
  68              		.loc 1 260 0
  69 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  70              	.LVL2:
 261:.\Generated_Source\PSoC4/PWM_1.c **** 
 262:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_BLOCK_CONTROL_REG &= (uint32)~PWM_1_MASK;
  71              		.loc 1 262 0
  72 0006 044A     		ldr	r2, .L5
  73 0008 1368     		ldr	r3, [r2]
  74 000a 0121     		mov	r1, #1
  75 000c 8B43     		bic	r3, r1
  76 000e 1360     		str	r3, [r2]
 263:.\Generated_Source\PSoC4/PWM_1.c **** 
 264:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
  77              		.loc 1 264 0
  78 0010 FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 7


  79              	.LVL3:
 265:.\Generated_Source\PSoC4/PWM_1.c **** }
  80              		.loc 1 265 0
  81              		@ sp needed
  82 0014 08BD     		pop	{r3, pc}
  83              	.L6:
  84 0016 C046     		.align	2
  85              	.L5:
  86 0018 00000540 		.word	1074069504
  87              		.cfi_endproc
  88              	.LFE3:
  89              		.size	PWM_1_Stop, .-PWM_1_Stop
  90              		.section	.text.PWM_1_SetMode,"ax",%progbits
  91              		.align	2
  92              		.global	PWM_1_SetMode
  93              		.code	16
  94              		.thumb_func
  95              		.type	PWM_1_SetMode, %function
  96              	PWM_1_SetMode:
  97              	.LFB4:
 266:.\Generated_Source\PSoC4/PWM_1.c **** 
 267:.\Generated_Source\PSoC4/PWM_1.c **** 
 268:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 269:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetMode
 270:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 271:.\Generated_Source\PSoC4/PWM_1.c **** *
 272:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 273:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the operation mode of the PWM_1. This function is used when
 274:.\Generated_Source\PSoC4/PWM_1.c **** *  configured as a generic PWM_1 and the actual mode of operation is
 275:.\Generated_Source\PSoC4/PWM_1.c **** *  set at runtime. The mode must be set while the component is disabled.
 276:.\Generated_Source\PSoC4/PWM_1.c **** *
 277:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 278:.\Generated_Source\PSoC4/PWM_1.c **** *  mode: Mode for the PWM_1 to operate in
 279:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 280:.\Generated_Source\PSoC4/PWM_1.c **** *   - PWM_1_MODE_TIMER_COMPARE - Timer / Counter with
 281:.\Generated_Source\PSoC4/PWM_1.c **** *                                                 compare capability
 282:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_TIMER_CAPTURE - Timer / Counter with
 283:.\Generated_Source\PSoC4/PWM_1.c **** *                                                 capture capability
 284:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_QUAD - Quadrature decoder
 285:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_PWM - PWM
 286:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_PWM_DT - PWM with dead time
 287:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_PWM_PR - PWM with pseudo random capability
 288:.\Generated_Source\PSoC4/PWM_1.c **** *
 289:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 290:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 291:.\Generated_Source\PSoC4/PWM_1.c **** *
 292:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 293:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetMode(uint32 mode)
 294:.\Generated_Source\PSoC4/PWM_1.c **** {
  98              		.loc 1 294 0
  99              		.cfi_startproc
 100              	.LVL4:
 101 0000 10B5     		push	{r4, lr}
 102              		.cfi_def_cfa_offset 8
 103              		.cfi_offset 4, -8
 104              		.cfi_offset 14, -4
 105 0002 041C     		mov	r4, r0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 8


 295:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 296:.\Generated_Source\PSoC4/PWM_1.c **** 
 297:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 106              		.loc 1 297 0
 107 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 108              	.LVL5:
 298:.\Generated_Source\PSoC4/PWM_1.c **** 
 299:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_MODE_MASK;
 109              		.loc 1 299 0
 110 0008 054B     		ldr	r3, .L8
 111 000a 1968     		ldr	r1, [r3]
 112 000c 054A     		ldr	r2, .L8+4
 113 000e 0A40     		and	r2, r1
 114 0010 1A60     		str	r2, [r3]
 300:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= mode;
 115              		.loc 1 300 0
 116 0012 1A68     		ldr	r2, [r3]
 117 0014 1443     		orr	r4, r2
 118              	.LVL6:
 119 0016 1C60     		str	r4, [r3]
 301:.\Generated_Source\PSoC4/PWM_1.c **** 
 302:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 120              		.loc 1 302 0
 121 0018 FFF7FEFF 		bl	CyExitCriticalSection
 122              	.LVL7:
 303:.\Generated_Source\PSoC4/PWM_1.c **** }
 123              		.loc 1 303 0
 124              		@ sp needed
 125 001c 10BD     		pop	{r4, pc}
 126              	.L9:
 127 001e C046     		.align	2
 128              	.L8:
 129 0020 00010540 		.word	1074069760
 130 0024 FFFFFFF8 		.word	-117440513
 131              		.cfi_endproc
 132              	.LFE4:
 133              		.size	PWM_1_SetMode, .-PWM_1_SetMode
 134              		.section	.text.PWM_1_SetQDMode,"ax",%progbits
 135              		.align	2
 136              		.global	PWM_1_SetQDMode
 137              		.code	16
 138              		.thumb_func
 139              		.type	PWM_1_SetQDMode, %function
 140              	PWM_1_SetQDMode:
 141              	.LFB5:
 304:.\Generated_Source\PSoC4/PWM_1.c **** 
 305:.\Generated_Source\PSoC4/PWM_1.c **** 
 306:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 307:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetQDMode
 308:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 309:.\Generated_Source\PSoC4/PWM_1.c **** *
 310:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 311:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 312:.\Generated_Source\PSoC4/PWM_1.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 313:.\Generated_Source\PSoC4/PWM_1.c **** *
 314:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 315:.\Generated_Source\PSoC4/PWM_1.c **** *  qdMode: Quadrature Decoder mode
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 9


 316:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 317:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_X1 - Counts on phi 1 rising
 318:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_X2 - Counts on both edges of phi1 (2x faster)
 319:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_X4 - Counts on both edges of phi1 and phi2
 320:.\Generated_Source\PSoC4/PWM_1.c **** *                                        (4x faster)
 321:.\Generated_Source\PSoC4/PWM_1.c **** *
 322:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 323:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 324:.\Generated_Source\PSoC4/PWM_1.c **** *
 325:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 326:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetQDMode(uint32 qdMode)
 327:.\Generated_Source\PSoC4/PWM_1.c **** {
 142              		.loc 1 327 0
 143              		.cfi_startproc
 144              	.LVL8:
 145 0000 10B5     		push	{r4, lr}
 146              		.cfi_def_cfa_offset 8
 147              		.cfi_offset 4, -8
 148              		.cfi_offset 14, -4
 149 0002 041C     		mov	r4, r0
 328:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 329:.\Generated_Source\PSoC4/PWM_1.c **** 
 330:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 150              		.loc 1 330 0
 151 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 152              	.LVL9:
 331:.\Generated_Source\PSoC4/PWM_1.c **** 
 332:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_QUAD_MODE_MASK;
 153              		.loc 1 332 0
 154 0008 054B     		ldr	r3, .L11
 155 000a 1968     		ldr	r1, [r3]
 156 000c 054A     		ldr	r2, .L11+4
 157 000e 0A40     		and	r2, r1
 158 0010 1A60     		str	r2, [r3]
 333:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= qdMode;
 159              		.loc 1 333 0
 160 0012 1A68     		ldr	r2, [r3]
 161 0014 1443     		orr	r4, r2
 162              	.LVL10:
 163 0016 1C60     		str	r4, [r3]
 334:.\Generated_Source\PSoC4/PWM_1.c **** 
 335:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 164              		.loc 1 335 0
 165 0018 FFF7FEFF 		bl	CyExitCriticalSection
 166              	.LVL11:
 336:.\Generated_Source\PSoC4/PWM_1.c **** }
 167              		.loc 1 336 0
 168              		@ sp needed
 169 001c 10BD     		pop	{r4, pc}
 170              	.L12:
 171 001e C046     		.align	2
 172              	.L11:
 173 0020 00010540 		.word	1074069760
 174 0024 FFFF8FFF 		.word	-7340033
 175              		.cfi_endproc
 176              	.LFE5:
 177              		.size	PWM_1_SetQDMode, .-PWM_1_SetQDMode
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 10


 178              		.section	.text.PWM_1_SetPrescaler,"ax",%progbits
 179              		.align	2
 180              		.global	PWM_1_SetPrescaler
 181              		.code	16
 182              		.thumb_func
 183              		.type	PWM_1_SetPrescaler, %function
 184              	PWM_1_SetPrescaler:
 185              	.LFB6:
 337:.\Generated_Source\PSoC4/PWM_1.c **** 
 338:.\Generated_Source\PSoC4/PWM_1.c **** 
 339:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 340:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPrescaler
 341:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 342:.\Generated_Source\PSoC4/PWM_1.c **** *
 343:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 344:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 345:.\Generated_Source\PSoC4/PWM_1.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 346:.\Generated_Source\PSoC4/PWM_1.c **** *
 347:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 348:.\Generated_Source\PSoC4/PWM_1.c **** *  prescaler: Prescaler divider value
 349:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 350:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 351:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY2    - Divide by 2
 352:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY4    - Divide by 4
 353:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY8    - Divide by 8
 354:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY16   - Divide by 16
 355:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY32   - Divide by 32
 356:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY64   - Divide by 64
 357:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY128  - Divide by 128
 358:.\Generated_Source\PSoC4/PWM_1.c **** *
 359:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 360:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 361:.\Generated_Source\PSoC4/PWM_1.c **** *
 362:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 363:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPrescaler(uint32 prescaler)
 364:.\Generated_Source\PSoC4/PWM_1.c **** {
 186              		.loc 1 364 0
 187              		.cfi_startproc
 188              	.LVL12:
 189 0000 10B5     		push	{r4, lr}
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 4, -8
 192              		.cfi_offset 14, -4
 193 0002 041C     		mov	r4, r0
 365:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 366:.\Generated_Source\PSoC4/PWM_1.c **** 
 367:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 194              		.loc 1 367 0
 195 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 196              	.LVL13:
 368:.\Generated_Source\PSoC4/PWM_1.c **** 
 369:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_PRESCALER_MASK;
 197              		.loc 1 369 0
 198 0008 054B     		ldr	r3, .L14
 199 000a 1968     		ldr	r1, [r3]
 200 000c 054A     		ldr	r2, .L14+4
 201 000e 0A40     		and	r2, r1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 11


 202 0010 1A60     		str	r2, [r3]
 370:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= prescaler;
 203              		.loc 1 370 0
 204 0012 1A68     		ldr	r2, [r3]
 205 0014 1443     		orr	r4, r2
 206              	.LVL14:
 207 0016 1C60     		str	r4, [r3]
 371:.\Generated_Source\PSoC4/PWM_1.c **** 
 372:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 208              		.loc 1 372 0
 209 0018 FFF7FEFF 		bl	CyExitCriticalSection
 210              	.LVL15:
 373:.\Generated_Source\PSoC4/PWM_1.c **** }
 211              		.loc 1 373 0
 212              		@ sp needed
 213 001c 10BD     		pop	{r4, pc}
 214              	.L15:
 215 001e C046     		.align	2
 216              	.L14:
 217 0020 00010540 		.word	1074069760
 218 0024 FF00FFFF 		.word	-65281
 219              		.cfi_endproc
 220              	.LFE6:
 221              		.size	PWM_1_SetPrescaler, .-PWM_1_SetPrescaler
 222              		.section	.text.PWM_1_SetOneShot,"ax",%progbits
 223              		.align	2
 224              		.global	PWM_1_SetOneShot
 225              		.code	16
 226              		.thumb_func
 227              		.type	PWM_1_SetOneShot, %function
 228              	PWM_1_SetOneShot:
 229              	.LFB7:
 374:.\Generated_Source\PSoC4/PWM_1.c **** 
 375:.\Generated_Source\PSoC4/PWM_1.c **** 
 376:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 377:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetOneShot
 378:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 379:.\Generated_Source\PSoC4/PWM_1.c **** *
 380:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 381:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the register that controls whether the PWM_1 runs
 382:.\Generated_Source\PSoC4/PWM_1.c **** *  continuously or stops when terminal count is reached.  By default the
 383:.\Generated_Source\PSoC4/PWM_1.c **** *  PWM_1 operates in the continuous mode.
 384:.\Generated_Source\PSoC4/PWM_1.c **** *
 385:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 386:.\Generated_Source\PSoC4/PWM_1.c **** *  oneShotEnable
 387:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 388:.\Generated_Source\PSoC4/PWM_1.c **** *     - 0 - Continuous
 389:.\Generated_Source\PSoC4/PWM_1.c **** *     - 1 - Enable One Shot
 390:.\Generated_Source\PSoC4/PWM_1.c **** *
 391:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 392:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 393:.\Generated_Source\PSoC4/PWM_1.c **** *
 394:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 395:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetOneShot(uint32 oneShotEnable)
 396:.\Generated_Source\PSoC4/PWM_1.c **** {
 230              		.loc 1 396 0
 231              		.cfi_startproc
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 12


 232              	.LVL16:
 233 0000 10B5     		push	{r4, lr}
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 4, -8
 236              		.cfi_offset 14, -4
 237 0002 041C     		mov	r4, r0
 397:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 398:.\Generated_Source\PSoC4/PWM_1.c **** 
 399:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 238              		.loc 1 399 0
 239 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 240              	.LVL17:
 400:.\Generated_Source\PSoC4/PWM_1.c **** 
 401:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_ONESHOT_MASK;
 241              		.loc 1 401 0
 242 0008 064B     		ldr	r3, .L17
 243 000a 1968     		ldr	r1, [r3]
 244 000c 064A     		ldr	r2, .L17+4
 245 000e 0A40     		and	r2, r1
 246 0010 1A60     		str	r2, [r3]
 402:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_1_1BIT_MASK) <<
 247              		.loc 1 402 0
 248 0012 1A68     		ldr	r2, [r3]
 249 0014 0121     		mov	r1, #1
 250 0016 0C40     		and	r4, r1
 251              	.LVL18:
 252 0018 A404     		lsl	r4, r4, #18
 253 001a 1443     		orr	r4, r2
 254 001c 1C60     		str	r4, [r3]
 403:.\Generated_Source\PSoC4/PWM_1.c ****                                                                PWM_1_ONESHOT_SHIFT));
 404:.\Generated_Source\PSoC4/PWM_1.c **** 
 405:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 255              		.loc 1 405 0
 256 001e FFF7FEFF 		bl	CyExitCriticalSection
 257              	.LVL19:
 406:.\Generated_Source\PSoC4/PWM_1.c **** }
 258              		.loc 1 406 0
 259              		@ sp needed
 260 0022 10BD     		pop	{r4, pc}
 261              	.L18:
 262              		.align	2
 263              	.L17:
 264 0024 00010540 		.word	1074069760
 265 0028 FFFFFBFF 		.word	-262145
 266              		.cfi_endproc
 267              	.LFE7:
 268              		.size	PWM_1_SetOneShot, .-PWM_1_SetOneShot
 269              		.section	.text.PWM_1_SetPWMMode,"ax",%progbits
 270              		.align	2
 271              		.global	PWM_1_SetPWMMode
 272              		.code	16
 273              		.thumb_func
 274              		.type	PWM_1_SetPWMMode, %function
 275              	PWM_1_SetPWMMode:
 276              	.LFB8:
 407:.\Generated_Source\PSoC4/PWM_1.c **** 
 408:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 13


 409:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 410:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPWMMode
 411:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 412:.\Generated_Source\PSoC4/PWM_1.c **** *
 413:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 414:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the control register that determines what mode of operation the PWM
 415:.\Generated_Source\PSoC4/PWM_1.c **** *  output lines are driven in.  There is a setting for what to do on a
 416:.\Generated_Source\PSoC4/PWM_1.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 417:.\Generated_Source\PSoC4/PWM_1.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 418:.\Generated_Source\PSoC4/PWM_1.c **** *  the mode.
 419:.\Generated_Source\PSoC4/PWM_1.c **** *
 420:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 421:.\Generated_Source\PSoC4/PWM_1.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 422:.\Generated_Source\PSoC4/PWM_1.c **** *  for each of the three or use one of the preconfigured PWM settings.
 423:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 424:.\Generated_Source\PSoC4/PWM_1.c **** *     - CC_MATCH_SET        - Set on comparison match
 425:.\Generated_Source\PSoC4/PWM_1.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 426:.\Generated_Source\PSoC4/PWM_1.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 427:.\Generated_Source\PSoC4/PWM_1.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 428:.\Generated_Source\PSoC4/PWM_1.c **** *     - OVERLOW_SET         - Set on overflow
 429:.\Generated_Source\PSoC4/PWM_1.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 430:.\Generated_Source\PSoC4/PWM_1.c **** *     - OVERLOW_INVERT      - Invert on overflow
 431:.\Generated_Source\PSoC4/PWM_1.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 432:.\Generated_Source\PSoC4/PWM_1.c **** *     - UNDERFLOW_SET       - Set on underflow
 433:.\Generated_Source\PSoC4/PWM_1.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 434:.\Generated_Source\PSoC4/PWM_1.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 435:.\Generated_Source\PSoC4/PWM_1.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 436:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 437:.\Generated_Source\PSoC4/PWM_1.c **** *                             with up counting mode
 438:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 439:.\Generated_Source\PSoC4/PWM_1.c **** *                             with down counting mode
 440:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 441:.\Generated_Source\PSoC4/PWM_1.c **** *                             combined with up/down 0 mode
 442:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 443:.\Generated_Source\PSoC4/PWM_1.c **** *                             with up/down 1 mode
 444:.\Generated_Source\PSoC4/PWM_1.c **** *
 445:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 446:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 447:.\Generated_Source\PSoC4/PWM_1.c **** *
 448:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 449:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPWMMode(uint32 modeMask)
 450:.\Generated_Source\PSoC4/PWM_1.c **** {
 277              		.loc 1 450 0
 278              		.cfi_startproc
 279              	.LVL20:
 451:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL2_REG = (modeMask & PWM_1_6BIT_MASK);
 280              		.loc 1 451 0
 281 0000 3F23     		mov	r3, #63
 282 0002 1840     		and	r0, r3
 283              	.LVL21:
 284 0004 014B     		ldr	r3, .L20
 285 0006 1860     		str	r0, [r3]
 452:.\Generated_Source\PSoC4/PWM_1.c **** }
 286              		.loc 1 452 0
 287              		@ sp needed
 288 0008 7047     		bx	lr
 289              	.L21:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 14


 290 000a C046     		.align	2
 291              	.L20:
 292 000c 28010540 		.word	1074069800
 293              		.cfi_endproc
 294              	.LFE8:
 295              		.size	PWM_1_SetPWMMode, .-PWM_1_SetPWMMode
 296              		.section	.text.PWM_1_SetPWMSyncKill,"ax",%progbits
 297              		.align	2
 298              		.global	PWM_1_SetPWMSyncKill
 299              		.code	16
 300              		.thumb_func
 301              		.type	PWM_1_SetPWMSyncKill, %function
 302              	PWM_1_SetPWMSyncKill:
 303              	.LFB9:
 453:.\Generated_Source\PSoC4/PWM_1.c **** 
 454:.\Generated_Source\PSoC4/PWM_1.c **** 
 455:.\Generated_Source\PSoC4/PWM_1.c **** 
 456:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 457:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPWMSyncKill
 458:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 459:.\Generated_Source\PSoC4/PWM_1.c **** *
 460:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 461:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 462:.\Generated_Source\PSoC4/PWM_1.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 463:.\Generated_Source\PSoC4/PWM_1.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 464:.\Generated_Source\PSoC4/PWM_1.c **** *  and PWM with dead time modes.
 465:.\Generated_Source\PSoC4/PWM_1.c **** *
 466:.\Generated_Source\PSoC4/PWM_1.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 467:.\Generated_Source\PSoC4/PWM_1.c **** *  signals until the next terminal count.
 468:.\Generated_Source\PSoC4/PWM_1.c **** *
 469:.\Generated_Source\PSoC4/PWM_1.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 470:.\Generated_Source\PSoC4/PWM_1.c **** *  signals when the kill signal is present.  This mode should only be used
 471:.\Generated_Source\PSoC4/PWM_1.c **** *  when the kill signal (stop input) is configured in the pass through mode
 472:.\Generated_Source\PSoC4/PWM_1.c **** *  (Level sensitive signal).
 473:.\Generated_Source\PSoC4/PWM_1.c **** 
 474:.\Generated_Source\PSoC4/PWM_1.c **** *
 475:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 476:.\Generated_Source\PSoC4/PWM_1.c **** *  syncKillEnable
 477:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 478:.\Generated_Source\PSoC4/PWM_1.c **** *     - 0 - Asynchronous
 479:.\Generated_Source\PSoC4/PWM_1.c **** *     - 1 - Synchronous
 480:.\Generated_Source\PSoC4/PWM_1.c **** *
 481:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 482:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 483:.\Generated_Source\PSoC4/PWM_1.c **** *
 484:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 485:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPWMSyncKill(uint32 syncKillEnable)
 486:.\Generated_Source\PSoC4/PWM_1.c **** {
 304              		.loc 1 486 0
 305              		.cfi_startproc
 306              	.LVL22:
 307 0000 10B5     		push	{r4, lr}
 308              		.cfi_def_cfa_offset 8
 309              		.cfi_offset 4, -8
 310              		.cfi_offset 14, -4
 311 0002 041C     		mov	r4, r0
 487:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 15


 488:.\Generated_Source\PSoC4/PWM_1.c **** 
 489:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 312              		.loc 1 489 0
 313 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 314              	.LVL23:
 490:.\Generated_Source\PSoC4/PWM_1.c **** 
 491:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_PWM_SYNC_KILL_MASK;
 315              		.loc 1 491 0
 316 0008 064B     		ldr	r3, .L23
 317 000a 1A68     		ldr	r2, [r3]
 318 000c 0421     		mov	r1, #4
 319 000e 8A43     		bic	r2, r1
 320 0010 1A60     		str	r2, [r3]
 492:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_1_1BIT_MASK)  <<
 321              		.loc 1 492 0
 322 0012 1A68     		ldr	r2, [r3]
 323 0014 0339     		sub	r1, r1, #3
 324 0016 0C40     		and	r4, r1
 325              	.LVL24:
 326 0018 A400     		lsl	r4, r4, #2
 327 001a 1443     		orr	r4, r2
 328 001c 1C60     		str	r4, [r3]
 493:.\Generated_Source\PSoC4/PWM_1.c ****                                                PWM_1_PWM_SYNC_KILL_SHIFT));
 494:.\Generated_Source\PSoC4/PWM_1.c **** 
 495:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 329              		.loc 1 495 0
 330 001e FFF7FEFF 		bl	CyExitCriticalSection
 331              	.LVL25:
 496:.\Generated_Source\PSoC4/PWM_1.c **** }
 332              		.loc 1 496 0
 333              		@ sp needed
 334 0022 10BD     		pop	{r4, pc}
 335              	.L24:
 336              		.align	2
 337              	.L23:
 338 0024 00010540 		.word	1074069760
 339              		.cfi_endproc
 340              	.LFE9:
 341              		.size	PWM_1_SetPWMSyncKill, .-PWM_1_SetPWMSyncKill
 342              		.section	.text.PWM_1_SetPWMStopOnKill,"ax",%progbits
 343              		.align	2
 344              		.global	PWM_1_SetPWMStopOnKill
 345              		.code	16
 346              		.thumb_func
 347              		.type	PWM_1_SetPWMStopOnKill, %function
 348              	PWM_1_SetPWMStopOnKill:
 349              	.LFB10:
 497:.\Generated_Source\PSoC4/PWM_1.c **** 
 498:.\Generated_Source\PSoC4/PWM_1.c **** 
 499:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 500:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPWMStopOnKill
 501:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 502:.\Generated_Source\PSoC4/PWM_1.c **** *
 503:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 504:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 505:.\Generated_Source\PSoC4/PWM_1.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 506:.\Generated_Source\PSoC4/PWM_1.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 16


 507:.\Generated_Source\PSoC4/PWM_1.c **** *
 508:.\Generated_Source\PSoC4/PWM_1.c **** *
 509:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 510:.\Generated_Source\PSoC4/PWM_1.c **** *  stopOnKillEnable
 511:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 512:.\Generated_Source\PSoC4/PWM_1.c **** *     - 0 - Don't stop
 513:.\Generated_Source\PSoC4/PWM_1.c **** *     - 1 - Stop
 514:.\Generated_Source\PSoC4/PWM_1.c **** *
 515:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 516:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 517:.\Generated_Source\PSoC4/PWM_1.c **** *
 518:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 519:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPWMStopOnKill(uint32 stopOnKillEnable)
 520:.\Generated_Source\PSoC4/PWM_1.c **** {
 350              		.loc 1 520 0
 351              		.cfi_startproc
 352              	.LVL26:
 353 0000 10B5     		push	{r4, lr}
 354              		.cfi_def_cfa_offset 8
 355              		.cfi_offset 4, -8
 356              		.cfi_offset 14, -4
 357 0002 041C     		mov	r4, r0
 521:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 522:.\Generated_Source\PSoC4/PWM_1.c **** 
 523:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 358              		.loc 1 523 0
 359 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 360              	.LVL27:
 524:.\Generated_Source\PSoC4/PWM_1.c **** 
 525:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_PWM_STOP_KILL_MASK;
 361              		.loc 1 525 0
 362 0008 064B     		ldr	r3, .L26
 363 000a 1A68     		ldr	r2, [r3]
 364 000c 0821     		mov	r1, #8
 365 000e 8A43     		bic	r2, r1
 366 0010 1A60     		str	r2, [r3]
 526:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_1_1BIT_MASK)  <<
 367              		.loc 1 526 0
 368 0012 1A68     		ldr	r2, [r3]
 369 0014 0739     		sub	r1, r1, #7
 370 0016 0C40     		and	r4, r1
 371              	.LVL28:
 372 0018 E400     		lsl	r4, r4, #3
 373 001a 1443     		orr	r4, r2
 374 001c 1C60     		str	r4, [r3]
 527:.\Generated_Source\PSoC4/PWM_1.c ****                                                          PWM_1_PWM_STOP_KILL_SHIFT));
 528:.\Generated_Source\PSoC4/PWM_1.c **** 
 529:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 375              		.loc 1 529 0
 376 001e FFF7FEFF 		bl	CyExitCriticalSection
 377              	.LVL29:
 530:.\Generated_Source\PSoC4/PWM_1.c **** }
 378              		.loc 1 530 0
 379              		@ sp needed
 380 0022 10BD     		pop	{r4, pc}
 381              	.L27:
 382              		.align	2
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 17


 383              	.L26:
 384 0024 00010540 		.word	1074069760
 385              		.cfi_endproc
 386              	.LFE10:
 387              		.size	PWM_1_SetPWMStopOnKill, .-PWM_1_SetPWMStopOnKill
 388              		.section	.text.PWM_1_SetPWMDeadTime,"ax",%progbits
 389              		.align	2
 390              		.global	PWM_1_SetPWMDeadTime
 391              		.code	16
 392              		.thumb_func
 393              		.type	PWM_1_SetPWMDeadTime, %function
 394              	PWM_1_SetPWMDeadTime:
 395              	.LFB11:
 531:.\Generated_Source\PSoC4/PWM_1.c **** 
 532:.\Generated_Source\PSoC4/PWM_1.c **** 
 533:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 534:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPWMDeadTime
 535:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 536:.\Generated_Source\PSoC4/PWM_1.c **** *
 537:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 538:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the dead time control value.  This value delays the rising edge of
 539:.\Generated_Source\PSoC4/PWM_1.c **** *  both the line and line_n signals the designated number of cycles resulting
 540:.\Generated_Source\PSoC4/PWM_1.c **** *  in both signals being inactive for that many cycles.  This functionality is
 541:.\Generated_Source\PSoC4/PWM_1.c **** *  only applicable to the PWM in the dead time mode.
 542:.\Generated_Source\PSoC4/PWM_1.c **** 
 543:.\Generated_Source\PSoC4/PWM_1.c **** *
 544:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 545:.\Generated_Source\PSoC4/PWM_1.c **** *  Dead time to insert
 546:.\Generated_Source\PSoC4/PWM_1.c **** *   Values: 0 to 255
 547:.\Generated_Source\PSoC4/PWM_1.c **** *
 548:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 549:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 550:.\Generated_Source\PSoC4/PWM_1.c **** *
 551:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 552:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPWMDeadTime(uint32 deadTime)
 553:.\Generated_Source\PSoC4/PWM_1.c **** {
 396              		.loc 1 553 0
 397              		.cfi_startproc
 398              	.LVL30:
 399 0000 10B5     		push	{r4, lr}
 400              		.cfi_def_cfa_offset 8
 401              		.cfi_offset 4, -8
 402              		.cfi_offset 14, -4
 403 0002 041C     		mov	r4, r0
 554:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 555:.\Generated_Source\PSoC4/PWM_1.c **** 
 556:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 404              		.loc 1 556 0
 405 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 406              	.LVL31:
 557:.\Generated_Source\PSoC4/PWM_1.c **** 
 558:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_PRESCALER_MASK;
 407              		.loc 1 558 0
 408 0008 064B     		ldr	r3, .L29
 409 000a 1968     		ldr	r1, [r3]
 410 000c 064A     		ldr	r2, .L29+4
 411 000e 0A40     		and	r2, r1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 18


 412 0010 1A60     		str	r2, [r3]
 559:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= ((uint32)((deadTime & PWM_1_8BIT_MASK) <<
 413              		.loc 1 559 0
 414 0012 1A68     		ldr	r2, [r3]
 415 0014 2406     		lsl	r4, r4, #24
 416              	.LVL32:
 417 0016 240C     		lsr	r4, r4, #16
 418 0018 1443     		orr	r4, r2
 419 001a 1C60     		str	r4, [r3]
 560:.\Generated_Source\PSoC4/PWM_1.c ****                                                           PWM_1_PRESCALER_SHIFT));
 561:.\Generated_Source\PSoC4/PWM_1.c **** 
 562:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 420              		.loc 1 562 0
 421 001c FFF7FEFF 		bl	CyExitCriticalSection
 422              	.LVL33:
 563:.\Generated_Source\PSoC4/PWM_1.c **** }
 423              		.loc 1 563 0
 424              		@ sp needed
 425 0020 10BD     		pop	{r4, pc}
 426              	.L30:
 427 0022 C046     		.align	2
 428              	.L29:
 429 0024 00010540 		.word	1074069760
 430 0028 FF00FFFF 		.word	-65281
 431              		.cfi_endproc
 432              	.LFE11:
 433              		.size	PWM_1_SetPWMDeadTime, .-PWM_1_SetPWMDeadTime
 434              		.section	.text.PWM_1_SetPWMInvert,"ax",%progbits
 435              		.align	2
 436              		.global	PWM_1_SetPWMInvert
 437              		.code	16
 438              		.thumb_func
 439              		.type	PWM_1_SetPWMInvert, %function
 440              	PWM_1_SetPWMInvert:
 441              	.LFB12:
 564:.\Generated_Source\PSoC4/PWM_1.c **** 
 565:.\Generated_Source\PSoC4/PWM_1.c **** 
 566:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 567:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPWMInvert
 568:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 569:.\Generated_Source\PSoC4/PWM_1.c **** *
 570:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 571:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the bits that control whether the line and line_n outputs are
 572:.\Generated_Source\PSoC4/PWM_1.c **** *  inverted from their normal output values.  This functionality is only
 573:.\Generated_Source\PSoC4/PWM_1.c **** *  applicable to the three PWM modes.
 574:.\Generated_Source\PSoC4/PWM_1.c **** *
 575:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 576:.\Generated_Source\PSoC4/PWM_1.c **** *  mask: Mask of outputs to invert.
 577:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 578:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_INVERT_LINE   - Inverts the line output
 579:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_INVERT_LINE_N - Inverts the line_n output
 580:.\Generated_Source\PSoC4/PWM_1.c **** *
 581:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 582:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 583:.\Generated_Source\PSoC4/PWM_1.c **** *
 584:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 585:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPWMInvert(uint32 mask)
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 19


 586:.\Generated_Source\PSoC4/PWM_1.c **** {
 442              		.loc 1 586 0
 443              		.cfi_startproc
 444              	.LVL34:
 445 0000 10B5     		push	{r4, lr}
 446              		.cfi_def_cfa_offset 8
 447              		.cfi_offset 4, -8
 448              		.cfi_offset 14, -4
 449 0002 041C     		mov	r4, r0
 587:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 588:.\Generated_Source\PSoC4/PWM_1.c **** 
 589:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 450              		.loc 1 589 0
 451 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 452              	.LVL35:
 590:.\Generated_Source\PSoC4/PWM_1.c **** 
 591:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_INV_OUT_MASK;
 453              		.loc 1 591 0
 454 0008 054B     		ldr	r3, .L32
 455 000a 1968     		ldr	r1, [r3]
 456 000c 054A     		ldr	r2, .L32+4
 457 000e 0A40     		and	r2, r1
 458 0010 1A60     		str	r2, [r3]
 592:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= mask;
 459              		.loc 1 592 0
 460 0012 1A68     		ldr	r2, [r3]
 461 0014 1443     		orr	r4, r2
 462              	.LVL36:
 463 0016 1C60     		str	r4, [r3]
 593:.\Generated_Source\PSoC4/PWM_1.c **** 
 594:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 464              		.loc 1 594 0
 465 0018 FFF7FEFF 		bl	CyExitCriticalSection
 466              	.LVL37:
 595:.\Generated_Source\PSoC4/PWM_1.c **** }
 467              		.loc 1 595 0
 468              		@ sp needed
 469 001c 10BD     		pop	{r4, pc}
 470              	.L33:
 471 001e C046     		.align	2
 472              	.L32:
 473 0020 00010540 		.word	1074069760
 474 0024 FFFFCFFF 		.word	-3145729
 475              		.cfi_endproc
 476              	.LFE12:
 477              		.size	PWM_1_SetPWMInvert, .-PWM_1_SetPWMInvert
 478              		.section	.text.PWM_1_WriteCounter,"ax",%progbits
 479              		.align	2
 480              		.global	PWM_1_WriteCounter
 481              		.code	16
 482              		.thumb_func
 483              		.type	PWM_1_WriteCounter, %function
 484              	PWM_1_WriteCounter:
 485              	.LFB13:
 596:.\Generated_Source\PSoC4/PWM_1.c **** 
 597:.\Generated_Source\PSoC4/PWM_1.c **** 
 598:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 20


 599:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 600:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WriteCounter
 601:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 602:.\Generated_Source\PSoC4/PWM_1.c **** *
 603:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 604:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 605:.\Generated_Source\PSoC4/PWM_1.c **** *  setting the counter (not the period) to the value written. It is not
 606:.\Generated_Source\PSoC4/PWM_1.c **** *  advised to write to this field when the counter is running.
 607:.\Generated_Source\PSoC4/PWM_1.c **** *
 608:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 609:.\Generated_Source\PSoC4/PWM_1.c **** *  count: value to write
 610:.\Generated_Source\PSoC4/PWM_1.c **** *
 611:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 612:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 613:.\Generated_Source\PSoC4/PWM_1.c **** *
 614:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 615:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WriteCounter(uint32 count)
 616:.\Generated_Source\PSoC4/PWM_1.c **** {
 486              		.loc 1 616 0
 487              		.cfi_startproc
 488              	.LVL38:
 617:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_COUNTER_REG = (count & PWM_1_16BIT_MASK);
 489              		.loc 1 617 0
 490 0000 0004     		lsl	r0, r0, #16
 491              	.LVL39:
 492 0002 000C     		lsr	r0, r0, #16
 493 0004 014B     		ldr	r3, .L35
 494 0006 1860     		str	r0, [r3]
 618:.\Generated_Source\PSoC4/PWM_1.c **** }
 495              		.loc 1 618 0
 496              		@ sp needed
 497 0008 7047     		bx	lr
 498              	.L36:
 499 000a C046     		.align	2
 500              	.L35:
 501 000c 08010540 		.word	1074069768
 502              		.cfi_endproc
 503              	.LFE13:
 504              		.size	PWM_1_WriteCounter, .-PWM_1_WriteCounter
 505              		.section	.text.PWM_1_ReadCounter,"ax",%progbits
 506              		.align	2
 507              		.global	PWM_1_ReadCounter
 508              		.code	16
 509              		.thumb_func
 510              		.type	PWM_1_ReadCounter, %function
 511              	PWM_1_ReadCounter:
 512              	.LFB14:
 619:.\Generated_Source\PSoC4/PWM_1.c **** 
 620:.\Generated_Source\PSoC4/PWM_1.c **** 
 621:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 622:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadCounter
 623:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/PWM_1.c **** *
 625:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 626:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the current counter value.
 627:.\Generated_Source\PSoC4/PWM_1.c **** *
 628:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 21


 629:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 630:.\Generated_Source\PSoC4/PWM_1.c **** *
 631:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 632:.\Generated_Source\PSoC4/PWM_1.c **** *  Current counter value
 633:.\Generated_Source\PSoC4/PWM_1.c **** *
 634:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 635:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadCounter(void)
 636:.\Generated_Source\PSoC4/PWM_1.c **** {
 513              		.loc 1 636 0
 514              		.cfi_startproc
 637:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_COUNTER_REG & PWM_1_16BIT_MASK);
 515              		.loc 1 637 0
 516 0000 024B     		ldr	r3, .L38
 517 0002 1868     		ldr	r0, [r3]
 518 0004 0004     		lsl	r0, r0, #16
 519 0006 000C     		lsr	r0, r0, #16
 638:.\Generated_Source\PSoC4/PWM_1.c **** }
 520              		.loc 1 638 0
 521              		@ sp needed
 522 0008 7047     		bx	lr
 523              	.L39:
 524 000a C046     		.align	2
 525              	.L38:
 526 000c 08010540 		.word	1074069768
 527              		.cfi_endproc
 528              	.LFE14:
 529              		.size	PWM_1_ReadCounter, .-PWM_1_ReadCounter
 530              		.section	.text.PWM_1_SetCounterMode,"ax",%progbits
 531              		.align	2
 532              		.global	PWM_1_SetCounterMode
 533              		.code	16
 534              		.thumb_func
 535              		.type	PWM_1_SetCounterMode, %function
 536              	PWM_1_SetCounterMode:
 537              	.LFB15:
 639:.\Generated_Source\PSoC4/PWM_1.c **** 
 640:.\Generated_Source\PSoC4/PWM_1.c **** 
 641:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 642:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetCounterMode
 643:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 644:.\Generated_Source\PSoC4/PWM_1.c **** *
 645:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 646:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 647:.\Generated_Source\PSoC4/PWM_1.c **** *  and the PWM with a pseudo random output.
 648:.\Generated_Source\PSoC4/PWM_1.c **** *
 649:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 650:.\Generated_Source\PSoC4/PWM_1.c **** *  counterMode: Enumerated counter type values
 651:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 652:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_COUNT_UP       - Counts up
 653:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_COUNT_DOWN     - Counts down
 654:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_COUNT_UPDOWN0  - Counts up and down. Terminal count
 655:.\Generated_Source\PSoC4/PWM_1.c **** *                                         generated when counter reaches 0
 656:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_COUNT_UPDOWN1  - Counts up and down. Terminal count
 657:.\Generated_Source\PSoC4/PWM_1.c **** *                                         generated both when counter reaches 0
 658:.\Generated_Source\PSoC4/PWM_1.c **** *                                         and period
 659:.\Generated_Source\PSoC4/PWM_1.c **** *
 660:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 22


 661:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 662:.\Generated_Source\PSoC4/PWM_1.c **** *
 663:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 664:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetCounterMode(uint32 counterMode)
 665:.\Generated_Source\PSoC4/PWM_1.c **** {
 538              		.loc 1 665 0
 539              		.cfi_startproc
 540              	.LVL40:
 541 0000 10B5     		push	{r4, lr}
 542              		.cfi_def_cfa_offset 8
 543              		.cfi_offset 4, -8
 544              		.cfi_offset 14, -4
 545 0002 041C     		mov	r4, r0
 666:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 667:.\Generated_Source\PSoC4/PWM_1.c **** 
 668:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 546              		.loc 1 668 0
 547 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 548              	.LVL41:
 669:.\Generated_Source\PSoC4/PWM_1.c **** 
 670:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_UPDOWN_MASK;
 549              		.loc 1 670 0
 550 0008 054B     		ldr	r3, .L41
 551 000a 1968     		ldr	r1, [r3]
 552 000c 054A     		ldr	r2, .L41+4
 553 000e 0A40     		and	r2, r1
 554 0010 1A60     		str	r2, [r3]
 671:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= counterMode;
 555              		.loc 1 671 0
 556 0012 1A68     		ldr	r2, [r3]
 557 0014 1443     		orr	r4, r2
 558              	.LVL42:
 559 0016 1C60     		str	r4, [r3]
 672:.\Generated_Source\PSoC4/PWM_1.c **** 
 673:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 560              		.loc 1 673 0
 561 0018 FFF7FEFF 		bl	CyExitCriticalSection
 562              	.LVL43:
 674:.\Generated_Source\PSoC4/PWM_1.c **** }
 563              		.loc 1 674 0
 564              		@ sp needed
 565 001c 10BD     		pop	{r4, pc}
 566              	.L42:
 567 001e C046     		.align	2
 568              	.L41:
 569 0020 00010540 		.word	1074069760
 570 0024 FFFFFCFF 		.word	-196609
 571              		.cfi_endproc
 572              	.LFE15:
 573              		.size	PWM_1_SetCounterMode, .-PWM_1_SetCounterMode
 574              		.section	.text.PWM_1_WritePeriod,"ax",%progbits
 575              		.align	2
 576              		.global	PWM_1_WritePeriod
 577              		.code	16
 578              		.thumb_func
 579              		.type	PWM_1_WritePeriod, %function
 580              	PWM_1_WritePeriod:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 23


 581              	.LFB16:
 675:.\Generated_Source\PSoC4/PWM_1.c **** 
 676:.\Generated_Source\PSoC4/PWM_1.c **** 
 677:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 678:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WritePeriod
 679:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 680:.\Generated_Source\PSoC4/PWM_1.c **** *
 681:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 682:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the 16 bit period register with the new period value.
 683:.\Generated_Source\PSoC4/PWM_1.c **** *  To cause the counter to count for N cycles this register should be written
 684:.\Generated_Source\PSoC4/PWM_1.c **** *  with N-1 (counts from 0 to period inclusive).
 685:.\Generated_Source\PSoC4/PWM_1.c **** *
 686:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 687:.\Generated_Source\PSoC4/PWM_1.c **** *  period: Period value
 688:.\Generated_Source\PSoC4/PWM_1.c **** *
 689:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 690:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 691:.\Generated_Source\PSoC4/PWM_1.c **** *
 692:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 693:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WritePeriod(uint32 period)
 694:.\Generated_Source\PSoC4/PWM_1.c **** {
 582              		.loc 1 694 0
 583              		.cfi_startproc
 584              	.LVL44:
 695:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_PERIOD_REG = (period & PWM_1_16BIT_MASK);
 585              		.loc 1 695 0
 586 0000 0004     		lsl	r0, r0, #16
 587              	.LVL45:
 588 0002 000C     		lsr	r0, r0, #16
 589 0004 014B     		ldr	r3, .L44
 590 0006 1860     		str	r0, [r3]
 696:.\Generated_Source\PSoC4/PWM_1.c **** }
 591              		.loc 1 696 0
 592              		@ sp needed
 593 0008 7047     		bx	lr
 594              	.L45:
 595 000a C046     		.align	2
 596              	.L44:
 597 000c 14010540 		.word	1074069780
 598              		.cfi_endproc
 599              	.LFE16:
 600              		.size	PWM_1_WritePeriod, .-PWM_1_WritePeriod
 601              		.section	.text.PWM_1_ReadPeriod,"ax",%progbits
 602              		.align	2
 603              		.global	PWM_1_ReadPeriod
 604              		.code	16
 605              		.thumb_func
 606              		.type	PWM_1_ReadPeriod, %function
 607              	PWM_1_ReadPeriod:
 608              	.LFB17:
 697:.\Generated_Source\PSoC4/PWM_1.c **** 
 698:.\Generated_Source\PSoC4/PWM_1.c **** 
 699:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 700:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadPeriod
 701:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 702:.\Generated_Source\PSoC4/PWM_1.c **** *
 703:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 24


 704:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the 16 bit period register.
 705:.\Generated_Source\PSoC4/PWM_1.c **** *
 706:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 707:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 708:.\Generated_Source\PSoC4/PWM_1.c **** *
 709:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 710:.\Generated_Source\PSoC4/PWM_1.c **** *  Period value
 711:.\Generated_Source\PSoC4/PWM_1.c **** *
 712:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 713:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadPeriod(void)
 714:.\Generated_Source\PSoC4/PWM_1.c **** {
 609              		.loc 1 714 0
 610              		.cfi_startproc
 715:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_PERIOD_REG & PWM_1_16BIT_MASK);
 611              		.loc 1 715 0
 612 0000 024B     		ldr	r3, .L47
 613 0002 1868     		ldr	r0, [r3]
 614 0004 0004     		lsl	r0, r0, #16
 615 0006 000C     		lsr	r0, r0, #16
 716:.\Generated_Source\PSoC4/PWM_1.c **** }
 616              		.loc 1 716 0
 617              		@ sp needed
 618 0008 7047     		bx	lr
 619              	.L48:
 620 000a C046     		.align	2
 621              	.L47:
 622 000c 14010540 		.word	1074069780
 623              		.cfi_endproc
 624              	.LFE17:
 625              		.size	PWM_1_ReadPeriod, .-PWM_1_ReadPeriod
 626              		.section	.text.PWM_1_SetCompareSwap,"ax",%progbits
 627              		.align	2
 628              		.global	PWM_1_SetCompareSwap
 629              		.code	16
 630              		.thumb_func
 631              		.type	PWM_1_SetCompareSwap, %function
 632              	PWM_1_SetCompareSwap:
 633              	.LFB18:
 717:.\Generated_Source\PSoC4/PWM_1.c **** 
 718:.\Generated_Source\PSoC4/PWM_1.c **** 
 719:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 720:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetCompareSwap
 721:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 722:.\Generated_Source\PSoC4/PWM_1.c **** *
 723:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 724:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the register that controls whether the compare registers are
 725:.\Generated_Source\PSoC4/PWM_1.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 726:.\Generated_Source\PSoC4/PWM_1.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 727:.\Generated_Source\PSoC4/PWM_1.c **** *  following a hardware switch event.
 728:.\Generated_Source\PSoC4/PWM_1.c **** *
 729:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 730:.\Generated_Source\PSoC4/PWM_1.c **** *  swapEnable
 731:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 732:.\Generated_Source\PSoC4/PWM_1.c **** *     - 0 - Disable swap
 733:.\Generated_Source\PSoC4/PWM_1.c **** *     - 1 - Enable swap
 734:.\Generated_Source\PSoC4/PWM_1.c **** *
 735:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 25


 736:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 737:.\Generated_Source\PSoC4/PWM_1.c **** *
 738:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 739:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetCompareSwap(uint32 swapEnable)
 740:.\Generated_Source\PSoC4/PWM_1.c **** {
 634              		.loc 1 740 0
 635              		.cfi_startproc
 636              	.LVL46:
 637 0000 10B5     		push	{r4, lr}
 638              		.cfi_def_cfa_offset 8
 639              		.cfi_offset 4, -8
 640              		.cfi_offset 14, -4
 641 0002 041C     		mov	r4, r0
 741:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 742:.\Generated_Source\PSoC4/PWM_1.c **** 
 743:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 642              		.loc 1 743 0
 643 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 644              	.LVL47:
 744:.\Generated_Source\PSoC4/PWM_1.c **** 
 745:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_RELOAD_CC_MASK;
 645              		.loc 1 745 0
 646 0008 054B     		ldr	r3, .L50
 647 000a 1A68     		ldr	r2, [r3]
 648 000c 0121     		mov	r1, #1
 649 000e 8A43     		bic	r2, r1
 650 0010 1A60     		str	r2, [r3]
 746:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= (swapEnable & PWM_1_1BIT_MASK);
 651              		.loc 1 746 0
 652 0012 1A68     		ldr	r2, [r3]
 653 0014 0C40     		and	r4, r1
 654              	.LVL48:
 655 0016 1443     		orr	r4, r2
 656 0018 1C60     		str	r4, [r3]
 747:.\Generated_Source\PSoC4/PWM_1.c **** 
 748:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 657              		.loc 1 748 0
 658 001a FFF7FEFF 		bl	CyExitCriticalSection
 659              	.LVL49:
 749:.\Generated_Source\PSoC4/PWM_1.c **** }
 660              		.loc 1 749 0
 661              		@ sp needed
 662 001e 10BD     		pop	{r4, pc}
 663              	.L51:
 664              		.align	2
 665              	.L50:
 666 0020 00010540 		.word	1074069760
 667              		.cfi_endproc
 668              	.LFE18:
 669              		.size	PWM_1_SetCompareSwap, .-PWM_1_SetCompareSwap
 670              		.section	.text.PWM_1_WritePeriodBuf,"ax",%progbits
 671              		.align	2
 672              		.global	PWM_1_WritePeriodBuf
 673              		.code	16
 674              		.thumb_func
 675              		.type	PWM_1_WritePeriodBuf, %function
 676              	PWM_1_WritePeriodBuf:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 26


 677              	.LFB19:
 750:.\Generated_Source\PSoC4/PWM_1.c **** 
 751:.\Generated_Source\PSoC4/PWM_1.c **** 
 752:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 753:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WritePeriodBuf
 754:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 755:.\Generated_Source\PSoC4/PWM_1.c **** *
 756:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 757:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the 16 bit period buf register with the new period value.
 758:.\Generated_Source\PSoC4/PWM_1.c **** *
 759:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 760:.\Generated_Source\PSoC4/PWM_1.c **** *  periodBuf: Period value
 761:.\Generated_Source\PSoC4/PWM_1.c **** *
 762:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 763:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 764:.\Generated_Source\PSoC4/PWM_1.c **** *
 765:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 766:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WritePeriodBuf(uint32 periodBuf)
 767:.\Generated_Source\PSoC4/PWM_1.c **** {
 678              		.loc 1 767 0
 679              		.cfi_startproc
 680              	.LVL50:
 768:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_PERIOD_BUF_REG = (periodBuf & PWM_1_16BIT_MASK);
 681              		.loc 1 768 0
 682 0000 0004     		lsl	r0, r0, #16
 683              	.LVL51:
 684 0002 000C     		lsr	r0, r0, #16
 685 0004 014B     		ldr	r3, .L53
 686 0006 1860     		str	r0, [r3]
 769:.\Generated_Source\PSoC4/PWM_1.c **** }
 687              		.loc 1 769 0
 688              		@ sp needed
 689 0008 7047     		bx	lr
 690              	.L54:
 691 000a C046     		.align	2
 692              	.L53:
 693 000c 18010540 		.word	1074069784
 694              		.cfi_endproc
 695              	.LFE19:
 696              		.size	PWM_1_WritePeriodBuf, .-PWM_1_WritePeriodBuf
 697              		.section	.text.PWM_1_ReadPeriodBuf,"ax",%progbits
 698              		.align	2
 699              		.global	PWM_1_ReadPeriodBuf
 700              		.code	16
 701              		.thumb_func
 702              		.type	PWM_1_ReadPeriodBuf, %function
 703              	PWM_1_ReadPeriodBuf:
 704              	.LFB20:
 770:.\Generated_Source\PSoC4/PWM_1.c **** 
 771:.\Generated_Source\PSoC4/PWM_1.c **** 
 772:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 773:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadPeriodBuf
 774:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 775:.\Generated_Source\PSoC4/PWM_1.c **** *
 776:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 777:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the 16 bit period buf register.
 778:.\Generated_Source\PSoC4/PWM_1.c **** *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 27


 779:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 780:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 781:.\Generated_Source\PSoC4/PWM_1.c **** *
 782:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 783:.\Generated_Source\PSoC4/PWM_1.c **** *  Period value
 784:.\Generated_Source\PSoC4/PWM_1.c **** *
 785:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 786:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadPeriodBuf(void)
 787:.\Generated_Source\PSoC4/PWM_1.c **** {
 705              		.loc 1 787 0
 706              		.cfi_startproc
 788:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_PERIOD_BUF_REG & PWM_1_16BIT_MASK);
 707              		.loc 1 788 0
 708 0000 024B     		ldr	r3, .L56
 709 0002 1868     		ldr	r0, [r3]
 710 0004 0004     		lsl	r0, r0, #16
 711 0006 000C     		lsr	r0, r0, #16
 789:.\Generated_Source\PSoC4/PWM_1.c **** }
 712              		.loc 1 789 0
 713              		@ sp needed
 714 0008 7047     		bx	lr
 715              	.L57:
 716 000a C046     		.align	2
 717              	.L56:
 718 000c 18010540 		.word	1074069784
 719              		.cfi_endproc
 720              	.LFE20:
 721              		.size	PWM_1_ReadPeriodBuf, .-PWM_1_ReadPeriodBuf
 722              		.section	.text.PWM_1_SetPeriodSwap,"ax",%progbits
 723              		.align	2
 724              		.global	PWM_1_SetPeriodSwap
 725              		.code	16
 726              		.thumb_func
 727              		.type	PWM_1_SetPeriodSwap, %function
 728              	PWM_1_SetPeriodSwap:
 729              	.LFB21:
 790:.\Generated_Source\PSoC4/PWM_1.c **** 
 791:.\Generated_Source\PSoC4/PWM_1.c **** 
 792:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 793:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPeriodSwap
 794:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 795:.\Generated_Source\PSoC4/PWM_1.c **** *
 796:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 797:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the register that controls whether the period registers are
 798:.\Generated_Source\PSoC4/PWM_1.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 799:.\Generated_Source\PSoC4/PWM_1.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 800:.\Generated_Source\PSoC4/PWM_1.c **** *  switch event.
 801:.\Generated_Source\PSoC4/PWM_1.c **** *
 802:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 803:.\Generated_Source\PSoC4/PWM_1.c **** *  swapEnable
 804:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 805:.\Generated_Source\PSoC4/PWM_1.c **** *     - 0 - Disable swap
 806:.\Generated_Source\PSoC4/PWM_1.c **** *     - 1 - Enable swap
 807:.\Generated_Source\PSoC4/PWM_1.c **** *
 808:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 809:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 810:.\Generated_Source\PSoC4/PWM_1.c **** *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 28


 811:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 812:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPeriodSwap(uint32 swapEnable)
 813:.\Generated_Source\PSoC4/PWM_1.c **** {
 730              		.loc 1 813 0
 731              		.cfi_startproc
 732              	.LVL52:
 733 0000 10B5     		push	{r4, lr}
 734              		.cfi_def_cfa_offset 8
 735              		.cfi_offset 4, -8
 736              		.cfi_offset 14, -4
 737 0002 041C     		mov	r4, r0
 814:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 815:.\Generated_Source\PSoC4/PWM_1.c **** 
 816:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 738              		.loc 1 816 0
 739 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 740              	.LVL53:
 817:.\Generated_Source\PSoC4/PWM_1.c **** 
 818:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_RELOAD_PERIOD_MASK;
 741              		.loc 1 818 0
 742 0008 064B     		ldr	r3, .L59
 743 000a 1A68     		ldr	r2, [r3]
 744 000c 0221     		mov	r1, #2
 745 000e 8A43     		bic	r2, r1
 746 0010 1A60     		str	r2, [r3]
 819:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= ((uint32)((swapEnable & PWM_1_1BIT_MASK) <<
 747              		.loc 1 819 0
 748 0012 1A68     		ldr	r2, [r3]
 749 0014 0139     		sub	r1, r1, #1
 750 0016 0C40     		and	r4, r1
 751              	.LVL54:
 752 0018 6400     		lsl	r4, r4, #1
 753 001a 1443     		orr	r4, r2
 754 001c 1C60     		str	r4, [r3]
 820:.\Generated_Source\PSoC4/PWM_1.c ****                                                             PWM_1_RELOAD_PERIOD_SHIFT));
 821:.\Generated_Source\PSoC4/PWM_1.c **** 
 822:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 755              		.loc 1 822 0
 756 001e FFF7FEFF 		bl	CyExitCriticalSection
 757              	.LVL55:
 823:.\Generated_Source\PSoC4/PWM_1.c **** }
 758              		.loc 1 823 0
 759              		@ sp needed
 760 0022 10BD     		pop	{r4, pc}
 761              	.L60:
 762              		.align	2
 763              	.L59:
 764 0024 00010540 		.word	1074069760
 765              		.cfi_endproc
 766              	.LFE21:
 767              		.size	PWM_1_SetPeriodSwap, .-PWM_1_SetPeriodSwap
 768              		.section	.text.PWM_1_WriteCompare,"ax",%progbits
 769              		.align	2
 770              		.global	PWM_1_WriteCompare
 771              		.code	16
 772              		.thumb_func
 773              		.type	PWM_1_WriteCompare, %function
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 29


 774              	PWM_1_WriteCompare:
 775              	.LFB22:
 824:.\Generated_Source\PSoC4/PWM_1.c **** 
 825:.\Generated_Source\PSoC4/PWM_1.c **** 
 826:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 827:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WriteCompare
 828:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 829:.\Generated_Source\PSoC4/PWM_1.c **** *
 830:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 831:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the 16 bit compare register with the new compare value. Not
 832:.\Generated_Source\PSoC4/PWM_1.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 833:.\Generated_Source\PSoC4/PWM_1.c **** *
 834:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 835:.\Generated_Source\PSoC4/PWM_1.c **** *  compare: Compare value
 836:.\Generated_Source\PSoC4/PWM_1.c **** *
 837:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 838:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 839:.\Generated_Source\PSoC4/PWM_1.c **** *
 840:.\Generated_Source\PSoC4/PWM_1.c **** * Note:
 841:.\Generated_Source\PSoC4/PWM_1.c **** *  It is not recommended to use the value equal to "0" or equal to 
 842:.\Generated_Source\PSoC4/PWM_1.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 843:.\Generated_Source\PSoC4/PWM_1.c **** *  PSoC 4100/PSoC 4200 devices.
 844:.\Generated_Source\PSoC4/PWM_1.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 845:.\Generated_Source\PSoC4/PWM_1.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 846:.\Generated_Source\PSoC4/PWM_1.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 847:.\Generated_Source\PSoC4/PWM_1.c **** *
 848:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 849:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WriteCompare(uint32 compare)
 850:.\Generated_Source\PSoC4/PWM_1.c **** {
 776              		.loc 1 850 0
 777              		.cfi_startproc
 778              	.LVL56:
 851:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 852:.\Generated_Source\PSoC4/PWM_1.c ****         uint32 currentMode;
 853:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 854:.\Generated_Source\PSoC4/PWM_1.c **** 
 855:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 856:.\Generated_Source\PSoC4/PWM_1.c ****         currentMode = ((PWM_1_CONTROL_REG & PWM_1_UPDOWN_MASK) >> PWM_1_UPDOWN_SHIFT);
 857:.\Generated_Source\PSoC4/PWM_1.c **** 
 858:.\Generated_Source\PSoC4/PWM_1.c ****         if (((uint32)PWM_1__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 859:.\Generated_Source\PSoC4/PWM_1.c ****         {
 860:.\Generated_Source\PSoC4/PWM_1.c ****             compare++;
 861:.\Generated_Source\PSoC4/PWM_1.c ****         }
 862:.\Generated_Source\PSoC4/PWM_1.c ****         else if (((uint32)PWM_1__COUNT_UP == currentMode) && (0u != compare))
 863:.\Generated_Source\PSoC4/PWM_1.c ****         {
 864:.\Generated_Source\PSoC4/PWM_1.c ****             compare--;
 865:.\Generated_Source\PSoC4/PWM_1.c ****         }
 866:.\Generated_Source\PSoC4/PWM_1.c ****         else
 867:.\Generated_Source\PSoC4/PWM_1.c ****         {
 868:.\Generated_Source\PSoC4/PWM_1.c ****         }
 869:.\Generated_Source\PSoC4/PWM_1.c ****         
 870:.\Generated_Source\PSoC4/PWM_1.c ****     
 871:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 872:.\Generated_Source\PSoC4/PWM_1.c ****     
 873:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_COMP_CAP_REG = (compare & PWM_1_16BIT_MASK);
 779              		.loc 1 873 0
 780 0000 0004     		lsl	r0, r0, #16
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 30


 781              	.LVL57:
 782 0002 000C     		lsr	r0, r0, #16
 783 0004 014B     		ldr	r3, .L62
 784 0006 1860     		str	r0, [r3]
 874:.\Generated_Source\PSoC4/PWM_1.c **** }
 785              		.loc 1 874 0
 786              		@ sp needed
 787 0008 7047     		bx	lr
 788              	.L63:
 789 000a C046     		.align	2
 790              	.L62:
 791 000c 0C010540 		.word	1074069772
 792              		.cfi_endproc
 793              	.LFE22:
 794              		.size	PWM_1_WriteCompare, .-PWM_1_WriteCompare
 795              		.section	.text.PWM_1_ReadCompare,"ax",%progbits
 796              		.align	2
 797              		.global	PWM_1_ReadCompare
 798              		.code	16
 799              		.thumb_func
 800              		.type	PWM_1_ReadCompare, %function
 801              	PWM_1_ReadCompare:
 802              	.LFB23:
 875:.\Generated_Source\PSoC4/PWM_1.c **** 
 876:.\Generated_Source\PSoC4/PWM_1.c **** 
 877:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 878:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadCompare
 879:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 880:.\Generated_Source\PSoC4/PWM_1.c **** *
 881:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 882:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 883:.\Generated_Source\PSoC4/PWM_1.c **** *  or in Quadrature Decoder modes.
 884:.\Generated_Source\PSoC4/PWM_1.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 885:.\Generated_Source\PSoC4/PWM_1.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 886:.\Generated_Source\PSoC4/PWM_1.c **** *  Down counting mode (except 0x0u).
 887:.\Generated_Source\PSoC4/PWM_1.c **** *
 888:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 889:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 890:.\Generated_Source\PSoC4/PWM_1.c **** *
 891:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 892:.\Generated_Source\PSoC4/PWM_1.c **** *  Compare value
 893:.\Generated_Source\PSoC4/PWM_1.c **** *
 894:.\Generated_Source\PSoC4/PWM_1.c **** * Note:
 895:.\Generated_Source\PSoC4/PWM_1.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 896:.\Generated_Source\PSoC4/PWM_1.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 897:.\Generated_Source\PSoC4/PWM_1.c **** *  Down counting mode (except 0x0u).
 898:.\Generated_Source\PSoC4/PWM_1.c **** *
 899:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 900:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadCompare(void)
 901:.\Generated_Source\PSoC4/PWM_1.c **** {
 803              		.loc 1 901 0
 804              		.cfi_startproc
 902:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 903:.\Generated_Source\PSoC4/PWM_1.c ****         uint32 currentMode;
 904:.\Generated_Source\PSoC4/PWM_1.c ****         uint32 regVal;
 905:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 906:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 31


 907:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 908:.\Generated_Source\PSoC4/PWM_1.c ****         currentMode = ((PWM_1_CONTROL_REG & PWM_1_UPDOWN_MASK) >> PWM_1_UPDOWN_SHIFT);
 909:.\Generated_Source\PSoC4/PWM_1.c ****         
 910:.\Generated_Source\PSoC4/PWM_1.c ****         regVal = PWM_1_COMP_CAP_REG;
 911:.\Generated_Source\PSoC4/PWM_1.c ****         
 912:.\Generated_Source\PSoC4/PWM_1.c ****         if (((uint32)PWM_1__COUNT_DOWN == currentMode) && (0u != regVal))
 913:.\Generated_Source\PSoC4/PWM_1.c ****         {
 914:.\Generated_Source\PSoC4/PWM_1.c ****             regVal--;
 915:.\Generated_Source\PSoC4/PWM_1.c ****         }
 916:.\Generated_Source\PSoC4/PWM_1.c ****         else if (((uint32)PWM_1__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 917:.\Generated_Source\PSoC4/PWM_1.c ****         {
 918:.\Generated_Source\PSoC4/PWM_1.c ****             regVal++;
 919:.\Generated_Source\PSoC4/PWM_1.c ****         }
 920:.\Generated_Source\PSoC4/PWM_1.c ****         else
 921:.\Generated_Source\PSoC4/PWM_1.c ****         {
 922:.\Generated_Source\PSoC4/PWM_1.c ****         }
 923:.\Generated_Source\PSoC4/PWM_1.c **** 
 924:.\Generated_Source\PSoC4/PWM_1.c ****         return (regVal & PWM_1_16BIT_MASK);
 925:.\Generated_Source\PSoC4/PWM_1.c ****     #else
 926:.\Generated_Source\PSoC4/PWM_1.c ****         return (PWM_1_COMP_CAP_REG & PWM_1_16BIT_MASK);
 805              		.loc 1 926 0
 806 0000 024B     		ldr	r3, .L65
 807 0002 1868     		ldr	r0, [r3]
 808 0004 0004     		lsl	r0, r0, #16
 809 0006 000C     		lsr	r0, r0, #16
 927:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 928:.\Generated_Source\PSoC4/PWM_1.c **** }
 810              		.loc 1 928 0
 811              		@ sp needed
 812 0008 7047     		bx	lr
 813              	.L66:
 814 000a C046     		.align	2
 815              	.L65:
 816 000c 0C010540 		.word	1074069772
 817              		.cfi_endproc
 818              	.LFE23:
 819              		.size	PWM_1_ReadCompare, .-PWM_1_ReadCompare
 820              		.section	.text.PWM_1_WriteCompareBuf,"ax",%progbits
 821              		.align	2
 822              		.global	PWM_1_WriteCompareBuf
 823              		.code	16
 824              		.thumb_func
 825              		.type	PWM_1_WriteCompareBuf, %function
 826              	PWM_1_WriteCompareBuf:
 827              	.LFB24:
 929:.\Generated_Source\PSoC4/PWM_1.c **** 
 930:.\Generated_Source\PSoC4/PWM_1.c **** 
 931:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 932:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WriteCompareBuf
 933:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 934:.\Generated_Source\PSoC4/PWM_1.c **** *
 935:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 936:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 937:.\Generated_Source\PSoC4/PWM_1.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 938:.\Generated_Source\PSoC4/PWM_1.c **** *
 939:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 940:.\Generated_Source\PSoC4/PWM_1.c **** *  compareBuf: Compare value
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 32


 941:.\Generated_Source\PSoC4/PWM_1.c **** *
 942:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 943:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 944:.\Generated_Source\PSoC4/PWM_1.c **** *
 945:.\Generated_Source\PSoC4/PWM_1.c **** * Note:
 946:.\Generated_Source\PSoC4/PWM_1.c **** *  It is not recommended to use the value equal to "0" or equal to 
 947:.\Generated_Source\PSoC4/PWM_1.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 948:.\Generated_Source\PSoC4/PWM_1.c **** *  PSoC 4100/PSoC 4200 devices.
 949:.\Generated_Source\PSoC4/PWM_1.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 950:.\Generated_Source\PSoC4/PWM_1.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 951:.\Generated_Source\PSoC4/PWM_1.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 952:.\Generated_Source\PSoC4/PWM_1.c **** *
 953:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 954:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WriteCompareBuf(uint32 compareBuf)
 955:.\Generated_Source\PSoC4/PWM_1.c **** {
 828              		.loc 1 955 0
 829              		.cfi_startproc
 830              	.LVL58:
 956:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 957:.\Generated_Source\PSoC4/PWM_1.c ****         uint32 currentMode;
 958:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 959:.\Generated_Source\PSoC4/PWM_1.c **** 
 960:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 961:.\Generated_Source\PSoC4/PWM_1.c ****         currentMode = ((PWM_1_CONTROL_REG & PWM_1_UPDOWN_MASK) >> PWM_1_UPDOWN_SHIFT);
 962:.\Generated_Source\PSoC4/PWM_1.c **** 
 963:.\Generated_Source\PSoC4/PWM_1.c ****         if (((uint32)PWM_1__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 964:.\Generated_Source\PSoC4/PWM_1.c ****         {
 965:.\Generated_Source\PSoC4/PWM_1.c ****             compareBuf++;
 966:.\Generated_Source\PSoC4/PWM_1.c ****         }
 967:.\Generated_Source\PSoC4/PWM_1.c ****         else if (((uint32)PWM_1__COUNT_UP == currentMode) && (0u != compareBuf))
 968:.\Generated_Source\PSoC4/PWM_1.c ****         {
 969:.\Generated_Source\PSoC4/PWM_1.c ****             compareBuf --;
 970:.\Generated_Source\PSoC4/PWM_1.c ****         }
 971:.\Generated_Source\PSoC4/PWM_1.c ****         else
 972:.\Generated_Source\PSoC4/PWM_1.c ****         {
 973:.\Generated_Source\PSoC4/PWM_1.c ****         }
 974:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 975:.\Generated_Source\PSoC4/PWM_1.c ****     
 976:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_COMP_CAP_BUF_REG = (compareBuf & PWM_1_16BIT_MASK);
 831              		.loc 1 976 0
 832 0000 0004     		lsl	r0, r0, #16
 833              	.LVL59:
 834 0002 000C     		lsr	r0, r0, #16
 835 0004 014B     		ldr	r3, .L68
 836 0006 1860     		str	r0, [r3]
 977:.\Generated_Source\PSoC4/PWM_1.c **** }
 837              		.loc 1 977 0
 838              		@ sp needed
 839 0008 7047     		bx	lr
 840              	.L69:
 841 000a C046     		.align	2
 842              	.L68:
 843 000c 10010540 		.word	1074069776
 844              		.cfi_endproc
 845              	.LFE24:
 846              		.size	PWM_1_WriteCompareBuf, .-PWM_1_WriteCompareBuf
 847              		.section	.text.PWM_1_ReadCompareBuf,"ax",%progbits
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 33


 848              		.align	2
 849              		.global	PWM_1_ReadCompareBuf
 850              		.code	16
 851              		.thumb_func
 852              		.type	PWM_1_ReadCompareBuf, %function
 853              	PWM_1_ReadCompareBuf:
 854              	.LFB25:
 978:.\Generated_Source\PSoC4/PWM_1.c **** 
 979:.\Generated_Source\PSoC4/PWM_1.c **** 
 980:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 981:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadCompareBuf
 982:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 983:.\Generated_Source\PSoC4/PWM_1.c **** *
 984:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 985:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 986:.\Generated_Source\PSoC4/PWM_1.c **** *  Capture or in Quadrature Decoder modes.
 987:.\Generated_Source\PSoC4/PWM_1.c **** *
 988:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 989:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 990:.\Generated_Source\PSoC4/PWM_1.c **** *
 991:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 992:.\Generated_Source\PSoC4/PWM_1.c **** *  Compare buffer value
 993:.\Generated_Source\PSoC4/PWM_1.c **** *
 994:.\Generated_Source\PSoC4/PWM_1.c **** * Note:
 995:.\Generated_Source\PSoC4/PWM_1.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 996:.\Generated_Source\PSoC4/PWM_1.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 997:.\Generated_Source\PSoC4/PWM_1.c **** *  Down counting mode (except 0x0u).
 998:.\Generated_Source\PSoC4/PWM_1.c **** *
 999:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1000:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadCompareBuf(void)
1001:.\Generated_Source\PSoC4/PWM_1.c **** {
 855              		.loc 1 1001 0
 856              		.cfi_startproc
1002:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
1003:.\Generated_Source\PSoC4/PWM_1.c ****         uint32 currentMode;
1004:.\Generated_Source\PSoC4/PWM_1.c ****         uint32 regVal;
1005:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
1006:.\Generated_Source\PSoC4/PWM_1.c **** 
1007:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
1008:.\Generated_Source\PSoC4/PWM_1.c ****         currentMode = ((PWM_1_CONTROL_REG & PWM_1_UPDOWN_MASK) >> PWM_1_UPDOWN_SHIFT);
1009:.\Generated_Source\PSoC4/PWM_1.c **** 
1010:.\Generated_Source\PSoC4/PWM_1.c ****         regVal = PWM_1_COMP_CAP_BUF_REG;
1011:.\Generated_Source\PSoC4/PWM_1.c ****         
1012:.\Generated_Source\PSoC4/PWM_1.c ****         if (((uint32)PWM_1__COUNT_DOWN == currentMode) && (0u != regVal))
1013:.\Generated_Source\PSoC4/PWM_1.c ****         {
1014:.\Generated_Source\PSoC4/PWM_1.c ****             regVal--;
1015:.\Generated_Source\PSoC4/PWM_1.c ****         }
1016:.\Generated_Source\PSoC4/PWM_1.c ****         else if (((uint32)PWM_1__COUNT_UP == currentMode) && (0xFFFFu != regVal))
1017:.\Generated_Source\PSoC4/PWM_1.c ****         {
1018:.\Generated_Source\PSoC4/PWM_1.c ****             regVal++;
1019:.\Generated_Source\PSoC4/PWM_1.c ****         }
1020:.\Generated_Source\PSoC4/PWM_1.c ****         else
1021:.\Generated_Source\PSoC4/PWM_1.c ****         {
1022:.\Generated_Source\PSoC4/PWM_1.c ****         }
1023:.\Generated_Source\PSoC4/PWM_1.c **** 
1024:.\Generated_Source\PSoC4/PWM_1.c ****         return (regVal & PWM_1_16BIT_MASK);
1025:.\Generated_Source\PSoC4/PWM_1.c ****     #else
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 34


1026:.\Generated_Source\PSoC4/PWM_1.c ****         return (PWM_1_COMP_CAP_BUF_REG & PWM_1_16BIT_MASK);
 857              		.loc 1 1026 0
 858 0000 024B     		ldr	r3, .L71
 859 0002 1868     		ldr	r0, [r3]
 860 0004 0004     		lsl	r0, r0, #16
 861 0006 000C     		lsr	r0, r0, #16
1027:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
1028:.\Generated_Source\PSoC4/PWM_1.c **** }
 862              		.loc 1 1028 0
 863              		@ sp needed
 864 0008 7047     		bx	lr
 865              	.L72:
 866 000a C046     		.align	2
 867              	.L71:
 868 000c 10010540 		.word	1074069776
 869              		.cfi_endproc
 870              	.LFE25:
 871              		.size	PWM_1_ReadCompareBuf, .-PWM_1_ReadCompareBuf
 872              		.section	.text.PWM_1_ReadCapture,"ax",%progbits
 873              		.align	2
 874              		.global	PWM_1_ReadCapture
 875              		.code	16
 876              		.thumb_func
 877              		.type	PWM_1_ReadCapture, %function
 878              	PWM_1_ReadCapture:
 879              	.LFB26:
1029:.\Generated_Source\PSoC4/PWM_1.c **** 
1030:.\Generated_Source\PSoC4/PWM_1.c **** 
1031:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1032:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadCapture
1033:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1034:.\Generated_Source\PSoC4/PWM_1.c **** *
1035:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1036:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the captured counter value. This API is applicable only for
1037:.\Generated_Source\PSoC4/PWM_1.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1038:.\Generated_Source\PSoC4/PWM_1.c **** *
1039:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1040:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1041:.\Generated_Source\PSoC4/PWM_1.c **** *
1042:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1043:.\Generated_Source\PSoC4/PWM_1.c **** *  Capture value
1044:.\Generated_Source\PSoC4/PWM_1.c **** *
1045:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1046:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadCapture(void)
1047:.\Generated_Source\PSoC4/PWM_1.c **** {
 880              		.loc 1 1047 0
 881              		.cfi_startproc
1048:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_COMP_CAP_REG & PWM_1_16BIT_MASK);
 882              		.loc 1 1048 0
 883 0000 024B     		ldr	r3, .L74
 884 0002 1868     		ldr	r0, [r3]
 885 0004 0004     		lsl	r0, r0, #16
 886 0006 000C     		lsr	r0, r0, #16
1049:.\Generated_Source\PSoC4/PWM_1.c **** }
 887              		.loc 1 1049 0
 888              		@ sp needed
 889 0008 7047     		bx	lr
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 35


 890              	.L75:
 891 000a C046     		.align	2
 892              	.L74:
 893 000c 0C010540 		.word	1074069772
 894              		.cfi_endproc
 895              	.LFE26:
 896              		.size	PWM_1_ReadCapture, .-PWM_1_ReadCapture
 897              		.section	.text.PWM_1_ReadCaptureBuf,"ax",%progbits
 898              		.align	2
 899              		.global	PWM_1_ReadCaptureBuf
 900              		.code	16
 901              		.thumb_func
 902              		.type	PWM_1_ReadCaptureBuf, %function
 903              	PWM_1_ReadCaptureBuf:
 904              	.LFB27:
1050:.\Generated_Source\PSoC4/PWM_1.c **** 
1051:.\Generated_Source\PSoC4/PWM_1.c **** 
1052:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1053:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadCaptureBuf
1054:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1055:.\Generated_Source\PSoC4/PWM_1.c **** *
1056:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1057:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the capture buffer register. This API is applicable only for
1058:.\Generated_Source\PSoC4/PWM_1.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1059:.\Generated_Source\PSoC4/PWM_1.c **** *
1060:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1061:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1062:.\Generated_Source\PSoC4/PWM_1.c **** *
1063:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1064:.\Generated_Source\PSoC4/PWM_1.c **** *  Capture buffer value
1065:.\Generated_Source\PSoC4/PWM_1.c **** *
1066:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1067:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadCaptureBuf(void)
1068:.\Generated_Source\PSoC4/PWM_1.c **** {
 905              		.loc 1 1068 0
 906              		.cfi_startproc
1069:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_COMP_CAP_BUF_REG & PWM_1_16BIT_MASK);
 907              		.loc 1 1069 0
 908 0000 024B     		ldr	r3, .L77
 909 0002 1868     		ldr	r0, [r3]
 910 0004 0004     		lsl	r0, r0, #16
 911 0006 000C     		lsr	r0, r0, #16
1070:.\Generated_Source\PSoC4/PWM_1.c **** }
 912              		.loc 1 1070 0
 913              		@ sp needed
 914 0008 7047     		bx	lr
 915              	.L78:
 916 000a C046     		.align	2
 917              	.L77:
 918 000c 10010540 		.word	1074069776
 919              		.cfi_endproc
 920              	.LFE27:
 921              		.size	PWM_1_ReadCaptureBuf, .-PWM_1_ReadCaptureBuf
 922              		.section	.text.PWM_1_SetCaptureMode,"ax",%progbits
 923              		.align	2
 924              		.global	PWM_1_SetCaptureMode
 925              		.code	16
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 36


 926              		.thumb_func
 927              		.type	PWM_1_SetCaptureMode, %function
 928              	PWM_1_SetCaptureMode:
 929              	.LFB28:
1071:.\Generated_Source\PSoC4/PWM_1.c **** 
1072:.\Generated_Source\PSoC4/PWM_1.c **** 
1073:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1074:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetCaptureMode
1075:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1076:.\Generated_Source\PSoC4/PWM_1.c **** *
1077:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1078:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1079:.\Generated_Source\PSoC4/PWM_1.c **** *  This input is not applicable to the Timer/Counter without Capture and
1080:.\Generated_Source\PSoC4/PWM_1.c **** *  Quadrature Decoder modes.
1081:.\Generated_Source\PSoC4/PWM_1.c **** *
1082:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1083:.\Generated_Source\PSoC4/PWM_1.c **** *  triggerMode: Enumerated trigger mode value
1084:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1085:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_LEVEL     - Level
1086:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_RISING    - Rising edge
1087:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_FALLING   - Falling edge
1088:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_BOTH      - Both rising and falling edge
1089:.\Generated_Source\PSoC4/PWM_1.c **** *
1090:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1091:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1092:.\Generated_Source\PSoC4/PWM_1.c **** *
1093:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1094:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetCaptureMode(uint32 triggerMode)
1095:.\Generated_Source\PSoC4/PWM_1.c **** {
 930              		.loc 1 1095 0
 931              		.cfi_startproc
 932              	.LVL60:
 933 0000 10B5     		push	{r4, lr}
 934              		.cfi_def_cfa_offset 8
 935              		.cfi_offset 4, -8
 936              		.cfi_offset 14, -4
 937 0002 041C     		mov	r4, r0
1096:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
1097:.\Generated_Source\PSoC4/PWM_1.c **** 
1098:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 938              		.loc 1 1098 0
 939 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 940              	.LVL61:
1099:.\Generated_Source\PSoC4/PWM_1.c **** 
1100:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG &= (uint32)~PWM_1_CAPTURE_MASK;
 941              		.loc 1 1100 0
 942 0008 054B     		ldr	r3, .L80
 943 000a 1A68     		ldr	r2, [r3]
 944 000c 0321     		mov	r1, #3
 945 000e 8A43     		bic	r2, r1
 946 0010 1A60     		str	r2, [r3]
1101:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG |= triggerMode;
 947              		.loc 1 1101 0
 948 0012 1A68     		ldr	r2, [r3]
 949 0014 1443     		orr	r4, r2
 950              	.LVL62:
 951 0016 1C60     		str	r4, [r3]
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 37


1102:.\Generated_Source\PSoC4/PWM_1.c **** 
1103:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 952              		.loc 1 1103 0
 953 0018 FFF7FEFF 		bl	CyExitCriticalSection
 954              	.LVL63:
1104:.\Generated_Source\PSoC4/PWM_1.c **** }
 955              		.loc 1 1104 0
 956              		@ sp needed
 957 001c 10BD     		pop	{r4, pc}
 958              	.L81:
 959 001e C046     		.align	2
 960              	.L80:
 961 0020 24010540 		.word	1074069796
 962              		.cfi_endproc
 963              	.LFE28:
 964              		.size	PWM_1_SetCaptureMode, .-PWM_1_SetCaptureMode
 965              		.section	.text.PWM_1_SetReloadMode,"ax",%progbits
 966              		.align	2
 967              		.global	PWM_1_SetReloadMode
 968              		.code	16
 969              		.thumb_func
 970              		.type	PWM_1_SetReloadMode, %function
 971              	PWM_1_SetReloadMode:
 972              	.LFB29:
1105:.\Generated_Source\PSoC4/PWM_1.c **** 
1106:.\Generated_Source\PSoC4/PWM_1.c **** 
1107:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1108:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetReloadMode
1109:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1110:.\Generated_Source\PSoC4/PWM_1.c **** *
1111:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1112:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1113:.\Generated_Source\PSoC4/PWM_1.c **** *  input.
1114:.\Generated_Source\PSoC4/PWM_1.c **** *
1115:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1116:.\Generated_Source\PSoC4/PWM_1.c **** *  triggerMode: Enumerated trigger mode value
1117:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1118:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_LEVEL     - Level
1119:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_RISING    - Rising edge
1120:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_FALLING   - Falling edge
1121:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_BOTH      - Both rising and falling edge
1122:.\Generated_Source\PSoC4/PWM_1.c **** *
1123:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1124:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1125:.\Generated_Source\PSoC4/PWM_1.c **** *
1126:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1127:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetReloadMode(uint32 triggerMode)
1128:.\Generated_Source\PSoC4/PWM_1.c **** {
 973              		.loc 1 1128 0
 974              		.cfi_startproc
 975              	.LVL64:
 976 0000 10B5     		push	{r4, lr}
 977              		.cfi_def_cfa_offset 8
 978              		.cfi_offset 4, -8
 979              		.cfi_offset 14, -4
 980 0002 041C     		mov	r4, r0
1129:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 38


1130:.\Generated_Source\PSoC4/PWM_1.c **** 
1131:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 981              		.loc 1 1131 0
 982 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 983              	.LVL65:
1132:.\Generated_Source\PSoC4/PWM_1.c **** 
1133:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG &= (uint32)~PWM_1_RELOAD_MASK;
 984              		.loc 1 1133 0
 985 0008 054B     		ldr	r3, .L83
 986 000a 1A68     		ldr	r2, [r3]
 987 000c 3021     		mov	r1, #48
 988 000e 8A43     		bic	r2, r1
 989 0010 1A60     		str	r2, [r3]
1134:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_1_RELOAD_SHIFT));
 990              		.loc 1 1134 0
 991 0012 1A68     		ldr	r2, [r3]
 992 0014 2401     		lsl	r4, r4, #4
 993              	.LVL66:
 994 0016 1443     		orr	r4, r2
 995 0018 1C60     		str	r4, [r3]
1135:.\Generated_Source\PSoC4/PWM_1.c **** 
1136:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 996              		.loc 1 1136 0
 997 001a FFF7FEFF 		bl	CyExitCriticalSection
 998              	.LVL67:
1137:.\Generated_Source\PSoC4/PWM_1.c **** }
 999              		.loc 1 1137 0
 1000              		@ sp needed
 1001 001e 10BD     		pop	{r4, pc}
 1002              	.L84:
 1003              		.align	2
 1004              	.L83:
 1005 0020 24010540 		.word	1074069796
 1006              		.cfi_endproc
 1007              	.LFE29:
 1008              		.size	PWM_1_SetReloadMode, .-PWM_1_SetReloadMode
 1009              		.section	.text.PWM_1_SetStartMode,"ax",%progbits
 1010              		.align	2
 1011              		.global	PWM_1_SetStartMode
 1012              		.code	16
 1013              		.thumb_func
 1014              		.type	PWM_1_SetStartMode, %function
 1015              	PWM_1_SetStartMode:
 1016              	.LFB30:
1138:.\Generated_Source\PSoC4/PWM_1.c **** 
1139:.\Generated_Source\PSoC4/PWM_1.c **** 
1140:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1141:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetStartMode
1142:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1143:.\Generated_Source\PSoC4/PWM_1.c **** *
1144:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1145:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1146:.\Generated_Source\PSoC4/PWM_1.c **** *  phiB input.
1147:.\Generated_Source\PSoC4/PWM_1.c **** *
1148:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1149:.\Generated_Source\PSoC4/PWM_1.c **** *  triggerMode: Enumerated trigger mode value
1150:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 39


1151:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_LEVEL     - Level
1152:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_RISING    - Rising edge
1153:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_FALLING   - Falling edge
1154:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_BOTH      - Both rising and falling edge
1155:.\Generated_Source\PSoC4/PWM_1.c **** *
1156:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1157:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1158:.\Generated_Source\PSoC4/PWM_1.c **** *
1159:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1160:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetStartMode(uint32 triggerMode)
1161:.\Generated_Source\PSoC4/PWM_1.c **** {
 1017              		.loc 1 1161 0
 1018              		.cfi_startproc
 1019              	.LVL68:
 1020 0000 10B5     		push	{r4, lr}
 1021              		.cfi_def_cfa_offset 8
 1022              		.cfi_offset 4, -8
 1023              		.cfi_offset 14, -4
 1024 0002 041C     		mov	r4, r0
1162:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
1163:.\Generated_Source\PSoC4/PWM_1.c **** 
1164:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1025              		.loc 1 1164 0
 1026 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1027              	.LVL69:
1165:.\Generated_Source\PSoC4/PWM_1.c **** 
1166:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG &= (uint32)~PWM_1_START_MASK;
 1028              		.loc 1 1166 0
 1029 0008 054B     		ldr	r3, .L86
 1030 000a 1968     		ldr	r1, [r3]
 1031 000c 054A     		ldr	r2, .L86+4
 1032 000e 0A40     		and	r2, r1
 1033 0010 1A60     		str	r2, [r3]
1167:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_1_START_SHIFT));
 1034              		.loc 1 1167 0
 1035 0012 1A68     		ldr	r2, [r3]
 1036 0014 2402     		lsl	r4, r4, #8
 1037              	.LVL70:
 1038 0016 1443     		orr	r4, r2
 1039 0018 1C60     		str	r4, [r3]
1168:.\Generated_Source\PSoC4/PWM_1.c **** 
1169:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1040              		.loc 1 1169 0
 1041 001a FFF7FEFF 		bl	CyExitCriticalSection
 1042              	.LVL71:
1170:.\Generated_Source\PSoC4/PWM_1.c **** }
 1043              		.loc 1 1170 0
 1044              		@ sp needed
 1045 001e 10BD     		pop	{r4, pc}
 1046              	.L87:
 1047              		.align	2
 1048              	.L86:
 1049 0020 24010540 		.word	1074069796
 1050 0024 FFFCFFFF 		.word	-769
 1051              		.cfi_endproc
 1052              	.LFE30:
 1053              		.size	PWM_1_SetStartMode, .-PWM_1_SetStartMode
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 40


 1054              		.section	.text.PWM_1_SetStopMode,"ax",%progbits
 1055              		.align	2
 1056              		.global	PWM_1_SetStopMode
 1057              		.code	16
 1058              		.thumb_func
 1059              		.type	PWM_1_SetStopMode, %function
 1060              	PWM_1_SetStopMode:
 1061              	.LFB31:
1171:.\Generated_Source\PSoC4/PWM_1.c **** 
1172:.\Generated_Source\PSoC4/PWM_1.c **** 
1173:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1174:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetStopMode
1175:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1176:.\Generated_Source\PSoC4/PWM_1.c **** *
1177:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1178:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1179:.\Generated_Source\PSoC4/PWM_1.c **** *
1180:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1181:.\Generated_Source\PSoC4/PWM_1.c **** *  triggerMode: Enumerated trigger mode value
1182:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1183:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_LEVEL     - Level
1184:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_RISING    - Rising edge
1185:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_FALLING   - Falling edge
1186:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_BOTH      - Both rising and falling edge
1187:.\Generated_Source\PSoC4/PWM_1.c **** *
1188:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1189:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1190:.\Generated_Source\PSoC4/PWM_1.c **** *
1191:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1192:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetStopMode(uint32 triggerMode)
1193:.\Generated_Source\PSoC4/PWM_1.c **** {
 1062              		.loc 1 1193 0
 1063              		.cfi_startproc
 1064              	.LVL72:
 1065 0000 10B5     		push	{r4, lr}
 1066              		.cfi_def_cfa_offset 8
 1067              		.cfi_offset 4, -8
 1068              		.cfi_offset 14, -4
 1069 0002 041C     		mov	r4, r0
1194:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
1195:.\Generated_Source\PSoC4/PWM_1.c **** 
1196:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1070              		.loc 1 1196 0
 1071 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1072              	.LVL73:
1197:.\Generated_Source\PSoC4/PWM_1.c **** 
1198:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG &= (uint32)~PWM_1_STOP_MASK;
 1073              		.loc 1 1198 0
 1074 0008 054B     		ldr	r3, .L89
 1075 000a 1A68     		ldr	r2, [r3]
 1076 000c C021     		mov	r1, #192
 1077 000e 8A43     		bic	r2, r1
 1078 0010 1A60     		str	r2, [r3]
1199:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_1_STOP_SHIFT));
 1079              		.loc 1 1199 0
 1080 0012 1A68     		ldr	r2, [r3]
 1081 0014 A401     		lsl	r4, r4, #6
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 41


 1082              	.LVL74:
 1083 0016 1443     		orr	r4, r2
 1084 0018 1C60     		str	r4, [r3]
1200:.\Generated_Source\PSoC4/PWM_1.c **** 
1201:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1085              		.loc 1 1201 0
 1086 001a FFF7FEFF 		bl	CyExitCriticalSection
 1087              	.LVL75:
1202:.\Generated_Source\PSoC4/PWM_1.c **** }
 1088              		.loc 1 1202 0
 1089              		@ sp needed
 1090 001e 10BD     		pop	{r4, pc}
 1091              	.L90:
 1092              		.align	2
 1093              	.L89:
 1094 0020 24010540 		.word	1074069796
 1095              		.cfi_endproc
 1096              	.LFE31:
 1097              		.size	PWM_1_SetStopMode, .-PWM_1_SetStopMode
 1098              		.section	.text.PWM_1_SetCountMode,"ax",%progbits
 1099              		.align	2
 1100              		.global	PWM_1_SetCountMode
 1101              		.code	16
 1102              		.thumb_func
 1103              		.type	PWM_1_SetCountMode, %function
 1104              	PWM_1_SetCountMode:
 1105              	.LFB32:
1203:.\Generated_Source\PSoC4/PWM_1.c **** 
1204:.\Generated_Source\PSoC4/PWM_1.c **** 
1205:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1206:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetCountMode
1207:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1208:.\Generated_Source\PSoC4/PWM_1.c **** *
1209:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1210:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1211:.\Generated_Source\PSoC4/PWM_1.c **** *  input.
1212:.\Generated_Source\PSoC4/PWM_1.c **** *
1213:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1214:.\Generated_Source\PSoC4/PWM_1.c **** *  triggerMode: Enumerated trigger mode value
1215:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1216:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_LEVEL     - Level
1217:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_RISING    - Rising edge
1218:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_FALLING   - Falling edge
1219:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_BOTH      - Both rising and falling edge
1220:.\Generated_Source\PSoC4/PWM_1.c **** *
1221:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1222:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1223:.\Generated_Source\PSoC4/PWM_1.c **** *
1224:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1225:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetCountMode(uint32 triggerMode)
1226:.\Generated_Source\PSoC4/PWM_1.c **** {
 1106              		.loc 1 1226 0
 1107              		.cfi_startproc
 1108              	.LVL76:
 1109 0000 10B5     		push	{r4, lr}
 1110              		.cfi_def_cfa_offset 8
 1111              		.cfi_offset 4, -8
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 42


 1112              		.cfi_offset 14, -4
 1113 0002 041C     		mov	r4, r0
1227:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
1228:.\Generated_Source\PSoC4/PWM_1.c **** 
1229:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1114              		.loc 1 1229 0
 1115 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1116              	.LVL77:
1230:.\Generated_Source\PSoC4/PWM_1.c **** 
1231:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG &= (uint32)~PWM_1_COUNT_MASK;
 1117              		.loc 1 1231 0
 1118 0008 054B     		ldr	r3, .L92
 1119 000a 1A68     		ldr	r2, [r3]
 1120 000c 0C21     		mov	r1, #12
 1121 000e 8A43     		bic	r2, r1
 1122 0010 1A60     		str	r2, [r3]
1232:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_1_COUNT_SHIFT));
 1123              		.loc 1 1232 0
 1124 0012 1A68     		ldr	r2, [r3]
 1125 0014 A400     		lsl	r4, r4, #2
 1126              	.LVL78:
 1127 0016 1443     		orr	r4, r2
 1128 0018 1C60     		str	r4, [r3]
1233:.\Generated_Source\PSoC4/PWM_1.c **** 
1234:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1129              		.loc 1 1234 0
 1130 001a FFF7FEFF 		bl	CyExitCriticalSection
 1131              	.LVL79:
1235:.\Generated_Source\PSoC4/PWM_1.c **** }
 1132              		.loc 1 1235 0
 1133              		@ sp needed
 1134 001e 10BD     		pop	{r4, pc}
 1135              	.L93:
 1136              		.align	2
 1137              	.L92:
 1138 0020 24010540 		.word	1074069796
 1139              		.cfi_endproc
 1140              	.LFE32:
 1141              		.size	PWM_1_SetCountMode, .-PWM_1_SetCountMode
 1142              		.section	.text.PWM_1_TriggerCommand,"ax",%progbits
 1143              		.align	2
 1144              		.global	PWM_1_TriggerCommand
 1145              		.code	16
 1146              		.thumb_func
 1147              		.type	PWM_1_TriggerCommand, %function
 1148              	PWM_1_TriggerCommand:
 1149              	.LFB33:
1236:.\Generated_Source\PSoC4/PWM_1.c **** 
1237:.\Generated_Source\PSoC4/PWM_1.c **** 
1238:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1239:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_TriggerCommand
1240:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1241:.\Generated_Source\PSoC4/PWM_1.c **** *
1242:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1243:.\Generated_Source\PSoC4/PWM_1.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1244:.\Generated_Source\PSoC4/PWM_1.c **** *  The mask can be used to apply this command simultaneously to more than one
1245:.\Generated_Source\PSoC4/PWM_1.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 43


1246:.\Generated_Source\PSoC4/PWM_1.c **** *
1247:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1248:.\Generated_Source\PSoC4/PWM_1.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1249:.\Generated_Source\PSoC4/PWM_1.c **** *        command should apply to.  This function from one instance can be used
1250:.\Generated_Source\PSoC4/PWM_1.c **** *        to apply the command to any of the instances in the design.
1251:.\Generated_Source\PSoC4/PWM_1.c **** *        The mask value for a specific instance is available with the MASK
1252:.\Generated_Source\PSoC4/PWM_1.c **** *        define.
1253:.\Generated_Source\PSoC4/PWM_1.c **** *  command: Enumerated command values. Capture command only applicable for
1254:.\Generated_Source\PSoC4/PWM_1.c **** *           Timer/Counter with Capture and PWM modes.
1255:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1256:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_CMD_CAPTURE    - Trigger Capture/Switch command
1257:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_CMD_RELOAD     - Trigger Reload/Index command
1258:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_CMD_STOP       - Trigger Stop/Kill command
1259:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_CMD_START      - Trigger Start/phiB command
1260:.\Generated_Source\PSoC4/PWM_1.c **** *
1261:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1262:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1263:.\Generated_Source\PSoC4/PWM_1.c **** *
1264:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1265:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_TriggerCommand(uint32 mask, uint32 command)
1266:.\Generated_Source\PSoC4/PWM_1.c **** {
 1150              		.loc 1 1266 0
 1151              		.cfi_startproc
 1152              	.LVL80:
 1153 0000 38B5     		push	{r3, r4, r5, lr}
 1154              		.cfi_def_cfa_offset 16
 1155              		.cfi_offset 3, -16
 1156              		.cfi_offset 4, -12
 1157              		.cfi_offset 5, -8
 1158              		.cfi_offset 14, -4
 1159 0002 041C     		mov	r4, r0
 1160 0004 0D1C     		mov	r5, r1
1267:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
1268:.\Generated_Source\PSoC4/PWM_1.c **** 
1269:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1161              		.loc 1 1269 0
 1162 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1163              	.LVL81:
1270:.\Generated_Source\PSoC4/PWM_1.c **** 
1271:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_COMMAND_REG = ((uint32)(mask << command));
 1164              		.loc 1 1271 0
 1165 000a AC40     		lsl	r4, r4, r5
 1166              	.LVL82:
 1167 000c 024B     		ldr	r3, .L95
 1168 000e 1C60     		str	r4, [r3]
1272:.\Generated_Source\PSoC4/PWM_1.c **** 
1273:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1169              		.loc 1 1273 0
 1170 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1171              	.LVL83:
1274:.\Generated_Source\PSoC4/PWM_1.c **** }
 1172              		.loc 1 1274 0
 1173              		@ sp needed
 1174              	.LVL84:
 1175 0014 38BD     		pop	{r3, r4, r5, pc}
 1176              	.L96:
 1177 0016 C046     		.align	2
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 44


 1178              	.L95:
 1179 0018 08000540 		.word	1074069512
 1180              		.cfi_endproc
 1181              	.LFE33:
 1182              		.size	PWM_1_TriggerCommand, .-PWM_1_TriggerCommand
 1183              		.section	.text.PWM_1_ReadStatus,"ax",%progbits
 1184              		.align	2
 1185              		.global	PWM_1_ReadStatus
 1186              		.code	16
 1187              		.thumb_func
 1188              		.type	PWM_1_ReadStatus, %function
 1189              	PWM_1_ReadStatus:
 1190              	.LFB34:
1275:.\Generated_Source\PSoC4/PWM_1.c **** 
1276:.\Generated_Source\PSoC4/PWM_1.c **** 
1277:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1278:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadStatus
1279:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1280:.\Generated_Source\PSoC4/PWM_1.c **** *
1281:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1282:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the status of the PWM_1.
1283:.\Generated_Source\PSoC4/PWM_1.c **** *
1284:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1285:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1286:.\Generated_Source\PSoC4/PWM_1.c **** *
1287:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1288:.\Generated_Source\PSoC4/PWM_1.c **** *  Status
1289:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1290:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_STATUS_DOWN    - Set if counting down
1291:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_STATUS_RUNNING - Set if counter is running
1292:.\Generated_Source\PSoC4/PWM_1.c **** *
1293:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1294:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadStatus(void)
1295:.\Generated_Source\PSoC4/PWM_1.c **** {
 1191              		.loc 1 1295 0
 1192              		.cfi_startproc
1296:.\Generated_Source\PSoC4/PWM_1.c ****     return ((PWM_1_STATUS_REG >> PWM_1_RUNNING_STATUS_SHIFT) |
 1193              		.loc 1 1296 0
 1194 0000 034B     		ldr	r3, .L98
 1195 0002 1868     		ldr	r0, [r3]
 1196 0004 820F     		lsr	r2, r0, #30
1297:.\Generated_Source\PSoC4/PWM_1.c ****             (PWM_1_STATUS_REG & PWM_1_STATUS_DOWN));
 1197              		.loc 1 1297 0
 1198 0006 1B68     		ldr	r3, [r3]
 1199 0008 0120     		mov	r0, #1
 1200 000a 1840     		and	r0, r3
1296:.\Generated_Source\PSoC4/PWM_1.c ****     return ((PWM_1_STATUS_REG >> PWM_1_RUNNING_STATUS_SHIFT) |
 1201              		.loc 1 1296 0
 1202 000c 1043     		orr	r0, r2
1298:.\Generated_Source\PSoC4/PWM_1.c **** }
 1203              		.loc 1 1298 0
 1204              		@ sp needed
 1205 000e 7047     		bx	lr
 1206              	.L99:
 1207              		.align	2
 1208              	.L98:
 1209 0010 04010540 		.word	1074069764
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 45


 1210              		.cfi_endproc
 1211              	.LFE34:
 1212              		.size	PWM_1_ReadStatus, .-PWM_1_ReadStatus
 1213              		.section	.text.PWM_1_SetInterruptMode,"ax",%progbits
 1214              		.align	2
 1215              		.global	PWM_1_SetInterruptMode
 1216              		.code	16
 1217              		.thumb_func
 1218              		.type	PWM_1_SetInterruptMode, %function
 1219              	PWM_1_SetInterruptMode:
 1220              	.LFB35:
1299:.\Generated_Source\PSoC4/PWM_1.c **** 
1300:.\Generated_Source\PSoC4/PWM_1.c **** 
1301:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1302:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetInterruptMode
1303:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1304:.\Generated_Source\PSoC4/PWM_1.c **** *
1305:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1306:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the interrupt mask to control which interrupt
1307:.\Generated_Source\PSoC4/PWM_1.c **** *  requests generate the interrupt signal.
1308:.\Generated_Source\PSoC4/PWM_1.c **** *
1309:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1310:.\Generated_Source\PSoC4/PWM_1.c **** *   interruptMask: Mask of bits to be enabled
1311:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1312:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_TC       - Terminal count mask
1313:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1314:.\Generated_Source\PSoC4/PWM_1.c **** *
1315:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1316:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1317:.\Generated_Source\PSoC4/PWM_1.c **** *
1318:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1319:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetInterruptMode(uint32 interruptMask)
1320:.\Generated_Source\PSoC4/PWM_1.c **** {
 1221              		.loc 1 1320 0
 1222              		.cfi_startproc
 1223              	.LVL85:
1321:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_INTERRUPT_MASK_REG =  interruptMask;
 1224              		.loc 1 1321 0
 1225 0000 014B     		ldr	r3, .L101
 1226 0002 1860     		str	r0, [r3]
1322:.\Generated_Source\PSoC4/PWM_1.c **** }
 1227              		.loc 1 1322 0
 1228              		@ sp needed
 1229 0004 7047     		bx	lr
 1230              	.L102:
 1231 0006 C046     		.align	2
 1232              	.L101:
 1233 0008 38010540 		.word	1074069816
 1234              		.cfi_endproc
 1235              	.LFE35:
 1236              		.size	PWM_1_SetInterruptMode, .-PWM_1_SetInterruptMode
 1237              		.section	.text.PWM_1_Init,"ax",%progbits
 1238              		.align	2
 1239              		.global	PWM_1_Init
 1240              		.code	16
 1241              		.thumb_func
 1242              		.type	PWM_1_Init, %function
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 46


 1243              	PWM_1_Init:
 1244              	.LFB0:
  39:.\Generated_Source\PSoC4/PWM_1.c **** 
 1245              		.loc 1 39 0
 1246              		.cfi_startproc
 1247 0000 38B5     		push	{r3, r4, r5, lr}
 1248              		.cfi_def_cfa_offset 16
 1249              		.cfi_offset 3, -16
 1250              		.cfi_offset 4, -12
 1251              		.cfi_offset 5, -8
 1252              		.cfi_offset 14, -4
  89:.\Generated_Source\PSoC4/PWM_1.c **** 
 1253              		.loc 1 89 0
 1254 0002 114C     		ldr	r4, .L104
 1255 0004 8023     		mov	r3, #128
 1256 0006 DB04     		lsl	r3, r3, #19
 1257 0008 2360     		str	r3, [r4]
  95:.\Generated_Source\PSoC4/PWM_1.c ****             
 1258              		.loc 1 95 0
 1259 000a 2368     		ldr	r3, [r4]
 1260 000c 8022     		mov	r2, #128
 1261 000e 5202     		lsl	r2, r2, #9
 1262 0010 1343     		orr	r3, r2
 1263 0012 2360     		str	r3, [r4]
 101:.\Generated_Source\PSoC4/PWM_1.c ****             #else 
 1264              		.loc 1 101 0
 1265 0014 0D4D     		ldr	r5, .L104+4
 1266 0016 281C     		mov	r0, r5
 1267 0018 FFF7FEFF 		bl	PWM_1_WriteCounter
 1268              	.LVL86:
 112:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (PWM_1__PWM == PWM_1_PWM_MODE) */
 1269              		.loc 1 112 0
 1270 001c 2368     		ldr	r3, [r4]
 1271 001e A022     		mov	r2, #160
 1272 0020 D200     		lsl	r2, r2, #3
 1273 0022 1343     		orr	r3, r2
 1274 0024 2360     		str	r3, [r4]
 116:.\Generated_Source\PSoC4/PWM_1.c ****     
 1275              		.loc 1 116 0
 1276 0026 0C22     		mov	r2, #12
 1277 0028 094B     		ldr	r3, .L104+8
 1278 002a 1A60     		str	r2, [r3]
 119:.\Generated_Source\PSoC4/PWM_1.c **** 
 1279              		.loc 1 119 0
 1280 002c 0020     		mov	r0, #0
 1281 002e FFF7FEFF 		bl	PWM_1_SetInterruptMode
 1282              	.LVL87:
 133:.\Generated_Source\PSoC4/PWM_1.c ****             #endif  /* ( PWM_1_PWM_RIGHT == PWM_1_PWM_ALIGN) */
 1283              		.loc 1 133 0
 1284 0032 1C22     		mov	r2, #28
 1285 0034 074B     		ldr	r3, .L104+12
 1286 0036 1A60     		str	r2, [r3]
 146:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WriteCompare(PWM_1_PWM_COMPARE_VALUE);
 1287              		.loc 1 146 0
 1288 0038 281C     		mov	r0, r5
 1289 003a FFF7FEFF 		bl	PWM_1_WritePeriod
 1290              	.LVL88:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 47


 147:.\Generated_Source\PSoC4/PWM_1.c **** 
 1291              		.loc 1 147 0
 1292 003e 0648     		ldr	r0, .L104+16
 1293 0040 FFF7FEFF 		bl	PWM_1_WriteCompare
 1294              	.LVL89:
 160:.\Generated_Source\PSoC4/PWM_1.c **** 
 1295              		.loc 1 160 0
 1296              		@ sp needed
 1297 0044 38BD     		pop	{r3, r4, r5, pc}
 1298              	.L105:
 1299 0046 C046     		.align	2
 1300              	.L104:
 1301 0048 00010540 		.word	1074069760
 1302 004c 10270000 		.word	10000
 1303 0050 24010540 		.word	1074069796
 1304 0054 28010540 		.word	1074069800
 1305 0058 88130000 		.word	5000
 1306              		.cfi_endproc
 1307              	.LFE0:
 1308              		.size	PWM_1_Init, .-PWM_1_Init
 1309              		.section	.text.PWM_1_Start,"ax",%progbits
 1310              		.align	2
 1311              		.global	PWM_1_Start
 1312              		.code	16
 1313              		.thumb_func
 1314              		.type	PWM_1_Start, %function
 1315              	PWM_1_Start:
 1316              	.LFB2:
 231:.\Generated_Source\PSoC4/PWM_1.c ****     if (0u == PWM_1_initVar)
 1317              		.loc 1 231 0
 1318              		.cfi_startproc
 1319 0000 08B5     		push	{r3, lr}
 1320              		.cfi_def_cfa_offset 8
 1321              		.cfi_offset 3, -8
 1322              		.cfi_offset 14, -4
 232:.\Generated_Source\PSoC4/PWM_1.c ****     {
 1323              		.loc 1 232 0
 1324 0002 064B     		ldr	r3, .L108
 1325 0004 1B78     		ldrb	r3, [r3]
 1326 0006 002B     		cmp	r3, #0
 1327 0008 04D1     		bne	.L107
 234:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_initVar = 1u;
 1328              		.loc 1 234 0
 1329 000a FFF7FEFF 		bl	PWM_1_Init
 1330              	.LVL90:
 235:.\Generated_Source\PSoC4/PWM_1.c ****     }
 1331              		.loc 1 235 0
 1332 000e 0122     		mov	r2, #1
 1333 0010 024B     		ldr	r3, .L108
 1334 0012 1A70     		strb	r2, [r3]
 1335              	.L107:
 238:.\Generated_Source\PSoC4/PWM_1.c **** }
 1336              		.loc 1 238 0
 1337 0014 FFF7FEFF 		bl	PWM_1_Enable
 1338              	.LVL91:
 239:.\Generated_Source\PSoC4/PWM_1.c **** 
 1339              		.loc 1 239 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 48


 1340              		@ sp needed
 1341 0018 08BD     		pop	{r3, pc}
 1342              	.L109:
 1343 001a C046     		.align	2
 1344              	.L108:
 1345 001c 00000000 		.word	.LANCHOR0
 1346              		.cfi_endproc
 1347              	.LFE2:
 1348              		.size	PWM_1_Start, .-PWM_1_Start
 1349              		.section	.text.PWM_1_GetInterruptSourceMasked,"ax",%progbits
 1350              		.align	2
 1351              		.global	PWM_1_GetInterruptSourceMasked
 1352              		.code	16
 1353              		.thumb_func
 1354              		.type	PWM_1_GetInterruptSourceMasked, %function
 1355              	PWM_1_GetInterruptSourceMasked:
 1356              	.LFB36:
1323:.\Generated_Source\PSoC4/PWM_1.c **** 
1324:.\Generated_Source\PSoC4/PWM_1.c **** 
1325:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1326:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_GetInterruptSourceMasked
1327:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1328:.\Generated_Source\PSoC4/PWM_1.c **** *
1329:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1330:.\Generated_Source\PSoC4/PWM_1.c **** *  Gets the interrupt requests masked by the interrupt mask.
1331:.\Generated_Source\PSoC4/PWM_1.c **** *
1332:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1333:.\Generated_Source\PSoC4/PWM_1.c **** *   None
1334:.\Generated_Source\PSoC4/PWM_1.c **** *
1335:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1336:.\Generated_Source\PSoC4/PWM_1.c **** *  Masked interrupt source
1337:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1338:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_TC       - Terminal count mask
1339:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1340:.\Generated_Source\PSoC4/PWM_1.c **** *
1341:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1342:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_GetInterruptSourceMasked(void)
1343:.\Generated_Source\PSoC4/PWM_1.c **** {
 1357              		.loc 1 1343 0
 1358              		.cfi_startproc
1344:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_INTERRUPT_MASKED_REG);
 1359              		.loc 1 1344 0
 1360 0000 014B     		ldr	r3, .L111
 1361 0002 1868     		ldr	r0, [r3]
1345:.\Generated_Source\PSoC4/PWM_1.c **** }
 1362              		.loc 1 1345 0
 1363              		@ sp needed
 1364 0004 7047     		bx	lr
 1365              	.L112:
 1366 0006 C046     		.align	2
 1367              	.L111:
 1368 0008 3C010540 		.word	1074069820
 1369              		.cfi_endproc
 1370              	.LFE36:
 1371              		.size	PWM_1_GetInterruptSourceMasked, .-PWM_1_GetInterruptSourceMasked
 1372              		.section	.text.PWM_1_GetInterruptSource,"ax",%progbits
 1373              		.align	2
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 49


 1374              		.global	PWM_1_GetInterruptSource
 1375              		.code	16
 1376              		.thumb_func
 1377              		.type	PWM_1_GetInterruptSource, %function
 1378              	PWM_1_GetInterruptSource:
 1379              	.LFB37:
1346:.\Generated_Source\PSoC4/PWM_1.c **** 
1347:.\Generated_Source\PSoC4/PWM_1.c **** 
1348:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1349:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_GetInterruptSource
1350:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1351:.\Generated_Source\PSoC4/PWM_1.c **** *
1352:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1353:.\Generated_Source\PSoC4/PWM_1.c **** *  Gets the interrupt requests (without masking).
1354:.\Generated_Source\PSoC4/PWM_1.c **** *
1355:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1356:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1357:.\Generated_Source\PSoC4/PWM_1.c **** *
1358:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1359:.\Generated_Source\PSoC4/PWM_1.c **** *  Interrupt request value
1360:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1361:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_TC       - Terminal count mask
1362:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1363:.\Generated_Source\PSoC4/PWM_1.c **** *
1364:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1365:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_GetInterruptSource(void)
1366:.\Generated_Source\PSoC4/PWM_1.c **** {
 1380              		.loc 1 1366 0
 1381              		.cfi_startproc
1367:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_INTERRUPT_REQ_REG);
 1382              		.loc 1 1367 0
 1383 0000 014B     		ldr	r3, .L114
 1384 0002 1868     		ldr	r0, [r3]
1368:.\Generated_Source\PSoC4/PWM_1.c **** }
 1385              		.loc 1 1368 0
 1386              		@ sp needed
 1387 0004 7047     		bx	lr
 1388              	.L115:
 1389 0006 C046     		.align	2
 1390              	.L114:
 1391 0008 30010540 		.word	1074069808
 1392              		.cfi_endproc
 1393              	.LFE37:
 1394              		.size	PWM_1_GetInterruptSource, .-PWM_1_GetInterruptSource
 1395              		.section	.text.PWM_1_ClearInterrupt,"ax",%progbits
 1396              		.align	2
 1397              		.global	PWM_1_ClearInterrupt
 1398              		.code	16
 1399              		.thumb_func
 1400              		.type	PWM_1_ClearInterrupt, %function
 1401              	PWM_1_ClearInterrupt:
 1402              	.LFB38:
1369:.\Generated_Source\PSoC4/PWM_1.c **** 
1370:.\Generated_Source\PSoC4/PWM_1.c **** 
1371:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1372:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ClearInterrupt
1373:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 50


1374:.\Generated_Source\PSoC4/PWM_1.c **** *
1375:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1376:.\Generated_Source\PSoC4/PWM_1.c **** *  Clears the interrupt request.
1377:.\Generated_Source\PSoC4/PWM_1.c **** *
1378:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1379:.\Generated_Source\PSoC4/PWM_1.c **** *   interruptMask: Mask of interrupts to clear
1380:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1381:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_TC       - Terminal count mask
1382:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1383:.\Generated_Source\PSoC4/PWM_1.c **** *
1384:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1385:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1386:.\Generated_Source\PSoC4/PWM_1.c **** *
1387:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1388:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_ClearInterrupt(uint32 interruptMask)
1389:.\Generated_Source\PSoC4/PWM_1.c **** {
 1403              		.loc 1 1389 0
 1404              		.cfi_startproc
 1405              	.LVL92:
1390:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_INTERRUPT_REQ_REG = interruptMask;
 1406              		.loc 1 1390 0
 1407 0000 014B     		ldr	r3, .L117
 1408 0002 1860     		str	r0, [r3]
1391:.\Generated_Source\PSoC4/PWM_1.c **** }
 1409              		.loc 1 1391 0
 1410              		@ sp needed
 1411 0004 7047     		bx	lr
 1412              	.L118:
 1413 0006 C046     		.align	2
 1414              	.L117:
 1415 0008 30010540 		.word	1074069808
 1416              		.cfi_endproc
 1417              	.LFE38:
 1418              		.size	PWM_1_ClearInterrupt, .-PWM_1_ClearInterrupt
 1419              		.section	.text.PWM_1_SetInterrupt,"ax",%progbits
 1420              		.align	2
 1421              		.global	PWM_1_SetInterrupt
 1422              		.code	16
 1423              		.thumb_func
 1424              		.type	PWM_1_SetInterrupt, %function
 1425              	PWM_1_SetInterrupt:
 1426              	.LFB39:
1392:.\Generated_Source\PSoC4/PWM_1.c **** 
1393:.\Generated_Source\PSoC4/PWM_1.c **** 
1394:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1395:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetInterrupt
1396:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1397:.\Generated_Source\PSoC4/PWM_1.c **** *
1398:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1399:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets a software interrupt request.
1400:.\Generated_Source\PSoC4/PWM_1.c **** *
1401:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1402:.\Generated_Source\PSoC4/PWM_1.c **** *   interruptMask: Mask of interrupts to set
1403:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1404:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_TC       - Terminal count mask
1405:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1406:.\Generated_Source\PSoC4/PWM_1.c **** *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 51


1407:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1408:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1409:.\Generated_Source\PSoC4/PWM_1.c **** *
1410:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1411:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetInterrupt(uint32 interruptMask)
1412:.\Generated_Source\PSoC4/PWM_1.c **** {
 1427              		.loc 1 1412 0
 1428              		.cfi_startproc
 1429              	.LVL93:
1413:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_INTERRUPT_SET_REG = interruptMask;
 1430              		.loc 1 1413 0
 1431 0000 014B     		ldr	r3, .L120
 1432 0002 1860     		str	r0, [r3]
1414:.\Generated_Source\PSoC4/PWM_1.c **** }
 1433              		.loc 1 1414 0
 1434              		@ sp needed
 1435 0004 7047     		bx	lr
 1436              	.L121:
 1437 0006 C046     		.align	2
 1438              	.L120:
 1439 0008 34010540 		.word	1074069812
 1440              		.cfi_endproc
 1441              	.LFE39:
 1442              		.size	PWM_1_SetInterrupt, .-PWM_1_SetInterrupt
 1443              		.global	PWM_1_initVar
 1444              		.bss
 1445              		.set	.LANCHOR0,. + 0
 1446              		.type	PWM_1_initVar, %object
 1447              		.size	PWM_1_initVar, 1
 1448              	PWM_1_initVar:
 1449 0000 00       		.space	1
 1450              		.text
 1451              	.Letext0:
 1452              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1453              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1454              		.section	.debug_info,"",%progbits
 1455              	.Ldebug_info0:
 1456 0000 EE080000 		.4byte	0x8ee
 1457 0004 0400     		.2byte	0x4
 1458 0006 00000000 		.4byte	.Ldebug_abbrev0
 1459 000a 04       		.byte	0x4
 1460 000b 01       		.uleb128 0x1
 1461 000c FE020000 		.4byte	.LASF76
 1462 0010 01       		.byte	0x1
 1463 0011 85020000 		.4byte	.LASF77
 1464 0015 55010000 		.4byte	.LASF78
 1465 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1466 001d 00000000 		.4byte	0
 1467 0021 00000000 		.4byte	.Ldebug_line0
 1468 0025 02       		.uleb128 0x2
 1469 0026 01       		.byte	0x1
 1470 0027 06       		.byte	0x6
 1471 0028 D0000000 		.4byte	.LASF0
 1472 002c 02       		.uleb128 0x2
 1473 002d 01       		.byte	0x1
 1474 002e 08       		.byte	0x8
 1475 002f D6030000 		.4byte	.LASF1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 52


 1476 0033 02       		.uleb128 0x2
 1477 0034 02       		.byte	0x2
 1478 0035 05       		.byte	0x5
 1479 0036 1F040000 		.4byte	.LASF2
 1480 003a 02       		.uleb128 0x2
 1481 003b 02       		.byte	0x2
 1482 003c 07       		.byte	0x7
 1483 003d 04020000 		.4byte	.LASF3
 1484 0041 02       		.uleb128 0x2
 1485 0042 04       		.byte	0x4
 1486 0043 05       		.byte	0x5
 1487 0044 02010000 		.4byte	.LASF4
 1488 0048 02       		.uleb128 0x2
 1489 0049 04       		.byte	0x4
 1490 004a 07       		.byte	0x7
 1491 004b AE010000 		.4byte	.LASF5
 1492 004f 02       		.uleb128 0x2
 1493 0050 08       		.byte	0x8
 1494 0051 05       		.byte	0x5
 1495 0052 C2000000 		.4byte	.LASF6
 1496 0056 02       		.uleb128 0x2
 1497 0057 08       		.byte	0x8
 1498 0058 07       		.byte	0x7
 1499 0059 6E000000 		.4byte	.LASF7
 1500 005d 03       		.uleb128 0x3
 1501 005e 04       		.byte	0x4
 1502 005f 05       		.byte	0x5
 1503 0060 696E7400 		.ascii	"int\000"
 1504 0064 02       		.uleb128 0x2
 1505 0065 04       		.byte	0x4
 1506 0066 07       		.byte	0x7
 1507 0067 8B010000 		.4byte	.LASF8
 1508 006b 04       		.uleb128 0x4
 1509 006c 0B010000 		.4byte	.LASF9
 1510 0070 02       		.byte	0x2
 1511 0071 9801     		.2byte	0x198
 1512 0073 2C000000 		.4byte	0x2c
 1513 0077 04       		.uleb128 0x4
 1514 0078 3D010000 		.4byte	.LASF10
 1515 007c 02       		.byte	0x2
 1516 007d 9A01     		.2byte	0x19a
 1517 007f 48000000 		.4byte	0x48
 1518 0083 02       		.uleb128 0x2
 1519 0084 04       		.byte	0x4
 1520 0085 04       		.byte	0x4
 1521 0086 8C030000 		.4byte	.LASF11
 1522 008a 02       		.uleb128 0x2
 1523 008b 08       		.byte	0x8
 1524 008c 04       		.byte	0x4
 1525 008d 11010000 		.4byte	.LASF12
 1526 0091 02       		.uleb128 0x2
 1527 0092 01       		.byte	0x1
 1528 0093 08       		.byte	0x8
 1529 0094 74040000 		.4byte	.LASF13
 1530 0098 04       		.uleb128 0x4
 1531 0099 3D020000 		.4byte	.LASF14
 1532 009d 02       		.byte	0x2
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 53


 1533 009e 4402     		.2byte	0x244
 1534 00a0 A4000000 		.4byte	0xa4
 1535 00a4 05       		.uleb128 0x5
 1536 00a5 77000000 		.4byte	0x77
 1537 00a9 02       		.uleb128 0x2
 1538 00aa 04       		.byte	0x4
 1539 00ab 07       		.byte	0x7
 1540 00ac 6D020000 		.4byte	.LASF15
 1541 00b0 06       		.uleb128 0x6
 1542 00b1 25020000 		.4byte	.LASF16
 1543 00b5 01       		.byte	0x1
 1544 00b6 B1       		.byte	0xb1
 1545 00b7 00000000 		.4byte	.LFB1
 1546 00bb 1C000000 		.4byte	.LFE1-.LFB1
 1547 00bf 01       		.uleb128 0x1
 1548 00c0 9C       		.byte	0x9c
 1549 00c1 E7000000 		.4byte	0xe7
 1550 00c5 07       		.uleb128 0x7
 1551 00c6 08050000 		.4byte	.LASF18
 1552 00ca 01       		.byte	0x1
 1553 00cb B3       		.byte	0xb3
 1554 00cc 6B000000 		.4byte	0x6b
 1555 00d0 00000000 		.4byte	.LLST0
 1556 00d4 08       		.uleb128 0x8
 1557 00d5 06000000 		.4byte	.LVL0
 1558 00d9 D9080000 		.4byte	0x8d9
 1559 00dd 08       		.uleb128 0x8
 1560 00de 14000000 		.4byte	.LVL1
 1561 00e2 E4080000 		.4byte	0x8e4
 1562 00e6 00       		.byte	0
 1563 00e7 09       		.uleb128 0x9
 1564 00e8 1C000000 		.4byte	.LASF17
 1565 00ec 01       		.byte	0x1
 1566 00ed 0001     		.2byte	0x100
 1567 00ef 00000000 		.4byte	.LFB3
 1568 00f3 1C000000 		.4byte	.LFE3-.LFB3
 1569 00f7 01       		.uleb128 0x1
 1570 00f8 9C       		.byte	0x9c
 1571 00f9 20010000 		.4byte	0x120
 1572 00fd 0A       		.uleb128 0xa
 1573 00fe 08050000 		.4byte	.LASF18
 1574 0102 01       		.byte	0x1
 1575 0103 0201     		.2byte	0x102
 1576 0105 6B000000 		.4byte	0x6b
 1577 0109 13000000 		.4byte	.LLST1
 1578 010d 08       		.uleb128 0x8
 1579 010e 06000000 		.4byte	.LVL2
 1580 0112 D9080000 		.4byte	0x8d9
 1581 0116 08       		.uleb128 0x8
 1582 0117 14000000 		.4byte	.LVL3
 1583 011b E4080000 		.4byte	0x8e4
 1584 011f 00       		.byte	0
 1585 0120 09       		.uleb128 0x9
 1586 0121 98010000 		.4byte	.LASF19
 1587 0125 01       		.byte	0x1
 1588 0126 2501     		.2byte	0x125
 1589 0128 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 54


 1590 012c 28000000 		.4byte	.LFE4-.LFB4
 1591 0130 01       		.uleb128 0x1
 1592 0131 9C       		.byte	0x9c
 1593 0132 69010000 		.4byte	0x169
 1594 0136 0B       		.uleb128 0xb
 1595 0137 79040000 		.4byte	.LASF21
 1596 013b 01       		.byte	0x1
 1597 013c 2501     		.2byte	0x125
 1598 013e 77000000 		.4byte	0x77
 1599 0142 26000000 		.4byte	.LLST2
 1600 0146 0A       		.uleb128 0xa
 1601 0147 08050000 		.4byte	.LASF18
 1602 014b 01       		.byte	0x1
 1603 014c 2701     		.2byte	0x127
 1604 014e 6B000000 		.4byte	0x6b
 1605 0152 52000000 		.4byte	.LLST3
 1606 0156 08       		.uleb128 0x8
 1607 0157 08000000 		.4byte	.LVL5
 1608 015b D9080000 		.4byte	0x8d9
 1609 015f 08       		.uleb128 0x8
 1610 0160 1C000000 		.4byte	.LVL7
 1611 0164 E4080000 		.4byte	0x8e4
 1612 0168 00       		.byte	0
 1613 0169 09       		.uleb128 0x9
 1614 016a 4E050000 		.4byte	.LASF20
 1615 016e 01       		.byte	0x1
 1616 016f 4601     		.2byte	0x146
 1617 0171 00000000 		.4byte	.LFB5
 1618 0175 28000000 		.4byte	.LFE5-.LFB5
 1619 0179 01       		.uleb128 0x1
 1620 017a 9C       		.byte	0x9c
 1621 017b B2010000 		.4byte	0x1b2
 1622 017f 0B       		.uleb128 0xb
 1623 0180 85000000 		.4byte	.LASF22
 1624 0184 01       		.byte	0x1
 1625 0185 4601     		.2byte	0x146
 1626 0187 77000000 		.4byte	0x77
 1627 018b 65000000 		.4byte	.LLST4
 1628 018f 0A       		.uleb128 0xa
 1629 0190 08050000 		.4byte	.LASF18
 1630 0194 01       		.byte	0x1
 1631 0195 4801     		.2byte	0x148
 1632 0197 6B000000 		.4byte	0x6b
 1633 019b 91000000 		.4byte	.LLST5
 1634 019f 08       		.uleb128 0x8
 1635 01a0 08000000 		.4byte	.LVL9
 1636 01a4 D9080000 		.4byte	0x8d9
 1637 01a8 08       		.uleb128 0x8
 1638 01a9 1C000000 		.4byte	.LVL11
 1639 01ad E4080000 		.4byte	0x8e4
 1640 01b1 00       		.byte	0
 1641 01b2 09       		.uleb128 0x9
 1642 01b3 93040000 		.4byte	.LASF23
 1643 01b7 01       		.byte	0x1
 1644 01b8 6B01     		.2byte	0x16b
 1645 01ba 00000000 		.4byte	.LFB6
 1646 01be 28000000 		.4byte	.LFE6-.LFB6
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 55


 1647 01c2 01       		.uleb128 0x1
 1648 01c3 9C       		.byte	0x9c
 1649 01c4 FB010000 		.4byte	0x1fb
 1650 01c8 0B       		.uleb128 0xb
 1651 01c9 92030000 		.4byte	.LASF24
 1652 01cd 01       		.byte	0x1
 1653 01ce 6B01     		.2byte	0x16b
 1654 01d0 77000000 		.4byte	0x77
 1655 01d4 A4000000 		.4byte	.LLST6
 1656 01d8 0A       		.uleb128 0xa
 1657 01d9 08050000 		.4byte	.LASF18
 1658 01dd 01       		.byte	0x1
 1659 01de 6D01     		.2byte	0x16d
 1660 01e0 6B000000 		.4byte	0x6b
 1661 01e4 D0000000 		.4byte	.LLST7
 1662 01e8 08       		.uleb128 0x8
 1663 01e9 08000000 		.4byte	.LVL13
 1664 01ed D9080000 		.4byte	0x8d9
 1665 01f1 08       		.uleb128 0x8
 1666 01f2 1C000000 		.4byte	.LVL15
 1667 01f6 E4080000 		.4byte	0x8e4
 1668 01fa 00       		.byte	0
 1669 01fb 09       		.uleb128 0x9
 1670 01fc 8C000000 		.4byte	.LASF25
 1671 0200 01       		.byte	0x1
 1672 0201 8B01     		.2byte	0x18b
 1673 0203 00000000 		.4byte	.LFB7
 1674 0207 2C000000 		.4byte	.LFE7-.LFB7
 1675 020b 01       		.uleb128 0x1
 1676 020c 9C       		.byte	0x9c
 1677 020d 44020000 		.4byte	0x244
 1678 0211 0B       		.uleb128 0xb
 1679 0212 17020000 		.4byte	.LASF26
 1680 0216 01       		.byte	0x1
 1681 0217 8B01     		.2byte	0x18b
 1682 0219 77000000 		.4byte	0x77
 1683 021d E3000000 		.4byte	.LLST8
 1684 0221 0A       		.uleb128 0xa
 1685 0222 08050000 		.4byte	.LASF18
 1686 0226 01       		.byte	0x1
 1687 0227 8D01     		.2byte	0x18d
 1688 0229 6B000000 		.4byte	0x6b
 1689 022d 0F010000 		.4byte	.LLST9
 1690 0231 08       		.uleb128 0x8
 1691 0232 08000000 		.4byte	.LVL17
 1692 0236 D9080000 		.4byte	0x8d9
 1693 023a 08       		.uleb128 0x8
 1694 023b 22000000 		.4byte	.LVL19
 1695 023f E4080000 		.4byte	0x8e4
 1696 0243 00       		.byte	0
 1697 0244 09       		.uleb128 0x9
 1698 0245 AE020000 		.4byte	.LASF27
 1699 0249 01       		.byte	0x1
 1700 024a C101     		.2byte	0x1c1
 1701 024c 00000000 		.4byte	.LFB8
 1702 0250 10000000 		.4byte	.LFE8-.LFB8
 1703 0254 01       		.uleb128 0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 56


 1704 0255 9C       		.byte	0x9c
 1705 0256 6B020000 		.4byte	0x26b
 1706 025a 0B       		.uleb128 0xb
 1707 025b C0010000 		.4byte	.LASF28
 1708 025f 01       		.byte	0x1
 1709 0260 C101     		.2byte	0x1c1
 1710 0262 77000000 		.4byte	0x77
 1711 0266 22010000 		.4byte	.LLST10
 1712 026a 00       		.byte	0
 1713 026b 09       		.uleb128 0x9
 1714 026c F9030000 		.4byte	.LASF29
 1715 0270 01       		.byte	0x1
 1716 0271 E501     		.2byte	0x1e5
 1717 0273 00000000 		.4byte	.LFB9
 1718 0277 28000000 		.4byte	.LFE9-.LFB9
 1719 027b 01       		.uleb128 0x1
 1720 027c 9C       		.byte	0x9c
 1721 027d B4020000 		.4byte	0x2b4
 1722 0281 0B       		.uleb128 0xb
 1723 0282 76020000 		.4byte	.LASF30
 1724 0286 01       		.byte	0x1
 1725 0287 E501     		.2byte	0x1e5
 1726 0289 77000000 		.4byte	0x77
 1727 028d 43010000 		.4byte	.LLST11
 1728 0291 0A       		.uleb128 0xa
 1729 0292 08050000 		.4byte	.LASF18
 1730 0296 01       		.byte	0x1
 1731 0297 E701     		.2byte	0x1e7
 1732 0299 6B000000 		.4byte	0x6b
 1733 029d 6F010000 		.4byte	.LLST12
 1734 02a1 08       		.uleb128 0x8
 1735 02a2 08000000 		.4byte	.LVL23
 1736 02a6 D9080000 		.4byte	0x8d9
 1737 02aa 08       		.uleb128 0x8
 1738 02ab 22000000 		.4byte	.LVL25
 1739 02af E4080000 		.4byte	0x8e4
 1740 02b3 00       		.byte	0
 1741 02b4 09       		.uleb128 0x9
 1742 02b5 56020000 		.4byte	.LASF31
 1743 02b9 01       		.byte	0x1
 1744 02ba 0702     		.2byte	0x207
 1745 02bc 00000000 		.4byte	.LFB10
 1746 02c0 28000000 		.4byte	.LFE10-.LFB10
 1747 02c4 01       		.uleb128 0x1
 1748 02c5 9C       		.byte	0x9c
 1749 02c6 FD020000 		.4byte	0x2fd
 1750 02ca 0B       		.uleb128 0xb
 1751 02cb 0E040000 		.4byte	.LASF32
 1752 02cf 01       		.byte	0x1
 1753 02d0 0702     		.2byte	0x207
 1754 02d2 77000000 		.4byte	0x77
 1755 02d6 82010000 		.4byte	.LLST13
 1756 02da 0A       		.uleb128 0xa
 1757 02db 08050000 		.4byte	.LASF18
 1758 02df 01       		.byte	0x1
 1759 02e0 0902     		.2byte	0x209
 1760 02e2 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 57


 1761 02e6 AE010000 		.4byte	.LLST14
 1762 02ea 08       		.uleb128 0x8
 1763 02eb 08000000 		.4byte	.LVL27
 1764 02ef D9080000 		.4byte	0x8d9
 1765 02f3 08       		.uleb128 0x8
 1766 02f4 22000000 		.4byte	.LVL29
 1767 02f8 E4080000 		.4byte	0x8e4
 1768 02fc 00       		.byte	0
 1769 02fd 09       		.uleb128 0x9
 1770 02fe E4030000 		.4byte	.LASF33
 1771 0302 01       		.byte	0x1
 1772 0303 2802     		.2byte	0x228
 1773 0305 00000000 		.4byte	.LFB11
 1774 0309 2C000000 		.4byte	.LFE11-.LFB11
 1775 030d 01       		.uleb128 0x1
 1776 030e 9C       		.byte	0x9c
 1777 030f 46030000 		.4byte	0x346
 1778 0313 0B       		.uleb128 0xb
 1779 0314 82010000 		.4byte	.LASF34
 1780 0318 01       		.byte	0x1
 1781 0319 2802     		.2byte	0x228
 1782 031b 77000000 		.4byte	0x77
 1783 031f C1010000 		.4byte	.LLST15
 1784 0323 0A       		.uleb128 0xa
 1785 0324 08050000 		.4byte	.LASF18
 1786 0328 01       		.byte	0x1
 1787 0329 2A02     		.2byte	0x22a
 1788 032b 6B000000 		.4byte	0x6b
 1789 032f ED010000 		.4byte	.LLST16
 1790 0333 08       		.uleb128 0x8
 1791 0334 08000000 		.4byte	.LVL31
 1792 0338 D9080000 		.4byte	0x8d9
 1793 033c 08       		.uleb128 0x8
 1794 033d 20000000 		.4byte	.LVL33
 1795 0341 E4080000 		.4byte	0x8e4
 1796 0345 00       		.byte	0
 1797 0346 09       		.uleb128 0x9
 1798 0347 B0030000 		.4byte	.LASF35
 1799 034b 01       		.byte	0x1
 1800 034c 4902     		.2byte	0x249
 1801 034e 00000000 		.4byte	.LFB12
 1802 0352 28000000 		.4byte	.LFE12-.LFB12
 1803 0356 01       		.uleb128 0x1
 1804 0357 9C       		.byte	0x9c
 1805 0358 8F030000 		.4byte	0x38f
 1806 035c 0B       		.uleb128 0xb
 1807 035d 50010000 		.4byte	.LASF36
 1808 0361 01       		.byte	0x1
 1809 0362 4902     		.2byte	0x249
 1810 0364 77000000 		.4byte	0x77
 1811 0368 00020000 		.4byte	.LLST17
 1812 036c 0A       		.uleb128 0xa
 1813 036d 08050000 		.4byte	.LASF18
 1814 0371 01       		.byte	0x1
 1815 0372 4B02     		.2byte	0x24b
 1816 0374 6B000000 		.4byte	0x6b
 1817 0378 2C020000 		.4byte	.LLST18
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 58


 1818 037c 08       		.uleb128 0x8
 1819 037d 08000000 		.4byte	.LVL35
 1820 0381 D9080000 		.4byte	0x8d9
 1821 0385 08       		.uleb128 0x8
 1822 0386 1C000000 		.4byte	.LVL37
 1823 038a E4080000 		.4byte	0x8e4
 1824 038e 00       		.byte	0
 1825 038f 09       		.uleb128 0x9
 1826 0390 43020000 		.4byte	.LASF37
 1827 0394 01       		.byte	0x1
 1828 0395 6702     		.2byte	0x267
 1829 0397 00000000 		.4byte	.LFB13
 1830 039b 10000000 		.4byte	.LFE13-.LFB13
 1831 039f 01       		.uleb128 0x1
 1832 03a0 9C       		.byte	0x9c
 1833 03a1 B6030000 		.4byte	0x3b6
 1834 03a5 0B       		.uleb128 0xb
 1835 03a6 00000000 		.4byte	.LASF38
 1836 03aa 01       		.byte	0x1
 1837 03ab 6702     		.2byte	0x267
 1838 03ad 77000000 		.4byte	0x77
 1839 03b1 3F020000 		.4byte	.LLST19
 1840 03b5 00       		.byte	0
 1841 03b6 0C       		.uleb128 0xc
 1842 03b7 18010000 		.4byte	.LASF43
 1843 03bb 01       		.byte	0x1
 1844 03bc 7B02     		.2byte	0x27b
 1845 03be 77000000 		.4byte	0x77
 1846 03c2 00000000 		.4byte	.LFB14
 1847 03c6 10000000 		.4byte	.LFE14-.LFB14
 1848 03ca 01       		.uleb128 0x1
 1849 03cb 9C       		.byte	0x9c
 1850 03cc 09       		.uleb128 0x9
 1851 03cd BF020000 		.4byte	.LASF39
 1852 03d1 01       		.byte	0x1
 1853 03d2 9802     		.2byte	0x298
 1854 03d4 00000000 		.4byte	.LFB15
 1855 03d8 28000000 		.4byte	.LFE15-.LFB15
 1856 03dc 01       		.uleb128 0x1
 1857 03dd 9C       		.byte	0x9c
 1858 03de 15040000 		.4byte	0x415
 1859 03e2 0B       		.uleb128 0xb
 1860 03e3 D1040000 		.4byte	.LASF40
 1861 03e7 01       		.byte	0x1
 1862 03e8 9802     		.2byte	0x298
 1863 03ea 77000000 		.4byte	0x77
 1864 03ee 60020000 		.4byte	.LLST20
 1865 03f2 0A       		.uleb128 0xa
 1866 03f3 08050000 		.4byte	.LASF18
 1867 03f7 01       		.byte	0x1
 1868 03f8 9A02     		.2byte	0x29a
 1869 03fa 6B000000 		.4byte	0x6b
 1870 03fe 8C020000 		.4byte	.LLST21
 1871 0402 08       		.uleb128 0x8
 1872 0403 08000000 		.4byte	.LVL41
 1873 0407 D9080000 		.4byte	0x8d9
 1874 040b 08       		.uleb128 0x8
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 59


 1875 040c 1C000000 		.4byte	.LVL43
 1876 0410 E4080000 		.4byte	0x8e4
 1877 0414 00       		.byte	0
 1878 0415 09       		.uleb128 0x9
 1879 0416 19050000 		.4byte	.LASF41
 1880 041a 01       		.byte	0x1
 1881 041b B502     		.2byte	0x2b5
 1882 041d 00000000 		.4byte	.LFB16
 1883 0421 10000000 		.4byte	.LFE16-.LFB16
 1884 0425 01       		.uleb128 0x1
 1885 0426 9C       		.byte	0x9c
 1886 0427 3C040000 		.4byte	0x43c
 1887 042b 0B       		.uleb128 0xb
 1888 042c 67000000 		.4byte	.LASF42
 1889 0430 01       		.byte	0x1
 1890 0431 B502     		.2byte	0x2b5
 1891 0433 77000000 		.4byte	0x77
 1892 0437 9F020000 		.4byte	.LLST22
 1893 043b 00       		.byte	0
 1894 043c 0C       		.uleb128 0xc
 1895 043d E0010000 		.4byte	.LASF44
 1896 0441 01       		.byte	0x1
 1897 0442 C902     		.2byte	0x2c9
 1898 0444 77000000 		.4byte	0x77
 1899 0448 00000000 		.4byte	.LFB17
 1900 044c 10000000 		.4byte	.LFE17-.LFB17
 1901 0450 01       		.uleb128 0x1
 1902 0451 9C       		.byte	0x9c
 1903 0452 09       		.uleb128 0x9
 1904 0453 E9020000 		.4byte	.LASF45
 1905 0457 01       		.byte	0x1
 1906 0458 E302     		.2byte	0x2e3
 1907 045a 00000000 		.4byte	.LFB18
 1908 045e 24000000 		.4byte	.LFE18-.LFB18
 1909 0462 01       		.uleb128 0x1
 1910 0463 9C       		.byte	0x9c
 1911 0464 9B040000 		.4byte	0x49b
 1912 0468 0B       		.uleb128 0xb
 1913 0469 5E050000 		.4byte	.LASF46
 1914 046d 01       		.byte	0x1
 1915 046e E302     		.2byte	0x2e3
 1916 0470 77000000 		.4byte	0x77
 1917 0474 C0020000 		.4byte	.LLST23
 1918 0478 0A       		.uleb128 0xa
 1919 0479 08050000 		.4byte	.LASF18
 1920 047d 01       		.byte	0x1
 1921 047e E502     		.2byte	0x2e5
 1922 0480 6B000000 		.4byte	0x6b
 1923 0484 EC020000 		.4byte	.LLST24
 1924 0488 08       		.uleb128 0x8
 1925 0489 08000000 		.4byte	.LVL47
 1926 048d D9080000 		.4byte	0x8d9
 1927 0491 08       		.uleb128 0x8
 1928 0492 1E000000 		.4byte	.LVL49
 1929 0496 E4080000 		.4byte	0x8e4
 1930 049a 00       		.byte	0
 1931 049b 09       		.uleb128 0x9
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 60


 1932 049c 52000000 		.4byte	.LASF47
 1933 04a0 01       		.byte	0x1
 1934 04a1 FE02     		.2byte	0x2fe
 1935 04a3 00000000 		.4byte	.LFB19
 1936 04a7 10000000 		.4byte	.LFE19-.LFB19
 1937 04ab 01       		.uleb128 0x1
 1938 04ac 9C       		.byte	0x9c
 1939 04ad C2040000 		.4byte	0x4c2
 1940 04b1 0B       		.uleb128 0xb
 1941 04b2 69050000 		.4byte	.LASF48
 1942 04b6 01       		.byte	0x1
 1943 04b7 FE02     		.2byte	0x2fe
 1944 04b9 77000000 		.4byte	0x77
 1945 04bd FF020000 		.4byte	.LLST25
 1946 04c1 00       		.byte	0
 1947 04c2 0C       		.uleb128 0xc
 1948 04c3 9C030000 		.4byte	.LASF49
 1949 04c7 01       		.byte	0x1
 1950 04c8 1203     		.2byte	0x312
 1951 04ca 77000000 		.4byte	0x77
 1952 04ce 00000000 		.4byte	.LFB20
 1953 04d2 10000000 		.4byte	.LFE20-.LFB20
 1954 04d6 01       		.uleb128 0x1
 1955 04d7 9C       		.byte	0x9c
 1956 04d8 09       		.uleb128 0x9
 1957 04d9 29040000 		.4byte	.LASF50
 1958 04dd 01       		.byte	0x1
 1959 04de 2C03     		.2byte	0x32c
 1960 04e0 00000000 		.4byte	.LFB21
 1961 04e4 28000000 		.4byte	.LFE21-.LFB21
 1962 04e8 01       		.uleb128 0x1
 1963 04e9 9C       		.byte	0x9c
 1964 04ea 21050000 		.4byte	0x521
 1965 04ee 0B       		.uleb128 0xb
 1966 04ef 5E050000 		.4byte	.LASF46
 1967 04f3 01       		.byte	0x1
 1968 04f4 2C03     		.2byte	0x32c
 1969 04f6 77000000 		.4byte	0x77
 1970 04fa 20030000 		.4byte	.LLST26
 1971 04fe 0A       		.uleb128 0xa
 1972 04ff 08050000 		.4byte	.LASF18
 1973 0503 01       		.byte	0x1
 1974 0504 2E03     		.2byte	0x32e
 1975 0506 6B000000 		.4byte	0x6b
 1976 050a 4C030000 		.4byte	.LLST27
 1977 050e 08       		.uleb128 0x8
 1978 050f 08000000 		.4byte	.LVL53
 1979 0513 D9080000 		.4byte	0x8d9
 1980 0517 08       		.uleb128 0x8
 1981 0518 22000000 		.4byte	.LVL55
 1982 051c E4080000 		.4byte	0x8e4
 1983 0520 00       		.byte	0
 1984 0521 09       		.uleb128 0x9
 1985 0522 F1010000 		.4byte	.LASF51
 1986 0526 01       		.byte	0x1
 1987 0527 5103     		.2byte	0x351
 1988 0529 00000000 		.4byte	.LFB22
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 61


 1989 052d 10000000 		.4byte	.LFE22-.LFB22
 1990 0531 01       		.uleb128 0x1
 1991 0532 9C       		.byte	0x9c
 1992 0533 48050000 		.4byte	0x548
 1993 0537 0B       		.uleb128 0xb
 1994 0538 A6020000 		.4byte	.LASF52
 1995 053c 01       		.byte	0x1
 1996 053d 5103     		.2byte	0x351
 1997 053f 77000000 		.4byte	0x77
 1998 0543 5F030000 		.4byte	.LLST28
 1999 0547 00       		.byte	0
 2000 0548 0C       		.uleb128 0xc
 2001 0549 9D000000 		.4byte	.LASF53
 2002 054d 01       		.byte	0x1
 2003 054e 8403     		.2byte	0x384
 2004 0550 77000000 		.4byte	0x77
 2005 0554 00000000 		.4byte	.LFB23
 2006 0558 10000000 		.4byte	.LFE23-.LFB23
 2007 055c 01       		.uleb128 0x1
 2008 055d 9C       		.byte	0x9c
 2009 055e 09       		.uleb128 0x9
 2010 055f BB040000 		.4byte	.LASF54
 2011 0563 01       		.byte	0x1
 2012 0564 BA03     		.2byte	0x3ba
 2013 0566 00000000 		.4byte	.LFB24
 2014 056a 10000000 		.4byte	.LFE24-.LFB24
 2015 056e 01       		.uleb128 0x1
 2016 056f 9C       		.byte	0x9c
 2017 0570 85050000 		.4byte	0x585
 2018 0574 0B       		.uleb128 0xb
 2019 0575 DD040000 		.4byte	.LASF55
 2020 0579 01       		.byte	0x1
 2021 057a BA03     		.2byte	0x3ba
 2022 057c 77000000 		.4byte	0x77
 2023 0580 80030000 		.4byte	.LLST29
 2024 0584 00       		.byte	0
 2025 0585 0C       		.uleb128 0xc
 2026 0586 D4020000 		.4byte	.LASF56
 2027 058a 01       		.byte	0x1
 2028 058b E803     		.2byte	0x3e8
 2029 058d 77000000 		.4byte	0x77
 2030 0591 00000000 		.4byte	.LFB25
 2031 0595 10000000 		.4byte	.LFE25-.LFB25
 2032 0599 01       		.uleb128 0x1
 2033 059a 9C       		.byte	0x9c
 2034 059b 0C       		.uleb128 0xc
 2035 059c 27000000 		.4byte	.LASF57
 2036 05a0 01       		.byte	0x1
 2037 05a1 1604     		.2byte	0x416
 2038 05a3 77000000 		.4byte	0x77
 2039 05a7 00000000 		.4byte	.LFB26
 2040 05ab 10000000 		.4byte	.LFE26-.LFB26
 2041 05af 01       		.uleb128 0x1
 2042 05b0 9C       		.byte	0x9c
 2043 05b1 0C       		.uleb128 0xc
 2044 05b2 DC000000 		.4byte	.LASF58
 2045 05b6 01       		.byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 62


 2046 05b7 2B04     		.2byte	0x42b
 2047 05b9 77000000 		.4byte	0x77
 2048 05bd 00000000 		.4byte	.LFB27
 2049 05c1 10000000 		.4byte	.LFE27-.LFB27
 2050 05c5 01       		.uleb128 0x1
 2051 05c6 9C       		.byte	0x9c
 2052 05c7 09       		.uleb128 0x9
 2053 05c8 2B050000 		.4byte	.LASF59
 2054 05cc 01       		.byte	0x1
 2055 05cd 4604     		.2byte	0x446
 2056 05cf 00000000 		.4byte	.LFB28
 2057 05d3 24000000 		.4byte	.LFE28-.LFB28
 2058 05d7 01       		.uleb128 0x1
 2059 05d8 9C       		.byte	0x9c
 2060 05d9 10060000 		.4byte	0x610
 2061 05dd 0B       		.uleb128 0xb
 2062 05de 44010000 		.4byte	.LASF60
 2063 05e2 01       		.byte	0x1
 2064 05e3 4604     		.2byte	0x446
 2065 05e5 77000000 		.4byte	0x77
 2066 05e9 A1030000 		.4byte	.LLST30
 2067 05ed 0A       		.uleb128 0xa
 2068 05ee 08050000 		.4byte	.LASF18
 2069 05f2 01       		.byte	0x1
 2070 05f3 4804     		.2byte	0x448
 2071 05f5 6B000000 		.4byte	0x6b
 2072 05f9 CD030000 		.4byte	.LLST31
 2073 05fd 08       		.uleb128 0x8
 2074 05fe 08000000 		.4byte	.LVL61
 2075 0602 D9080000 		.4byte	0x8d9
 2076 0606 08       		.uleb128 0x8
 2077 0607 1C000000 		.4byte	.LVL63
 2078 060b E4080000 		.4byte	0x8e4
 2079 060f 00       		.byte	0
 2080 0610 09       		.uleb128 0x9
 2081 0611 F4040000 		.4byte	.LASF61
 2082 0615 01       		.byte	0x1
 2083 0616 6704     		.2byte	0x467
 2084 0618 00000000 		.4byte	.LFB29
 2085 061c 24000000 		.4byte	.LFE29-.LFB29
 2086 0620 01       		.uleb128 0x1
 2087 0621 9C       		.byte	0x9c
 2088 0622 59060000 		.4byte	0x659
 2089 0626 0B       		.uleb128 0xb
 2090 0627 44010000 		.4byte	.LASF60
 2091 062b 01       		.byte	0x1
 2092 062c 6704     		.2byte	0x467
 2093 062e 77000000 		.4byte	0x77
 2094 0632 E0030000 		.4byte	.LLST32
 2095 0636 0A       		.uleb128 0xa
 2096 0637 08050000 		.4byte	.LASF18
 2097 063b 01       		.byte	0x1
 2098 063c 6904     		.2byte	0x469
 2099 063e 6B000000 		.4byte	0x6b
 2100 0642 0C040000 		.4byte	.LLST33
 2101 0646 08       		.uleb128 0x8
 2102 0647 08000000 		.4byte	.LVL65
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 63


 2103 064b D9080000 		.4byte	0x8d9
 2104 064f 08       		.uleb128 0x8
 2105 0650 1E000000 		.4byte	.LVL67
 2106 0654 E4080000 		.4byte	0x8e4
 2107 0658 00       		.byte	0
 2108 0659 09       		.uleb128 0x9
 2109 065a C3030000 		.4byte	.LASF62
 2110 065e 01       		.byte	0x1
 2111 065f 8804     		.2byte	0x488
 2112 0661 00000000 		.4byte	.LFB30
 2113 0665 28000000 		.4byte	.LFE30-.LFB30
 2114 0669 01       		.uleb128 0x1
 2115 066a 9C       		.byte	0x9c
 2116 066b A2060000 		.4byte	0x6a2
 2117 066f 0B       		.uleb128 0xb
 2118 0670 44010000 		.4byte	.LASF60
 2119 0674 01       		.byte	0x1
 2120 0675 8804     		.2byte	0x488
 2121 0677 77000000 		.4byte	0x77
 2122 067b 1F040000 		.4byte	.LLST34
 2123 067f 0A       		.uleb128 0xa
 2124 0680 08050000 		.4byte	.LASF18
 2125 0684 01       		.byte	0x1
 2126 0685 8A04     		.2byte	0x48a
 2127 0687 6B000000 		.4byte	0x6b
 2128 068b 4B040000 		.4byte	.LLST35
 2129 068f 08       		.uleb128 0x8
 2130 0690 08000000 		.4byte	.LVL69
 2131 0694 D9080000 		.4byte	0x8d9
 2132 0698 08       		.uleb128 0x8
 2133 0699 1E000000 		.4byte	.LVL71
 2134 069d E4080000 		.4byte	0x8e4
 2135 06a1 00       		.byte	0
 2136 06a2 09       		.uleb128 0x9
 2137 06a3 62040000 		.4byte	.LASF63
 2138 06a7 01       		.byte	0x1
 2139 06a8 A804     		.2byte	0x4a8
 2140 06aa 00000000 		.4byte	.LFB31
 2141 06ae 24000000 		.4byte	.LFE31-.LFB31
 2142 06b2 01       		.uleb128 0x1
 2143 06b3 9C       		.byte	0x9c
 2144 06b4 EB060000 		.4byte	0x6eb
 2145 06b8 0B       		.uleb128 0xb
 2146 06b9 44010000 		.4byte	.LASF60
 2147 06bd 01       		.byte	0x1
 2148 06be A804     		.2byte	0x4a8
 2149 06c0 77000000 		.4byte	0x77
 2150 06c4 5E040000 		.4byte	.LLST36
 2151 06c8 0A       		.uleb128 0xa
 2152 06c9 08050000 		.4byte	.LASF18
 2153 06cd 01       		.byte	0x1
 2154 06ce AA04     		.2byte	0x4aa
 2155 06d0 6B000000 		.4byte	0x6b
 2156 06d4 8A040000 		.4byte	.LLST37
 2157 06d8 08       		.uleb128 0x8
 2158 06d9 08000000 		.4byte	.LVL73
 2159 06dd D9080000 		.4byte	0x8d9
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 64


 2160 06e1 08       		.uleb128 0x8
 2161 06e2 1E000000 		.4byte	.LVL75
 2162 06e6 E4080000 		.4byte	0x8e4
 2163 06ea 00       		.byte	0
 2164 06eb 09       		.uleb128 0x9
 2165 06ec 2A010000 		.4byte	.LASF64
 2166 06f0 01       		.byte	0x1
 2167 06f1 C904     		.2byte	0x4c9
 2168 06f3 00000000 		.4byte	.LFB32
 2169 06f7 24000000 		.4byte	.LFE32-.LFB32
 2170 06fb 01       		.uleb128 0x1
 2171 06fc 9C       		.byte	0x9c
 2172 06fd 34070000 		.4byte	0x734
 2173 0701 0B       		.uleb128 0xb
 2174 0702 44010000 		.4byte	.LASF60
 2175 0706 01       		.byte	0x1
 2176 0707 C904     		.2byte	0x4c9
 2177 0709 77000000 		.4byte	0x77
 2178 070d 9D040000 		.4byte	.LLST38
 2179 0711 0A       		.uleb128 0xa
 2180 0712 08050000 		.4byte	.LASF18
 2181 0716 01       		.byte	0x1
 2182 0717 CB04     		.2byte	0x4cb
 2183 0719 6B000000 		.4byte	0x6b
 2184 071d C9040000 		.4byte	.LLST39
 2185 0721 08       		.uleb128 0x8
 2186 0722 08000000 		.4byte	.LVL77
 2187 0726 D9080000 		.4byte	0x8d9
 2188 072a 08       		.uleb128 0x8
 2189 072b 1E000000 		.4byte	.LVL79
 2190 072f E4080000 		.4byte	0x8e4
 2191 0733 00       		.byte	0
 2192 0734 09       		.uleb128 0x9
 2193 0735 7E040000 		.4byte	.LASF65
 2194 0739 01       		.byte	0x1
 2195 073a F104     		.2byte	0x4f1
 2196 073c 00000000 		.4byte	.LFB33
 2197 0740 1C000000 		.4byte	.LFE33-.LFB33
 2198 0744 01       		.uleb128 0x1
 2199 0745 9C       		.byte	0x9c
 2200 0746 8D070000 		.4byte	0x78d
 2201 074a 0B       		.uleb128 0xb
 2202 074b 50010000 		.4byte	.LASF36
 2203 074f 01       		.byte	0x1
 2204 0750 F104     		.2byte	0x4f1
 2205 0752 77000000 		.4byte	0x77
 2206 0756 DC040000 		.4byte	.LLST40
 2207 075a 0B       		.uleb128 0xb
 2208 075b A6010000 		.4byte	.LASF66
 2209 075f 01       		.byte	0x1
 2210 0760 F104     		.2byte	0x4f1
 2211 0762 77000000 		.4byte	0x77
 2212 0766 08050000 		.4byte	.LLST41
 2213 076a 0A       		.uleb128 0xa
 2214 076b 08050000 		.4byte	.LASF18
 2215 076f 01       		.byte	0x1
 2216 0770 F304     		.2byte	0x4f3
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 65


 2217 0772 6B000000 		.4byte	0x6b
 2218 0776 34050000 		.4byte	.LLST42
 2219 077a 08       		.uleb128 0x8
 2220 077b 0A000000 		.4byte	.LVL81
 2221 077f D9080000 		.4byte	0x8d9
 2222 0783 08       		.uleb128 0x8
 2223 0784 14000000 		.4byte	.LVL83
 2224 0788 E4080000 		.4byte	0x8e4
 2225 078c 00       		.byte	0
 2226 078d 0C       		.uleb128 0xc
 2227 078e F1000000 		.4byte	.LASF67
 2228 0792 01       		.byte	0x1
 2229 0793 0E05     		.2byte	0x50e
 2230 0795 77000000 		.4byte	0x77
 2231 0799 00000000 		.4byte	.LFB34
 2232 079d 14000000 		.4byte	.LFE34-.LFB34
 2233 07a1 01       		.uleb128 0x1
 2234 07a2 9C       		.byte	0x9c
 2235 07a3 09       		.uleb128 0x9
 2236 07a4 4B040000 		.4byte	.LASF68
 2237 07a8 01       		.byte	0x1
 2238 07a9 2705     		.2byte	0x527
 2239 07ab 00000000 		.4byte	.LFB35
 2240 07af 0C000000 		.4byte	.LFE35-.LFB35
 2241 07b3 01       		.uleb128 0x1
 2242 07b4 9C       		.byte	0x9c
 2243 07b5 C8070000 		.4byte	0x7c8
 2244 07b9 0D       		.uleb128 0xd
 2245 07ba 3D040000 		.4byte	.LASF69
 2246 07be 01       		.byte	0x1
 2247 07bf 2705     		.2byte	0x527
 2248 07c1 77000000 		.4byte	0x77
 2249 07c5 01       		.uleb128 0x1
 2250 07c6 50       		.byte	0x50
 2251 07c7 00       		.byte	0
 2252 07c8 06       		.uleb128 0x6
 2253 07c9 32020000 		.4byte	.LASF70
 2254 07cd 01       		.byte	0x1
 2255 07ce 26       		.byte	0x26
 2256 07cf 00000000 		.4byte	.LFB0
 2257 07d3 5C000000 		.4byte	.LFE0-.LFB0
 2258 07d7 01       		.uleb128 0x1
 2259 07d8 9C       		.byte	0x9c
 2260 07d9 2A080000 		.4byte	0x82a
 2261 07dd 0E       		.uleb128 0xe
 2262 07de 1C000000 		.4byte	.LVL86
 2263 07e2 8F030000 		.4byte	0x38f
 2264 07e6 F1070000 		.4byte	0x7f1
 2265 07ea 0F       		.uleb128 0xf
 2266 07eb 01       		.uleb128 0x1
 2267 07ec 50       		.byte	0x50
 2268 07ed 02       		.uleb128 0x2
 2269 07ee 75       		.byte	0x75
 2270 07ef 00       		.sleb128 0
 2271 07f0 00       		.byte	0
 2272 07f1 0E       		.uleb128 0xe
 2273 07f2 32000000 		.4byte	.LVL87
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 66


 2274 07f6 A3070000 		.4byte	0x7a3
 2275 07fa 04080000 		.4byte	0x804
 2276 07fe 0F       		.uleb128 0xf
 2277 07ff 01       		.uleb128 0x1
 2278 0800 50       		.byte	0x50
 2279 0801 01       		.uleb128 0x1
 2280 0802 30       		.byte	0x30
 2281 0803 00       		.byte	0
 2282 0804 0E       		.uleb128 0xe
 2283 0805 3E000000 		.4byte	.LVL88
 2284 0809 15040000 		.4byte	0x415
 2285 080d 18080000 		.4byte	0x818
 2286 0811 0F       		.uleb128 0xf
 2287 0812 01       		.uleb128 0x1
 2288 0813 50       		.byte	0x50
 2289 0814 02       		.uleb128 0x2
 2290 0815 75       		.byte	0x75
 2291 0816 00       		.sleb128 0
 2292 0817 00       		.byte	0
 2293 0818 10       		.uleb128 0x10
 2294 0819 44000000 		.4byte	.LVL89
 2295 081d 21050000 		.4byte	0x521
 2296 0821 0F       		.uleb128 0xf
 2297 0822 01       		.uleb128 0x1
 2298 0823 50       		.byte	0x50
 2299 0824 03       		.uleb128 0x3
 2300 0825 0A       		.byte	0xa
 2301 0826 8813     		.2byte	0x1388
 2302 0828 00       		.byte	0
 2303 0829 00       		.byte	0
 2304 082a 06       		.uleb128 0x6
 2305 082b E8040000 		.4byte	.LASF71
 2306 082f 01       		.byte	0x1
 2307 0830 E6       		.byte	0xe6
 2308 0831 00000000 		.4byte	.LFB2
 2309 0835 20000000 		.4byte	.LFE2-.LFB2
 2310 0839 01       		.uleb128 0x1
 2311 083a 9C       		.byte	0x9c
 2312 083b 52080000 		.4byte	0x852
 2313 083f 08       		.uleb128 0x8
 2314 0840 0E000000 		.4byte	.LVL90
 2315 0844 C8070000 		.4byte	0x7c8
 2316 0848 08       		.uleb128 0x8
 2317 0849 18000000 		.4byte	.LVL91
 2318 084d B0000000 		.4byte	0xb0
 2319 0851 00       		.byte	0
 2320 0852 0C       		.uleb128 0xc
 2321 0853 73050000 		.4byte	.LASF72
 2322 0857 01       		.byte	0x1
 2323 0858 3E05     		.2byte	0x53e
 2324 085a 77000000 		.4byte	0x77
 2325 085e 00000000 		.4byte	.LFB36
 2326 0862 0C000000 		.4byte	.LFE36-.LFB36
 2327 0866 01       		.uleb128 0x1
 2328 0867 9C       		.byte	0x9c
 2329 0868 0C       		.uleb128 0xc
 2330 0869 39000000 		.4byte	.LASF73
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 67


 2331 086d 01       		.byte	0x1
 2332 086e 5505     		.2byte	0x555
 2333 0870 77000000 		.4byte	0x77
 2334 0874 00000000 		.4byte	.LFB37
 2335 0878 0C000000 		.4byte	.LFE37-.LFB37
 2336 087c 01       		.uleb128 0x1
 2337 087d 9C       		.byte	0x9c
 2338 087e 09       		.uleb128 0x9
 2339 087f A6040000 		.4byte	.LASF74
 2340 0883 01       		.byte	0x1
 2341 0884 6C05     		.2byte	0x56c
 2342 0886 00000000 		.4byte	.LFB38
 2343 088a 0C000000 		.4byte	.LFE38-.LFB38
 2344 088e 01       		.uleb128 0x1
 2345 088f 9C       		.byte	0x9c
 2346 0890 A3080000 		.4byte	0x8a3
 2347 0894 0D       		.uleb128 0xd
 2348 0895 3D040000 		.4byte	.LASF69
 2349 0899 01       		.byte	0x1
 2350 089a 6C05     		.2byte	0x56c
 2351 089c 77000000 		.4byte	0x77
 2352 08a0 01       		.uleb128 0x1
 2353 08a1 50       		.byte	0x50
 2354 08a2 00       		.byte	0
 2355 08a3 09       		.uleb128 0x9
 2356 08a4 AF000000 		.4byte	.LASF75
 2357 08a8 01       		.byte	0x1
 2358 08a9 8305     		.2byte	0x583
 2359 08ab 00000000 		.4byte	.LFB39
 2360 08af 0C000000 		.4byte	.LFE39-.LFB39
 2361 08b3 01       		.uleb128 0x1
 2362 08b4 9C       		.byte	0x9c
 2363 08b5 C8080000 		.4byte	0x8c8
 2364 08b9 0D       		.uleb128 0xd
 2365 08ba 3D040000 		.4byte	.LASF69
 2366 08be 01       		.byte	0x1
 2367 08bf 8305     		.2byte	0x583
 2368 08c1 77000000 		.4byte	0x77
 2369 08c5 01       		.uleb128 0x1
 2370 08c6 50       		.byte	0x50
 2371 08c7 00       		.byte	0
 2372 08c8 11       		.uleb128 0x11
 2373 08c9 40050000 		.4byte	.LASF79
 2374 08cd 01       		.byte	0x1
 2375 08ce 15       		.byte	0x15
 2376 08cf 6B000000 		.4byte	0x6b
 2377 08d3 05       		.uleb128 0x5
 2378 08d4 03       		.byte	0x3
 2379 08d5 00000000 		.4byte	PWM_1_initVar
 2380 08d9 12       		.uleb128 0x12
 2381 08da C9010000 		.4byte	.LASF80
 2382 08de 03       		.byte	0x3
 2383 08df E3       		.byte	0xe3
 2384 08e0 6B000000 		.4byte	0x6b
 2385 08e4 13       		.uleb128 0x13
 2386 08e5 06000000 		.4byte	.LASF81
 2387 08e9 03       		.byte	0x3
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 68


 2388 08ea E4       		.byte	0xe4
 2389 08eb 14       		.uleb128 0x14
 2390 08ec 6B000000 		.4byte	0x6b
 2391 08f0 00       		.byte	0
 2392 08f1 00       		.byte	0
 2393              		.section	.debug_abbrev,"",%progbits
 2394              	.Ldebug_abbrev0:
 2395 0000 01       		.uleb128 0x1
 2396 0001 11       		.uleb128 0x11
 2397 0002 01       		.byte	0x1
 2398 0003 25       		.uleb128 0x25
 2399 0004 0E       		.uleb128 0xe
 2400 0005 13       		.uleb128 0x13
 2401 0006 0B       		.uleb128 0xb
 2402 0007 03       		.uleb128 0x3
 2403 0008 0E       		.uleb128 0xe
 2404 0009 1B       		.uleb128 0x1b
 2405 000a 0E       		.uleb128 0xe
 2406 000b 55       		.uleb128 0x55
 2407 000c 17       		.uleb128 0x17
 2408 000d 11       		.uleb128 0x11
 2409 000e 01       		.uleb128 0x1
 2410 000f 10       		.uleb128 0x10
 2411 0010 17       		.uleb128 0x17
 2412 0011 00       		.byte	0
 2413 0012 00       		.byte	0
 2414 0013 02       		.uleb128 0x2
 2415 0014 24       		.uleb128 0x24
 2416 0015 00       		.byte	0
 2417 0016 0B       		.uleb128 0xb
 2418 0017 0B       		.uleb128 0xb
 2419 0018 3E       		.uleb128 0x3e
 2420 0019 0B       		.uleb128 0xb
 2421 001a 03       		.uleb128 0x3
 2422 001b 0E       		.uleb128 0xe
 2423 001c 00       		.byte	0
 2424 001d 00       		.byte	0
 2425 001e 03       		.uleb128 0x3
 2426 001f 24       		.uleb128 0x24
 2427 0020 00       		.byte	0
 2428 0021 0B       		.uleb128 0xb
 2429 0022 0B       		.uleb128 0xb
 2430 0023 3E       		.uleb128 0x3e
 2431 0024 0B       		.uleb128 0xb
 2432 0025 03       		.uleb128 0x3
 2433 0026 08       		.uleb128 0x8
 2434 0027 00       		.byte	0
 2435 0028 00       		.byte	0
 2436 0029 04       		.uleb128 0x4
 2437 002a 16       		.uleb128 0x16
 2438 002b 00       		.byte	0
 2439 002c 03       		.uleb128 0x3
 2440 002d 0E       		.uleb128 0xe
 2441 002e 3A       		.uleb128 0x3a
 2442 002f 0B       		.uleb128 0xb
 2443 0030 3B       		.uleb128 0x3b
 2444 0031 05       		.uleb128 0x5
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 69


 2445 0032 49       		.uleb128 0x49
 2446 0033 13       		.uleb128 0x13
 2447 0034 00       		.byte	0
 2448 0035 00       		.byte	0
 2449 0036 05       		.uleb128 0x5
 2450 0037 35       		.uleb128 0x35
 2451 0038 00       		.byte	0
 2452 0039 49       		.uleb128 0x49
 2453 003a 13       		.uleb128 0x13
 2454 003b 00       		.byte	0
 2455 003c 00       		.byte	0
 2456 003d 06       		.uleb128 0x6
 2457 003e 2E       		.uleb128 0x2e
 2458 003f 01       		.byte	0x1
 2459 0040 3F       		.uleb128 0x3f
 2460 0041 19       		.uleb128 0x19
 2461 0042 03       		.uleb128 0x3
 2462 0043 0E       		.uleb128 0xe
 2463 0044 3A       		.uleb128 0x3a
 2464 0045 0B       		.uleb128 0xb
 2465 0046 3B       		.uleb128 0x3b
 2466 0047 0B       		.uleb128 0xb
 2467 0048 27       		.uleb128 0x27
 2468 0049 19       		.uleb128 0x19
 2469 004a 11       		.uleb128 0x11
 2470 004b 01       		.uleb128 0x1
 2471 004c 12       		.uleb128 0x12
 2472 004d 06       		.uleb128 0x6
 2473 004e 40       		.uleb128 0x40
 2474 004f 18       		.uleb128 0x18
 2475 0050 9742     		.uleb128 0x2117
 2476 0052 19       		.uleb128 0x19
 2477 0053 01       		.uleb128 0x1
 2478 0054 13       		.uleb128 0x13
 2479 0055 00       		.byte	0
 2480 0056 00       		.byte	0
 2481 0057 07       		.uleb128 0x7
 2482 0058 34       		.uleb128 0x34
 2483 0059 00       		.byte	0
 2484 005a 03       		.uleb128 0x3
 2485 005b 0E       		.uleb128 0xe
 2486 005c 3A       		.uleb128 0x3a
 2487 005d 0B       		.uleb128 0xb
 2488 005e 3B       		.uleb128 0x3b
 2489 005f 0B       		.uleb128 0xb
 2490 0060 49       		.uleb128 0x49
 2491 0061 13       		.uleb128 0x13
 2492 0062 02       		.uleb128 0x2
 2493 0063 17       		.uleb128 0x17
 2494 0064 00       		.byte	0
 2495 0065 00       		.byte	0
 2496 0066 08       		.uleb128 0x8
 2497 0067 898201   		.uleb128 0x4109
 2498 006a 00       		.byte	0
 2499 006b 11       		.uleb128 0x11
 2500 006c 01       		.uleb128 0x1
 2501 006d 31       		.uleb128 0x31
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 70


 2502 006e 13       		.uleb128 0x13
 2503 006f 00       		.byte	0
 2504 0070 00       		.byte	0
 2505 0071 09       		.uleb128 0x9
 2506 0072 2E       		.uleb128 0x2e
 2507 0073 01       		.byte	0x1
 2508 0074 3F       		.uleb128 0x3f
 2509 0075 19       		.uleb128 0x19
 2510 0076 03       		.uleb128 0x3
 2511 0077 0E       		.uleb128 0xe
 2512 0078 3A       		.uleb128 0x3a
 2513 0079 0B       		.uleb128 0xb
 2514 007a 3B       		.uleb128 0x3b
 2515 007b 05       		.uleb128 0x5
 2516 007c 27       		.uleb128 0x27
 2517 007d 19       		.uleb128 0x19
 2518 007e 11       		.uleb128 0x11
 2519 007f 01       		.uleb128 0x1
 2520 0080 12       		.uleb128 0x12
 2521 0081 06       		.uleb128 0x6
 2522 0082 40       		.uleb128 0x40
 2523 0083 18       		.uleb128 0x18
 2524 0084 9742     		.uleb128 0x2117
 2525 0086 19       		.uleb128 0x19
 2526 0087 01       		.uleb128 0x1
 2527 0088 13       		.uleb128 0x13
 2528 0089 00       		.byte	0
 2529 008a 00       		.byte	0
 2530 008b 0A       		.uleb128 0xa
 2531 008c 34       		.uleb128 0x34
 2532 008d 00       		.byte	0
 2533 008e 03       		.uleb128 0x3
 2534 008f 0E       		.uleb128 0xe
 2535 0090 3A       		.uleb128 0x3a
 2536 0091 0B       		.uleb128 0xb
 2537 0092 3B       		.uleb128 0x3b
 2538 0093 05       		.uleb128 0x5
 2539 0094 49       		.uleb128 0x49
 2540 0095 13       		.uleb128 0x13
 2541 0096 02       		.uleb128 0x2
 2542 0097 17       		.uleb128 0x17
 2543 0098 00       		.byte	0
 2544 0099 00       		.byte	0
 2545 009a 0B       		.uleb128 0xb
 2546 009b 05       		.uleb128 0x5
 2547 009c 00       		.byte	0
 2548 009d 03       		.uleb128 0x3
 2549 009e 0E       		.uleb128 0xe
 2550 009f 3A       		.uleb128 0x3a
 2551 00a0 0B       		.uleb128 0xb
 2552 00a1 3B       		.uleb128 0x3b
 2553 00a2 05       		.uleb128 0x5
 2554 00a3 49       		.uleb128 0x49
 2555 00a4 13       		.uleb128 0x13
 2556 00a5 02       		.uleb128 0x2
 2557 00a6 17       		.uleb128 0x17
 2558 00a7 00       		.byte	0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 71


 2559 00a8 00       		.byte	0
 2560 00a9 0C       		.uleb128 0xc
 2561 00aa 2E       		.uleb128 0x2e
 2562 00ab 00       		.byte	0
 2563 00ac 3F       		.uleb128 0x3f
 2564 00ad 19       		.uleb128 0x19
 2565 00ae 03       		.uleb128 0x3
 2566 00af 0E       		.uleb128 0xe
 2567 00b0 3A       		.uleb128 0x3a
 2568 00b1 0B       		.uleb128 0xb
 2569 00b2 3B       		.uleb128 0x3b
 2570 00b3 05       		.uleb128 0x5
 2571 00b4 27       		.uleb128 0x27
 2572 00b5 19       		.uleb128 0x19
 2573 00b6 49       		.uleb128 0x49
 2574 00b7 13       		.uleb128 0x13
 2575 00b8 11       		.uleb128 0x11
 2576 00b9 01       		.uleb128 0x1
 2577 00ba 12       		.uleb128 0x12
 2578 00bb 06       		.uleb128 0x6
 2579 00bc 40       		.uleb128 0x40
 2580 00bd 18       		.uleb128 0x18
 2581 00be 9742     		.uleb128 0x2117
 2582 00c0 19       		.uleb128 0x19
 2583 00c1 00       		.byte	0
 2584 00c2 00       		.byte	0
 2585 00c3 0D       		.uleb128 0xd
 2586 00c4 05       		.uleb128 0x5
 2587 00c5 00       		.byte	0
 2588 00c6 03       		.uleb128 0x3
 2589 00c7 0E       		.uleb128 0xe
 2590 00c8 3A       		.uleb128 0x3a
 2591 00c9 0B       		.uleb128 0xb
 2592 00ca 3B       		.uleb128 0x3b
 2593 00cb 05       		.uleb128 0x5
 2594 00cc 49       		.uleb128 0x49
 2595 00cd 13       		.uleb128 0x13
 2596 00ce 02       		.uleb128 0x2
 2597 00cf 18       		.uleb128 0x18
 2598 00d0 00       		.byte	0
 2599 00d1 00       		.byte	0
 2600 00d2 0E       		.uleb128 0xe
 2601 00d3 898201   		.uleb128 0x4109
 2602 00d6 01       		.byte	0x1
 2603 00d7 11       		.uleb128 0x11
 2604 00d8 01       		.uleb128 0x1
 2605 00d9 31       		.uleb128 0x31
 2606 00da 13       		.uleb128 0x13
 2607 00db 01       		.uleb128 0x1
 2608 00dc 13       		.uleb128 0x13
 2609 00dd 00       		.byte	0
 2610 00de 00       		.byte	0
 2611 00df 0F       		.uleb128 0xf
 2612 00e0 8A8201   		.uleb128 0x410a
 2613 00e3 00       		.byte	0
 2614 00e4 02       		.uleb128 0x2
 2615 00e5 18       		.uleb128 0x18
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 72


 2616 00e6 9142     		.uleb128 0x2111
 2617 00e8 18       		.uleb128 0x18
 2618 00e9 00       		.byte	0
 2619 00ea 00       		.byte	0
 2620 00eb 10       		.uleb128 0x10
 2621 00ec 898201   		.uleb128 0x4109
 2622 00ef 01       		.byte	0x1
 2623 00f0 11       		.uleb128 0x11
 2624 00f1 01       		.uleb128 0x1
 2625 00f2 31       		.uleb128 0x31
 2626 00f3 13       		.uleb128 0x13
 2627 00f4 00       		.byte	0
 2628 00f5 00       		.byte	0
 2629 00f6 11       		.uleb128 0x11
 2630 00f7 34       		.uleb128 0x34
 2631 00f8 00       		.byte	0
 2632 00f9 03       		.uleb128 0x3
 2633 00fa 0E       		.uleb128 0xe
 2634 00fb 3A       		.uleb128 0x3a
 2635 00fc 0B       		.uleb128 0xb
 2636 00fd 3B       		.uleb128 0x3b
 2637 00fe 0B       		.uleb128 0xb
 2638 00ff 49       		.uleb128 0x49
 2639 0100 13       		.uleb128 0x13
 2640 0101 3F       		.uleb128 0x3f
 2641 0102 19       		.uleb128 0x19
 2642 0103 02       		.uleb128 0x2
 2643 0104 18       		.uleb128 0x18
 2644 0105 00       		.byte	0
 2645 0106 00       		.byte	0
 2646 0107 12       		.uleb128 0x12
 2647 0108 2E       		.uleb128 0x2e
 2648 0109 00       		.byte	0
 2649 010a 3F       		.uleb128 0x3f
 2650 010b 19       		.uleb128 0x19
 2651 010c 03       		.uleb128 0x3
 2652 010d 0E       		.uleb128 0xe
 2653 010e 3A       		.uleb128 0x3a
 2654 010f 0B       		.uleb128 0xb
 2655 0110 3B       		.uleb128 0x3b
 2656 0111 0B       		.uleb128 0xb
 2657 0112 27       		.uleb128 0x27
 2658 0113 19       		.uleb128 0x19
 2659 0114 49       		.uleb128 0x49
 2660 0115 13       		.uleb128 0x13
 2661 0116 3C       		.uleb128 0x3c
 2662 0117 19       		.uleb128 0x19
 2663 0118 00       		.byte	0
 2664 0119 00       		.byte	0
 2665 011a 13       		.uleb128 0x13
 2666 011b 2E       		.uleb128 0x2e
 2667 011c 01       		.byte	0x1
 2668 011d 3F       		.uleb128 0x3f
 2669 011e 19       		.uleb128 0x19
 2670 011f 03       		.uleb128 0x3
 2671 0120 0E       		.uleb128 0xe
 2672 0121 3A       		.uleb128 0x3a
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 73


 2673 0122 0B       		.uleb128 0xb
 2674 0123 3B       		.uleb128 0x3b
 2675 0124 0B       		.uleb128 0xb
 2676 0125 27       		.uleb128 0x27
 2677 0126 19       		.uleb128 0x19
 2678 0127 3C       		.uleb128 0x3c
 2679 0128 19       		.uleb128 0x19
 2680 0129 00       		.byte	0
 2681 012a 00       		.byte	0
 2682 012b 14       		.uleb128 0x14
 2683 012c 05       		.uleb128 0x5
 2684 012d 00       		.byte	0
 2685 012e 49       		.uleb128 0x49
 2686 012f 13       		.uleb128 0x13
 2687 0130 00       		.byte	0
 2688 0131 00       		.byte	0
 2689 0132 00       		.byte	0
 2690              		.section	.debug_loc,"",%progbits
 2691              	.Ldebug_loc0:
 2692              	.LLST0:
 2693 0000 06000000 		.4byte	.LVL0
 2694 0004 13000000 		.4byte	.LVL1-1
 2695 0008 0100     		.2byte	0x1
 2696 000a 50       		.byte	0x50
 2697 000b 00000000 		.4byte	0
 2698 000f 00000000 		.4byte	0
 2699              	.LLST1:
 2700 0013 06000000 		.4byte	.LVL2
 2701 0017 13000000 		.4byte	.LVL3-1
 2702 001b 0100     		.2byte	0x1
 2703 001d 50       		.byte	0x50
 2704 001e 00000000 		.4byte	0
 2705 0022 00000000 		.4byte	0
 2706              	.LLST2:
 2707 0026 00000000 		.4byte	.LVL4
 2708 002a 07000000 		.4byte	.LVL5-1
 2709 002e 0100     		.2byte	0x1
 2710 0030 50       		.byte	0x50
 2711 0031 07000000 		.4byte	.LVL5-1
 2712 0035 16000000 		.4byte	.LVL6
 2713 0039 0100     		.2byte	0x1
 2714 003b 54       		.byte	0x54
 2715 003c 16000000 		.4byte	.LVL6
 2716 0040 28000000 		.4byte	.LFE4
 2717 0044 0400     		.2byte	0x4
 2718 0046 F3       		.byte	0xf3
 2719 0047 01       		.uleb128 0x1
 2720 0048 50       		.byte	0x50
 2721 0049 9F       		.byte	0x9f
 2722 004a 00000000 		.4byte	0
 2723 004e 00000000 		.4byte	0
 2724              	.LLST3:
 2725 0052 08000000 		.4byte	.LVL5
 2726 0056 1B000000 		.4byte	.LVL7-1
 2727 005a 0100     		.2byte	0x1
 2728 005c 50       		.byte	0x50
 2729 005d 00000000 		.4byte	0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 74


 2730 0061 00000000 		.4byte	0
 2731              	.LLST4:
 2732 0065 00000000 		.4byte	.LVL8
 2733 0069 07000000 		.4byte	.LVL9-1
 2734 006d 0100     		.2byte	0x1
 2735 006f 50       		.byte	0x50
 2736 0070 07000000 		.4byte	.LVL9-1
 2737 0074 16000000 		.4byte	.LVL10
 2738 0078 0100     		.2byte	0x1
 2739 007a 54       		.byte	0x54
 2740 007b 16000000 		.4byte	.LVL10
 2741 007f 28000000 		.4byte	.LFE5
 2742 0083 0400     		.2byte	0x4
 2743 0085 F3       		.byte	0xf3
 2744 0086 01       		.uleb128 0x1
 2745 0087 50       		.byte	0x50
 2746 0088 9F       		.byte	0x9f
 2747 0089 00000000 		.4byte	0
 2748 008d 00000000 		.4byte	0
 2749              	.LLST5:
 2750 0091 08000000 		.4byte	.LVL9
 2751 0095 1B000000 		.4byte	.LVL11-1
 2752 0099 0100     		.2byte	0x1
 2753 009b 50       		.byte	0x50
 2754 009c 00000000 		.4byte	0
 2755 00a0 00000000 		.4byte	0
 2756              	.LLST6:
 2757 00a4 00000000 		.4byte	.LVL12
 2758 00a8 07000000 		.4byte	.LVL13-1
 2759 00ac 0100     		.2byte	0x1
 2760 00ae 50       		.byte	0x50
 2761 00af 07000000 		.4byte	.LVL13-1
 2762 00b3 16000000 		.4byte	.LVL14
 2763 00b7 0100     		.2byte	0x1
 2764 00b9 54       		.byte	0x54
 2765 00ba 16000000 		.4byte	.LVL14
 2766 00be 28000000 		.4byte	.LFE6
 2767 00c2 0400     		.2byte	0x4
 2768 00c4 F3       		.byte	0xf3
 2769 00c5 01       		.uleb128 0x1
 2770 00c6 50       		.byte	0x50
 2771 00c7 9F       		.byte	0x9f
 2772 00c8 00000000 		.4byte	0
 2773 00cc 00000000 		.4byte	0
 2774              	.LLST7:
 2775 00d0 08000000 		.4byte	.LVL13
 2776 00d4 1B000000 		.4byte	.LVL15-1
 2777 00d8 0100     		.2byte	0x1
 2778 00da 50       		.byte	0x50
 2779 00db 00000000 		.4byte	0
 2780 00df 00000000 		.4byte	0
 2781              	.LLST8:
 2782 00e3 00000000 		.4byte	.LVL16
 2783 00e7 07000000 		.4byte	.LVL17-1
 2784 00eb 0100     		.2byte	0x1
 2785 00ed 50       		.byte	0x50
 2786 00ee 07000000 		.4byte	.LVL17-1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 75


 2787 00f2 18000000 		.4byte	.LVL18
 2788 00f6 0100     		.2byte	0x1
 2789 00f8 54       		.byte	0x54
 2790 00f9 18000000 		.4byte	.LVL18
 2791 00fd 2C000000 		.4byte	.LFE7
 2792 0101 0400     		.2byte	0x4
 2793 0103 F3       		.byte	0xf3
 2794 0104 01       		.uleb128 0x1
 2795 0105 50       		.byte	0x50
 2796 0106 9F       		.byte	0x9f
 2797 0107 00000000 		.4byte	0
 2798 010b 00000000 		.4byte	0
 2799              	.LLST9:
 2800 010f 08000000 		.4byte	.LVL17
 2801 0113 21000000 		.4byte	.LVL19-1
 2802 0117 0100     		.2byte	0x1
 2803 0119 50       		.byte	0x50
 2804 011a 00000000 		.4byte	0
 2805 011e 00000000 		.4byte	0
 2806              	.LLST10:
 2807 0122 00000000 		.4byte	.LVL20
 2808 0126 04000000 		.4byte	.LVL21
 2809 012a 0100     		.2byte	0x1
 2810 012c 50       		.byte	0x50
 2811 012d 04000000 		.4byte	.LVL21
 2812 0131 10000000 		.4byte	.LFE8
 2813 0135 0400     		.2byte	0x4
 2814 0137 F3       		.byte	0xf3
 2815 0138 01       		.uleb128 0x1
 2816 0139 50       		.byte	0x50
 2817 013a 9F       		.byte	0x9f
 2818 013b 00000000 		.4byte	0
 2819 013f 00000000 		.4byte	0
 2820              	.LLST11:
 2821 0143 00000000 		.4byte	.LVL22
 2822 0147 07000000 		.4byte	.LVL23-1
 2823 014b 0100     		.2byte	0x1
 2824 014d 50       		.byte	0x50
 2825 014e 07000000 		.4byte	.LVL23-1
 2826 0152 18000000 		.4byte	.LVL24
 2827 0156 0100     		.2byte	0x1
 2828 0158 54       		.byte	0x54
 2829 0159 18000000 		.4byte	.LVL24
 2830 015d 28000000 		.4byte	.LFE9
 2831 0161 0400     		.2byte	0x4
 2832 0163 F3       		.byte	0xf3
 2833 0164 01       		.uleb128 0x1
 2834 0165 50       		.byte	0x50
 2835 0166 9F       		.byte	0x9f
 2836 0167 00000000 		.4byte	0
 2837 016b 00000000 		.4byte	0
 2838              	.LLST12:
 2839 016f 08000000 		.4byte	.LVL23
 2840 0173 21000000 		.4byte	.LVL25-1
 2841 0177 0100     		.2byte	0x1
 2842 0179 50       		.byte	0x50
 2843 017a 00000000 		.4byte	0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 76


 2844 017e 00000000 		.4byte	0
 2845              	.LLST13:
 2846 0182 00000000 		.4byte	.LVL26
 2847 0186 07000000 		.4byte	.LVL27-1
 2848 018a 0100     		.2byte	0x1
 2849 018c 50       		.byte	0x50
 2850 018d 07000000 		.4byte	.LVL27-1
 2851 0191 18000000 		.4byte	.LVL28
 2852 0195 0100     		.2byte	0x1
 2853 0197 54       		.byte	0x54
 2854 0198 18000000 		.4byte	.LVL28
 2855 019c 28000000 		.4byte	.LFE10
 2856 01a0 0400     		.2byte	0x4
 2857 01a2 F3       		.byte	0xf3
 2858 01a3 01       		.uleb128 0x1
 2859 01a4 50       		.byte	0x50
 2860 01a5 9F       		.byte	0x9f
 2861 01a6 00000000 		.4byte	0
 2862 01aa 00000000 		.4byte	0
 2863              	.LLST14:
 2864 01ae 08000000 		.4byte	.LVL27
 2865 01b2 21000000 		.4byte	.LVL29-1
 2866 01b6 0100     		.2byte	0x1
 2867 01b8 50       		.byte	0x50
 2868 01b9 00000000 		.4byte	0
 2869 01bd 00000000 		.4byte	0
 2870              	.LLST15:
 2871 01c1 00000000 		.4byte	.LVL30
 2872 01c5 07000000 		.4byte	.LVL31-1
 2873 01c9 0100     		.2byte	0x1
 2874 01cb 50       		.byte	0x50
 2875 01cc 07000000 		.4byte	.LVL31-1
 2876 01d0 16000000 		.4byte	.LVL32
 2877 01d4 0100     		.2byte	0x1
 2878 01d6 54       		.byte	0x54
 2879 01d7 16000000 		.4byte	.LVL32
 2880 01db 2C000000 		.4byte	.LFE11
 2881 01df 0400     		.2byte	0x4
 2882 01e1 F3       		.byte	0xf3
 2883 01e2 01       		.uleb128 0x1
 2884 01e3 50       		.byte	0x50
 2885 01e4 9F       		.byte	0x9f
 2886 01e5 00000000 		.4byte	0
 2887 01e9 00000000 		.4byte	0
 2888              	.LLST16:
 2889 01ed 08000000 		.4byte	.LVL31
 2890 01f1 1F000000 		.4byte	.LVL33-1
 2891 01f5 0100     		.2byte	0x1
 2892 01f7 50       		.byte	0x50
 2893 01f8 00000000 		.4byte	0
 2894 01fc 00000000 		.4byte	0
 2895              	.LLST17:
 2896 0200 00000000 		.4byte	.LVL34
 2897 0204 07000000 		.4byte	.LVL35-1
 2898 0208 0100     		.2byte	0x1
 2899 020a 50       		.byte	0x50
 2900 020b 07000000 		.4byte	.LVL35-1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 77


 2901 020f 16000000 		.4byte	.LVL36
 2902 0213 0100     		.2byte	0x1
 2903 0215 54       		.byte	0x54
 2904 0216 16000000 		.4byte	.LVL36
 2905 021a 28000000 		.4byte	.LFE12
 2906 021e 0400     		.2byte	0x4
 2907 0220 F3       		.byte	0xf3
 2908 0221 01       		.uleb128 0x1
 2909 0222 50       		.byte	0x50
 2910 0223 9F       		.byte	0x9f
 2911 0224 00000000 		.4byte	0
 2912 0228 00000000 		.4byte	0
 2913              	.LLST18:
 2914 022c 08000000 		.4byte	.LVL35
 2915 0230 1B000000 		.4byte	.LVL37-1
 2916 0234 0100     		.2byte	0x1
 2917 0236 50       		.byte	0x50
 2918 0237 00000000 		.4byte	0
 2919 023b 00000000 		.4byte	0
 2920              	.LLST19:
 2921 023f 00000000 		.4byte	.LVL38
 2922 0243 02000000 		.4byte	.LVL39
 2923 0247 0100     		.2byte	0x1
 2924 0249 50       		.byte	0x50
 2925 024a 02000000 		.4byte	.LVL39
 2926 024e 10000000 		.4byte	.LFE13
 2927 0252 0400     		.2byte	0x4
 2928 0254 F3       		.byte	0xf3
 2929 0255 01       		.uleb128 0x1
 2930 0256 50       		.byte	0x50
 2931 0257 9F       		.byte	0x9f
 2932 0258 00000000 		.4byte	0
 2933 025c 00000000 		.4byte	0
 2934              	.LLST20:
 2935 0260 00000000 		.4byte	.LVL40
 2936 0264 07000000 		.4byte	.LVL41-1
 2937 0268 0100     		.2byte	0x1
 2938 026a 50       		.byte	0x50
 2939 026b 07000000 		.4byte	.LVL41-1
 2940 026f 16000000 		.4byte	.LVL42
 2941 0273 0100     		.2byte	0x1
 2942 0275 54       		.byte	0x54
 2943 0276 16000000 		.4byte	.LVL42
 2944 027a 28000000 		.4byte	.LFE15
 2945 027e 0400     		.2byte	0x4
 2946 0280 F3       		.byte	0xf3
 2947 0281 01       		.uleb128 0x1
 2948 0282 50       		.byte	0x50
 2949 0283 9F       		.byte	0x9f
 2950 0284 00000000 		.4byte	0
 2951 0288 00000000 		.4byte	0
 2952              	.LLST21:
 2953 028c 08000000 		.4byte	.LVL41
 2954 0290 1B000000 		.4byte	.LVL43-1
 2955 0294 0100     		.2byte	0x1
 2956 0296 50       		.byte	0x50
 2957 0297 00000000 		.4byte	0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 78


 2958 029b 00000000 		.4byte	0
 2959              	.LLST22:
 2960 029f 00000000 		.4byte	.LVL44
 2961 02a3 02000000 		.4byte	.LVL45
 2962 02a7 0100     		.2byte	0x1
 2963 02a9 50       		.byte	0x50
 2964 02aa 02000000 		.4byte	.LVL45
 2965 02ae 10000000 		.4byte	.LFE16
 2966 02b2 0400     		.2byte	0x4
 2967 02b4 F3       		.byte	0xf3
 2968 02b5 01       		.uleb128 0x1
 2969 02b6 50       		.byte	0x50
 2970 02b7 9F       		.byte	0x9f
 2971 02b8 00000000 		.4byte	0
 2972 02bc 00000000 		.4byte	0
 2973              	.LLST23:
 2974 02c0 00000000 		.4byte	.LVL46
 2975 02c4 07000000 		.4byte	.LVL47-1
 2976 02c8 0100     		.2byte	0x1
 2977 02ca 50       		.byte	0x50
 2978 02cb 07000000 		.4byte	.LVL47-1
 2979 02cf 16000000 		.4byte	.LVL48
 2980 02d3 0100     		.2byte	0x1
 2981 02d5 54       		.byte	0x54
 2982 02d6 16000000 		.4byte	.LVL48
 2983 02da 24000000 		.4byte	.LFE18
 2984 02de 0400     		.2byte	0x4
 2985 02e0 F3       		.byte	0xf3
 2986 02e1 01       		.uleb128 0x1
 2987 02e2 50       		.byte	0x50
 2988 02e3 9F       		.byte	0x9f
 2989 02e4 00000000 		.4byte	0
 2990 02e8 00000000 		.4byte	0
 2991              	.LLST24:
 2992 02ec 08000000 		.4byte	.LVL47
 2993 02f0 1D000000 		.4byte	.LVL49-1
 2994 02f4 0100     		.2byte	0x1
 2995 02f6 50       		.byte	0x50
 2996 02f7 00000000 		.4byte	0
 2997 02fb 00000000 		.4byte	0
 2998              	.LLST25:
 2999 02ff 00000000 		.4byte	.LVL50
 3000 0303 02000000 		.4byte	.LVL51
 3001 0307 0100     		.2byte	0x1
 3002 0309 50       		.byte	0x50
 3003 030a 02000000 		.4byte	.LVL51
 3004 030e 10000000 		.4byte	.LFE19
 3005 0312 0400     		.2byte	0x4
 3006 0314 F3       		.byte	0xf3
 3007 0315 01       		.uleb128 0x1
 3008 0316 50       		.byte	0x50
 3009 0317 9F       		.byte	0x9f
 3010 0318 00000000 		.4byte	0
 3011 031c 00000000 		.4byte	0
 3012              	.LLST26:
 3013 0320 00000000 		.4byte	.LVL52
 3014 0324 07000000 		.4byte	.LVL53-1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 79


 3015 0328 0100     		.2byte	0x1
 3016 032a 50       		.byte	0x50
 3017 032b 07000000 		.4byte	.LVL53-1
 3018 032f 18000000 		.4byte	.LVL54
 3019 0333 0100     		.2byte	0x1
 3020 0335 54       		.byte	0x54
 3021 0336 18000000 		.4byte	.LVL54
 3022 033a 28000000 		.4byte	.LFE21
 3023 033e 0400     		.2byte	0x4
 3024 0340 F3       		.byte	0xf3
 3025 0341 01       		.uleb128 0x1
 3026 0342 50       		.byte	0x50
 3027 0343 9F       		.byte	0x9f
 3028 0344 00000000 		.4byte	0
 3029 0348 00000000 		.4byte	0
 3030              	.LLST27:
 3031 034c 08000000 		.4byte	.LVL53
 3032 0350 21000000 		.4byte	.LVL55-1
 3033 0354 0100     		.2byte	0x1
 3034 0356 50       		.byte	0x50
 3035 0357 00000000 		.4byte	0
 3036 035b 00000000 		.4byte	0
 3037              	.LLST28:
 3038 035f 00000000 		.4byte	.LVL56
 3039 0363 02000000 		.4byte	.LVL57
 3040 0367 0100     		.2byte	0x1
 3041 0369 50       		.byte	0x50
 3042 036a 02000000 		.4byte	.LVL57
 3043 036e 10000000 		.4byte	.LFE22
 3044 0372 0400     		.2byte	0x4
 3045 0374 F3       		.byte	0xf3
 3046 0375 01       		.uleb128 0x1
 3047 0376 50       		.byte	0x50
 3048 0377 9F       		.byte	0x9f
 3049 0378 00000000 		.4byte	0
 3050 037c 00000000 		.4byte	0
 3051              	.LLST29:
 3052 0380 00000000 		.4byte	.LVL58
 3053 0384 02000000 		.4byte	.LVL59
 3054 0388 0100     		.2byte	0x1
 3055 038a 50       		.byte	0x50
 3056 038b 02000000 		.4byte	.LVL59
 3057 038f 10000000 		.4byte	.LFE24
 3058 0393 0400     		.2byte	0x4
 3059 0395 F3       		.byte	0xf3
 3060 0396 01       		.uleb128 0x1
 3061 0397 50       		.byte	0x50
 3062 0398 9F       		.byte	0x9f
 3063 0399 00000000 		.4byte	0
 3064 039d 00000000 		.4byte	0
 3065              	.LLST30:
 3066 03a1 00000000 		.4byte	.LVL60
 3067 03a5 07000000 		.4byte	.LVL61-1
 3068 03a9 0100     		.2byte	0x1
 3069 03ab 50       		.byte	0x50
 3070 03ac 07000000 		.4byte	.LVL61-1
 3071 03b0 16000000 		.4byte	.LVL62
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 80


 3072 03b4 0100     		.2byte	0x1
 3073 03b6 54       		.byte	0x54
 3074 03b7 16000000 		.4byte	.LVL62
 3075 03bb 24000000 		.4byte	.LFE28
 3076 03bf 0400     		.2byte	0x4
 3077 03c1 F3       		.byte	0xf3
 3078 03c2 01       		.uleb128 0x1
 3079 03c3 50       		.byte	0x50
 3080 03c4 9F       		.byte	0x9f
 3081 03c5 00000000 		.4byte	0
 3082 03c9 00000000 		.4byte	0
 3083              	.LLST31:
 3084 03cd 08000000 		.4byte	.LVL61
 3085 03d1 1B000000 		.4byte	.LVL63-1
 3086 03d5 0100     		.2byte	0x1
 3087 03d7 50       		.byte	0x50
 3088 03d8 00000000 		.4byte	0
 3089 03dc 00000000 		.4byte	0
 3090              	.LLST32:
 3091 03e0 00000000 		.4byte	.LVL64
 3092 03e4 07000000 		.4byte	.LVL65-1
 3093 03e8 0100     		.2byte	0x1
 3094 03ea 50       		.byte	0x50
 3095 03eb 07000000 		.4byte	.LVL65-1
 3096 03ef 16000000 		.4byte	.LVL66
 3097 03f3 0100     		.2byte	0x1
 3098 03f5 54       		.byte	0x54
 3099 03f6 16000000 		.4byte	.LVL66
 3100 03fa 24000000 		.4byte	.LFE29
 3101 03fe 0400     		.2byte	0x4
 3102 0400 F3       		.byte	0xf3
 3103 0401 01       		.uleb128 0x1
 3104 0402 50       		.byte	0x50
 3105 0403 9F       		.byte	0x9f
 3106 0404 00000000 		.4byte	0
 3107 0408 00000000 		.4byte	0
 3108              	.LLST33:
 3109 040c 08000000 		.4byte	.LVL65
 3110 0410 1D000000 		.4byte	.LVL67-1
 3111 0414 0100     		.2byte	0x1
 3112 0416 50       		.byte	0x50
 3113 0417 00000000 		.4byte	0
 3114 041b 00000000 		.4byte	0
 3115              	.LLST34:
 3116 041f 00000000 		.4byte	.LVL68
 3117 0423 07000000 		.4byte	.LVL69-1
 3118 0427 0100     		.2byte	0x1
 3119 0429 50       		.byte	0x50
 3120 042a 07000000 		.4byte	.LVL69-1
 3121 042e 16000000 		.4byte	.LVL70
 3122 0432 0100     		.2byte	0x1
 3123 0434 54       		.byte	0x54
 3124 0435 16000000 		.4byte	.LVL70
 3125 0439 28000000 		.4byte	.LFE30
 3126 043d 0400     		.2byte	0x4
 3127 043f F3       		.byte	0xf3
 3128 0440 01       		.uleb128 0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 81


 3129 0441 50       		.byte	0x50
 3130 0442 9F       		.byte	0x9f
 3131 0443 00000000 		.4byte	0
 3132 0447 00000000 		.4byte	0
 3133              	.LLST35:
 3134 044b 08000000 		.4byte	.LVL69
 3135 044f 1D000000 		.4byte	.LVL71-1
 3136 0453 0100     		.2byte	0x1
 3137 0455 50       		.byte	0x50
 3138 0456 00000000 		.4byte	0
 3139 045a 00000000 		.4byte	0
 3140              	.LLST36:
 3141 045e 00000000 		.4byte	.LVL72
 3142 0462 07000000 		.4byte	.LVL73-1
 3143 0466 0100     		.2byte	0x1
 3144 0468 50       		.byte	0x50
 3145 0469 07000000 		.4byte	.LVL73-1
 3146 046d 16000000 		.4byte	.LVL74
 3147 0471 0100     		.2byte	0x1
 3148 0473 54       		.byte	0x54
 3149 0474 16000000 		.4byte	.LVL74
 3150 0478 24000000 		.4byte	.LFE31
 3151 047c 0400     		.2byte	0x4
 3152 047e F3       		.byte	0xf3
 3153 047f 01       		.uleb128 0x1
 3154 0480 50       		.byte	0x50
 3155 0481 9F       		.byte	0x9f
 3156 0482 00000000 		.4byte	0
 3157 0486 00000000 		.4byte	0
 3158              	.LLST37:
 3159 048a 08000000 		.4byte	.LVL73
 3160 048e 1D000000 		.4byte	.LVL75-1
 3161 0492 0100     		.2byte	0x1
 3162 0494 50       		.byte	0x50
 3163 0495 00000000 		.4byte	0
 3164 0499 00000000 		.4byte	0
 3165              	.LLST38:
 3166 049d 00000000 		.4byte	.LVL76
 3167 04a1 07000000 		.4byte	.LVL77-1
 3168 04a5 0100     		.2byte	0x1
 3169 04a7 50       		.byte	0x50
 3170 04a8 07000000 		.4byte	.LVL77-1
 3171 04ac 16000000 		.4byte	.LVL78
 3172 04b0 0100     		.2byte	0x1
 3173 04b2 54       		.byte	0x54
 3174 04b3 16000000 		.4byte	.LVL78
 3175 04b7 24000000 		.4byte	.LFE32
 3176 04bb 0400     		.2byte	0x4
 3177 04bd F3       		.byte	0xf3
 3178 04be 01       		.uleb128 0x1
 3179 04bf 50       		.byte	0x50
 3180 04c0 9F       		.byte	0x9f
 3181 04c1 00000000 		.4byte	0
 3182 04c5 00000000 		.4byte	0
 3183              	.LLST39:
 3184 04c9 08000000 		.4byte	.LVL77
 3185 04cd 1D000000 		.4byte	.LVL79-1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 82


 3186 04d1 0100     		.2byte	0x1
 3187 04d3 50       		.byte	0x50
 3188 04d4 00000000 		.4byte	0
 3189 04d8 00000000 		.4byte	0
 3190              	.LLST40:
 3191 04dc 00000000 		.4byte	.LVL80
 3192 04e0 09000000 		.4byte	.LVL81-1
 3193 04e4 0100     		.2byte	0x1
 3194 04e6 50       		.byte	0x50
 3195 04e7 09000000 		.4byte	.LVL81-1
 3196 04eb 0C000000 		.4byte	.LVL82
 3197 04ef 0100     		.2byte	0x1
 3198 04f1 54       		.byte	0x54
 3199 04f2 0C000000 		.4byte	.LVL82
 3200 04f6 1C000000 		.4byte	.LFE33
 3201 04fa 0400     		.2byte	0x4
 3202 04fc F3       		.byte	0xf3
 3203 04fd 01       		.uleb128 0x1
 3204 04fe 50       		.byte	0x50
 3205 04ff 9F       		.byte	0x9f
 3206 0500 00000000 		.4byte	0
 3207 0504 00000000 		.4byte	0
 3208              	.LLST41:
 3209 0508 00000000 		.4byte	.LVL80
 3210 050c 09000000 		.4byte	.LVL81-1
 3211 0510 0100     		.2byte	0x1
 3212 0512 51       		.byte	0x51
 3213 0513 09000000 		.4byte	.LVL81-1
 3214 0517 14000000 		.4byte	.LVL84
 3215 051b 0100     		.2byte	0x1
 3216 051d 55       		.byte	0x55
 3217 051e 14000000 		.4byte	.LVL84
 3218 0522 1C000000 		.4byte	.LFE33
 3219 0526 0400     		.2byte	0x4
 3220 0528 F3       		.byte	0xf3
 3221 0529 01       		.uleb128 0x1
 3222 052a 51       		.byte	0x51
 3223 052b 9F       		.byte	0x9f
 3224 052c 00000000 		.4byte	0
 3225 0530 00000000 		.4byte	0
 3226              	.LLST42:
 3227 0534 0A000000 		.4byte	.LVL81
 3228 0538 13000000 		.4byte	.LVL83-1
 3229 053c 0100     		.2byte	0x1
 3230 053e 50       		.byte	0x50
 3231 053f 00000000 		.4byte	0
 3232 0543 00000000 		.4byte	0
 3233              		.section	.debug_aranges,"",%progbits
 3234 0000 54010000 		.4byte	0x154
 3235 0004 0200     		.2byte	0x2
 3236 0006 00000000 		.4byte	.Ldebug_info0
 3237 000a 04       		.byte	0x4
 3238 000b 00       		.byte	0
 3239 000c 0000     		.2byte	0
 3240 000e 0000     		.2byte	0
 3241 0010 00000000 		.4byte	.LFB1
 3242 0014 1C000000 		.4byte	.LFE1-.LFB1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 83


 3243 0018 00000000 		.4byte	.LFB3
 3244 001c 1C000000 		.4byte	.LFE3-.LFB3
 3245 0020 00000000 		.4byte	.LFB4
 3246 0024 28000000 		.4byte	.LFE4-.LFB4
 3247 0028 00000000 		.4byte	.LFB5
 3248 002c 28000000 		.4byte	.LFE5-.LFB5
 3249 0030 00000000 		.4byte	.LFB6
 3250 0034 28000000 		.4byte	.LFE6-.LFB6
 3251 0038 00000000 		.4byte	.LFB7
 3252 003c 2C000000 		.4byte	.LFE7-.LFB7
 3253 0040 00000000 		.4byte	.LFB8
 3254 0044 10000000 		.4byte	.LFE8-.LFB8
 3255 0048 00000000 		.4byte	.LFB9
 3256 004c 28000000 		.4byte	.LFE9-.LFB9
 3257 0050 00000000 		.4byte	.LFB10
 3258 0054 28000000 		.4byte	.LFE10-.LFB10
 3259 0058 00000000 		.4byte	.LFB11
 3260 005c 2C000000 		.4byte	.LFE11-.LFB11
 3261 0060 00000000 		.4byte	.LFB12
 3262 0064 28000000 		.4byte	.LFE12-.LFB12
 3263 0068 00000000 		.4byte	.LFB13
 3264 006c 10000000 		.4byte	.LFE13-.LFB13
 3265 0070 00000000 		.4byte	.LFB14
 3266 0074 10000000 		.4byte	.LFE14-.LFB14
 3267 0078 00000000 		.4byte	.LFB15
 3268 007c 28000000 		.4byte	.LFE15-.LFB15
 3269 0080 00000000 		.4byte	.LFB16
 3270 0084 10000000 		.4byte	.LFE16-.LFB16
 3271 0088 00000000 		.4byte	.LFB17
 3272 008c 10000000 		.4byte	.LFE17-.LFB17
 3273 0090 00000000 		.4byte	.LFB18
 3274 0094 24000000 		.4byte	.LFE18-.LFB18
 3275 0098 00000000 		.4byte	.LFB19
 3276 009c 10000000 		.4byte	.LFE19-.LFB19
 3277 00a0 00000000 		.4byte	.LFB20
 3278 00a4 10000000 		.4byte	.LFE20-.LFB20
 3279 00a8 00000000 		.4byte	.LFB21
 3280 00ac 28000000 		.4byte	.LFE21-.LFB21
 3281 00b0 00000000 		.4byte	.LFB22
 3282 00b4 10000000 		.4byte	.LFE22-.LFB22
 3283 00b8 00000000 		.4byte	.LFB23
 3284 00bc 10000000 		.4byte	.LFE23-.LFB23
 3285 00c0 00000000 		.4byte	.LFB24
 3286 00c4 10000000 		.4byte	.LFE24-.LFB24
 3287 00c8 00000000 		.4byte	.LFB25
 3288 00cc 10000000 		.4byte	.LFE25-.LFB25
 3289 00d0 00000000 		.4byte	.LFB26
 3290 00d4 10000000 		.4byte	.LFE26-.LFB26
 3291 00d8 00000000 		.4byte	.LFB27
 3292 00dc 10000000 		.4byte	.LFE27-.LFB27
 3293 00e0 00000000 		.4byte	.LFB28
 3294 00e4 24000000 		.4byte	.LFE28-.LFB28
 3295 00e8 00000000 		.4byte	.LFB29
 3296 00ec 24000000 		.4byte	.LFE29-.LFB29
 3297 00f0 00000000 		.4byte	.LFB30
 3298 00f4 28000000 		.4byte	.LFE30-.LFB30
 3299 00f8 00000000 		.4byte	.LFB31
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 84


 3300 00fc 24000000 		.4byte	.LFE31-.LFB31
 3301 0100 00000000 		.4byte	.LFB32
 3302 0104 24000000 		.4byte	.LFE32-.LFB32
 3303 0108 00000000 		.4byte	.LFB33
 3304 010c 1C000000 		.4byte	.LFE33-.LFB33
 3305 0110 00000000 		.4byte	.LFB34
 3306 0114 14000000 		.4byte	.LFE34-.LFB34
 3307 0118 00000000 		.4byte	.LFB35
 3308 011c 0C000000 		.4byte	.LFE35-.LFB35
 3309 0120 00000000 		.4byte	.LFB0
 3310 0124 5C000000 		.4byte	.LFE0-.LFB0
 3311 0128 00000000 		.4byte	.LFB2
 3312 012c 20000000 		.4byte	.LFE2-.LFB2
 3313 0130 00000000 		.4byte	.LFB36
 3314 0134 0C000000 		.4byte	.LFE36-.LFB36
 3315 0138 00000000 		.4byte	.LFB37
 3316 013c 0C000000 		.4byte	.LFE37-.LFB37
 3317 0140 00000000 		.4byte	.LFB38
 3318 0144 0C000000 		.4byte	.LFE38-.LFB38
 3319 0148 00000000 		.4byte	.LFB39
 3320 014c 0C000000 		.4byte	.LFE39-.LFB39
 3321 0150 00000000 		.4byte	0
 3322 0154 00000000 		.4byte	0
 3323              		.section	.debug_ranges,"",%progbits
 3324              	.Ldebug_ranges0:
 3325 0000 00000000 		.4byte	.LFB1
 3326 0004 1C000000 		.4byte	.LFE1
 3327 0008 00000000 		.4byte	.LFB3
 3328 000c 1C000000 		.4byte	.LFE3
 3329 0010 00000000 		.4byte	.LFB4
 3330 0014 28000000 		.4byte	.LFE4
 3331 0018 00000000 		.4byte	.LFB5
 3332 001c 28000000 		.4byte	.LFE5
 3333 0020 00000000 		.4byte	.LFB6
 3334 0024 28000000 		.4byte	.LFE6
 3335 0028 00000000 		.4byte	.LFB7
 3336 002c 2C000000 		.4byte	.LFE7
 3337 0030 00000000 		.4byte	.LFB8
 3338 0034 10000000 		.4byte	.LFE8
 3339 0038 00000000 		.4byte	.LFB9
 3340 003c 28000000 		.4byte	.LFE9
 3341 0040 00000000 		.4byte	.LFB10
 3342 0044 28000000 		.4byte	.LFE10
 3343 0048 00000000 		.4byte	.LFB11
 3344 004c 2C000000 		.4byte	.LFE11
 3345 0050 00000000 		.4byte	.LFB12
 3346 0054 28000000 		.4byte	.LFE12
 3347 0058 00000000 		.4byte	.LFB13
 3348 005c 10000000 		.4byte	.LFE13
 3349 0060 00000000 		.4byte	.LFB14
 3350 0064 10000000 		.4byte	.LFE14
 3351 0068 00000000 		.4byte	.LFB15
 3352 006c 28000000 		.4byte	.LFE15
 3353 0070 00000000 		.4byte	.LFB16
 3354 0074 10000000 		.4byte	.LFE16
 3355 0078 00000000 		.4byte	.LFB17
 3356 007c 10000000 		.4byte	.LFE17
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 85


 3357 0080 00000000 		.4byte	.LFB18
 3358 0084 24000000 		.4byte	.LFE18
 3359 0088 00000000 		.4byte	.LFB19
 3360 008c 10000000 		.4byte	.LFE19
 3361 0090 00000000 		.4byte	.LFB20
 3362 0094 10000000 		.4byte	.LFE20
 3363 0098 00000000 		.4byte	.LFB21
 3364 009c 28000000 		.4byte	.LFE21
 3365 00a0 00000000 		.4byte	.LFB22
 3366 00a4 10000000 		.4byte	.LFE22
 3367 00a8 00000000 		.4byte	.LFB23
 3368 00ac 10000000 		.4byte	.LFE23
 3369 00b0 00000000 		.4byte	.LFB24
 3370 00b4 10000000 		.4byte	.LFE24
 3371 00b8 00000000 		.4byte	.LFB25
 3372 00bc 10000000 		.4byte	.LFE25
 3373 00c0 00000000 		.4byte	.LFB26
 3374 00c4 10000000 		.4byte	.LFE26
 3375 00c8 00000000 		.4byte	.LFB27
 3376 00cc 10000000 		.4byte	.LFE27
 3377 00d0 00000000 		.4byte	.LFB28
 3378 00d4 24000000 		.4byte	.LFE28
 3379 00d8 00000000 		.4byte	.LFB29
 3380 00dc 24000000 		.4byte	.LFE29
 3381 00e0 00000000 		.4byte	.LFB30
 3382 00e4 28000000 		.4byte	.LFE30
 3383 00e8 00000000 		.4byte	.LFB31
 3384 00ec 24000000 		.4byte	.LFE31
 3385 00f0 00000000 		.4byte	.LFB32
 3386 00f4 24000000 		.4byte	.LFE32
 3387 00f8 00000000 		.4byte	.LFB33
 3388 00fc 1C000000 		.4byte	.LFE33
 3389 0100 00000000 		.4byte	.LFB34
 3390 0104 14000000 		.4byte	.LFE34
 3391 0108 00000000 		.4byte	.LFB35
 3392 010c 0C000000 		.4byte	.LFE35
 3393 0110 00000000 		.4byte	.LFB0
 3394 0114 5C000000 		.4byte	.LFE0
 3395 0118 00000000 		.4byte	.LFB2
 3396 011c 20000000 		.4byte	.LFE2
 3397 0120 00000000 		.4byte	.LFB36
 3398 0124 0C000000 		.4byte	.LFE36
 3399 0128 00000000 		.4byte	.LFB37
 3400 012c 0C000000 		.4byte	.LFE37
 3401 0130 00000000 		.4byte	.LFB38
 3402 0134 0C000000 		.4byte	.LFE38
 3403 0138 00000000 		.4byte	.LFB39
 3404 013c 0C000000 		.4byte	.LFE39
 3405 0140 00000000 		.4byte	0
 3406 0144 00000000 		.4byte	0
 3407              		.section	.debug_line,"",%progbits
 3408              	.Ldebug_line0:
 3409 0000 7B030000 		.section	.debug_str,"MS",%progbits,1
 3409      02004F00 
 3409      00000201 
 3409      FB0E0D00 
 3409      01010101 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 86


 3410              	.LASF38:
 3411 0000 636F756E 		.ascii	"count\000"
 3411      7400
 3412              	.LASF81:
 3413 0006 43794578 		.ascii	"CyExitCriticalSection\000"
 3413      69744372 
 3413      69746963 
 3413      616C5365 
 3413      6374696F 
 3414              	.LASF17:
 3415 001c 50574D5F 		.ascii	"PWM_1_Stop\000"
 3415      315F5374 
 3415      6F7000
 3416              	.LASF57:
 3417 0027 50574D5F 		.ascii	"PWM_1_ReadCapture\000"
 3417      315F5265 
 3417      61644361 
 3417      70747572 
 3417      6500
 3418              	.LASF73:
 3419 0039 50574D5F 		.ascii	"PWM_1_GetInterruptSource\000"
 3419      315F4765 
 3419      74496E74 
 3419      65727275 
 3419      7074536F 
 3420              	.LASF47:
 3421 0052 50574D5F 		.ascii	"PWM_1_WritePeriodBuf\000"
 3421      315F5772 
 3421      69746550 
 3421      6572696F 
 3421      64427566 
 3422              	.LASF42:
 3423 0067 70657269 		.ascii	"period\000"
 3423      6F6400
 3424              	.LASF7:
 3425 006e 6C6F6E67 		.ascii	"long long unsigned int\000"
 3425      206C6F6E 
 3425      6720756E 
 3425      7369676E 
 3425      65642069 
 3426              	.LASF22:
 3427 0085 71644D6F 		.ascii	"qdMode\000"
 3427      646500
 3428              	.LASF25:
 3429 008c 50574D5F 		.ascii	"PWM_1_SetOneShot\000"
 3429      315F5365 
 3429      744F6E65 
 3429      53686F74 
 3429      00
 3430              	.LASF53:
 3431 009d 50574D5F 		.ascii	"PWM_1_ReadCompare\000"
 3431      315F5265 
 3431      6164436F 
 3431      6D706172 
 3431      6500
 3432              	.LASF75:
 3433 00af 50574D5F 		.ascii	"PWM_1_SetInterrupt\000"
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 87


 3433      315F5365 
 3433      74496E74 
 3433      65727275 
 3433      707400
 3434              	.LASF6:
 3435 00c2 6C6F6E67 		.ascii	"long long int\000"
 3435      206C6F6E 
 3435      6720696E 
 3435      7400
 3436              	.LASF0:
 3437 00d0 7369676E 		.ascii	"signed char\000"
 3437      65642063 
 3437      68617200 
 3438              	.LASF58:
 3439 00dc 50574D5F 		.ascii	"PWM_1_ReadCaptureBuf\000"
 3439      315F5265 
 3439      61644361 
 3439      70747572 
 3439      65427566 
 3440              	.LASF67:
 3441 00f1 50574D5F 		.ascii	"PWM_1_ReadStatus\000"
 3441      315F5265 
 3441      61645374 
 3441      61747573 
 3441      00
 3442              	.LASF4:
 3443 0102 6C6F6E67 		.ascii	"long int\000"
 3443      20696E74 
 3443      00
 3444              	.LASF9:
 3445 010b 75696E74 		.ascii	"uint8\000"
 3445      3800
 3446              	.LASF12:
 3447 0111 646F7562 		.ascii	"double\000"
 3447      6C6500
 3448              	.LASF43:
 3449 0118 50574D5F 		.ascii	"PWM_1_ReadCounter\000"
 3449      315F5265 
 3449      6164436F 
 3449      756E7465 
 3449      7200
 3450              	.LASF64:
 3451 012a 50574D5F 		.ascii	"PWM_1_SetCountMode\000"
 3451      315F5365 
 3451      74436F75 
 3451      6E744D6F 
 3451      646500
 3452              	.LASF10:
 3453 013d 75696E74 		.ascii	"uint32\000"
 3453      333200
 3454              	.LASF60:
 3455 0144 74726967 		.ascii	"triggerMode\000"
 3455      6765724D 
 3455      6F646500 
 3456              	.LASF36:
 3457 0150 6D61736B 		.ascii	"mask\000"
 3457      00
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 88


 3458              	.LASF78:
 3459 0155 443A5C63 		.ascii	"D:\\code\\cypress\\SCB_Bootloader\\cncboot.cydsn\000"
 3459      6F64655C 
 3459      63797072 
 3459      6573735C 
 3459      5343425F 
 3460              	.LASF34:
 3461 0182 64656164 		.ascii	"deadTime\000"
 3461      54696D65 
 3461      00
 3462              	.LASF8:
 3463 018b 756E7369 		.ascii	"unsigned int\000"
 3463      676E6564 
 3463      20696E74 
 3463      00
 3464              	.LASF19:
 3465 0198 50574D5F 		.ascii	"PWM_1_SetMode\000"
 3465      315F5365 
 3465      744D6F64 
 3465      6500
 3466              	.LASF66:
 3467 01a6 636F6D6D 		.ascii	"command\000"
 3467      616E6400 
 3468              	.LASF5:
 3469 01ae 6C6F6E67 		.ascii	"long unsigned int\000"
 3469      20756E73 
 3469      69676E65 
 3469      6420696E 
 3469      7400
 3470              	.LASF28:
 3471 01c0 6D6F6465 		.ascii	"modeMask\000"
 3471      4D61736B 
 3471      00
 3472              	.LASF80:
 3473 01c9 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3473      74657243 
 3473      72697469 
 3473      63616C53 
 3473      65637469 
 3474              	.LASF44:
 3475 01e0 50574D5F 		.ascii	"PWM_1_ReadPeriod\000"
 3475      315F5265 
 3475      61645065 
 3475      72696F64 
 3475      00
 3476              	.LASF51:
 3477 01f1 50574D5F 		.ascii	"PWM_1_WriteCompare\000"
 3477      315F5772 
 3477      69746543 
 3477      6F6D7061 
 3477      726500
 3478              	.LASF3:
 3479 0204 73686F72 		.ascii	"short unsigned int\000"
 3479      7420756E 
 3479      7369676E 
 3479      65642069 
 3479      6E7400
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 89


 3480              	.LASF26:
 3481 0217 6F6E6553 		.ascii	"oneShotEnable\000"
 3481      686F7445 
 3481      6E61626C 
 3481      6500
 3482              	.LASF16:
 3483 0225 50574D5F 		.ascii	"PWM_1_Enable\000"
 3483      315F456E 
 3483      61626C65 
 3483      00
 3484              	.LASF70:
 3485 0232 50574D5F 		.ascii	"PWM_1_Init\000"
 3485      315F496E 
 3485      697400
 3486              	.LASF14:
 3487 023d 72656733 		.ascii	"reg32\000"
 3487      3200
 3488              	.LASF37:
 3489 0243 50574D5F 		.ascii	"PWM_1_WriteCounter\000"
 3489      315F5772 
 3489      69746543 
 3489      6F756E74 
 3489      657200
 3490              	.LASF31:
 3491 0256 50574D5F 		.ascii	"PWM_1_SetPWMStopOnKill\000"
 3491      315F5365 
 3491      7450574D 
 3491      53746F70 
 3491      4F6E4B69 
 3492              	.LASF15:
 3493 026d 73697A65 		.ascii	"sizetype\000"
 3493      74797065 
 3493      00
 3494              	.LASF30:
 3495 0276 73796E63 		.ascii	"syncKillEnable\000"
 3495      4B696C6C 
 3495      456E6162 
 3495      6C6500
 3496              	.LASF77:
 3497 0285 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM_1.c\000"
 3497      6E657261 
 3497      7465645F 
 3497      536F7572 
 3497      63655C50 
 3498              	.LASF52:
 3499 02a6 636F6D70 		.ascii	"compare\000"
 3499      61726500 
 3500              	.LASF27:
 3501 02ae 50574D5F 		.ascii	"PWM_1_SetPWMMode\000"
 3501      315F5365 
 3501      7450574D 
 3501      4D6F6465 
 3501      00
 3502              	.LASF39:
 3503 02bf 50574D5F 		.ascii	"PWM_1_SetCounterMode\000"
 3503      315F5365 
 3503      74436F75 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 90


 3503      6E746572 
 3503      4D6F6465 
 3504              	.LASF56:
 3505 02d4 50574D5F 		.ascii	"PWM_1_ReadCompareBuf\000"
 3505      315F5265 
 3505      6164436F 
 3505      6D706172 
 3505      65427566 
 3506              	.LASF45:
 3507 02e9 50574D5F 		.ascii	"PWM_1_SetCompareSwap\000"
 3507      315F5365 
 3507      74436F6D 
 3507      70617265 
 3507      53776170 
 3508              	.LASF76:
 3509 02fe 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3509      4320342E 
 3509      392E3320 
 3509      32303135 
 3509      30333033 
 3510 0331 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 3510      20726576 
 3510      6973696F 
 3510      6E203232 
 3510      31323230 
 3511 0364 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3511      66756E63 
 3511      74696F6E 
 3511      2D736563 
 3511      74696F6E 
 3512              	.LASF11:
 3513 038c 666C6F61 		.ascii	"float\000"
 3513      7400
 3514              	.LASF24:
 3515 0392 70726573 		.ascii	"prescaler\000"
 3515      63616C65 
 3515      7200
 3516              	.LASF49:
 3517 039c 50574D5F 		.ascii	"PWM_1_ReadPeriodBuf\000"
 3517      315F5265 
 3517      61645065 
 3517      72696F64 
 3517      42756600 
 3518              	.LASF35:
 3519 03b0 50574D5F 		.ascii	"PWM_1_SetPWMInvert\000"
 3519      315F5365 
 3519      7450574D 
 3519      496E7665 
 3519      727400
 3520              	.LASF62:
 3521 03c3 50574D5F 		.ascii	"PWM_1_SetStartMode\000"
 3521      315F5365 
 3521      74537461 
 3521      72744D6F 
 3521      646500
 3522              	.LASF1:
 3523 03d6 756E7369 		.ascii	"unsigned char\000"
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 91


 3523      676E6564 
 3523      20636861 
 3523      7200
 3524              	.LASF33:
 3525 03e4 50574D5F 		.ascii	"PWM_1_SetPWMDeadTime\000"
 3525      315F5365 
 3525      7450574D 
 3525      44656164 
 3525      54696D65 
 3526              	.LASF29:
 3527 03f9 50574D5F 		.ascii	"PWM_1_SetPWMSyncKill\000"
 3527      315F5365 
 3527      7450574D 
 3527      53796E63 
 3527      4B696C6C 
 3528              	.LASF32:
 3529 040e 73746F70 		.ascii	"stopOnKillEnable\000"
 3529      4F6E4B69 
 3529      6C6C456E 
 3529      61626C65 
 3529      00
 3530              	.LASF2:
 3531 041f 73686F72 		.ascii	"short int\000"
 3531      7420696E 
 3531      7400
 3532              	.LASF50:
 3533 0429 50574D5F 		.ascii	"PWM_1_SetPeriodSwap\000"
 3533      315F5365 
 3533      74506572 
 3533      696F6453 
 3533      77617000 
 3534              	.LASF69:
 3535 043d 696E7465 		.ascii	"interruptMask\000"
 3535      72727570 
 3535      744D6173 
 3535      6B00
 3536              	.LASF68:
 3537 044b 50574D5F 		.ascii	"PWM_1_SetInterruptMode\000"
 3537      315F5365 
 3537      74496E74 
 3537      65727275 
 3537      70744D6F 
 3538              	.LASF63:
 3539 0462 50574D5F 		.ascii	"PWM_1_SetStopMode\000"
 3539      315F5365 
 3539      7453746F 
 3539      704D6F64 
 3539      6500
 3540              	.LASF13:
 3541 0474 63686172 		.ascii	"char\000"
 3541      00
 3542              	.LASF21:
 3543 0479 6D6F6465 		.ascii	"mode\000"
 3543      00
 3544              	.LASF65:
 3545 047e 50574D5F 		.ascii	"PWM_1_TriggerCommand\000"
 3545      315F5472 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 92


 3545      69676765 
 3545      72436F6D 
 3545      6D616E64 
 3546              	.LASF23:
 3547 0493 50574D5F 		.ascii	"PWM_1_SetPrescaler\000"
 3547      315F5365 
 3547      74507265 
 3547      7363616C 
 3547      657200
 3548              	.LASF74:
 3549 04a6 50574D5F 		.ascii	"PWM_1_ClearInterrupt\000"
 3549      315F436C 
 3549      65617249 
 3549      6E746572 
 3549      72757074 
 3550              	.LASF54:
 3551 04bb 50574D5F 		.ascii	"PWM_1_WriteCompareBuf\000"
 3551      315F5772 
 3551      69746543 
 3551      6F6D7061 
 3551      72654275 
 3552              	.LASF40:
 3553 04d1 636F756E 		.ascii	"counterMode\000"
 3553      7465724D 
 3553      6F646500 
 3554              	.LASF55:
 3555 04dd 636F6D70 		.ascii	"compareBuf\000"
 3555      61726542 
 3555      756600
 3556              	.LASF71:
 3557 04e8 50574D5F 		.ascii	"PWM_1_Start\000"
 3557      315F5374 
 3557      61727400 
 3558              	.LASF61:
 3559 04f4 50574D5F 		.ascii	"PWM_1_SetReloadMode\000"
 3559      315F5365 
 3559      7452656C 
 3559      6F61644D 
 3559      6F646500 
 3560              	.LASF18:
 3561 0508 656E6162 		.ascii	"enableInterrupts\000"
 3561      6C65496E 
 3561      74657272 
 3561      75707473 
 3561      00
 3562              	.LASF41:
 3563 0519 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 3563      315F5772 
 3563      69746550 
 3563      6572696F 
 3563      6400
 3564              	.LASF59:
 3565 052b 50574D5F 		.ascii	"PWM_1_SetCaptureMode\000"
 3565      315F5365 
 3565      74436170 
 3565      74757265 
 3565      4D6F6465 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccMxCaP9.s 			page 93


 3566              	.LASF79:
 3567 0540 50574D5F 		.ascii	"PWM_1_initVar\000"
 3567      315F696E 
 3567      69745661 
 3567      7200
 3568              	.LASF20:
 3569 054e 50574D5F 		.ascii	"PWM_1_SetQDMode\000"
 3569      315F5365 
 3569      7451444D 
 3569      6F646500 
 3570              	.LASF46:
 3571 055e 73776170 		.ascii	"swapEnable\000"
 3571      456E6162 
 3571      6C6500
 3572              	.LASF48:
 3573 0569 70657269 		.ascii	"periodBuf\000"
 3573      6F644275 
 3573      6600
 3574              	.LASF72:
 3575 0573 50574D5F 		.ascii	"PWM_1_GetInterruptSourceMasked\000"
 3575      315F4765 
 3575      74496E74 
 3575      65727275 
 3575      7074536F 
 3576              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
