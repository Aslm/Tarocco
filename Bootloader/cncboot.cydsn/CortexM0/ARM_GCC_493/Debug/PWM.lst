ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.PWM_Stop,"ax",%progbits
  18              		.align	2
  19              		.global	PWM_Stop
  20              		.code	16
  21              		.thumb_func
  22              		.type	PWM_Stop, %function
  23              	PWM_Stop:
  24              	.LFB3:
  25              		.file 1 "Generated_Source\\PSoC4\\PWM.c"
   1:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/PWM.c **** * File Name: PWM.c
   3:Generated_Source\PSoC4/PWM.c **** * Version 2.10
   4:Generated_Source\PSoC4/PWM.c **** *
   5:Generated_Source\PSoC4/PWM.c **** * Description:
   6:Generated_Source\PSoC4/PWM.c **** *  This file provides the source code to the API for the PWM
   7:Generated_Source\PSoC4/PWM.c **** *  component
   8:Generated_Source\PSoC4/PWM.c **** *
   9:Generated_Source\PSoC4/PWM.c **** * Note:
  10:Generated_Source\PSoC4/PWM.c **** *  None
  11:Generated_Source\PSoC4/PWM.c **** *
  12:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  13:Generated_Source\PSoC4/PWM.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/PWM.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/PWM.c **** 
  19:Generated_Source\PSoC4/PWM.c **** #include "PWM.h"
  20:Generated_Source\PSoC4/PWM.c **** 
  21:Generated_Source\PSoC4/PWM.c **** uint8 PWM_initVar = 0u;
  22:Generated_Source\PSoC4/PWM.c **** 
  23:Generated_Source\PSoC4/PWM.c **** 
  24:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
  25:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Init
  26:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  27:Generated_Source\PSoC4/PWM.c **** *
  28:Generated_Source\PSoC4/PWM.c **** * Summary:
  29:Generated_Source\PSoC4/PWM.c **** *  Initialize/Restore default PWM configuration.
  30:Generated_Source\PSoC4/PWM.c **** *
  31:Generated_Source\PSoC4/PWM.c **** * Parameters:
  32:Generated_Source\PSoC4/PWM.c **** *  None
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 2


  33:Generated_Source\PSoC4/PWM.c **** *
  34:Generated_Source\PSoC4/PWM.c **** * Return:
  35:Generated_Source\PSoC4/PWM.c **** *  None
  36:Generated_Source\PSoC4/PWM.c **** *
  37:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  38:Generated_Source\PSoC4/PWM.c **** void PWM_Init(void)
  39:Generated_Source\PSoC4/PWM.c **** {
  40:Generated_Source\PSoC4/PWM.c **** 
  41:Generated_Source\PSoC4/PWM.c ****     /* Set values from customizer to CTRL */
  42:Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
  43:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_QUAD_BASE_CONFIG;
  44:Generated_Source\PSoC4/PWM.c ****         
  45:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
  46:Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_QUAD_SIGNALS_MODES;
  47:Generated_Source\PSoC4/PWM.c **** 
  48:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
  49:Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_QUAD_INTERRUPT_MASK);
  50:Generated_Source\PSoC4/PWM.c ****         
  51:Generated_Source\PSoC4/PWM.c ****          /* Set other values */
  52:Generated_Source\PSoC4/PWM.c ****         PWM_SetCounterMode(PWM_COUNT_DOWN);
  53:Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_QUAD_PERIOD_INIT_VALUE);
  54:Generated_Source\PSoC4/PWM.c ****         PWM_WriteCounter(PWM_QUAD_PERIOD_INIT_VALUE);
  55:Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
  56:Generated_Source\PSoC4/PWM.c **** 
  57:Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
  58:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_TIMER_BASE_CONFIG;
  59:Generated_Source\PSoC4/PWM.c ****         
  60:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
  61:Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_TIMER_SIGNALS_MODES;
  62:Generated_Source\PSoC4/PWM.c ****     
  63:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
  64:Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_TC_INTERRUPT_MASK);
  65:Generated_Source\PSoC4/PWM.c ****         
  66:Generated_Source\PSoC4/PWM.c ****         /* Set other values from customizer */
  67:Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_TC_PERIOD_VALUE );
  68:Generated_Source\PSoC4/PWM.c **** 
  69:Generated_Source\PSoC4/PWM.c ****         #if (PWM__COMPARE == PWM_TC_COMP_CAP_MODE)
  70:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare(PWM_TC_COMPARE_VALUE);
  71:Generated_Source\PSoC4/PWM.c **** 
  72:Generated_Source\PSoC4/PWM.c ****             #if (1u == PWM_TC_COMPARE_SWAP)
  73:Generated_Source\PSoC4/PWM.c ****                 PWM_SetCompareSwap(1u);
  74:Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCompareBuf(PWM_TC_COMPARE_BUF_VALUE);
  75:Generated_Source\PSoC4/PWM.c ****             #endif  /* (1u == PWM_TC_COMPARE_SWAP) */
  76:Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__COMPARE == PWM_TC_COMP_CAP_MODE) */
  77:Generated_Source\PSoC4/PWM.c **** 
  78:Generated_Source\PSoC4/PWM.c ****         /* Initialize counter value */
  79:Generated_Source\PSoC4/PWM.c ****         #if (PWM_CY_TCPWM_V2 && PWM_TIMER_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000)
  80:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(1u);
  81:Generated_Source\PSoC4/PWM.c ****         #elif(PWM__COUNT_DOWN == PWM_TC_COUNTER_MODE)
  82:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(PWM_TC_PERIOD_VALUE);
  83:Generated_Source\PSoC4/PWM.c ****         #else
  84:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(0u);
  85:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_CY_TCPWM_V2 && PWM_TIMER_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000) */
  86:Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
  87:Generated_Source\PSoC4/PWM.c **** 
  88:Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
  89:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_PWM_BASE_CONFIG;
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 3


  90:Generated_Source\PSoC4/PWM.c **** 
  91:Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
  92:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_RUN_MODE;
  93:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(PWM_PWM_PR_INIT_VALUE);
  94:Generated_Source\PSoC4/PWM.c ****         #else
  95:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_ALIGN | PWM_CTRL_PWM_KILL_EVENT;
  96:Generated_Source\PSoC4/PWM.c ****             
  97:Generated_Source\PSoC4/PWM.c ****             /* Initialize counter value */
  98:Generated_Source\PSoC4/PWM.c ****             #if (PWM_CY_TCPWM_V2 && PWM_PWM_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000)
  99:Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(1u);
 100:Generated_Source\PSoC4/PWM.c ****             #elif (PWM__RIGHT == PWM_PWM_ALIGN)
 101:Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(PWM_PWM_PERIOD_VALUE);
 102:Generated_Source\PSoC4/PWM.c ****             #else 
 103:Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(0u);
 104:Generated_Source\PSoC4/PWM.c ****             #endif  /* (PWM_CY_TCPWM_V2 && PWM_PWM_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000) */
 105:Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
 106:Generated_Source\PSoC4/PWM.c **** 
 107:Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_DT == PWM_PWM_MODE)
 108:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_DEAD_TIME_CYCLE;
 109:Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_DT == PWM_PWM_MODE) */
 110:Generated_Source\PSoC4/PWM.c **** 
 111:Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM == PWM_PWM_MODE)
 112:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_PRESCALER;
 113:Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM == PWM_PWM_MODE) */
 114:Generated_Source\PSoC4/PWM.c **** 
 115:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
 116:Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_PWM_SIGNALS_MODES;
 117:Generated_Source\PSoC4/PWM.c ****     
 118:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
 119:Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_PWM_INTERRUPT_MASK);
 120:Generated_Source\PSoC4/PWM.c **** 
 121:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL2 */
 122:Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
 123:Generated_Source\PSoC4/PWM.c ****             PWM_TRIG_CONTROL2_REG =
 124:Generated_Source\PSoC4/PWM.c ****                     (PWM_CC_MATCH_NO_CHANGE    |
 125:Generated_Source\PSoC4/PWM.c ****                     PWM_OVERLOW_NO_CHANGE      |
 126:Generated_Source\PSoC4/PWM.c ****                     PWM_UNDERFLOW_NO_CHANGE);
 127:Generated_Source\PSoC4/PWM.c ****         #else
 128:Generated_Source\PSoC4/PWM.c ****             #if (PWM__LEFT == PWM_PWM_ALIGN)
 129:Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_LEFT;
 130:Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_LEFT == PWM_PWM_ALIGN) */
 131:Generated_Source\PSoC4/PWM.c **** 
 132:Generated_Source\PSoC4/PWM.c ****             #if (PWM__RIGHT == PWM_PWM_ALIGN)
 133:Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_RIGHT;
 134:Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_RIGHT == PWM_PWM_ALIGN) */
 135:Generated_Source\PSoC4/PWM.c **** 
 136:Generated_Source\PSoC4/PWM.c ****             #if (PWM__CENTER == PWM_PWM_ALIGN)
 137:Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_CENTER;
 138:Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_CENTER == PWM_PWM_ALIGN) */
 139:Generated_Source\PSoC4/PWM.c **** 
 140:Generated_Source\PSoC4/PWM.c ****             #if (PWM__ASYMMETRIC == PWM_PWM_ALIGN)
 141:Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_ASYM;
 142:Generated_Source\PSoC4/PWM.c ****             #endif  /* (PWM__ASYMMETRIC == PWM_PWM_ALIGN) */
 143:Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
 144:Generated_Source\PSoC4/PWM.c **** 
 145:Generated_Source\PSoC4/PWM.c ****         /* Set other values from customizer */
 146:Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_PWM_PERIOD_VALUE );
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 4


 147:Generated_Source\PSoC4/PWM.c ****         PWM_WriteCompare(PWM_PWM_COMPARE_VALUE);
 148:Generated_Source\PSoC4/PWM.c **** 
 149:Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_COMPARE_SWAP)
 150:Generated_Source\PSoC4/PWM.c ****             PWM_SetCompareSwap(1u);
 151:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompareBuf(PWM_PWM_COMPARE_BUF_VALUE);
 152:Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_COMPARE_SWAP) */
 153:Generated_Source\PSoC4/PWM.c **** 
 154:Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_PERIOD_SWAP)
 155:Generated_Source\PSoC4/PWM.c ****             PWM_SetPeriodSwap(1u);
 156:Generated_Source\PSoC4/PWM.c ****             PWM_WritePeriodBuf(PWM_PWM_PERIOD_BUF_VALUE);
 157:Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_PERIOD_SWAP) */
 158:Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
 159:Generated_Source\PSoC4/PWM.c ****     
 160:Generated_Source\PSoC4/PWM.c **** }
 161:Generated_Source\PSoC4/PWM.c **** 
 162:Generated_Source\PSoC4/PWM.c **** 
 163:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 164:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Enable
 165:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 166:Generated_Source\PSoC4/PWM.c **** *
 167:Generated_Source\PSoC4/PWM.c **** * Summary:
 168:Generated_Source\PSoC4/PWM.c **** *  Enables the PWM.
 169:Generated_Source\PSoC4/PWM.c **** *
 170:Generated_Source\PSoC4/PWM.c **** * Parameters:
 171:Generated_Source\PSoC4/PWM.c **** *  None
 172:Generated_Source\PSoC4/PWM.c **** *
 173:Generated_Source\PSoC4/PWM.c **** * Return:
 174:Generated_Source\PSoC4/PWM.c **** *  None
 175:Generated_Source\PSoC4/PWM.c **** *
 176:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 177:Generated_Source\PSoC4/PWM.c **** void PWM_Enable(void)
 178:Generated_Source\PSoC4/PWM.c **** {
 179:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 180:Generated_Source\PSoC4/PWM.c **** 
 181:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 182:Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG |= PWM_MASK;
 183:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 184:Generated_Source\PSoC4/PWM.c **** 
 185:Generated_Source\PSoC4/PWM.c ****     /* Start Timer or PWM if start input is absent */
 186:Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
 187:Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_PWM_START_SIGNAL_PRESENT)
 188:Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 189:Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_PWM_START_SIGNAL_PRESENT) */
 190:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__PWM_SEL == PWM_CONFIG) */
 191:Generated_Source\PSoC4/PWM.c **** 
 192:Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 193:Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_TC_START_SIGNAL_PRESENT)
 194:Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 195:Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_TC_START_SIGNAL_PRESENT) */
 196:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__TIMER == PWM_CONFIG) */
 197:Generated_Source\PSoC4/PWM.c ****     
 198:Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
 199:Generated_Source\PSoC4/PWM.c ****         #if (0u != PWM_QUAD_AUTO_START)
 200:Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_RELOAD);
 201:Generated_Source\PSoC4/PWM.c ****         #endif /* (0u != PWM_QUAD_AUTO_START) */
 202:Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
 203:Generated_Source\PSoC4/PWM.c **** }
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 5


 204:Generated_Source\PSoC4/PWM.c **** 
 205:Generated_Source\PSoC4/PWM.c **** 
 206:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 207:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Start
 208:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 209:Generated_Source\PSoC4/PWM.c **** *
 210:Generated_Source\PSoC4/PWM.c **** * Summary:
 211:Generated_Source\PSoC4/PWM.c **** *  Initializes the PWM with default customizer
 212:Generated_Source\PSoC4/PWM.c **** *  values when called the first time and enables the PWM.
 213:Generated_Source\PSoC4/PWM.c **** *  For subsequent calls the configuration is left unchanged and the component is
 214:Generated_Source\PSoC4/PWM.c **** *  just enabled.
 215:Generated_Source\PSoC4/PWM.c **** *
 216:Generated_Source\PSoC4/PWM.c **** * Parameters:
 217:Generated_Source\PSoC4/PWM.c **** *  None
 218:Generated_Source\PSoC4/PWM.c **** *
 219:Generated_Source\PSoC4/PWM.c **** * Return:
 220:Generated_Source\PSoC4/PWM.c **** *  None
 221:Generated_Source\PSoC4/PWM.c **** *
 222:Generated_Source\PSoC4/PWM.c **** * Global variables:
 223:Generated_Source\PSoC4/PWM.c **** *  PWM_initVar: global variable is used to indicate initial
 224:Generated_Source\PSoC4/PWM.c **** *  configuration of this component.  The variable is initialized to zero and set
 225:Generated_Source\PSoC4/PWM.c **** *  to 1 the first time PWM_Start() is called. This allows
 226:Generated_Source\PSoC4/PWM.c **** *  enabling/disabling a component without re-initialization in all subsequent
 227:Generated_Source\PSoC4/PWM.c **** *  calls to the PWM_Start() routine.
 228:Generated_Source\PSoC4/PWM.c **** *
 229:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 230:Generated_Source\PSoC4/PWM.c **** void PWM_Start(void)
 231:Generated_Source\PSoC4/PWM.c **** {
 232:Generated_Source\PSoC4/PWM.c ****     if (0u == PWM_initVar)
 233:Generated_Source\PSoC4/PWM.c ****     {
 234:Generated_Source\PSoC4/PWM.c ****         PWM_Init();
 235:Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 236:Generated_Source\PSoC4/PWM.c ****     }
 237:Generated_Source\PSoC4/PWM.c **** 
 238:Generated_Source\PSoC4/PWM.c ****     PWM_Enable();
 239:Generated_Source\PSoC4/PWM.c **** }
 240:Generated_Source\PSoC4/PWM.c **** 
 241:Generated_Source\PSoC4/PWM.c **** 
 242:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 243:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Stop
 244:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 245:Generated_Source\PSoC4/PWM.c **** *
 246:Generated_Source\PSoC4/PWM.c **** * Summary:
 247:Generated_Source\PSoC4/PWM.c **** *  Disables the PWM.
 248:Generated_Source\PSoC4/PWM.c **** *
 249:Generated_Source\PSoC4/PWM.c **** * Parameters:
 250:Generated_Source\PSoC4/PWM.c **** *  None
 251:Generated_Source\PSoC4/PWM.c **** *
 252:Generated_Source\PSoC4/PWM.c **** * Return:
 253:Generated_Source\PSoC4/PWM.c **** *  None
 254:Generated_Source\PSoC4/PWM.c **** *
 255:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 256:Generated_Source\PSoC4/PWM.c **** void PWM_Stop(void)
 257:Generated_Source\PSoC4/PWM.c **** {
  26              		.loc 1 257 0
  27              		.cfi_startproc
  28 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 6


  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 3, -8
  31              		.cfi_offset 14, -4
 258:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 259:Generated_Source\PSoC4/PWM.c **** 
 260:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
  32              		.loc 1 260 0
  33 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  34              	.LVL0:
 261:Generated_Source\PSoC4/PWM.c **** 
 262:Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG &= (uint32)~PWM_MASK;
  35              		.loc 1 262 0
  36 0006 044A     		ldr	r2, .L2
  37 0008 1368     		ldr	r3, [r2]
  38 000a 0121     		mov	r1, #1
  39 000c 8B43     		bic	r3, r1
  40 000e 1360     		str	r3, [r2]
 263:Generated_Source\PSoC4/PWM.c **** 
 264:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
  41              		.loc 1 264 0
  42 0010 FFF7FEFF 		bl	CyExitCriticalSection
  43              	.LVL1:
 265:Generated_Source\PSoC4/PWM.c **** }
  44              		.loc 1 265 0
  45              		@ sp needed
  46 0014 08BD     		pop	{r3, pc}
  47              	.L3:
  48 0016 C046     		.align	2
  49              	.L2:
  50 0018 00000540 		.word	1074069504
  51              		.cfi_endproc
  52              	.LFE3:
  53              		.size	PWM_Stop, .-PWM_Stop
  54              		.section	.text.PWM_SetMode,"ax",%progbits
  55              		.align	2
  56              		.global	PWM_SetMode
  57              		.code	16
  58              		.thumb_func
  59              		.type	PWM_SetMode, %function
  60              	PWM_SetMode:
  61              	.LFB4:
 266:Generated_Source\PSoC4/PWM.c **** 
 267:Generated_Source\PSoC4/PWM.c **** 
 268:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 269:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetMode
 270:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 271:Generated_Source\PSoC4/PWM.c **** *
 272:Generated_Source\PSoC4/PWM.c **** * Summary:
 273:Generated_Source\PSoC4/PWM.c **** *  Sets the operation mode of the PWM. This function is used when
 274:Generated_Source\PSoC4/PWM.c **** *  configured as a generic PWM and the actual mode of operation is
 275:Generated_Source\PSoC4/PWM.c **** *  set at runtime. The mode must be set while the component is disabled.
 276:Generated_Source\PSoC4/PWM.c **** *
 277:Generated_Source\PSoC4/PWM.c **** * Parameters:
 278:Generated_Source\PSoC4/PWM.c **** *  mode: Mode for the PWM to operate in
 279:Generated_Source\PSoC4/PWM.c **** *   Values:
 280:Generated_Source\PSoC4/PWM.c **** *   - PWM_MODE_TIMER_COMPARE - Timer / Counter with
 281:Generated_Source\PSoC4/PWM.c **** *                                                 compare capability
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 7


 282:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_TIMER_CAPTURE - Timer / Counter with
 283:Generated_Source\PSoC4/PWM.c **** *                                                 capture capability
 284:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_QUAD - Quadrature decoder
 285:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM - PWM
 286:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_DT - PWM with dead time
 287:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_PR - PWM with pseudo random capability
 288:Generated_Source\PSoC4/PWM.c **** *
 289:Generated_Source\PSoC4/PWM.c **** * Return:
 290:Generated_Source\PSoC4/PWM.c **** *  None
 291:Generated_Source\PSoC4/PWM.c **** *
 292:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 293:Generated_Source\PSoC4/PWM.c **** void PWM_SetMode(uint32 mode)
 294:Generated_Source\PSoC4/PWM.c **** {
  62              		.loc 1 294 0
  63              		.cfi_startproc
  64              	.LVL2:
  65 0000 10B5     		push	{r4, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 4, -8
  68              		.cfi_offset 14, -4
  69 0002 041C     		mov	r4, r0
 295:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 296:Generated_Source\PSoC4/PWM.c **** 
 297:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
  70              		.loc 1 297 0
  71 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  72              	.LVL3:
 298:Generated_Source\PSoC4/PWM.c **** 
 299:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_MODE_MASK;
  73              		.loc 1 299 0
  74 0008 054B     		ldr	r3, .L5
  75 000a 1968     		ldr	r1, [r3]
  76 000c 054A     		ldr	r2, .L5+4
  77 000e 0A40     		and	r2, r1
  78 0010 1A60     		str	r2, [r3]
 300:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mode;
  79              		.loc 1 300 0
  80 0012 1A68     		ldr	r2, [r3]
  81 0014 1443     		orr	r4, r2
  82              	.LVL4:
  83 0016 1C60     		str	r4, [r3]
 301:Generated_Source\PSoC4/PWM.c **** 
 302:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
  84              		.loc 1 302 0
  85 0018 FFF7FEFF 		bl	CyExitCriticalSection
  86              	.LVL5:
 303:Generated_Source\PSoC4/PWM.c **** }
  87              		.loc 1 303 0
  88              		@ sp needed
  89 001c 10BD     		pop	{r4, pc}
  90              	.L6:
  91 001e C046     		.align	2
  92              	.L5:
  93 0020 00010540 		.word	1074069760
  94 0024 FFFFFFF8 		.word	-117440513
  95              		.cfi_endproc
  96              	.LFE4:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 8


  97              		.size	PWM_SetMode, .-PWM_SetMode
  98              		.section	.text.PWM_SetQDMode,"ax",%progbits
  99              		.align	2
 100              		.global	PWM_SetQDMode
 101              		.code	16
 102              		.thumb_func
 103              		.type	PWM_SetQDMode, %function
 104              	PWM_SetQDMode:
 105              	.LFB5:
 304:Generated_Source\PSoC4/PWM.c **** 
 305:Generated_Source\PSoC4/PWM.c **** 
 306:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 307:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetQDMode
 308:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 309:Generated_Source\PSoC4/PWM.c **** *
 310:Generated_Source\PSoC4/PWM.c **** * Summary:
 311:Generated_Source\PSoC4/PWM.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 312:Generated_Source\PSoC4/PWM.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 313:Generated_Source\PSoC4/PWM.c **** *
 314:Generated_Source\PSoC4/PWM.c **** * Parameters:
 315:Generated_Source\PSoC4/PWM.c **** *  qdMode: Quadrature Decoder mode
 316:Generated_Source\PSoC4/PWM.c **** *   Values:
 317:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X1 - Counts on phi 1 rising
 318:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X2 - Counts on both edges of phi1 (2x faster)
 319:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X4 - Counts on both edges of phi1 and phi2
 320:Generated_Source\PSoC4/PWM.c **** *                                        (4x faster)
 321:Generated_Source\PSoC4/PWM.c **** *
 322:Generated_Source\PSoC4/PWM.c **** * Return:
 323:Generated_Source\PSoC4/PWM.c **** *  None
 324:Generated_Source\PSoC4/PWM.c **** *
 325:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 326:Generated_Source\PSoC4/PWM.c **** void PWM_SetQDMode(uint32 qdMode)
 327:Generated_Source\PSoC4/PWM.c **** {
 106              		.loc 1 327 0
 107              		.cfi_startproc
 108              	.LVL6:
 109 0000 10B5     		push	{r4, lr}
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 4, -8
 112              		.cfi_offset 14, -4
 113 0002 041C     		mov	r4, r0
 328:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 329:Generated_Source\PSoC4/PWM.c **** 
 330:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 114              		.loc 1 330 0
 115 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 116              	.LVL7:
 331:Generated_Source\PSoC4/PWM.c **** 
 332:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_QUAD_MODE_MASK;
 117              		.loc 1 332 0
 118 0008 054B     		ldr	r3, .L8
 119 000a 1968     		ldr	r1, [r3]
 120 000c 054A     		ldr	r2, .L8+4
 121 000e 0A40     		and	r2, r1
 122 0010 1A60     		str	r2, [r3]
 333:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= qdMode;
 123              		.loc 1 333 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 9


 124 0012 1A68     		ldr	r2, [r3]
 125 0014 1443     		orr	r4, r2
 126              	.LVL8:
 127 0016 1C60     		str	r4, [r3]
 334:Generated_Source\PSoC4/PWM.c **** 
 335:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 128              		.loc 1 335 0
 129 0018 FFF7FEFF 		bl	CyExitCriticalSection
 130              	.LVL9:
 336:Generated_Source\PSoC4/PWM.c **** }
 131              		.loc 1 336 0
 132              		@ sp needed
 133 001c 10BD     		pop	{r4, pc}
 134              	.L9:
 135 001e C046     		.align	2
 136              	.L8:
 137 0020 00010540 		.word	1074069760
 138 0024 FFFF8FFF 		.word	-7340033
 139              		.cfi_endproc
 140              	.LFE5:
 141              		.size	PWM_SetQDMode, .-PWM_SetQDMode
 142              		.section	.text.PWM_SetPrescaler,"ax",%progbits
 143              		.align	2
 144              		.global	PWM_SetPrescaler
 145              		.code	16
 146              		.thumb_func
 147              		.type	PWM_SetPrescaler, %function
 148              	PWM_SetPrescaler:
 149              	.LFB6:
 337:Generated_Source\PSoC4/PWM.c **** 
 338:Generated_Source\PSoC4/PWM.c **** 
 339:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 340:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPrescaler
 341:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 342:Generated_Source\PSoC4/PWM.c **** *
 343:Generated_Source\PSoC4/PWM.c **** * Summary:
 344:Generated_Source\PSoC4/PWM.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 345:Generated_Source\PSoC4/PWM.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 346:Generated_Source\PSoC4/PWM.c **** *
 347:Generated_Source\PSoC4/PWM.c **** * Parameters:
 348:Generated_Source\PSoC4/PWM.c **** *  prescaler: Prescaler divider value
 349:Generated_Source\PSoC4/PWM.c **** *   Values:
 350:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 351:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY2    - Divide by 2
 352:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY4    - Divide by 4
 353:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY8    - Divide by 8
 354:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY16   - Divide by 16
 355:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY32   - Divide by 32
 356:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY64   - Divide by 64
 357:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY128  - Divide by 128
 358:Generated_Source\PSoC4/PWM.c **** *
 359:Generated_Source\PSoC4/PWM.c **** * Return:
 360:Generated_Source\PSoC4/PWM.c **** *  None
 361:Generated_Source\PSoC4/PWM.c **** *
 362:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 363:Generated_Source\PSoC4/PWM.c **** void PWM_SetPrescaler(uint32 prescaler)
 364:Generated_Source\PSoC4/PWM.c **** {
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 10


 150              		.loc 1 364 0
 151              		.cfi_startproc
 152              	.LVL10:
 153 0000 10B5     		push	{r4, lr}
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 4, -8
 156              		.cfi_offset 14, -4
 157 0002 041C     		mov	r4, r0
 365:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 366:Generated_Source\PSoC4/PWM.c **** 
 367:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 158              		.loc 1 367 0
 159 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 160              	.LVL11:
 368:Generated_Source\PSoC4/PWM.c **** 
 369:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 161              		.loc 1 369 0
 162 0008 054B     		ldr	r3, .L11
 163 000a 1968     		ldr	r1, [r3]
 164 000c 054A     		ldr	r2, .L11+4
 165 000e 0A40     		and	r2, r1
 166 0010 1A60     		str	r2, [r3]
 370:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= prescaler;
 167              		.loc 1 370 0
 168 0012 1A68     		ldr	r2, [r3]
 169 0014 1443     		orr	r4, r2
 170              	.LVL12:
 171 0016 1C60     		str	r4, [r3]
 371:Generated_Source\PSoC4/PWM.c **** 
 372:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 172              		.loc 1 372 0
 173 0018 FFF7FEFF 		bl	CyExitCriticalSection
 174              	.LVL13:
 373:Generated_Source\PSoC4/PWM.c **** }
 175              		.loc 1 373 0
 176              		@ sp needed
 177 001c 10BD     		pop	{r4, pc}
 178              	.L12:
 179 001e C046     		.align	2
 180              	.L11:
 181 0020 00010540 		.word	1074069760
 182 0024 FF00FFFF 		.word	-65281
 183              		.cfi_endproc
 184              	.LFE6:
 185              		.size	PWM_SetPrescaler, .-PWM_SetPrescaler
 186              		.section	.text.PWM_SetOneShot,"ax",%progbits
 187              		.align	2
 188              		.global	PWM_SetOneShot
 189              		.code	16
 190              		.thumb_func
 191              		.type	PWM_SetOneShot, %function
 192              	PWM_SetOneShot:
 193              	.LFB7:
 374:Generated_Source\PSoC4/PWM.c **** 
 375:Generated_Source\PSoC4/PWM.c **** 
 376:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 377:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetOneShot
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 11


 378:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 379:Generated_Source\PSoC4/PWM.c **** *
 380:Generated_Source\PSoC4/PWM.c **** * Summary:
 381:Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM runs
 382:Generated_Source\PSoC4/PWM.c **** *  continuously or stops when terminal count is reached.  By default the
 383:Generated_Source\PSoC4/PWM.c **** *  PWM operates in the continuous mode.
 384:Generated_Source\PSoC4/PWM.c **** *
 385:Generated_Source\PSoC4/PWM.c **** * Parameters:
 386:Generated_Source\PSoC4/PWM.c **** *  oneShotEnable
 387:Generated_Source\PSoC4/PWM.c **** *   Values:
 388:Generated_Source\PSoC4/PWM.c **** *     - 0 - Continuous
 389:Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable One Shot
 390:Generated_Source\PSoC4/PWM.c **** *
 391:Generated_Source\PSoC4/PWM.c **** * Return:
 392:Generated_Source\PSoC4/PWM.c **** *  None
 393:Generated_Source\PSoC4/PWM.c **** *
 394:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 395:Generated_Source\PSoC4/PWM.c **** void PWM_SetOneShot(uint32 oneShotEnable)
 396:Generated_Source\PSoC4/PWM.c **** {
 194              		.loc 1 396 0
 195              		.cfi_startproc
 196              	.LVL14:
 197 0000 10B5     		push	{r4, lr}
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 4, -8
 200              		.cfi_offset 14, -4
 201 0002 041C     		mov	r4, r0
 397:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 398:Generated_Source\PSoC4/PWM.c **** 
 399:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 202              		.loc 1 399 0
 203 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 204              	.LVL15:
 400:Generated_Source\PSoC4/PWM.c **** 
 401:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_ONESHOT_MASK;
 205              		.loc 1 401 0
 206 0008 064B     		ldr	r3, .L14
 207 000a 1968     		ldr	r1, [r3]
 208 000c 064A     		ldr	r2, .L14+4
 209 000e 0A40     		and	r2, r1
 210 0010 1A60     		str	r2, [r3]
 402:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_1BIT_MASK) <<
 211              		.loc 1 402 0
 212 0012 1A68     		ldr	r2, [r3]
 213 0014 0121     		mov	r1, #1
 214 0016 0C40     		and	r4, r1
 215              	.LVL16:
 216 0018 A404     		lsl	r4, r4, #18
 217 001a 1443     		orr	r4, r2
 218 001c 1C60     		str	r4, [r3]
 403:Generated_Source\PSoC4/PWM.c ****                                                                PWM_ONESHOT_SHIFT));
 404:Generated_Source\PSoC4/PWM.c **** 
 405:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 219              		.loc 1 405 0
 220 001e FFF7FEFF 		bl	CyExitCriticalSection
 221              	.LVL17:
 406:Generated_Source\PSoC4/PWM.c **** }
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 12


 222              		.loc 1 406 0
 223              		@ sp needed
 224 0022 10BD     		pop	{r4, pc}
 225              	.L15:
 226              		.align	2
 227              	.L14:
 228 0024 00010540 		.word	1074069760
 229 0028 FFFFFBFF 		.word	-262145
 230              		.cfi_endproc
 231              	.LFE7:
 232              		.size	PWM_SetOneShot, .-PWM_SetOneShot
 233              		.section	.text.PWM_SetPWMMode,"ax",%progbits
 234              		.align	2
 235              		.global	PWM_SetPWMMode
 236              		.code	16
 237              		.thumb_func
 238              		.type	PWM_SetPWMMode, %function
 239              	PWM_SetPWMMode:
 240              	.LFB8:
 407:Generated_Source\PSoC4/PWM.c **** 
 408:Generated_Source\PSoC4/PWM.c **** 
 409:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 410:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMMode
 411:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 412:Generated_Source\PSoC4/PWM.c **** *
 413:Generated_Source\PSoC4/PWM.c **** * Summary:
 414:Generated_Source\PSoC4/PWM.c **** *  Writes the control register that determines what mode of operation the PWM
 415:Generated_Source\PSoC4/PWM.c **** *  output lines are driven in.  There is a setting for what to do on a
 416:Generated_Source\PSoC4/PWM.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 417:Generated_Source\PSoC4/PWM.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 418:Generated_Source\PSoC4/PWM.c **** *  the mode.
 419:Generated_Source\PSoC4/PWM.c **** *
 420:Generated_Source\PSoC4/PWM.c **** * Parameters:
 421:Generated_Source\PSoC4/PWM.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 422:Generated_Source\PSoC4/PWM.c **** *  for each of the three or use one of the preconfigured PWM settings.
 423:Generated_Source\PSoC4/PWM.c **** *   Values:
 424:Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_SET        - Set on comparison match
 425:Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 426:Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 427:Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 428:Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_SET         - Set on overflow
 429:Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 430:Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_INVERT      - Invert on overflow
 431:Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 432:Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_SET       - Set on underflow
 433:Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 434:Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 435:Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 436:Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 437:Generated_Source\PSoC4/PWM.c **** *                             with up counting mode
 438:Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 439:Generated_Source\PSoC4/PWM.c **** *                             with down counting mode
 440:Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 441:Generated_Source\PSoC4/PWM.c **** *                             combined with up/down 0 mode
 442:Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 443:Generated_Source\PSoC4/PWM.c **** *                             with up/down 1 mode
 444:Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 13


 445:Generated_Source\PSoC4/PWM.c **** * Return:
 446:Generated_Source\PSoC4/PWM.c **** *  None
 447:Generated_Source\PSoC4/PWM.c **** *
 448:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 449:Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMMode(uint32 modeMask)
 450:Generated_Source\PSoC4/PWM.c **** {
 241              		.loc 1 450 0
 242              		.cfi_startproc
 243              	.LVL18:
 451:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL2_REG = (modeMask & PWM_6BIT_MASK);
 244              		.loc 1 451 0
 245 0000 3F23     		mov	r3, #63
 246 0002 1840     		and	r0, r3
 247              	.LVL19:
 248 0004 014B     		ldr	r3, .L17
 249 0006 1860     		str	r0, [r3]
 452:Generated_Source\PSoC4/PWM.c **** }
 250              		.loc 1 452 0
 251              		@ sp needed
 252 0008 7047     		bx	lr
 253              	.L18:
 254 000a C046     		.align	2
 255              	.L17:
 256 000c 28010540 		.word	1074069800
 257              		.cfi_endproc
 258              	.LFE8:
 259              		.size	PWM_SetPWMMode, .-PWM_SetPWMMode
 260              		.section	.text.PWM_SetPWMSyncKill,"ax",%progbits
 261              		.align	2
 262              		.global	PWM_SetPWMSyncKill
 263              		.code	16
 264              		.thumb_func
 265              		.type	PWM_SetPWMSyncKill, %function
 266              	PWM_SetPWMSyncKill:
 267              	.LFB9:
 453:Generated_Source\PSoC4/PWM.c **** 
 454:Generated_Source\PSoC4/PWM.c **** 
 455:Generated_Source\PSoC4/PWM.c **** 
 456:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 457:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMSyncKill
 458:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 459:Generated_Source\PSoC4/PWM.c **** *
 460:Generated_Source\PSoC4/PWM.c **** * Summary:
 461:Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 462:Generated_Source\PSoC4/PWM.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 463:Generated_Source\PSoC4/PWM.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 464:Generated_Source\PSoC4/PWM.c **** *  and PWM with dead time modes.
 465:Generated_Source\PSoC4/PWM.c **** *
 466:Generated_Source\PSoC4/PWM.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 467:Generated_Source\PSoC4/PWM.c **** *  signals until the next terminal count.
 468:Generated_Source\PSoC4/PWM.c **** *
 469:Generated_Source\PSoC4/PWM.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 470:Generated_Source\PSoC4/PWM.c **** *  signals when the kill signal is present.  This mode should only be used
 471:Generated_Source\PSoC4/PWM.c **** *  when the kill signal (stop input) is configured in the pass through mode
 472:Generated_Source\PSoC4/PWM.c **** *  (Level sensitive signal).
 473:Generated_Source\PSoC4/PWM.c **** 
 474:Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 14


 475:Generated_Source\PSoC4/PWM.c **** * Parameters:
 476:Generated_Source\PSoC4/PWM.c **** *  syncKillEnable
 477:Generated_Source\PSoC4/PWM.c **** *   Values:
 478:Generated_Source\PSoC4/PWM.c **** *     - 0 - Asynchronous
 479:Generated_Source\PSoC4/PWM.c **** *     - 1 - Synchronous
 480:Generated_Source\PSoC4/PWM.c **** *
 481:Generated_Source\PSoC4/PWM.c **** * Return:
 482:Generated_Source\PSoC4/PWM.c **** *  None
 483:Generated_Source\PSoC4/PWM.c **** *
 484:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 485:Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMSyncKill(uint32 syncKillEnable)
 486:Generated_Source\PSoC4/PWM.c **** {
 268              		.loc 1 486 0
 269              		.cfi_startproc
 270              	.LVL20:
 271 0000 10B5     		push	{r4, lr}
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 4, -8
 274              		.cfi_offset 14, -4
 275 0002 041C     		mov	r4, r0
 487:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 488:Generated_Source\PSoC4/PWM.c **** 
 489:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 276              		.loc 1 489 0
 277 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 278              	.LVL21:
 490:Generated_Source\PSoC4/PWM.c **** 
 491:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_SYNC_KILL_MASK;
 279              		.loc 1 491 0
 280 0008 064B     		ldr	r3, .L20
 281 000a 1A68     		ldr	r2, [r3]
 282 000c 0421     		mov	r1, #4
 283 000e 8A43     		bic	r2, r1
 284 0010 1A60     		str	r2, [r3]
 492:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_1BIT_MASK)  <<
 285              		.loc 1 492 0
 286 0012 1A68     		ldr	r2, [r3]
 287 0014 0339     		sub	r1, r1, #3
 288 0016 0C40     		and	r4, r1
 289              	.LVL22:
 290 0018 A400     		lsl	r4, r4, #2
 291 001a 1443     		orr	r4, r2
 292 001c 1C60     		str	r4, [r3]
 493:Generated_Source\PSoC4/PWM.c ****                                                PWM_PWM_SYNC_KILL_SHIFT));
 494:Generated_Source\PSoC4/PWM.c **** 
 495:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 293              		.loc 1 495 0
 294 001e FFF7FEFF 		bl	CyExitCriticalSection
 295              	.LVL23:
 496:Generated_Source\PSoC4/PWM.c **** }
 296              		.loc 1 496 0
 297              		@ sp needed
 298 0022 10BD     		pop	{r4, pc}
 299              	.L21:
 300              		.align	2
 301              	.L20:
 302 0024 00010540 		.word	1074069760
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 15


 303              		.cfi_endproc
 304              	.LFE9:
 305              		.size	PWM_SetPWMSyncKill, .-PWM_SetPWMSyncKill
 306              		.section	.text.PWM_SetPWMStopOnKill,"ax",%progbits
 307              		.align	2
 308              		.global	PWM_SetPWMStopOnKill
 309              		.code	16
 310              		.thumb_func
 311              		.type	PWM_SetPWMStopOnKill, %function
 312              	PWM_SetPWMStopOnKill:
 313              	.LFB10:
 497:Generated_Source\PSoC4/PWM.c **** 
 498:Generated_Source\PSoC4/PWM.c **** 
 499:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 500:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMStopOnKill
 501:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 502:Generated_Source\PSoC4/PWM.c **** *
 503:Generated_Source\PSoC4/PWM.c **** * Summary:
 504:Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 505:Generated_Source\PSoC4/PWM.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 506:Generated_Source\PSoC4/PWM.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 507:Generated_Source\PSoC4/PWM.c **** *
 508:Generated_Source\PSoC4/PWM.c **** *
 509:Generated_Source\PSoC4/PWM.c **** * Parameters:
 510:Generated_Source\PSoC4/PWM.c **** *  stopOnKillEnable
 511:Generated_Source\PSoC4/PWM.c **** *   Values:
 512:Generated_Source\PSoC4/PWM.c **** *     - 0 - Don't stop
 513:Generated_Source\PSoC4/PWM.c **** *     - 1 - Stop
 514:Generated_Source\PSoC4/PWM.c **** *
 515:Generated_Source\PSoC4/PWM.c **** * Return:
 516:Generated_Source\PSoC4/PWM.c **** *  None
 517:Generated_Source\PSoC4/PWM.c **** *
 518:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 519:Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMStopOnKill(uint32 stopOnKillEnable)
 520:Generated_Source\PSoC4/PWM.c **** {
 314              		.loc 1 520 0
 315              		.cfi_startproc
 316              	.LVL24:
 317 0000 10B5     		push	{r4, lr}
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 4, -8
 320              		.cfi_offset 14, -4
 321 0002 041C     		mov	r4, r0
 521:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 522:Generated_Source\PSoC4/PWM.c **** 
 523:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 322              		.loc 1 523 0
 323 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 324              	.LVL25:
 524:Generated_Source\PSoC4/PWM.c **** 
 525:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_STOP_KILL_MASK;
 325              		.loc 1 525 0
 326 0008 064B     		ldr	r3, .L23
 327 000a 1A68     		ldr	r2, [r3]
 328 000c 0821     		mov	r1, #8
 329 000e 8A43     		bic	r2, r1
 330 0010 1A60     		str	r2, [r3]
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 16


 526:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_1BIT_MASK)  <<
 331              		.loc 1 526 0
 332 0012 1A68     		ldr	r2, [r3]
 333 0014 0739     		sub	r1, r1, #7
 334 0016 0C40     		and	r4, r1
 335              	.LVL26:
 336 0018 E400     		lsl	r4, r4, #3
 337 001a 1443     		orr	r4, r2
 338 001c 1C60     		str	r4, [r3]
 527:Generated_Source\PSoC4/PWM.c ****                                                          PWM_PWM_STOP_KILL_SHIFT));
 528:Generated_Source\PSoC4/PWM.c **** 
 529:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 339              		.loc 1 529 0
 340 001e FFF7FEFF 		bl	CyExitCriticalSection
 341              	.LVL27:
 530:Generated_Source\PSoC4/PWM.c **** }
 342              		.loc 1 530 0
 343              		@ sp needed
 344 0022 10BD     		pop	{r4, pc}
 345              	.L24:
 346              		.align	2
 347              	.L23:
 348 0024 00010540 		.word	1074069760
 349              		.cfi_endproc
 350              	.LFE10:
 351              		.size	PWM_SetPWMStopOnKill, .-PWM_SetPWMStopOnKill
 352              		.section	.text.PWM_SetPWMDeadTime,"ax",%progbits
 353              		.align	2
 354              		.global	PWM_SetPWMDeadTime
 355              		.code	16
 356              		.thumb_func
 357              		.type	PWM_SetPWMDeadTime, %function
 358              	PWM_SetPWMDeadTime:
 359              	.LFB11:
 531:Generated_Source\PSoC4/PWM.c **** 
 532:Generated_Source\PSoC4/PWM.c **** 
 533:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 534:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMDeadTime
 535:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 536:Generated_Source\PSoC4/PWM.c **** *
 537:Generated_Source\PSoC4/PWM.c **** * Summary:
 538:Generated_Source\PSoC4/PWM.c **** *  Writes the dead time control value.  This value delays the rising edge of
 539:Generated_Source\PSoC4/PWM.c **** *  both the line and line_n signals the designated number of cycles resulting
 540:Generated_Source\PSoC4/PWM.c **** *  in both signals being inactive for that many cycles.  This functionality is
 541:Generated_Source\PSoC4/PWM.c **** *  only applicable to the PWM in the dead time mode.
 542:Generated_Source\PSoC4/PWM.c **** 
 543:Generated_Source\PSoC4/PWM.c **** *
 544:Generated_Source\PSoC4/PWM.c **** * Parameters:
 545:Generated_Source\PSoC4/PWM.c **** *  Dead time to insert
 546:Generated_Source\PSoC4/PWM.c **** *   Values: 0 to 255
 547:Generated_Source\PSoC4/PWM.c **** *
 548:Generated_Source\PSoC4/PWM.c **** * Return:
 549:Generated_Source\PSoC4/PWM.c **** *  None
 550:Generated_Source\PSoC4/PWM.c **** *
 551:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 552:Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMDeadTime(uint32 deadTime)
 553:Generated_Source\PSoC4/PWM.c **** {
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 17


 360              		.loc 1 553 0
 361              		.cfi_startproc
 362              	.LVL28:
 363 0000 10B5     		push	{r4, lr}
 364              		.cfi_def_cfa_offset 8
 365              		.cfi_offset 4, -8
 366              		.cfi_offset 14, -4
 367 0002 041C     		mov	r4, r0
 554:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 555:Generated_Source\PSoC4/PWM.c **** 
 556:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 368              		.loc 1 556 0
 369 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 370              	.LVL29:
 557:Generated_Source\PSoC4/PWM.c **** 
 558:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 371              		.loc 1 558 0
 372 0008 064B     		ldr	r3, .L26
 373 000a 1968     		ldr	r1, [r3]
 374 000c 064A     		ldr	r2, .L26+4
 375 000e 0A40     		and	r2, r1
 376 0010 1A60     		str	r2, [r3]
 559:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((deadTime & PWM_8BIT_MASK) <<
 377              		.loc 1 559 0
 378 0012 1A68     		ldr	r2, [r3]
 379 0014 2406     		lsl	r4, r4, #24
 380              	.LVL30:
 381 0016 240C     		lsr	r4, r4, #16
 382 0018 1443     		orr	r4, r2
 383 001a 1C60     		str	r4, [r3]
 560:Generated_Source\PSoC4/PWM.c ****                                                           PWM_PRESCALER_SHIFT));
 561:Generated_Source\PSoC4/PWM.c **** 
 562:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 384              		.loc 1 562 0
 385 001c FFF7FEFF 		bl	CyExitCriticalSection
 386              	.LVL31:
 563:Generated_Source\PSoC4/PWM.c **** }
 387              		.loc 1 563 0
 388              		@ sp needed
 389 0020 10BD     		pop	{r4, pc}
 390              	.L27:
 391 0022 C046     		.align	2
 392              	.L26:
 393 0024 00010540 		.word	1074069760
 394 0028 FF00FFFF 		.word	-65281
 395              		.cfi_endproc
 396              	.LFE11:
 397              		.size	PWM_SetPWMDeadTime, .-PWM_SetPWMDeadTime
 398              		.section	.text.PWM_SetPWMInvert,"ax",%progbits
 399              		.align	2
 400              		.global	PWM_SetPWMInvert
 401              		.code	16
 402              		.thumb_func
 403              		.type	PWM_SetPWMInvert, %function
 404              	PWM_SetPWMInvert:
 405              	.LFB12:
 564:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 18


 565:Generated_Source\PSoC4/PWM.c **** 
 566:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 567:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMInvert
 568:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 569:Generated_Source\PSoC4/PWM.c **** *
 570:Generated_Source\PSoC4/PWM.c **** * Summary:
 571:Generated_Source\PSoC4/PWM.c **** *  Writes the bits that control whether the line and line_n outputs are
 572:Generated_Source\PSoC4/PWM.c **** *  inverted from their normal output values.  This functionality is only
 573:Generated_Source\PSoC4/PWM.c **** *  applicable to the three PWM modes.
 574:Generated_Source\PSoC4/PWM.c **** *
 575:Generated_Source\PSoC4/PWM.c **** * Parameters:
 576:Generated_Source\PSoC4/PWM.c **** *  mask: Mask of outputs to invert.
 577:Generated_Source\PSoC4/PWM.c **** *   Values:
 578:Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE   - Inverts the line output
 579:Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE_N - Inverts the line_n output
 580:Generated_Source\PSoC4/PWM.c **** *
 581:Generated_Source\PSoC4/PWM.c **** * Return:
 582:Generated_Source\PSoC4/PWM.c **** *  None
 583:Generated_Source\PSoC4/PWM.c **** *
 584:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 585:Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMInvert(uint32 mask)
 586:Generated_Source\PSoC4/PWM.c **** {
 406              		.loc 1 586 0
 407              		.cfi_startproc
 408              	.LVL32:
 409 0000 10B5     		push	{r4, lr}
 410              		.cfi_def_cfa_offset 8
 411              		.cfi_offset 4, -8
 412              		.cfi_offset 14, -4
 413 0002 041C     		mov	r4, r0
 587:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 588:Generated_Source\PSoC4/PWM.c **** 
 589:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 414              		.loc 1 589 0
 415 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 416              	.LVL33:
 590:Generated_Source\PSoC4/PWM.c **** 
 591:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_INV_OUT_MASK;
 417              		.loc 1 591 0
 418 0008 054B     		ldr	r3, .L29
 419 000a 1968     		ldr	r1, [r3]
 420 000c 054A     		ldr	r2, .L29+4
 421 000e 0A40     		and	r2, r1
 422 0010 1A60     		str	r2, [r3]
 592:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mask;
 423              		.loc 1 592 0
 424 0012 1A68     		ldr	r2, [r3]
 425 0014 1443     		orr	r4, r2
 426              	.LVL34:
 427 0016 1C60     		str	r4, [r3]
 593:Generated_Source\PSoC4/PWM.c **** 
 594:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 428              		.loc 1 594 0
 429 0018 FFF7FEFF 		bl	CyExitCriticalSection
 430              	.LVL35:
 595:Generated_Source\PSoC4/PWM.c **** }
 431              		.loc 1 595 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 19


 432              		@ sp needed
 433 001c 10BD     		pop	{r4, pc}
 434              	.L30:
 435 001e C046     		.align	2
 436              	.L29:
 437 0020 00010540 		.word	1074069760
 438 0024 FFFFCFFF 		.word	-3145729
 439              		.cfi_endproc
 440              	.LFE12:
 441              		.size	PWM_SetPWMInvert, .-PWM_SetPWMInvert
 442              		.section	.text.PWM_WriteCounter,"ax",%progbits
 443              		.align	2
 444              		.global	PWM_WriteCounter
 445              		.code	16
 446              		.thumb_func
 447              		.type	PWM_WriteCounter, %function
 448              	PWM_WriteCounter:
 449              	.LFB13:
 596:Generated_Source\PSoC4/PWM.c **** 
 597:Generated_Source\PSoC4/PWM.c **** 
 598:Generated_Source\PSoC4/PWM.c **** 
 599:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 600:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCounter
 601:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 602:Generated_Source\PSoC4/PWM.c **** *
 603:Generated_Source\PSoC4/PWM.c **** * Summary:
 604:Generated_Source\PSoC4/PWM.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 605:Generated_Source\PSoC4/PWM.c **** *  setting the counter (not the period) to the value written. It is not
 606:Generated_Source\PSoC4/PWM.c **** *  advised to write to this field when the counter is running.
 607:Generated_Source\PSoC4/PWM.c **** *
 608:Generated_Source\PSoC4/PWM.c **** * Parameters:
 609:Generated_Source\PSoC4/PWM.c **** *  count: value to write
 610:Generated_Source\PSoC4/PWM.c **** *
 611:Generated_Source\PSoC4/PWM.c **** * Return:
 612:Generated_Source\PSoC4/PWM.c **** *  None
 613:Generated_Source\PSoC4/PWM.c **** *
 614:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 615:Generated_Source\PSoC4/PWM.c **** void PWM_WriteCounter(uint32 count)
 616:Generated_Source\PSoC4/PWM.c **** {
 450              		.loc 1 616 0
 451              		.cfi_startproc
 452              	.LVL36:
 617:Generated_Source\PSoC4/PWM.c ****     PWM_COUNTER_REG = (count & PWM_16BIT_MASK);
 453              		.loc 1 617 0
 454 0000 0004     		lsl	r0, r0, #16
 455              	.LVL37:
 456 0002 000C     		lsr	r0, r0, #16
 457 0004 014B     		ldr	r3, .L32
 458 0006 1860     		str	r0, [r3]
 618:Generated_Source\PSoC4/PWM.c **** }
 459              		.loc 1 618 0
 460              		@ sp needed
 461 0008 7047     		bx	lr
 462              	.L33:
 463 000a C046     		.align	2
 464              	.L32:
 465 000c 08010540 		.word	1074069768
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 20


 466              		.cfi_endproc
 467              	.LFE13:
 468              		.size	PWM_WriteCounter, .-PWM_WriteCounter
 469              		.section	.text.PWM_ReadCounter,"ax",%progbits
 470              		.align	2
 471              		.global	PWM_ReadCounter
 472              		.code	16
 473              		.thumb_func
 474              		.type	PWM_ReadCounter, %function
 475              	PWM_ReadCounter:
 476              	.LFB14:
 619:Generated_Source\PSoC4/PWM.c **** 
 620:Generated_Source\PSoC4/PWM.c **** 
 621:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCounter
 623:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 624:Generated_Source\PSoC4/PWM.c **** *
 625:Generated_Source\PSoC4/PWM.c **** * Summary:
 626:Generated_Source\PSoC4/PWM.c **** *  Reads the current counter value.
 627:Generated_Source\PSoC4/PWM.c **** *
 628:Generated_Source\PSoC4/PWM.c **** * Parameters:
 629:Generated_Source\PSoC4/PWM.c **** *  None
 630:Generated_Source\PSoC4/PWM.c **** *
 631:Generated_Source\PSoC4/PWM.c **** * Return:
 632:Generated_Source\PSoC4/PWM.c **** *  Current counter value
 633:Generated_Source\PSoC4/PWM.c **** *
 634:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 635:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCounter(void)
 636:Generated_Source\PSoC4/PWM.c **** {
 477              		.loc 1 636 0
 478              		.cfi_startproc
 637:Generated_Source\PSoC4/PWM.c ****     return (PWM_COUNTER_REG & PWM_16BIT_MASK);
 479              		.loc 1 637 0
 480 0000 024B     		ldr	r3, .L35
 481 0002 1868     		ldr	r0, [r3]
 482 0004 0004     		lsl	r0, r0, #16
 483 0006 000C     		lsr	r0, r0, #16
 638:Generated_Source\PSoC4/PWM.c **** }
 484              		.loc 1 638 0
 485              		@ sp needed
 486 0008 7047     		bx	lr
 487              	.L36:
 488 000a C046     		.align	2
 489              	.L35:
 490 000c 08010540 		.word	1074069768
 491              		.cfi_endproc
 492              	.LFE14:
 493              		.size	PWM_ReadCounter, .-PWM_ReadCounter
 494              		.section	.text.PWM_SetCounterMode,"ax",%progbits
 495              		.align	2
 496              		.global	PWM_SetCounterMode
 497              		.code	16
 498              		.thumb_func
 499              		.type	PWM_SetCounterMode, %function
 500              	PWM_SetCounterMode:
 501              	.LFB15:
 639:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 21


 640:Generated_Source\PSoC4/PWM.c **** 
 641:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 642:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCounterMode
 643:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 644:Generated_Source\PSoC4/PWM.c **** *
 645:Generated_Source\PSoC4/PWM.c **** * Summary:
 646:Generated_Source\PSoC4/PWM.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 647:Generated_Source\PSoC4/PWM.c **** *  and the PWM with a pseudo random output.
 648:Generated_Source\PSoC4/PWM.c **** *
 649:Generated_Source\PSoC4/PWM.c **** * Parameters:
 650:Generated_Source\PSoC4/PWM.c **** *  counterMode: Enumerated counter type values
 651:Generated_Source\PSoC4/PWM.c **** *   Values:
 652:Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UP       - Counts up
 653:Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_DOWN     - Counts down
 654:Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN0  - Counts up and down. Terminal count
 655:Generated_Source\PSoC4/PWM.c **** *                                         generated when counter reaches 0
 656:Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN1  - Counts up and down. Terminal count
 657:Generated_Source\PSoC4/PWM.c **** *                                         generated both when counter reaches 0
 658:Generated_Source\PSoC4/PWM.c **** *                                         and period
 659:Generated_Source\PSoC4/PWM.c **** *
 660:Generated_Source\PSoC4/PWM.c **** * Return:
 661:Generated_Source\PSoC4/PWM.c **** *  None
 662:Generated_Source\PSoC4/PWM.c **** *
 663:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 664:Generated_Source\PSoC4/PWM.c **** void PWM_SetCounterMode(uint32 counterMode)
 665:Generated_Source\PSoC4/PWM.c **** {
 502              		.loc 1 665 0
 503              		.cfi_startproc
 504              	.LVL38:
 505 0000 10B5     		push	{r4, lr}
 506              		.cfi_def_cfa_offset 8
 507              		.cfi_offset 4, -8
 508              		.cfi_offset 14, -4
 509 0002 041C     		mov	r4, r0
 666:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 667:Generated_Source\PSoC4/PWM.c **** 
 668:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 510              		.loc 1 668 0
 511 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 512              	.LVL39:
 669:Generated_Source\PSoC4/PWM.c **** 
 670:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_UPDOWN_MASK;
 513              		.loc 1 670 0
 514 0008 054B     		ldr	r3, .L38
 515 000a 1968     		ldr	r1, [r3]
 516 000c 054A     		ldr	r2, .L38+4
 517 000e 0A40     		and	r2, r1
 518 0010 1A60     		str	r2, [r3]
 671:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= counterMode;
 519              		.loc 1 671 0
 520 0012 1A68     		ldr	r2, [r3]
 521 0014 1443     		orr	r4, r2
 522              	.LVL40:
 523 0016 1C60     		str	r4, [r3]
 672:Generated_Source\PSoC4/PWM.c **** 
 673:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 524              		.loc 1 673 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 22


 525 0018 FFF7FEFF 		bl	CyExitCriticalSection
 526              	.LVL41:
 674:Generated_Source\PSoC4/PWM.c **** }
 527              		.loc 1 674 0
 528              		@ sp needed
 529 001c 10BD     		pop	{r4, pc}
 530              	.L39:
 531 001e C046     		.align	2
 532              	.L38:
 533 0020 00010540 		.word	1074069760
 534 0024 FFFFFCFF 		.word	-196609
 535              		.cfi_endproc
 536              	.LFE15:
 537              		.size	PWM_SetCounterMode, .-PWM_SetCounterMode
 538              		.section	.text.PWM_WritePeriod,"ax",%progbits
 539              		.align	2
 540              		.global	PWM_WritePeriod
 541              		.code	16
 542              		.thumb_func
 543              		.type	PWM_WritePeriod, %function
 544              	PWM_WritePeriod:
 545              	.LFB16:
 675:Generated_Source\PSoC4/PWM.c **** 
 676:Generated_Source\PSoC4/PWM.c **** 
 677:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 678:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriod
 679:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 680:Generated_Source\PSoC4/PWM.c **** *
 681:Generated_Source\PSoC4/PWM.c **** * Summary:
 682:Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period register with the new period value.
 683:Generated_Source\PSoC4/PWM.c **** *  To cause the counter to count for N cycles this register should be written
 684:Generated_Source\PSoC4/PWM.c **** *  with N-1 (counts from 0 to period inclusive).
 685:Generated_Source\PSoC4/PWM.c **** *
 686:Generated_Source\PSoC4/PWM.c **** * Parameters:
 687:Generated_Source\PSoC4/PWM.c **** *  period: Period value
 688:Generated_Source\PSoC4/PWM.c **** *
 689:Generated_Source\PSoC4/PWM.c **** * Return:
 690:Generated_Source\PSoC4/PWM.c **** *  None
 691:Generated_Source\PSoC4/PWM.c **** *
 692:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 693:Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriod(uint32 period)
 694:Generated_Source\PSoC4/PWM.c **** {
 546              		.loc 1 694 0
 547              		.cfi_startproc
 548              	.LVL42:
 695:Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_REG = (period & PWM_16BIT_MASK);
 549              		.loc 1 695 0
 550 0000 0004     		lsl	r0, r0, #16
 551              	.LVL43:
 552 0002 000C     		lsr	r0, r0, #16
 553 0004 014B     		ldr	r3, .L41
 554 0006 1860     		str	r0, [r3]
 696:Generated_Source\PSoC4/PWM.c **** }
 555              		.loc 1 696 0
 556              		@ sp needed
 557 0008 7047     		bx	lr
 558              	.L42:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 23


 559 000a C046     		.align	2
 560              	.L41:
 561 000c 14010540 		.word	1074069780
 562              		.cfi_endproc
 563              	.LFE16:
 564              		.size	PWM_WritePeriod, .-PWM_WritePeriod
 565              		.section	.text.PWM_ReadPeriod,"ax",%progbits
 566              		.align	2
 567              		.global	PWM_ReadPeriod
 568              		.code	16
 569              		.thumb_func
 570              		.type	PWM_ReadPeriod, %function
 571              	PWM_ReadPeriod:
 572              	.LFB17:
 697:Generated_Source\PSoC4/PWM.c **** 
 698:Generated_Source\PSoC4/PWM.c **** 
 699:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 700:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriod
 701:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 702:Generated_Source\PSoC4/PWM.c **** *
 703:Generated_Source\PSoC4/PWM.c **** * Summary:
 704:Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period register.
 705:Generated_Source\PSoC4/PWM.c **** *
 706:Generated_Source\PSoC4/PWM.c **** * Parameters:
 707:Generated_Source\PSoC4/PWM.c **** *  None
 708:Generated_Source\PSoC4/PWM.c **** *
 709:Generated_Source\PSoC4/PWM.c **** * Return:
 710:Generated_Source\PSoC4/PWM.c **** *  Period value
 711:Generated_Source\PSoC4/PWM.c **** *
 712:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 713:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriod(void)
 714:Generated_Source\PSoC4/PWM.c **** {
 573              		.loc 1 714 0
 574              		.cfi_startproc
 715:Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_REG & PWM_16BIT_MASK);
 575              		.loc 1 715 0
 576 0000 024B     		ldr	r3, .L44
 577 0002 1868     		ldr	r0, [r3]
 578 0004 0004     		lsl	r0, r0, #16
 579 0006 000C     		lsr	r0, r0, #16
 716:Generated_Source\PSoC4/PWM.c **** }
 580              		.loc 1 716 0
 581              		@ sp needed
 582 0008 7047     		bx	lr
 583              	.L45:
 584 000a C046     		.align	2
 585              	.L44:
 586 000c 14010540 		.word	1074069780
 587              		.cfi_endproc
 588              	.LFE17:
 589              		.size	PWM_ReadPeriod, .-PWM_ReadPeriod
 590              		.section	.text.PWM_SetCompareSwap,"ax",%progbits
 591              		.align	2
 592              		.global	PWM_SetCompareSwap
 593              		.code	16
 594              		.thumb_func
 595              		.type	PWM_SetCompareSwap, %function
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 24


 596              	PWM_SetCompareSwap:
 597              	.LFB18:
 717:Generated_Source\PSoC4/PWM.c **** 
 718:Generated_Source\PSoC4/PWM.c **** 
 719:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 720:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCompareSwap
 721:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 722:Generated_Source\PSoC4/PWM.c **** *
 723:Generated_Source\PSoC4/PWM.c **** * Summary:
 724:Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the compare registers are
 725:Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 726:Generated_Source\PSoC4/PWM.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 727:Generated_Source\PSoC4/PWM.c **** *  following a hardware switch event.
 728:Generated_Source\PSoC4/PWM.c **** *
 729:Generated_Source\PSoC4/PWM.c **** * Parameters:
 730:Generated_Source\PSoC4/PWM.c **** *  swapEnable
 731:Generated_Source\PSoC4/PWM.c **** *   Values:
 732:Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 733:Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 734:Generated_Source\PSoC4/PWM.c **** *
 735:Generated_Source\PSoC4/PWM.c **** * Return:
 736:Generated_Source\PSoC4/PWM.c **** *  None
 737:Generated_Source\PSoC4/PWM.c **** *
 738:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 739:Generated_Source\PSoC4/PWM.c **** void PWM_SetCompareSwap(uint32 swapEnable)
 740:Generated_Source\PSoC4/PWM.c **** {
 598              		.loc 1 740 0
 599              		.cfi_startproc
 600              	.LVL44:
 601 0000 10B5     		push	{r4, lr}
 602              		.cfi_def_cfa_offset 8
 603              		.cfi_offset 4, -8
 604              		.cfi_offset 14, -4
 605 0002 041C     		mov	r4, r0
 741:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 742:Generated_Source\PSoC4/PWM.c **** 
 743:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 606              		.loc 1 743 0
 607 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 608              	.LVL45:
 744:Generated_Source\PSoC4/PWM.c **** 
 745:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_CC_MASK;
 609              		.loc 1 745 0
 610 0008 054B     		ldr	r3, .L47
 611 000a 1A68     		ldr	r2, [r3]
 612 000c 0121     		mov	r1, #1
 613 000e 8A43     		bic	r2, r1
 614 0010 1A60     		str	r2, [r3]
 746:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= (swapEnable & PWM_1BIT_MASK);
 615              		.loc 1 746 0
 616 0012 1A68     		ldr	r2, [r3]
 617 0014 0C40     		and	r4, r1
 618              	.LVL46:
 619 0016 1443     		orr	r4, r2
 620 0018 1C60     		str	r4, [r3]
 747:Generated_Source\PSoC4/PWM.c **** 
 748:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 25


 621              		.loc 1 748 0
 622 001a FFF7FEFF 		bl	CyExitCriticalSection
 623              	.LVL47:
 749:Generated_Source\PSoC4/PWM.c **** }
 624              		.loc 1 749 0
 625              		@ sp needed
 626 001e 10BD     		pop	{r4, pc}
 627              	.L48:
 628              		.align	2
 629              	.L47:
 630 0020 00010540 		.word	1074069760
 631              		.cfi_endproc
 632              	.LFE18:
 633              		.size	PWM_SetCompareSwap, .-PWM_SetCompareSwap
 634              		.section	.text.PWM_WritePeriodBuf,"ax",%progbits
 635              		.align	2
 636              		.global	PWM_WritePeriodBuf
 637              		.code	16
 638              		.thumb_func
 639              		.type	PWM_WritePeriodBuf, %function
 640              	PWM_WritePeriodBuf:
 641              	.LFB19:
 750:Generated_Source\PSoC4/PWM.c **** 
 751:Generated_Source\PSoC4/PWM.c **** 
 752:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 753:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriodBuf
 754:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 755:Generated_Source\PSoC4/PWM.c **** *
 756:Generated_Source\PSoC4/PWM.c **** * Summary:
 757:Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period buf register with the new period value.
 758:Generated_Source\PSoC4/PWM.c **** *
 759:Generated_Source\PSoC4/PWM.c **** * Parameters:
 760:Generated_Source\PSoC4/PWM.c **** *  periodBuf: Period value
 761:Generated_Source\PSoC4/PWM.c **** *
 762:Generated_Source\PSoC4/PWM.c **** * Return:
 763:Generated_Source\PSoC4/PWM.c **** *  None
 764:Generated_Source\PSoC4/PWM.c **** *
 765:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 766:Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriodBuf(uint32 periodBuf)
 767:Generated_Source\PSoC4/PWM.c **** {
 642              		.loc 1 767 0
 643              		.cfi_startproc
 644              	.LVL48:
 768:Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_BUF_REG = (periodBuf & PWM_16BIT_MASK);
 645              		.loc 1 768 0
 646 0000 0004     		lsl	r0, r0, #16
 647              	.LVL49:
 648 0002 000C     		lsr	r0, r0, #16
 649 0004 014B     		ldr	r3, .L50
 650 0006 1860     		str	r0, [r3]
 769:Generated_Source\PSoC4/PWM.c **** }
 651              		.loc 1 769 0
 652              		@ sp needed
 653 0008 7047     		bx	lr
 654              	.L51:
 655 000a C046     		.align	2
 656              	.L50:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 26


 657 000c 18010540 		.word	1074069784
 658              		.cfi_endproc
 659              	.LFE19:
 660              		.size	PWM_WritePeriodBuf, .-PWM_WritePeriodBuf
 661              		.section	.text.PWM_ReadPeriodBuf,"ax",%progbits
 662              		.align	2
 663              		.global	PWM_ReadPeriodBuf
 664              		.code	16
 665              		.thumb_func
 666              		.type	PWM_ReadPeriodBuf, %function
 667              	PWM_ReadPeriodBuf:
 668              	.LFB20:
 770:Generated_Source\PSoC4/PWM.c **** 
 771:Generated_Source\PSoC4/PWM.c **** 
 772:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriodBuf
 774:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 775:Generated_Source\PSoC4/PWM.c **** *
 776:Generated_Source\PSoC4/PWM.c **** * Summary:
 777:Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period buf register.
 778:Generated_Source\PSoC4/PWM.c **** *
 779:Generated_Source\PSoC4/PWM.c **** * Parameters:
 780:Generated_Source\PSoC4/PWM.c **** *  None
 781:Generated_Source\PSoC4/PWM.c **** *
 782:Generated_Source\PSoC4/PWM.c **** * Return:
 783:Generated_Source\PSoC4/PWM.c **** *  Period value
 784:Generated_Source\PSoC4/PWM.c **** *
 785:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 786:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriodBuf(void)
 787:Generated_Source\PSoC4/PWM.c **** {
 669              		.loc 1 787 0
 670              		.cfi_startproc
 788:Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_BUF_REG & PWM_16BIT_MASK);
 671              		.loc 1 788 0
 672 0000 024B     		ldr	r3, .L53
 673 0002 1868     		ldr	r0, [r3]
 674 0004 0004     		lsl	r0, r0, #16
 675 0006 000C     		lsr	r0, r0, #16
 789:Generated_Source\PSoC4/PWM.c **** }
 676              		.loc 1 789 0
 677              		@ sp needed
 678 0008 7047     		bx	lr
 679              	.L54:
 680 000a C046     		.align	2
 681              	.L53:
 682 000c 18010540 		.word	1074069784
 683              		.cfi_endproc
 684              	.LFE20:
 685              		.size	PWM_ReadPeriodBuf, .-PWM_ReadPeriodBuf
 686              		.section	.text.PWM_SetPeriodSwap,"ax",%progbits
 687              		.align	2
 688              		.global	PWM_SetPeriodSwap
 689              		.code	16
 690              		.thumb_func
 691              		.type	PWM_SetPeriodSwap, %function
 692              	PWM_SetPeriodSwap:
 693              	.LFB21:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 27


 790:Generated_Source\PSoC4/PWM.c **** 
 791:Generated_Source\PSoC4/PWM.c **** 
 792:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 793:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPeriodSwap
 794:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 795:Generated_Source\PSoC4/PWM.c **** *
 796:Generated_Source\PSoC4/PWM.c **** * Summary:
 797:Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the period registers are
 798:Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 799:Generated_Source\PSoC4/PWM.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 800:Generated_Source\PSoC4/PWM.c **** *  switch event.
 801:Generated_Source\PSoC4/PWM.c **** *
 802:Generated_Source\PSoC4/PWM.c **** * Parameters:
 803:Generated_Source\PSoC4/PWM.c **** *  swapEnable
 804:Generated_Source\PSoC4/PWM.c **** *   Values:
 805:Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 806:Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 807:Generated_Source\PSoC4/PWM.c **** *
 808:Generated_Source\PSoC4/PWM.c **** * Return:
 809:Generated_Source\PSoC4/PWM.c **** *  None
 810:Generated_Source\PSoC4/PWM.c **** *
 811:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 812:Generated_Source\PSoC4/PWM.c **** void PWM_SetPeriodSwap(uint32 swapEnable)
 813:Generated_Source\PSoC4/PWM.c **** {
 694              		.loc 1 813 0
 695              		.cfi_startproc
 696              	.LVL50:
 697 0000 10B5     		push	{r4, lr}
 698              		.cfi_def_cfa_offset 8
 699              		.cfi_offset 4, -8
 700              		.cfi_offset 14, -4
 701 0002 041C     		mov	r4, r0
 814:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 815:Generated_Source\PSoC4/PWM.c **** 
 816:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 702              		.loc 1 816 0
 703 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 704              	.LVL51:
 817:Generated_Source\PSoC4/PWM.c **** 
 818:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_PERIOD_MASK;
 705              		.loc 1 818 0
 706 0008 064B     		ldr	r3, .L56
 707 000a 1A68     		ldr	r2, [r3]
 708 000c 0221     		mov	r1, #2
 709 000e 8A43     		bic	r2, r1
 710 0010 1A60     		str	r2, [r3]
 819:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((swapEnable & PWM_1BIT_MASK) <<
 711              		.loc 1 819 0
 712 0012 1A68     		ldr	r2, [r3]
 713 0014 0139     		sub	r1, r1, #1
 714 0016 0C40     		and	r4, r1
 715              	.LVL52:
 716 0018 6400     		lsl	r4, r4, #1
 717 001a 1443     		orr	r4, r2
 718 001c 1C60     		str	r4, [r3]
 820:Generated_Source\PSoC4/PWM.c ****                                                             PWM_RELOAD_PERIOD_SHIFT));
 821:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 28


 822:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 719              		.loc 1 822 0
 720 001e FFF7FEFF 		bl	CyExitCriticalSection
 721              	.LVL53:
 823:Generated_Source\PSoC4/PWM.c **** }
 722              		.loc 1 823 0
 723              		@ sp needed
 724 0022 10BD     		pop	{r4, pc}
 725              	.L57:
 726              		.align	2
 727              	.L56:
 728 0024 00010540 		.word	1074069760
 729              		.cfi_endproc
 730              	.LFE21:
 731              		.size	PWM_SetPeriodSwap, .-PWM_SetPeriodSwap
 732              		.section	.text.PWM_WriteCompare,"ax",%progbits
 733              		.align	2
 734              		.global	PWM_WriteCompare
 735              		.code	16
 736              		.thumb_func
 737              		.type	PWM_WriteCompare, %function
 738              	PWM_WriteCompare:
 739              	.LFB22:
 824:Generated_Source\PSoC4/PWM.c **** 
 825:Generated_Source\PSoC4/PWM.c **** 
 826:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 827:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompare
 828:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 829:Generated_Source\PSoC4/PWM.c **** *
 830:Generated_Source\PSoC4/PWM.c **** * Summary:
 831:Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare register with the new compare value. Not
 832:Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 833:Generated_Source\PSoC4/PWM.c **** *
 834:Generated_Source\PSoC4/PWM.c **** * Parameters:
 835:Generated_Source\PSoC4/PWM.c **** *  compare: Compare value
 836:Generated_Source\PSoC4/PWM.c **** *
 837:Generated_Source\PSoC4/PWM.c **** * Return:
 838:Generated_Source\PSoC4/PWM.c **** *  None
 839:Generated_Source\PSoC4/PWM.c **** *
 840:Generated_Source\PSoC4/PWM.c **** * Note:
 841:Generated_Source\PSoC4/PWM.c **** *  It is not recommended to use the value equal to "0" or equal to 
 842:Generated_Source\PSoC4/PWM.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 843:Generated_Source\PSoC4/PWM.c **** *  PSoC 4100/PSoC 4200 devices.
 844:Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 845:Generated_Source\PSoC4/PWM.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 846:Generated_Source\PSoC4/PWM.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 847:Generated_Source\PSoC4/PWM.c **** *
 848:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 849:Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompare(uint32 compare)
 850:Generated_Source\PSoC4/PWM.c **** {
 740              		.loc 1 850 0
 741              		.cfi_startproc
 742              	.LVL54:
 851:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 852:Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 853:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 854:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 29


 855:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 856:Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 857:Generated_Source\PSoC4/PWM.c **** 
 858:Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 859:Generated_Source\PSoC4/PWM.c ****         {
 860:Generated_Source\PSoC4/PWM.c ****             compare++;
 861:Generated_Source\PSoC4/PWM.c ****         }
 862:Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0u != compare))
 863:Generated_Source\PSoC4/PWM.c ****         {
 864:Generated_Source\PSoC4/PWM.c ****             compare--;
 865:Generated_Source\PSoC4/PWM.c ****         }
 866:Generated_Source\PSoC4/PWM.c ****         else
 867:Generated_Source\PSoC4/PWM.c ****         {
 868:Generated_Source\PSoC4/PWM.c ****         }
 869:Generated_Source\PSoC4/PWM.c ****         
 870:Generated_Source\PSoC4/PWM.c ****     
 871:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 872:Generated_Source\PSoC4/PWM.c ****     
 873:Generated_Source\PSoC4/PWM.c ****     PWM_COMP_CAP_REG = (compare & PWM_16BIT_MASK);
 743              		.loc 1 873 0
 744 0000 0004     		lsl	r0, r0, #16
 745              	.LVL55:
 746 0002 000C     		lsr	r0, r0, #16
 747 0004 014B     		ldr	r3, .L59
 748 0006 1860     		str	r0, [r3]
 874:Generated_Source\PSoC4/PWM.c **** }
 749              		.loc 1 874 0
 750              		@ sp needed
 751 0008 7047     		bx	lr
 752              	.L60:
 753 000a C046     		.align	2
 754              	.L59:
 755 000c 0C010540 		.word	1074069772
 756              		.cfi_endproc
 757              	.LFE22:
 758              		.size	PWM_WriteCompare, .-PWM_WriteCompare
 759              		.section	.text.PWM_ReadCompare,"ax",%progbits
 760              		.align	2
 761              		.global	PWM_ReadCompare
 762              		.code	16
 763              		.thumb_func
 764              		.type	PWM_ReadCompare, %function
 765              	PWM_ReadCompare:
 766              	.LFB23:
 875:Generated_Source\PSoC4/PWM.c **** 
 876:Generated_Source\PSoC4/PWM.c **** 
 877:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 878:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompare
 879:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 880:Generated_Source\PSoC4/PWM.c **** *
 881:Generated_Source\PSoC4/PWM.c **** * Summary:
 882:Generated_Source\PSoC4/PWM.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 883:Generated_Source\PSoC4/PWM.c **** *  or in Quadrature Decoder modes.
 884:Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 885:Generated_Source\PSoC4/PWM.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 886:Generated_Source\PSoC4/PWM.c **** *  Down counting mode (except 0x0u).
 887:Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 30


 888:Generated_Source\PSoC4/PWM.c **** * Parameters:
 889:Generated_Source\PSoC4/PWM.c **** *  None
 890:Generated_Source\PSoC4/PWM.c **** *
 891:Generated_Source\PSoC4/PWM.c **** * Return:
 892:Generated_Source\PSoC4/PWM.c **** *  Compare value
 893:Generated_Source\PSoC4/PWM.c **** *
 894:Generated_Source\PSoC4/PWM.c **** * Note:
 895:Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 896:Generated_Source\PSoC4/PWM.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 897:Generated_Source\PSoC4/PWM.c **** *  Down counting mode (except 0x0u).
 898:Generated_Source\PSoC4/PWM.c **** *
 899:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 900:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompare(void)
 901:Generated_Source\PSoC4/PWM.c **** {
 767              		.loc 1 901 0
 768              		.cfi_startproc
 902:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 903:Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 904:Generated_Source\PSoC4/PWM.c ****         uint32 regVal;
 905:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 906:Generated_Source\PSoC4/PWM.c **** 
 907:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 908:Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 909:Generated_Source\PSoC4/PWM.c ****         
 910:Generated_Source\PSoC4/PWM.c ****         regVal = PWM_COMP_CAP_REG;
 911:Generated_Source\PSoC4/PWM.c ****         
 912:Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0u != regVal))
 913:Generated_Source\PSoC4/PWM.c ****         {
 914:Generated_Source\PSoC4/PWM.c ****             regVal--;
 915:Generated_Source\PSoC4/PWM.c ****         }
 916:Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 917:Generated_Source\PSoC4/PWM.c ****         {
 918:Generated_Source\PSoC4/PWM.c ****             regVal++;
 919:Generated_Source\PSoC4/PWM.c ****         }
 920:Generated_Source\PSoC4/PWM.c ****         else
 921:Generated_Source\PSoC4/PWM.c ****         {
 922:Generated_Source\PSoC4/PWM.c ****         }
 923:Generated_Source\PSoC4/PWM.c **** 
 924:Generated_Source\PSoC4/PWM.c ****         return (regVal & PWM_16BIT_MASK);
 925:Generated_Source\PSoC4/PWM.c ****     #else
 926:Generated_Source\PSoC4/PWM.c ****         return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 769              		.loc 1 926 0
 770 0000 024B     		ldr	r3, .L62
 771 0002 1868     		ldr	r0, [r3]
 772 0004 0004     		lsl	r0, r0, #16
 773 0006 000C     		lsr	r0, r0, #16
 927:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 928:Generated_Source\PSoC4/PWM.c **** }
 774              		.loc 1 928 0
 775              		@ sp needed
 776 0008 7047     		bx	lr
 777              	.L63:
 778 000a C046     		.align	2
 779              	.L62:
 780 000c 0C010540 		.word	1074069772
 781              		.cfi_endproc
 782              	.LFE23:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 31


 783              		.size	PWM_ReadCompare, .-PWM_ReadCompare
 784              		.section	.text.PWM_WriteCompareBuf,"ax",%progbits
 785              		.align	2
 786              		.global	PWM_WriteCompareBuf
 787              		.code	16
 788              		.thumb_func
 789              		.type	PWM_WriteCompareBuf, %function
 790              	PWM_WriteCompareBuf:
 791              	.LFB24:
 929:Generated_Source\PSoC4/PWM.c **** 
 930:Generated_Source\PSoC4/PWM.c **** 
 931:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 932:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompareBuf
 933:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 934:Generated_Source\PSoC4/PWM.c **** *
 935:Generated_Source\PSoC4/PWM.c **** * Summary:
 936:Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 937:Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 938:Generated_Source\PSoC4/PWM.c **** *
 939:Generated_Source\PSoC4/PWM.c **** * Parameters:
 940:Generated_Source\PSoC4/PWM.c **** *  compareBuf: Compare value
 941:Generated_Source\PSoC4/PWM.c **** *
 942:Generated_Source\PSoC4/PWM.c **** * Return:
 943:Generated_Source\PSoC4/PWM.c **** *  None
 944:Generated_Source\PSoC4/PWM.c **** *
 945:Generated_Source\PSoC4/PWM.c **** * Note:
 946:Generated_Source\PSoC4/PWM.c **** *  It is not recommended to use the value equal to "0" or equal to 
 947:Generated_Source\PSoC4/PWM.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 948:Generated_Source\PSoC4/PWM.c **** *  PSoC 4100/PSoC 4200 devices.
 949:Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 950:Generated_Source\PSoC4/PWM.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 951:Generated_Source\PSoC4/PWM.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 952:Generated_Source\PSoC4/PWM.c **** *
 953:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 954:Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompareBuf(uint32 compareBuf)
 955:Generated_Source\PSoC4/PWM.c **** {
 792              		.loc 1 955 0
 793              		.cfi_startproc
 794              	.LVL56:
 956:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 957:Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 958:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 959:Generated_Source\PSoC4/PWM.c **** 
 960:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 961:Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 962:Generated_Source\PSoC4/PWM.c **** 
 963:Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 964:Generated_Source\PSoC4/PWM.c ****         {
 965:Generated_Source\PSoC4/PWM.c ****             compareBuf++;
 966:Generated_Source\PSoC4/PWM.c ****         }
 967:Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0u != compareBuf))
 968:Generated_Source\PSoC4/PWM.c ****         {
 969:Generated_Source\PSoC4/PWM.c ****             compareBuf --;
 970:Generated_Source\PSoC4/PWM.c ****         }
 971:Generated_Source\PSoC4/PWM.c ****         else
 972:Generated_Source\PSoC4/PWM.c ****         {
 973:Generated_Source\PSoC4/PWM.c ****         }
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 32


 974:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 975:Generated_Source\PSoC4/PWM.c ****     
 976:Generated_Source\PSoC4/PWM.c ****     PWM_COMP_CAP_BUF_REG = (compareBuf & PWM_16BIT_MASK);
 795              		.loc 1 976 0
 796 0000 0004     		lsl	r0, r0, #16
 797              	.LVL57:
 798 0002 000C     		lsr	r0, r0, #16
 799 0004 014B     		ldr	r3, .L65
 800 0006 1860     		str	r0, [r3]
 977:Generated_Source\PSoC4/PWM.c **** }
 801              		.loc 1 977 0
 802              		@ sp needed
 803 0008 7047     		bx	lr
 804              	.L66:
 805 000a C046     		.align	2
 806              	.L65:
 807 000c 10010540 		.word	1074069776
 808              		.cfi_endproc
 809              	.LFE24:
 810              		.size	PWM_WriteCompareBuf, .-PWM_WriteCompareBuf
 811              		.section	.text.PWM_ReadCompareBuf,"ax",%progbits
 812              		.align	2
 813              		.global	PWM_ReadCompareBuf
 814              		.code	16
 815              		.thumb_func
 816              		.type	PWM_ReadCompareBuf, %function
 817              	PWM_ReadCompareBuf:
 818              	.LFB25:
 978:Generated_Source\PSoC4/PWM.c **** 
 979:Generated_Source\PSoC4/PWM.c **** 
 980:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 981:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompareBuf
 982:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 983:Generated_Source\PSoC4/PWM.c **** *
 984:Generated_Source\PSoC4/PWM.c **** * Summary:
 985:Generated_Source\PSoC4/PWM.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 986:Generated_Source\PSoC4/PWM.c **** *  Capture or in Quadrature Decoder modes.
 987:Generated_Source\PSoC4/PWM.c **** *
 988:Generated_Source\PSoC4/PWM.c **** * Parameters:
 989:Generated_Source\PSoC4/PWM.c **** *  None
 990:Generated_Source\PSoC4/PWM.c **** *
 991:Generated_Source\PSoC4/PWM.c **** * Return:
 992:Generated_Source\PSoC4/PWM.c **** *  Compare buffer value
 993:Generated_Source\PSoC4/PWM.c **** *
 994:Generated_Source\PSoC4/PWM.c **** * Note:
 995:Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 996:Generated_Source\PSoC4/PWM.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 997:Generated_Source\PSoC4/PWM.c **** *  Down counting mode (except 0x0u).
 998:Generated_Source\PSoC4/PWM.c **** *
 999:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1000:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompareBuf(void)
1001:Generated_Source\PSoC4/PWM.c **** {
 819              		.loc 1 1001 0
 820              		.cfi_startproc
1002:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
1003:Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
1004:Generated_Source\PSoC4/PWM.c ****         uint32 regVal;
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 33


1005:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
1006:Generated_Source\PSoC4/PWM.c **** 
1007:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
1008:Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
1009:Generated_Source\PSoC4/PWM.c **** 
1010:Generated_Source\PSoC4/PWM.c ****         regVal = PWM_COMP_CAP_BUF_REG;
1011:Generated_Source\PSoC4/PWM.c ****         
1012:Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0u != regVal))
1013:Generated_Source\PSoC4/PWM.c ****         {
1014:Generated_Source\PSoC4/PWM.c ****             regVal--;
1015:Generated_Source\PSoC4/PWM.c ****         }
1016:Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0xFFFFu != regVal))
1017:Generated_Source\PSoC4/PWM.c ****         {
1018:Generated_Source\PSoC4/PWM.c ****             regVal++;
1019:Generated_Source\PSoC4/PWM.c ****         }
1020:Generated_Source\PSoC4/PWM.c ****         else
1021:Generated_Source\PSoC4/PWM.c ****         {
1022:Generated_Source\PSoC4/PWM.c ****         }
1023:Generated_Source\PSoC4/PWM.c **** 
1024:Generated_Source\PSoC4/PWM.c ****         return (regVal & PWM_16BIT_MASK);
1025:Generated_Source\PSoC4/PWM.c ****     #else
1026:Generated_Source\PSoC4/PWM.c ****         return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 821              		.loc 1 1026 0
 822 0000 024B     		ldr	r3, .L68
 823 0002 1868     		ldr	r0, [r3]
 824 0004 0004     		lsl	r0, r0, #16
 825 0006 000C     		lsr	r0, r0, #16
1027:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
1028:Generated_Source\PSoC4/PWM.c **** }
 826              		.loc 1 1028 0
 827              		@ sp needed
 828 0008 7047     		bx	lr
 829              	.L69:
 830 000a C046     		.align	2
 831              	.L68:
 832 000c 10010540 		.word	1074069776
 833              		.cfi_endproc
 834              	.LFE25:
 835              		.size	PWM_ReadCompareBuf, .-PWM_ReadCompareBuf
 836              		.section	.text.PWM_ReadCapture,"ax",%progbits
 837              		.align	2
 838              		.global	PWM_ReadCapture
 839              		.code	16
 840              		.thumb_func
 841              		.type	PWM_ReadCapture, %function
 842              	PWM_ReadCapture:
 843              	.LFB26:
1029:Generated_Source\PSoC4/PWM.c **** 
1030:Generated_Source\PSoC4/PWM.c **** 
1031:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1032:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCapture
1033:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1034:Generated_Source\PSoC4/PWM.c **** *
1035:Generated_Source\PSoC4/PWM.c **** * Summary:
1036:Generated_Source\PSoC4/PWM.c **** *  Reads the captured counter value. This API is applicable only for
1037:Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1038:Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 34


1039:Generated_Source\PSoC4/PWM.c **** * Parameters:
1040:Generated_Source\PSoC4/PWM.c **** *  None
1041:Generated_Source\PSoC4/PWM.c **** *
1042:Generated_Source\PSoC4/PWM.c **** * Return:
1043:Generated_Source\PSoC4/PWM.c **** *  Capture value
1044:Generated_Source\PSoC4/PWM.c **** *
1045:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1046:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCapture(void)
1047:Generated_Source\PSoC4/PWM.c **** {
 844              		.loc 1 1047 0
 845              		.cfi_startproc
1048:Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 846              		.loc 1 1048 0
 847 0000 024B     		ldr	r3, .L71
 848 0002 1868     		ldr	r0, [r3]
 849 0004 0004     		lsl	r0, r0, #16
 850 0006 000C     		lsr	r0, r0, #16
1049:Generated_Source\PSoC4/PWM.c **** }
 851              		.loc 1 1049 0
 852              		@ sp needed
 853 0008 7047     		bx	lr
 854              	.L72:
 855 000a C046     		.align	2
 856              	.L71:
 857 000c 0C010540 		.word	1074069772
 858              		.cfi_endproc
 859              	.LFE26:
 860              		.size	PWM_ReadCapture, .-PWM_ReadCapture
 861              		.section	.text.PWM_ReadCaptureBuf,"ax",%progbits
 862              		.align	2
 863              		.global	PWM_ReadCaptureBuf
 864              		.code	16
 865              		.thumb_func
 866              		.type	PWM_ReadCaptureBuf, %function
 867              	PWM_ReadCaptureBuf:
 868              	.LFB27:
1050:Generated_Source\PSoC4/PWM.c **** 
1051:Generated_Source\PSoC4/PWM.c **** 
1052:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1053:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCaptureBuf
1054:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1055:Generated_Source\PSoC4/PWM.c **** *
1056:Generated_Source\PSoC4/PWM.c **** * Summary:
1057:Generated_Source\PSoC4/PWM.c **** *  Reads the capture buffer register. This API is applicable only for
1058:Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1059:Generated_Source\PSoC4/PWM.c **** *
1060:Generated_Source\PSoC4/PWM.c **** * Parameters:
1061:Generated_Source\PSoC4/PWM.c **** *  None
1062:Generated_Source\PSoC4/PWM.c **** *
1063:Generated_Source\PSoC4/PWM.c **** * Return:
1064:Generated_Source\PSoC4/PWM.c **** *  Capture buffer value
1065:Generated_Source\PSoC4/PWM.c **** *
1066:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCaptureBuf(void)
1068:Generated_Source\PSoC4/PWM.c **** {
 869              		.loc 1 1068 0
 870              		.cfi_startproc
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 35


1069:Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 871              		.loc 1 1069 0
 872 0000 024B     		ldr	r3, .L74
 873 0002 1868     		ldr	r0, [r3]
 874 0004 0004     		lsl	r0, r0, #16
 875 0006 000C     		lsr	r0, r0, #16
1070:Generated_Source\PSoC4/PWM.c **** }
 876              		.loc 1 1070 0
 877              		@ sp needed
 878 0008 7047     		bx	lr
 879              	.L75:
 880 000a C046     		.align	2
 881              	.L74:
 882 000c 10010540 		.word	1074069776
 883              		.cfi_endproc
 884              	.LFE27:
 885              		.size	PWM_ReadCaptureBuf, .-PWM_ReadCaptureBuf
 886              		.section	.text.PWM_SetCaptureMode,"ax",%progbits
 887              		.align	2
 888              		.global	PWM_SetCaptureMode
 889              		.code	16
 890              		.thumb_func
 891              		.type	PWM_SetCaptureMode, %function
 892              	PWM_SetCaptureMode:
 893              	.LFB28:
1071:Generated_Source\PSoC4/PWM.c **** 
1072:Generated_Source\PSoC4/PWM.c **** 
1073:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1074:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCaptureMode
1075:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1076:Generated_Source\PSoC4/PWM.c **** *
1077:Generated_Source\PSoC4/PWM.c **** * Summary:
1078:Generated_Source\PSoC4/PWM.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1079:Generated_Source\PSoC4/PWM.c **** *  This input is not applicable to the Timer/Counter without Capture and
1080:Generated_Source\PSoC4/PWM.c **** *  Quadrature Decoder modes.
1081:Generated_Source\PSoC4/PWM.c **** *
1082:Generated_Source\PSoC4/PWM.c **** * Parameters:
1083:Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1084:Generated_Source\PSoC4/PWM.c **** *   Values:
1085:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1086:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1087:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1088:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1089:Generated_Source\PSoC4/PWM.c **** *
1090:Generated_Source\PSoC4/PWM.c **** * Return:
1091:Generated_Source\PSoC4/PWM.c **** *  None
1092:Generated_Source\PSoC4/PWM.c **** *
1093:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1094:Generated_Source\PSoC4/PWM.c **** void PWM_SetCaptureMode(uint32 triggerMode)
1095:Generated_Source\PSoC4/PWM.c **** {
 894              		.loc 1 1095 0
 895              		.cfi_startproc
 896              	.LVL58:
 897 0000 10B5     		push	{r4, lr}
 898              		.cfi_def_cfa_offset 8
 899              		.cfi_offset 4, -8
 900              		.cfi_offset 14, -4
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 36


 901 0002 041C     		mov	r4, r0
1096:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1097:Generated_Source\PSoC4/PWM.c **** 
1098:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 902              		.loc 1 1098 0
 903 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 904              	.LVL59:
1099:Generated_Source\PSoC4/PWM.c **** 
1100:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_CAPTURE_MASK;
 905              		.loc 1 1100 0
 906 0008 054B     		ldr	r3, .L77
 907 000a 1A68     		ldr	r2, [r3]
 908 000c 0321     		mov	r1, #3
 909 000e 8A43     		bic	r2, r1
 910 0010 1A60     		str	r2, [r3]
1101:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= triggerMode;
 911              		.loc 1 1101 0
 912 0012 1A68     		ldr	r2, [r3]
 913 0014 1443     		orr	r4, r2
 914              	.LVL60:
 915 0016 1C60     		str	r4, [r3]
1102:Generated_Source\PSoC4/PWM.c **** 
1103:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 916              		.loc 1 1103 0
 917 0018 FFF7FEFF 		bl	CyExitCriticalSection
 918              	.LVL61:
1104:Generated_Source\PSoC4/PWM.c **** }
 919              		.loc 1 1104 0
 920              		@ sp needed
 921 001c 10BD     		pop	{r4, pc}
 922              	.L78:
 923 001e C046     		.align	2
 924              	.L77:
 925 0020 24010540 		.word	1074069796
 926              		.cfi_endproc
 927              	.LFE28:
 928              		.size	PWM_SetCaptureMode, .-PWM_SetCaptureMode
 929              		.section	.text.PWM_SetReloadMode,"ax",%progbits
 930              		.align	2
 931              		.global	PWM_SetReloadMode
 932              		.code	16
 933              		.thumb_func
 934              		.type	PWM_SetReloadMode, %function
 935              	PWM_SetReloadMode:
 936              	.LFB29:
1105:Generated_Source\PSoC4/PWM.c **** 
1106:Generated_Source\PSoC4/PWM.c **** 
1107:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1108:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetReloadMode
1109:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1110:Generated_Source\PSoC4/PWM.c **** *
1111:Generated_Source\PSoC4/PWM.c **** * Summary:
1112:Generated_Source\PSoC4/PWM.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1113:Generated_Source\PSoC4/PWM.c **** *  input.
1114:Generated_Source\PSoC4/PWM.c **** *
1115:Generated_Source\PSoC4/PWM.c **** * Parameters:
1116:Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 37


1117:Generated_Source\PSoC4/PWM.c **** *   Values:
1118:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1119:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1120:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1121:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1122:Generated_Source\PSoC4/PWM.c **** *
1123:Generated_Source\PSoC4/PWM.c **** * Return:
1124:Generated_Source\PSoC4/PWM.c **** *  None
1125:Generated_Source\PSoC4/PWM.c **** *
1126:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1127:Generated_Source\PSoC4/PWM.c **** void PWM_SetReloadMode(uint32 triggerMode)
1128:Generated_Source\PSoC4/PWM.c **** {
 937              		.loc 1 1128 0
 938              		.cfi_startproc
 939              	.LVL62:
 940 0000 10B5     		push	{r4, lr}
 941              		.cfi_def_cfa_offset 8
 942              		.cfi_offset 4, -8
 943              		.cfi_offset 14, -4
 944 0002 041C     		mov	r4, r0
1129:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1130:Generated_Source\PSoC4/PWM.c **** 
1131:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 945              		.loc 1 1131 0
 946 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 947              	.LVL63:
1132:Generated_Source\PSoC4/PWM.c **** 
1133:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_RELOAD_MASK;
 948              		.loc 1 1133 0
 949 0008 054B     		ldr	r3, .L80
 950 000a 1A68     		ldr	r2, [r3]
 951 000c 3021     		mov	r1, #48
 952 000e 8A43     		bic	r2, r1
 953 0010 1A60     		str	r2, [r3]
1134:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_RELOAD_SHIFT));
 954              		.loc 1 1134 0
 955 0012 1A68     		ldr	r2, [r3]
 956 0014 2401     		lsl	r4, r4, #4
 957              	.LVL64:
 958 0016 1443     		orr	r4, r2
 959 0018 1C60     		str	r4, [r3]
1135:Generated_Source\PSoC4/PWM.c **** 
1136:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 960              		.loc 1 1136 0
 961 001a FFF7FEFF 		bl	CyExitCriticalSection
 962              	.LVL65:
1137:Generated_Source\PSoC4/PWM.c **** }
 963              		.loc 1 1137 0
 964              		@ sp needed
 965 001e 10BD     		pop	{r4, pc}
 966              	.L81:
 967              		.align	2
 968              	.L80:
 969 0020 24010540 		.word	1074069796
 970              		.cfi_endproc
 971              	.LFE29:
 972              		.size	PWM_SetReloadMode, .-PWM_SetReloadMode
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 38


 973              		.section	.text.PWM_SetStartMode,"ax",%progbits
 974              		.align	2
 975              		.global	PWM_SetStartMode
 976              		.code	16
 977              		.thumb_func
 978              		.type	PWM_SetStartMode, %function
 979              	PWM_SetStartMode:
 980              	.LFB30:
1138:Generated_Source\PSoC4/PWM.c **** 
1139:Generated_Source\PSoC4/PWM.c **** 
1140:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1141:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStartMode
1142:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1143:Generated_Source\PSoC4/PWM.c **** *
1144:Generated_Source\PSoC4/PWM.c **** * Summary:
1145:Generated_Source\PSoC4/PWM.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1146:Generated_Source\PSoC4/PWM.c **** *  phiB input.
1147:Generated_Source\PSoC4/PWM.c **** *
1148:Generated_Source\PSoC4/PWM.c **** * Parameters:
1149:Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1150:Generated_Source\PSoC4/PWM.c **** *   Values:
1151:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1152:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1153:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1154:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1155:Generated_Source\PSoC4/PWM.c **** *
1156:Generated_Source\PSoC4/PWM.c **** * Return:
1157:Generated_Source\PSoC4/PWM.c **** *  None
1158:Generated_Source\PSoC4/PWM.c **** *
1159:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1160:Generated_Source\PSoC4/PWM.c **** void PWM_SetStartMode(uint32 triggerMode)
1161:Generated_Source\PSoC4/PWM.c **** {
 981              		.loc 1 1161 0
 982              		.cfi_startproc
 983              	.LVL66:
 984 0000 10B5     		push	{r4, lr}
 985              		.cfi_def_cfa_offset 8
 986              		.cfi_offset 4, -8
 987              		.cfi_offset 14, -4
 988 0002 041C     		mov	r4, r0
1162:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1163:Generated_Source\PSoC4/PWM.c **** 
1164:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 989              		.loc 1 1164 0
 990 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 991              	.LVL67:
1165:Generated_Source\PSoC4/PWM.c **** 
1166:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_START_MASK;
 992              		.loc 1 1166 0
 993 0008 054B     		ldr	r3, .L83
 994 000a 1968     		ldr	r1, [r3]
 995 000c 054A     		ldr	r2, .L83+4
 996 000e 0A40     		and	r2, r1
 997 0010 1A60     		str	r2, [r3]
1167:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_START_SHIFT));
 998              		.loc 1 1167 0
 999 0012 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 39


 1000 0014 2402     		lsl	r4, r4, #8
 1001              	.LVL68:
 1002 0016 1443     		orr	r4, r2
 1003 0018 1C60     		str	r4, [r3]
1168:Generated_Source\PSoC4/PWM.c **** 
1169:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1004              		.loc 1 1169 0
 1005 001a FFF7FEFF 		bl	CyExitCriticalSection
 1006              	.LVL69:
1170:Generated_Source\PSoC4/PWM.c **** }
 1007              		.loc 1 1170 0
 1008              		@ sp needed
 1009 001e 10BD     		pop	{r4, pc}
 1010              	.L84:
 1011              		.align	2
 1012              	.L83:
 1013 0020 24010540 		.word	1074069796
 1014 0024 FFFCFFFF 		.word	-769
 1015              		.cfi_endproc
 1016              	.LFE30:
 1017              		.size	PWM_SetStartMode, .-PWM_SetStartMode
 1018              		.section	.text.PWM_SetStopMode,"ax",%progbits
 1019              		.align	2
 1020              		.global	PWM_SetStopMode
 1021              		.code	16
 1022              		.thumb_func
 1023              		.type	PWM_SetStopMode, %function
 1024              	PWM_SetStopMode:
 1025              	.LFB31:
1171:Generated_Source\PSoC4/PWM.c **** 
1172:Generated_Source\PSoC4/PWM.c **** 
1173:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1174:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStopMode
1175:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1176:Generated_Source\PSoC4/PWM.c **** *
1177:Generated_Source\PSoC4/PWM.c **** * Summary:
1178:Generated_Source\PSoC4/PWM.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1179:Generated_Source\PSoC4/PWM.c **** *
1180:Generated_Source\PSoC4/PWM.c **** * Parameters:
1181:Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1182:Generated_Source\PSoC4/PWM.c **** *   Values:
1183:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1184:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1185:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1186:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1187:Generated_Source\PSoC4/PWM.c **** *
1188:Generated_Source\PSoC4/PWM.c **** * Return:
1189:Generated_Source\PSoC4/PWM.c **** *  None
1190:Generated_Source\PSoC4/PWM.c **** *
1191:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1192:Generated_Source\PSoC4/PWM.c **** void PWM_SetStopMode(uint32 triggerMode)
1193:Generated_Source\PSoC4/PWM.c **** {
 1026              		.loc 1 1193 0
 1027              		.cfi_startproc
 1028              	.LVL70:
 1029 0000 10B5     		push	{r4, lr}
 1030              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 40


 1031              		.cfi_offset 4, -8
 1032              		.cfi_offset 14, -4
 1033 0002 041C     		mov	r4, r0
1194:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1195:Generated_Source\PSoC4/PWM.c **** 
1196:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1034              		.loc 1 1196 0
 1035 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1036              	.LVL71:
1197:Generated_Source\PSoC4/PWM.c **** 
1198:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_STOP_MASK;
 1037              		.loc 1 1198 0
 1038 0008 054B     		ldr	r3, .L86
 1039 000a 1A68     		ldr	r2, [r3]
 1040 000c C021     		mov	r1, #192
 1041 000e 8A43     		bic	r2, r1
 1042 0010 1A60     		str	r2, [r3]
1199:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_STOP_SHIFT));
 1043              		.loc 1 1199 0
 1044 0012 1A68     		ldr	r2, [r3]
 1045 0014 A401     		lsl	r4, r4, #6
 1046              	.LVL72:
 1047 0016 1443     		orr	r4, r2
 1048 0018 1C60     		str	r4, [r3]
1200:Generated_Source\PSoC4/PWM.c **** 
1201:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1049              		.loc 1 1201 0
 1050 001a FFF7FEFF 		bl	CyExitCriticalSection
 1051              	.LVL73:
1202:Generated_Source\PSoC4/PWM.c **** }
 1052              		.loc 1 1202 0
 1053              		@ sp needed
 1054 001e 10BD     		pop	{r4, pc}
 1055              	.L87:
 1056              		.align	2
 1057              	.L86:
 1058 0020 24010540 		.word	1074069796
 1059              		.cfi_endproc
 1060              	.LFE31:
 1061              		.size	PWM_SetStopMode, .-PWM_SetStopMode
 1062              		.section	.text.PWM_SetCountMode,"ax",%progbits
 1063              		.align	2
 1064              		.global	PWM_SetCountMode
 1065              		.code	16
 1066              		.thumb_func
 1067              		.type	PWM_SetCountMode, %function
 1068              	PWM_SetCountMode:
 1069              	.LFB32:
1203:Generated_Source\PSoC4/PWM.c **** 
1204:Generated_Source\PSoC4/PWM.c **** 
1205:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCountMode
1207:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1208:Generated_Source\PSoC4/PWM.c **** *
1209:Generated_Source\PSoC4/PWM.c **** * Summary:
1210:Generated_Source\PSoC4/PWM.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1211:Generated_Source\PSoC4/PWM.c **** *  input.
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 41


1212:Generated_Source\PSoC4/PWM.c **** *
1213:Generated_Source\PSoC4/PWM.c **** * Parameters:
1214:Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1215:Generated_Source\PSoC4/PWM.c **** *   Values:
1216:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1217:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1218:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1219:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1220:Generated_Source\PSoC4/PWM.c **** *
1221:Generated_Source\PSoC4/PWM.c **** * Return:
1222:Generated_Source\PSoC4/PWM.c **** *  None
1223:Generated_Source\PSoC4/PWM.c **** *
1224:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1225:Generated_Source\PSoC4/PWM.c **** void PWM_SetCountMode(uint32 triggerMode)
1226:Generated_Source\PSoC4/PWM.c **** {
 1070              		.loc 1 1226 0
 1071              		.cfi_startproc
 1072              	.LVL74:
 1073 0000 10B5     		push	{r4, lr}
 1074              		.cfi_def_cfa_offset 8
 1075              		.cfi_offset 4, -8
 1076              		.cfi_offset 14, -4
 1077 0002 041C     		mov	r4, r0
1227:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1228:Generated_Source\PSoC4/PWM.c **** 
1229:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1078              		.loc 1 1229 0
 1079 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1080              	.LVL75:
1230:Generated_Source\PSoC4/PWM.c **** 
1231:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_COUNT_MASK;
 1081              		.loc 1 1231 0
 1082 0008 054B     		ldr	r3, .L89
 1083 000a 1A68     		ldr	r2, [r3]
 1084 000c 0C21     		mov	r1, #12
 1085 000e 8A43     		bic	r2, r1
 1086 0010 1A60     		str	r2, [r3]
1232:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_COUNT_SHIFT));
 1087              		.loc 1 1232 0
 1088 0012 1A68     		ldr	r2, [r3]
 1089 0014 A400     		lsl	r4, r4, #2
 1090              	.LVL76:
 1091 0016 1443     		orr	r4, r2
 1092 0018 1C60     		str	r4, [r3]
1233:Generated_Source\PSoC4/PWM.c **** 
1234:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1093              		.loc 1 1234 0
 1094 001a FFF7FEFF 		bl	CyExitCriticalSection
 1095              	.LVL77:
1235:Generated_Source\PSoC4/PWM.c **** }
 1096              		.loc 1 1235 0
 1097              		@ sp needed
 1098 001e 10BD     		pop	{r4, pc}
 1099              	.L90:
 1100              		.align	2
 1101              	.L89:
 1102 0020 24010540 		.word	1074069796
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 42


 1103              		.cfi_endproc
 1104              	.LFE32:
 1105              		.size	PWM_SetCountMode, .-PWM_SetCountMode
 1106              		.section	.text.PWM_TriggerCommand,"ax",%progbits
 1107              		.align	2
 1108              		.global	PWM_TriggerCommand
 1109              		.code	16
 1110              		.thumb_func
 1111              		.type	PWM_TriggerCommand, %function
 1112              	PWM_TriggerCommand:
 1113              	.LFB33:
1236:Generated_Source\PSoC4/PWM.c **** 
1237:Generated_Source\PSoC4/PWM.c **** 
1238:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1239:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_TriggerCommand
1240:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1241:Generated_Source\PSoC4/PWM.c **** *
1242:Generated_Source\PSoC4/PWM.c **** * Summary:
1243:Generated_Source\PSoC4/PWM.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1244:Generated_Source\PSoC4/PWM.c **** *  The mask can be used to apply this command simultaneously to more than one
1245:Generated_Source\PSoC4/PWM.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1246:Generated_Source\PSoC4/PWM.c **** *
1247:Generated_Source\PSoC4/PWM.c **** * Parameters:
1248:Generated_Source\PSoC4/PWM.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1249:Generated_Source\PSoC4/PWM.c **** *        command should apply to.  This function from one instance can be used
1250:Generated_Source\PSoC4/PWM.c **** *        to apply the command to any of the instances in the design.
1251:Generated_Source\PSoC4/PWM.c **** *        The mask value for a specific instance is available with the MASK
1252:Generated_Source\PSoC4/PWM.c **** *        define.
1253:Generated_Source\PSoC4/PWM.c **** *  command: Enumerated command values. Capture command only applicable for
1254:Generated_Source\PSoC4/PWM.c **** *           Timer/Counter with Capture and PWM modes.
1255:Generated_Source\PSoC4/PWM.c **** *   Values:
1256:Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_CAPTURE    - Trigger Capture/Switch command
1257:Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_RELOAD     - Trigger Reload/Index command
1258:Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_STOP       - Trigger Stop/Kill command
1259:Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_START      - Trigger Start/phiB command
1260:Generated_Source\PSoC4/PWM.c **** *
1261:Generated_Source\PSoC4/PWM.c **** * Return:
1262:Generated_Source\PSoC4/PWM.c **** *  None
1263:Generated_Source\PSoC4/PWM.c **** *
1264:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1265:Generated_Source\PSoC4/PWM.c **** void PWM_TriggerCommand(uint32 mask, uint32 command)
1266:Generated_Source\PSoC4/PWM.c **** {
 1114              		.loc 1 1266 0
 1115              		.cfi_startproc
 1116              	.LVL78:
 1117 0000 38B5     		push	{r3, r4, r5, lr}
 1118              		.cfi_def_cfa_offset 16
 1119              		.cfi_offset 3, -16
 1120              		.cfi_offset 4, -12
 1121              		.cfi_offset 5, -8
 1122              		.cfi_offset 14, -4
 1123 0002 041C     		mov	r4, r0
 1124 0004 0D1C     		mov	r5, r1
1267:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1268:Generated_Source\PSoC4/PWM.c **** 
1269:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1125              		.loc 1 1269 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 43


 1126 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1127              	.LVL79:
1270:Generated_Source\PSoC4/PWM.c **** 
1271:Generated_Source\PSoC4/PWM.c ****     PWM_COMMAND_REG = ((uint32)(mask << command));
 1128              		.loc 1 1271 0
 1129 000a AC40     		lsl	r4, r4, r5
 1130              	.LVL80:
 1131 000c 024B     		ldr	r3, .L92
 1132 000e 1C60     		str	r4, [r3]
1272:Generated_Source\PSoC4/PWM.c **** 
1273:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1133              		.loc 1 1273 0
 1134 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1135              	.LVL81:
1274:Generated_Source\PSoC4/PWM.c **** }
 1136              		.loc 1 1274 0
 1137              		@ sp needed
 1138              	.LVL82:
 1139 0014 38BD     		pop	{r3, r4, r5, pc}
 1140              	.L93:
 1141 0016 C046     		.align	2
 1142              	.L92:
 1143 0018 08000540 		.word	1074069512
 1144              		.cfi_endproc
 1145              	.LFE33:
 1146              		.size	PWM_TriggerCommand, .-PWM_TriggerCommand
 1147              		.section	.text.PWM_Enable,"ax",%progbits
 1148              		.align	2
 1149              		.global	PWM_Enable
 1150              		.code	16
 1151              		.thumb_func
 1152              		.type	PWM_Enable, %function
 1153              	PWM_Enable:
 1154              	.LFB1:
 178:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1155              		.loc 1 178 0
 1156              		.cfi_startproc
 1157 0000 08B5     		push	{r3, lr}
 1158              		.cfi_def_cfa_offset 8
 1159              		.cfi_offset 3, -8
 1160              		.cfi_offset 14, -4
 181:Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG |= PWM_MASK;
 1161              		.loc 1 181 0
 1162 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1163              	.LVL83:
 182:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1164              		.loc 1 182 0
 1165 0006 064A     		ldr	r2, .L95
 1166 0008 1168     		ldr	r1, [r2]
 1167 000a 0123     		mov	r3, #1
 1168 000c 0B43     		orr	r3, r1
 1169 000e 1360     		str	r3, [r2]
 183:Generated_Source\PSoC4/PWM.c **** 
 1170              		.loc 1 183 0
 1171 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1172              	.LVL84:
 188:Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_PWM_START_SIGNAL_PRESENT) */
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 44


 1173              		.loc 1 188 0
 1174 0014 0120     		mov	r0, #1
 1175 0016 1821     		mov	r1, #24
 1176 0018 FFF7FEFF 		bl	PWM_TriggerCommand
 1177              	.LVL85:
 203:Generated_Source\PSoC4/PWM.c **** 
 1178              		.loc 1 203 0
 1179              		@ sp needed
 1180 001c 08BD     		pop	{r3, pc}
 1181              	.L96:
 1182 001e C046     		.align	2
 1183              	.L95:
 1184 0020 00000540 		.word	1074069504
 1185              		.cfi_endproc
 1186              	.LFE1:
 1187              		.size	PWM_Enable, .-PWM_Enable
 1188              		.section	.text.PWM_ReadStatus,"ax",%progbits
 1189              		.align	2
 1190              		.global	PWM_ReadStatus
 1191              		.code	16
 1192              		.thumb_func
 1193              		.type	PWM_ReadStatus, %function
 1194              	PWM_ReadStatus:
 1195              	.LFB34:
1275:Generated_Source\PSoC4/PWM.c **** 
1276:Generated_Source\PSoC4/PWM.c **** 
1277:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1278:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadStatus
1279:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1280:Generated_Source\PSoC4/PWM.c **** *
1281:Generated_Source\PSoC4/PWM.c **** * Summary:
1282:Generated_Source\PSoC4/PWM.c **** *  Reads the status of the PWM.
1283:Generated_Source\PSoC4/PWM.c **** *
1284:Generated_Source\PSoC4/PWM.c **** * Parameters:
1285:Generated_Source\PSoC4/PWM.c **** *  None
1286:Generated_Source\PSoC4/PWM.c **** *
1287:Generated_Source\PSoC4/PWM.c **** * Return:
1288:Generated_Source\PSoC4/PWM.c **** *  Status
1289:Generated_Source\PSoC4/PWM.c **** *   Values:
1290:Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_DOWN    - Set if counting down
1291:Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_RUNNING - Set if counter is running
1292:Generated_Source\PSoC4/PWM.c **** *
1293:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1294:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadStatus(void)
1295:Generated_Source\PSoC4/PWM.c **** {
 1196              		.loc 1 1295 0
 1197              		.cfi_startproc
1296:Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
 1198              		.loc 1 1296 0
 1199 0000 034B     		ldr	r3, .L98
 1200 0002 1868     		ldr	r0, [r3]
 1201 0004 820F     		lsr	r2, r0, #30
1297:Generated_Source\PSoC4/PWM.c ****             (PWM_STATUS_REG & PWM_STATUS_DOWN));
 1202              		.loc 1 1297 0
 1203 0006 1B68     		ldr	r3, [r3]
 1204 0008 0120     		mov	r0, #1
 1205 000a 1840     		and	r0, r3
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 45


1296:Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
 1206              		.loc 1 1296 0
 1207 000c 1043     		orr	r0, r2
1298:Generated_Source\PSoC4/PWM.c **** }
 1208              		.loc 1 1298 0
 1209              		@ sp needed
 1210 000e 7047     		bx	lr
 1211              	.L99:
 1212              		.align	2
 1213              	.L98:
 1214 0010 04010540 		.word	1074069764
 1215              		.cfi_endproc
 1216              	.LFE34:
 1217              		.size	PWM_ReadStatus, .-PWM_ReadStatus
 1218              		.section	.text.PWM_SetInterruptMode,"ax",%progbits
 1219              		.align	2
 1220              		.global	PWM_SetInterruptMode
 1221              		.code	16
 1222              		.thumb_func
 1223              		.type	PWM_SetInterruptMode, %function
 1224              	PWM_SetInterruptMode:
 1225              	.LFB35:
1299:Generated_Source\PSoC4/PWM.c **** 
1300:Generated_Source\PSoC4/PWM.c **** 
1301:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1302:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterruptMode
1303:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1304:Generated_Source\PSoC4/PWM.c **** *
1305:Generated_Source\PSoC4/PWM.c **** * Summary:
1306:Generated_Source\PSoC4/PWM.c **** *  Sets the interrupt mask to control which interrupt
1307:Generated_Source\PSoC4/PWM.c **** *  requests generate the interrupt signal.
1308:Generated_Source\PSoC4/PWM.c **** *
1309:Generated_Source\PSoC4/PWM.c **** * Parameters:
1310:Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of bits to be enabled
1311:Generated_Source\PSoC4/PWM.c **** *   Values:
1312:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1313:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1314:Generated_Source\PSoC4/PWM.c **** *
1315:Generated_Source\PSoC4/PWM.c **** * Return:
1316:Generated_Source\PSoC4/PWM.c **** *  None
1317:Generated_Source\PSoC4/PWM.c **** *
1318:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1319:Generated_Source\PSoC4/PWM.c **** void PWM_SetInterruptMode(uint32 interruptMask)
1320:Generated_Source\PSoC4/PWM.c **** {
 1226              		.loc 1 1320 0
 1227              		.cfi_startproc
 1228              	.LVL86:
1321:Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_MASK_REG =  interruptMask;
 1229              		.loc 1 1321 0
 1230 0000 014B     		ldr	r3, .L101
 1231 0002 1860     		str	r0, [r3]
1322:Generated_Source\PSoC4/PWM.c **** }
 1232              		.loc 1 1322 0
 1233              		@ sp needed
 1234 0004 7047     		bx	lr
 1235              	.L102:
 1236 0006 C046     		.align	2
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 46


 1237              	.L101:
 1238 0008 38010540 		.word	1074069816
 1239              		.cfi_endproc
 1240              	.LFE35:
 1241              		.size	PWM_SetInterruptMode, .-PWM_SetInterruptMode
 1242              		.section	.text.PWM_Init,"ax",%progbits
 1243              		.align	2
 1244              		.global	PWM_Init
 1245              		.code	16
 1246              		.thumb_func
 1247              		.type	PWM_Init, %function
 1248              	PWM_Init:
 1249              	.LFB0:
  39:Generated_Source\PSoC4/PWM.c **** 
 1250              		.loc 1 39 0
 1251              		.cfi_startproc
 1252 0000 10B5     		push	{r4, lr}
 1253              		.cfi_def_cfa_offset 8
 1254              		.cfi_offset 4, -8
 1255              		.cfi_offset 14, -4
  89:Generated_Source\PSoC4/PWM.c **** 
 1256              		.loc 1 89 0
 1257 0002 0F4C     		ldr	r4, .L104
 1258 0004 8023     		mov	r3, #128
 1259 0006 DB04     		lsl	r3, r3, #19
 1260 0008 2360     		str	r3, [r4]
  95:Generated_Source\PSoC4/PWM.c ****             
 1261              		.loc 1 95 0
 1262 000a 2368     		ldr	r3, [r4]
 1263 000c 2360     		str	r3, [r4]
 103:Generated_Source\PSoC4/PWM.c ****             #endif  /* (PWM_CY_TCPWM_V2 && PWM_PWM_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000) */
 1264              		.loc 1 103 0
 1265 000e 0020     		mov	r0, #0
 1266 0010 FFF7FEFF 		bl	PWM_WriteCounter
 1267              	.LVL87:
 112:Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM == PWM_PWM_MODE) */
 1268              		.loc 1 112 0
 1269 0014 2368     		ldr	r3, [r4]
 1270 0016 E022     		mov	r2, #224
 1271 0018 D200     		lsl	r2, r2, #3
 1272 001a 1343     		orr	r3, r2
 1273 001c 2360     		str	r3, [r4]
 116:Generated_Source\PSoC4/PWM.c ****     
 1274              		.loc 1 116 0
 1275 001e C322     		mov	r2, #195
 1276 0020 9200     		lsl	r2, r2, #2
 1277 0022 084B     		ldr	r3, .L104+4
 1278 0024 1A60     		str	r2, [r3]
 119:Generated_Source\PSoC4/PWM.c **** 
 1279              		.loc 1 119 0
 1280 0026 0020     		mov	r0, #0
 1281 0028 FFF7FEFF 		bl	PWM_SetInterruptMode
 1282              	.LVL88:
 129:Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_LEFT == PWM_PWM_ALIGN) */
 1283              		.loc 1 129 0
 1284 002c 3122     		mov	r2, #49
 1285 002e 064B     		ldr	r3, .L104+8
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 47


 1286 0030 1A60     		str	r2, [r3]
 146:Generated_Source\PSoC4/PWM.c ****         PWM_WriteCompare(PWM_PWM_COMPARE_VALUE);
 1287              		.loc 1 146 0
 1288 0032 0648     		ldr	r0, .L104+12
 1289 0034 FFF7FEFF 		bl	PWM_WritePeriod
 1290              	.LVL89:
 147:Generated_Source\PSoC4/PWM.c **** 
 1291              		.loc 1 147 0
 1292 0038 0548     		ldr	r0, .L104+16
 1293 003a FFF7FEFF 		bl	PWM_WriteCompare
 1294              	.LVL90:
 160:Generated_Source\PSoC4/PWM.c **** 
 1295              		.loc 1 160 0
 1296              		@ sp needed
 1297 003e 10BD     		pop	{r4, pc}
 1298              	.L105:
 1299              		.align	2
 1300              	.L104:
 1301 0040 00010540 		.word	1074069760
 1302 0044 24010540 		.word	1074069796
 1303 0048 28010540 		.word	1074069800
 1304 004c E2160000 		.word	5858
 1305 0050 710B0000 		.word	2929
 1306              		.cfi_endproc
 1307              	.LFE0:
 1308              		.size	PWM_Init, .-PWM_Init
 1309              		.section	.text.PWM_Start,"ax",%progbits
 1310              		.align	2
 1311              		.global	PWM_Start
 1312              		.code	16
 1313              		.thumb_func
 1314              		.type	PWM_Start, %function
 1315              	PWM_Start:
 1316              	.LFB2:
 231:Generated_Source\PSoC4/PWM.c ****     if (0u == PWM_initVar)
 1317              		.loc 1 231 0
 1318              		.cfi_startproc
 1319 0000 08B5     		push	{r3, lr}
 1320              		.cfi_def_cfa_offset 8
 1321              		.cfi_offset 3, -8
 1322              		.cfi_offset 14, -4
 232:Generated_Source\PSoC4/PWM.c ****     {
 1323              		.loc 1 232 0
 1324 0002 064B     		ldr	r3, .L108
 1325 0004 1B78     		ldrb	r3, [r3]
 1326 0006 002B     		cmp	r3, #0
 1327 0008 04D1     		bne	.L107
 234:Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 1328              		.loc 1 234 0
 1329 000a FFF7FEFF 		bl	PWM_Init
 1330              	.LVL91:
 235:Generated_Source\PSoC4/PWM.c ****     }
 1331              		.loc 1 235 0
 1332 000e 0122     		mov	r2, #1
 1333 0010 024B     		ldr	r3, .L108
 1334 0012 1A70     		strb	r2, [r3]
 1335              	.L107:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 48


 238:Generated_Source\PSoC4/PWM.c **** }
 1336              		.loc 1 238 0
 1337 0014 FFF7FEFF 		bl	PWM_Enable
 1338              	.LVL92:
 239:Generated_Source\PSoC4/PWM.c **** 
 1339              		.loc 1 239 0
 1340              		@ sp needed
 1341 0018 08BD     		pop	{r3, pc}
 1342              	.L109:
 1343 001a C046     		.align	2
 1344              	.L108:
 1345 001c 00000000 		.word	.LANCHOR0
 1346              		.cfi_endproc
 1347              	.LFE2:
 1348              		.size	PWM_Start, .-PWM_Start
 1349              		.section	.text.PWM_GetInterruptSourceMasked,"ax",%progbits
 1350              		.align	2
 1351              		.global	PWM_GetInterruptSourceMasked
 1352              		.code	16
 1353              		.thumb_func
 1354              		.type	PWM_GetInterruptSourceMasked, %function
 1355              	PWM_GetInterruptSourceMasked:
 1356              	.LFB36:
1323:Generated_Source\PSoC4/PWM.c **** 
1324:Generated_Source\PSoC4/PWM.c **** 
1325:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1326:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSourceMasked
1327:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1328:Generated_Source\PSoC4/PWM.c **** *
1329:Generated_Source\PSoC4/PWM.c **** * Summary:
1330:Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests masked by the interrupt mask.
1331:Generated_Source\PSoC4/PWM.c **** *
1332:Generated_Source\PSoC4/PWM.c **** * Parameters:
1333:Generated_Source\PSoC4/PWM.c **** *   None
1334:Generated_Source\PSoC4/PWM.c **** *
1335:Generated_Source\PSoC4/PWM.c **** * Return:
1336:Generated_Source\PSoC4/PWM.c **** *  Masked interrupt source
1337:Generated_Source\PSoC4/PWM.c **** *   Values:
1338:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1339:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1340:Generated_Source\PSoC4/PWM.c **** *
1341:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1342:Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSourceMasked(void)
1343:Generated_Source\PSoC4/PWM.c **** {
 1357              		.loc 1 1343 0
 1358              		.cfi_startproc
1344:Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_MASKED_REG);
 1359              		.loc 1 1344 0
 1360 0000 014B     		ldr	r3, .L111
 1361 0002 1868     		ldr	r0, [r3]
1345:Generated_Source\PSoC4/PWM.c **** }
 1362              		.loc 1 1345 0
 1363              		@ sp needed
 1364 0004 7047     		bx	lr
 1365              	.L112:
 1366 0006 C046     		.align	2
 1367              	.L111:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 49


 1368 0008 3C010540 		.word	1074069820
 1369              		.cfi_endproc
 1370              	.LFE36:
 1371              		.size	PWM_GetInterruptSourceMasked, .-PWM_GetInterruptSourceMasked
 1372              		.section	.text.PWM_GetInterruptSource,"ax",%progbits
 1373              		.align	2
 1374              		.global	PWM_GetInterruptSource
 1375              		.code	16
 1376              		.thumb_func
 1377              		.type	PWM_GetInterruptSource, %function
 1378              	PWM_GetInterruptSource:
 1379              	.LFB37:
1346:Generated_Source\PSoC4/PWM.c **** 
1347:Generated_Source\PSoC4/PWM.c **** 
1348:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1349:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSource
1350:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1351:Generated_Source\PSoC4/PWM.c **** *
1352:Generated_Source\PSoC4/PWM.c **** * Summary:
1353:Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests (without masking).
1354:Generated_Source\PSoC4/PWM.c **** *
1355:Generated_Source\PSoC4/PWM.c **** * Parameters:
1356:Generated_Source\PSoC4/PWM.c **** *  None
1357:Generated_Source\PSoC4/PWM.c **** *
1358:Generated_Source\PSoC4/PWM.c **** * Return:
1359:Generated_Source\PSoC4/PWM.c **** *  Interrupt request value
1360:Generated_Source\PSoC4/PWM.c **** *   Values:
1361:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1362:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1363:Generated_Source\PSoC4/PWM.c **** *
1364:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1365:Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSource(void)
1366:Generated_Source\PSoC4/PWM.c **** {
 1380              		.loc 1 1366 0
 1381              		.cfi_startproc
1367:Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_REQ_REG);
 1382              		.loc 1 1367 0
 1383 0000 014B     		ldr	r3, .L114
 1384 0002 1868     		ldr	r0, [r3]
1368:Generated_Source\PSoC4/PWM.c **** }
 1385              		.loc 1 1368 0
 1386              		@ sp needed
 1387 0004 7047     		bx	lr
 1388              	.L115:
 1389 0006 C046     		.align	2
 1390              	.L114:
 1391 0008 30010540 		.word	1074069808
 1392              		.cfi_endproc
 1393              	.LFE37:
 1394              		.size	PWM_GetInterruptSource, .-PWM_GetInterruptSource
 1395              		.section	.text.PWM_ClearInterrupt,"ax",%progbits
 1396              		.align	2
 1397              		.global	PWM_ClearInterrupt
 1398              		.code	16
 1399              		.thumb_func
 1400              		.type	PWM_ClearInterrupt, %function
 1401              	PWM_ClearInterrupt:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 50


 1402              	.LFB38:
1369:Generated_Source\PSoC4/PWM.c **** 
1370:Generated_Source\PSoC4/PWM.c **** 
1371:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1372:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ClearInterrupt
1373:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1374:Generated_Source\PSoC4/PWM.c **** *
1375:Generated_Source\PSoC4/PWM.c **** * Summary:
1376:Generated_Source\PSoC4/PWM.c **** *  Clears the interrupt request.
1377:Generated_Source\PSoC4/PWM.c **** *
1378:Generated_Source\PSoC4/PWM.c **** * Parameters:
1379:Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to clear
1380:Generated_Source\PSoC4/PWM.c **** *   Values:
1381:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1382:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1383:Generated_Source\PSoC4/PWM.c **** *
1384:Generated_Source\PSoC4/PWM.c **** * Return:
1385:Generated_Source\PSoC4/PWM.c **** *  None
1386:Generated_Source\PSoC4/PWM.c **** *
1387:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1388:Generated_Source\PSoC4/PWM.c **** void PWM_ClearInterrupt(uint32 interruptMask)
1389:Generated_Source\PSoC4/PWM.c **** {
 1403              		.loc 1 1389 0
 1404              		.cfi_startproc
 1405              	.LVL93:
1390:Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_REQ_REG = interruptMask;
 1406              		.loc 1 1390 0
 1407 0000 014B     		ldr	r3, .L117
 1408 0002 1860     		str	r0, [r3]
1391:Generated_Source\PSoC4/PWM.c **** }
 1409              		.loc 1 1391 0
 1410              		@ sp needed
 1411 0004 7047     		bx	lr
 1412              	.L118:
 1413 0006 C046     		.align	2
 1414              	.L117:
 1415 0008 30010540 		.word	1074069808
 1416              		.cfi_endproc
 1417              	.LFE38:
 1418              		.size	PWM_ClearInterrupt, .-PWM_ClearInterrupt
 1419              		.section	.text.PWM_SetInterrupt,"ax",%progbits
 1420              		.align	2
 1421              		.global	PWM_SetInterrupt
 1422              		.code	16
 1423              		.thumb_func
 1424              		.type	PWM_SetInterrupt, %function
 1425              	PWM_SetInterrupt:
 1426              	.LFB39:
1392:Generated_Source\PSoC4/PWM.c **** 
1393:Generated_Source\PSoC4/PWM.c **** 
1394:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1395:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterrupt
1396:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1397:Generated_Source\PSoC4/PWM.c **** *
1398:Generated_Source\PSoC4/PWM.c **** * Summary:
1399:Generated_Source\PSoC4/PWM.c **** *  Sets a software interrupt request.
1400:Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 51


1401:Generated_Source\PSoC4/PWM.c **** * Parameters:
1402:Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to set
1403:Generated_Source\PSoC4/PWM.c **** *   Values:
1404:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1405:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1406:Generated_Source\PSoC4/PWM.c **** *
1407:Generated_Source\PSoC4/PWM.c **** * Return:
1408:Generated_Source\PSoC4/PWM.c **** *  None
1409:Generated_Source\PSoC4/PWM.c **** *
1410:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1411:Generated_Source\PSoC4/PWM.c **** void PWM_SetInterrupt(uint32 interruptMask)
1412:Generated_Source\PSoC4/PWM.c **** {
 1427              		.loc 1 1412 0
 1428              		.cfi_startproc
 1429              	.LVL94:
1413:Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_SET_REG = interruptMask;
 1430              		.loc 1 1413 0
 1431 0000 014B     		ldr	r3, .L120
 1432 0002 1860     		str	r0, [r3]
1414:Generated_Source\PSoC4/PWM.c **** }
 1433              		.loc 1 1414 0
 1434              		@ sp needed
 1435 0004 7047     		bx	lr
 1436              	.L121:
 1437 0006 C046     		.align	2
 1438              	.L120:
 1439 0008 34010540 		.word	1074069812
 1440              		.cfi_endproc
 1441              	.LFE39:
 1442              		.size	PWM_SetInterrupt, .-PWM_SetInterrupt
 1443              		.global	PWM_initVar
 1444              		.bss
 1445              		.set	.LANCHOR0,. + 0
 1446              		.type	PWM_initVar, %object
 1447              		.size	PWM_initVar, 1
 1448              	PWM_initVar:
 1449 0000 00       		.space	1
 1450              		.text
 1451              	.Letext0:
 1452              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1453              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 1454              		.section	.debug_info,"",%progbits
 1455              	.Ldebug_info0:
 1456 0000 02090000 		.4byte	0x902
 1457 0004 0400     		.2byte	0x4
 1458 0006 00000000 		.4byte	.Ldebug_abbrev0
 1459 000a 04       		.byte	0x4
 1460 000b 01       		.uleb128 0x1
 1461 000c ED020000 		.4byte	.LASF76
 1462 0010 01       		.byte	0x1
 1463 0011 83000000 		.4byte	.LASF77
 1464 0015 85010000 		.4byte	.LASF78
 1465 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1466 001d 00000000 		.4byte	0
 1467 0021 00000000 		.4byte	.Ldebug_line0
 1468 0025 02       		.uleb128 0x2
 1469 0026 01       		.byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 52


 1470 0027 06       		.byte	0x6
 1471 0028 BE000000 		.4byte	.LASF0
 1472 002c 02       		.uleb128 0x2
 1473 002d 01       		.byte	0x1
 1474 002e 08       		.byte	0x8
 1475 002f AD030000 		.4byte	.LASF1
 1476 0033 02       		.uleb128 0x2
 1477 0034 02       		.byte	0x2
 1478 0035 05       		.byte	0x5
 1479 0036 E4030000 		.4byte	.LASF2
 1480 003a 02       		.uleb128 0x2
 1481 003b 02       		.byte	0x2
 1482 003c 07       		.byte	0x7
 1483 003d 25020000 		.4byte	.LASF3
 1484 0041 02       		.uleb128 0x2
 1485 0042 04       		.byte	0x4
 1486 0043 05       		.byte	0x5
 1487 0044 06010000 		.4byte	.LASF4
 1488 0048 02       		.uleb128 0x2
 1489 0049 04       		.byte	0x4
 1490 004a 07       		.byte	0x7
 1491 004b F3010000 		.4byte	.LASF5
 1492 004f 02       		.uleb128 0x2
 1493 0050 08       		.byte	0x8
 1494 0051 05       		.byte	0x5
 1495 0052 B0000000 		.4byte	.LASF6
 1496 0056 02       		.uleb128 0x2
 1497 0057 08       		.byte	0x8
 1498 0058 07       		.byte	0x7
 1499 0059 41000000 		.4byte	.LASF7
 1500 005d 03       		.uleb128 0x3
 1501 005e 04       		.byte	0x4
 1502 005f 05       		.byte	0x5
 1503 0060 696E7400 		.ascii	"int\000"
 1504 0064 02       		.uleb128 0x2
 1505 0065 04       		.byte	0x4
 1506 0066 07       		.byte	0x7
 1507 0067 CB010000 		.4byte	.LASF8
 1508 006b 04       		.uleb128 0x4
 1509 006c 0F010000 		.4byte	.LASF9
 1510 0070 02       		.byte	0x2
 1511 0071 9801     		.2byte	0x198
 1512 0073 2C000000 		.4byte	0x2c
 1513 0077 04       		.uleb128 0x4
 1514 0078 5C010000 		.4byte	.LASF10
 1515 007c 02       		.byte	0x2
 1516 007d 9A01     		.2byte	0x19a
 1517 007f 48000000 		.4byte	0x48
 1518 0083 02       		.uleb128 0x2
 1519 0084 04       		.byte	0x4
 1520 0085 04       		.byte	0x4
 1521 0086 7B030000 		.4byte	.LASF11
 1522 008a 02       		.uleb128 0x2
 1523 008b 08       		.byte	0x8
 1524 008c 04       		.byte	0x4
 1525 008d 15010000 		.4byte	.LASF12
 1526 0091 02       		.uleb128 0x2
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 53


 1527 0092 01       		.byte	0x1
 1528 0093 08       		.byte	0x8
 1529 0094 44040000 		.4byte	.LASF13
 1530 0098 04       		.uleb128 0x4
 1531 0099 8B020000 		.4byte	.LASF14
 1532 009d 02       		.byte	0x2
 1533 009e 4402     		.2byte	0x244
 1534 00a0 A4000000 		.4byte	0xa4
 1535 00a4 05       		.uleb128 0x5
 1536 00a5 77000000 		.4byte	0x77
 1537 00a9 02       		.uleb128 0x2
 1538 00aa 04       		.byte	0x4
 1539 00ab 07       		.byte	0x7
 1540 00ac AC020000 		.4byte	.LASF15
 1541 00b0 06       		.uleb128 0x6
 1542 00b1 42010000 		.4byte	.LASF16
 1543 00b5 01       		.byte	0x1
 1544 00b6 0001     		.2byte	0x100
 1545 00b8 00000000 		.4byte	.LFB3
 1546 00bc 1C000000 		.4byte	.LFE3-.LFB3
 1547 00c0 01       		.uleb128 0x1
 1548 00c1 9C       		.byte	0x9c
 1549 00c2 E9000000 		.4byte	0xe9
 1550 00c6 07       		.uleb128 0x7
 1551 00c7 A5040000 		.4byte	.LASF18
 1552 00cb 01       		.byte	0x1
 1553 00cc 0201     		.2byte	0x102
 1554 00ce 6B000000 		.4byte	0x6b
 1555 00d2 00000000 		.4byte	.LLST0
 1556 00d6 08       		.uleb128 0x8
 1557 00d7 06000000 		.4byte	.LVL0
 1558 00db ED080000 		.4byte	0x8ed
 1559 00df 08       		.uleb128 0x8
 1560 00e0 14000000 		.4byte	.LVL1
 1561 00e4 F8080000 		.4byte	0x8f8
 1562 00e8 00       		.byte	0
 1563 00e9 06       		.uleb128 0x6
 1564 00ea D6040000 		.4byte	.LASF17
 1565 00ee 01       		.byte	0x1
 1566 00ef 2501     		.2byte	0x125
 1567 00f1 00000000 		.4byte	.LFB4
 1568 00f5 28000000 		.4byte	.LFE4-.LFB4
 1569 00f9 01       		.uleb128 0x1
 1570 00fa 9C       		.byte	0x9c
 1571 00fb 32010000 		.4byte	0x132
 1572 00ff 09       		.uleb128 0x9
 1573 0100 49040000 		.4byte	.LASF20
 1574 0104 01       		.byte	0x1
 1575 0105 2501     		.2byte	0x125
 1576 0107 77000000 		.4byte	0x77
 1577 010b 13000000 		.4byte	.LLST1
 1578 010f 07       		.uleb128 0x7
 1579 0110 A5040000 		.4byte	.LASF18
 1580 0114 01       		.byte	0x1
 1581 0115 2701     		.2byte	0x127
 1582 0117 6B000000 		.4byte	0x6b
 1583 011b 3F000000 		.4byte	.LLST2
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 54


 1584 011f 08       		.uleb128 0x8
 1585 0120 08000000 		.4byte	.LVL3
 1586 0124 ED080000 		.4byte	0x8ed
 1587 0128 08       		.uleb128 0x8
 1588 0129 1C000000 		.4byte	.LVL5
 1589 012d F8080000 		.4byte	0x8f8
 1590 0131 00       		.byte	0
 1591 0132 06       		.uleb128 0x6
 1592 0133 36040000 		.4byte	.LASF19
 1593 0137 01       		.byte	0x1
 1594 0138 4601     		.2byte	0x146
 1595 013a 00000000 		.4byte	.LFB5
 1596 013e 28000000 		.4byte	.LFE5-.LFB5
 1597 0142 01       		.uleb128 0x1
 1598 0143 9C       		.byte	0x9c
 1599 0144 7B010000 		.4byte	0x17b
 1600 0148 09       		.uleb128 0x9
 1601 0149 6B000000 		.4byte	.LASF21
 1602 014d 01       		.byte	0x1
 1603 014e 4601     		.2byte	0x146
 1604 0150 77000000 		.4byte	0x77
 1605 0154 52000000 		.4byte	.LLST3
 1606 0158 07       		.uleb128 0x7
 1607 0159 A5040000 		.4byte	.LASF18
 1608 015d 01       		.byte	0x1
 1609 015e 4801     		.2byte	0x148
 1610 0160 6B000000 		.4byte	0x6b
 1611 0164 7E000000 		.4byte	.LLST4
 1612 0168 08       		.uleb128 0x8
 1613 0169 08000000 		.4byte	.LVL7
 1614 016d ED080000 		.4byte	0x8ed
 1615 0171 08       		.uleb128 0x8
 1616 0172 1C000000 		.4byte	.LVL9
 1617 0176 F8080000 		.4byte	0x8f8
 1618 017a 00       		.byte	0
 1619 017b 06       		.uleb128 0x6
 1620 017c 38020000 		.4byte	.LASF22
 1621 0180 01       		.byte	0x1
 1622 0181 6B01     		.2byte	0x16b
 1623 0183 00000000 		.4byte	.LFB6
 1624 0187 28000000 		.4byte	.LFE6-.LFB6
 1625 018b 01       		.uleb128 0x1
 1626 018c 9C       		.byte	0x9c
 1627 018d C4010000 		.4byte	0x1c4
 1628 0191 09       		.uleb128 0x9
 1629 0192 81030000 		.4byte	.LASF23
 1630 0196 01       		.byte	0x1
 1631 0197 6B01     		.2byte	0x16b
 1632 0199 77000000 		.4byte	0x77
 1633 019d 91000000 		.4byte	.LLST5
 1634 01a1 07       		.uleb128 0x7
 1635 01a2 A5040000 		.4byte	.LASF18
 1636 01a6 01       		.byte	0x1
 1637 01a7 6D01     		.2byte	0x16d
 1638 01a9 6B000000 		.4byte	0x6b
 1639 01ad BD000000 		.4byte	.LLST6
 1640 01b1 08       		.uleb128 0x8
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 55


 1641 01b2 08000000 		.4byte	.LVL11
 1642 01b6 ED080000 		.4byte	0x8ed
 1643 01ba 08       		.uleb128 0x8
 1644 01bb 1C000000 		.4byte	.LVL13
 1645 01bf F8080000 		.4byte	0x8f8
 1646 01c3 00       		.byte	0
 1647 01c4 06       		.uleb128 0x6
 1648 01c5 CC020000 		.4byte	.LASF24
 1649 01c9 01       		.byte	0x1
 1650 01ca 8B01     		.2byte	0x18b
 1651 01cc 00000000 		.4byte	.LFB7
 1652 01d0 2C000000 		.4byte	.LFE7-.LFB7
 1653 01d4 01       		.uleb128 0x1
 1654 01d5 9C       		.byte	0x9c
 1655 01d6 0D020000 		.4byte	0x20d
 1656 01da 09       		.uleb128 0x9
 1657 01db 49020000 		.4byte	.LASF25
 1658 01df 01       		.byte	0x1
 1659 01e0 8B01     		.2byte	0x18b
 1660 01e2 77000000 		.4byte	0x77
 1661 01e6 D0000000 		.4byte	.LLST7
 1662 01ea 07       		.uleb128 0x7
 1663 01eb A5040000 		.4byte	.LASF18
 1664 01ef 01       		.byte	0x1
 1665 01f0 8D01     		.2byte	0x18d
 1666 01f2 6B000000 		.4byte	0x6b
 1667 01f6 FC000000 		.4byte	.LLST8
 1668 01fa 08       		.uleb128 0x8
 1669 01fb 08000000 		.4byte	.LVL15
 1670 01ff ED080000 		.4byte	0x8ed
 1671 0203 08       		.uleb128 0x8
 1672 0204 22000000 		.4byte	.LVL17
 1673 0208 F8080000 		.4byte	0x8f8
 1674 020c 00       		.byte	0
 1675 020d 06       		.uleb128 0x6
 1676 020e D5030000 		.4byte	.LASF26
 1677 0212 01       		.byte	0x1
 1678 0213 C101     		.2byte	0x1c1
 1679 0215 00000000 		.4byte	.LFB8
 1680 0219 10000000 		.4byte	.LFE8-.LFB8
 1681 021d 01       		.uleb128 0x1
 1682 021e 9C       		.byte	0x9c
 1683 021f 34020000 		.4byte	0x234
 1684 0223 09       		.uleb128 0x9
 1685 0224 05020000 		.4byte	.LASF27
 1686 0228 01       		.byte	0x1
 1687 0229 C101     		.2byte	0x1c1
 1688 022b 77000000 		.4byte	0x77
 1689 022f 0F010000 		.4byte	.LLST9
 1690 0233 00       		.byte	0
 1691 0234 06       		.uleb128 0x6
 1692 0235 27000000 		.4byte	.LASF28
 1693 0239 01       		.byte	0x1
 1694 023a E501     		.2byte	0x1e5
 1695 023c 00000000 		.4byte	.LFB9
 1696 0240 28000000 		.4byte	.LFE9-.LFB9
 1697 0244 01       		.uleb128 0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 56


 1698 0245 9C       		.byte	0x9c
 1699 0246 7D020000 		.4byte	0x27d
 1700 024a 09       		.uleb128 0x9
 1701 024b B5020000 		.4byte	.LASF29
 1702 024f 01       		.byte	0x1
 1703 0250 E501     		.2byte	0x1e5
 1704 0252 77000000 		.4byte	0x77
 1705 0256 30010000 		.4byte	.LLST10
 1706 025a 07       		.uleb128 0x7
 1707 025b A5040000 		.4byte	.LASF18
 1708 025f 01       		.byte	0x1
 1709 0260 E701     		.2byte	0x1e7
 1710 0262 6B000000 		.4byte	0x6b
 1711 0266 5C010000 		.4byte	.LLST11
 1712 026a 08       		.uleb128 0x8
 1713 026b 08000000 		.4byte	.LVL21
 1714 026f ED080000 		.4byte	0x8ed
 1715 0273 08       		.uleb128 0x8
 1716 0274 22000000 		.4byte	.LVL23
 1717 0278 F8080000 		.4byte	0x8f8
 1718 027c 00       		.byte	0
 1719 027d 06       		.uleb128 0x6
 1720 027e E2040000 		.4byte	.LASF30
 1721 0282 01       		.byte	0x1
 1722 0283 0702     		.2byte	0x207
 1723 0285 00000000 		.4byte	.LFB10
 1724 0289 28000000 		.4byte	.LFE10-.LFB10
 1725 028d 01       		.uleb128 0x1
 1726 028e 9C       		.byte	0x9c
 1727 028f C6020000 		.4byte	0x2c6
 1728 0293 09       		.uleb128 0x9
 1729 0294 C4030000 		.4byte	.LASF31
 1730 0298 01       		.byte	0x1
 1731 0299 0702     		.2byte	0x207
 1732 029b 77000000 		.4byte	0x77
 1733 029f 6F010000 		.4byte	.LLST12
 1734 02a3 07       		.uleb128 0x7
 1735 02a4 A5040000 		.4byte	.LASF18
 1736 02a8 01       		.byte	0x1
 1737 02a9 0902     		.2byte	0x209
 1738 02ab 6B000000 		.4byte	0x6b
 1739 02af 9B010000 		.4byte	.LLST13
 1740 02b3 08       		.uleb128 0x8
 1741 02b4 08000000 		.4byte	.LVL25
 1742 02b8 ED080000 		.4byte	0x8ed
 1743 02bc 08       		.uleb128 0x8
 1744 02bd 22000000 		.4byte	.LVL27
 1745 02c1 F8080000 		.4byte	0x8f8
 1746 02c5 00       		.byte	0
 1747 02c6 06       		.uleb128 0x6
 1748 02c7 D8010000 		.4byte	.LASF32
 1749 02cb 01       		.byte	0x1
 1750 02cc 2802     		.2byte	0x228
 1751 02ce 00000000 		.4byte	.LFB11
 1752 02d2 2C000000 		.4byte	.LFE11-.LFB11
 1753 02d6 01       		.uleb128 0x1
 1754 02d7 9C       		.byte	0x9c
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 57


 1755 02d8 0F030000 		.4byte	0x30f
 1756 02dc 09       		.uleb128 0x9
 1757 02dd B2010000 		.4byte	.LASF33
 1758 02e1 01       		.byte	0x1
 1759 02e2 2802     		.2byte	0x228
 1760 02e4 77000000 		.4byte	0x77
 1761 02e8 AE010000 		.4byte	.LLST14
 1762 02ec 07       		.uleb128 0x7
 1763 02ed A5040000 		.4byte	.LASF18
 1764 02f1 01       		.byte	0x1
 1765 02f2 2A02     		.2byte	0x22a
 1766 02f4 6B000000 		.4byte	0x6b
 1767 02f8 DA010000 		.4byte	.LLST15
 1768 02fc 08       		.uleb128 0x8
 1769 02fd 08000000 		.4byte	.LVL29
 1770 0301 ED080000 		.4byte	0x8ed
 1771 0305 08       		.uleb128 0x8
 1772 0306 20000000 		.4byte	.LVL31
 1773 030a F8080000 		.4byte	0x8f8
 1774 030e 00       		.byte	0
 1775 030f 06       		.uleb128 0x6
 1776 0310 4B010000 		.4byte	.LASF34
 1777 0314 01       		.byte	0x1
 1778 0315 4902     		.2byte	0x249
 1779 0317 00000000 		.4byte	.LFB12
 1780 031b 28000000 		.4byte	.LFE12-.LFB12
 1781 031f 01       		.uleb128 0x1
 1782 0320 9C       		.byte	0x9c
 1783 0321 58030000 		.4byte	0x358
 1784 0325 09       		.uleb128 0x9
 1785 0326 80010000 		.4byte	.LASF35
 1786 032a 01       		.byte	0x1
 1787 032b 4902     		.2byte	0x249
 1788 032d 77000000 		.4byte	0x77
 1789 0331 ED010000 		.4byte	.LLST16
 1790 0335 07       		.uleb128 0x7
 1791 0336 A5040000 		.4byte	.LASF18
 1792 033a 01       		.byte	0x1
 1793 033b 4B02     		.2byte	0x24b
 1794 033d 6B000000 		.4byte	0x6b
 1795 0341 19020000 		.4byte	.LLST17
 1796 0345 08       		.uleb128 0x8
 1797 0346 08000000 		.4byte	.LVL33
 1798 034a ED080000 		.4byte	0x8ed
 1799 034e 08       		.uleb128 0x8
 1800 034f 1C000000 		.4byte	.LVL35
 1801 0353 F8080000 		.4byte	0x8f8
 1802 0357 00       		.byte	0
 1803 0358 06       		.uleb128 0x6
 1804 0359 72000000 		.4byte	.LASF36
 1805 035d 01       		.byte	0x1
 1806 035e 6702     		.2byte	0x267
 1807 0360 00000000 		.4byte	.LFB13
 1808 0364 10000000 		.4byte	.LFE13-.LFB13
 1809 0368 01       		.uleb128 0x1
 1810 0369 9C       		.byte	0x9c
 1811 036a 7F030000 		.4byte	0x37f
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 58


 1812 036e 09       		.uleb128 0x9
 1813 036f 00000000 		.4byte	.LASF37
 1814 0373 01       		.byte	0x1
 1815 0374 6702     		.2byte	0x267
 1816 0376 77000000 		.4byte	0x77
 1817 037a 2C020000 		.4byte	.LLST18
 1818 037e 00       		.byte	0
 1819 037f 0A       		.uleb128 0xa
 1820 0380 A0000000 		.4byte	.LASF42
 1821 0384 01       		.byte	0x1
 1822 0385 7B02     		.2byte	0x27b
 1823 0387 77000000 		.4byte	0x77
 1824 038b 00000000 		.4byte	.LFB14
 1825 038f 10000000 		.4byte	.LFE14-.LFB14
 1826 0393 01       		.uleb128 0x1
 1827 0394 9C       		.byte	0x9c
 1828 0395 06       		.uleb128 0x6
 1829 0396 19050000 		.4byte	.LASF38
 1830 039a 01       		.byte	0x1
 1831 039b 9802     		.2byte	0x298
 1832 039d 00000000 		.4byte	.LFB15
 1833 03a1 28000000 		.4byte	.LFE15-.LFB15
 1834 03a5 01       		.uleb128 0x1
 1835 03a6 9C       		.byte	0x9c
 1836 03a7 DE030000 		.4byte	0x3de
 1837 03ab 09       		.uleb128 0x9
 1838 03ac 71040000 		.4byte	.LASF39
 1839 03b0 01       		.byte	0x1
 1840 03b1 9802     		.2byte	0x298
 1841 03b3 77000000 		.4byte	0x77
 1842 03b7 4D020000 		.4byte	.LLST19
 1843 03bb 07       		.uleb128 0x7
 1844 03bc A5040000 		.4byte	.LASF18
 1845 03c0 01       		.byte	0x1
 1846 03c1 9A02     		.2byte	0x29a
 1847 03c3 6B000000 		.4byte	0x6b
 1848 03c7 79020000 		.4byte	.LLST20
 1849 03cb 08       		.uleb128 0x8
 1850 03cc 08000000 		.4byte	.LVL39
 1851 03d0 ED080000 		.4byte	0x8ed
 1852 03d4 08       		.uleb128 0x8
 1853 03d5 1C000000 		.4byte	.LVL41
 1854 03d9 F8080000 		.4byte	0x8f8
 1855 03dd 00       		.byte	0
 1856 03de 06       		.uleb128 0x6
 1857 03df 7B020000 		.4byte	.LASF40
 1858 03e3 01       		.byte	0x1
 1859 03e4 B502     		.2byte	0x2b5
 1860 03e6 00000000 		.4byte	.LFB16
 1861 03ea 10000000 		.4byte	.LFE16-.LFB16
 1862 03ee 01       		.uleb128 0x1
 1863 03ef 9C       		.byte	0x9c
 1864 03f0 05040000 		.4byte	0x405
 1865 03f4 09       		.uleb128 0x9
 1866 03f5 3A000000 		.4byte	.LASF41
 1867 03f9 01       		.byte	0x1
 1868 03fa B502     		.2byte	0x2b5
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 59


 1869 03fc 77000000 		.4byte	0x77
 1870 0400 8C020000 		.4byte	.LLST21
 1871 0404 00       		.byte	0
 1872 0405 0A       		.uleb128 0xa
 1873 0406 9D020000 		.4byte	.LASF43
 1874 040a 01       		.byte	0x1
 1875 040b C902     		.2byte	0x2c9
 1876 040d 77000000 		.4byte	0x77
 1877 0411 00000000 		.4byte	.LFB17
 1878 0415 10000000 		.4byte	.LFE17-.LFB17
 1879 0419 01       		.uleb128 0x1
 1880 041a 9C       		.byte	0x9c
 1881 041b 06       		.uleb128 0x6
 1882 041c 2F010000 		.4byte	.LASF44
 1883 0420 01       		.byte	0x1
 1884 0421 E302     		.2byte	0x2e3
 1885 0423 00000000 		.4byte	.LFB18
 1886 0427 24000000 		.4byte	.LFE18-.LFB18
 1887 042b 01       		.uleb128 0x1
 1888 042c 9C       		.byte	0x9c
 1889 042d 64040000 		.4byte	0x464
 1890 0431 09       		.uleb128 0x9
 1891 0432 F7040000 		.4byte	.LASF45
 1892 0436 01       		.byte	0x1
 1893 0437 E302     		.2byte	0x2e3
 1894 0439 77000000 		.4byte	0x77
 1895 043d AD020000 		.4byte	.LLST22
 1896 0441 07       		.uleb128 0x7
 1897 0442 A5040000 		.4byte	.LASF18
 1898 0446 01       		.byte	0x1
 1899 0447 E502     		.2byte	0x2e5
 1900 0449 6B000000 		.4byte	0x6b
 1901 044d D9020000 		.4byte	.LLST23
 1902 0451 08       		.uleb128 0x8
 1903 0452 08000000 		.4byte	.LVL45
 1904 0456 ED080000 		.4byte	0x8ed
 1905 045a 08       		.uleb128 0x8
 1906 045b 1E000000 		.4byte	.LVL47
 1907 045f F8080000 		.4byte	0x8f8
 1908 0463 00       		.byte	0
 1909 0464 06       		.uleb128 0x6
 1910 0465 23040000 		.4byte	.LASF46
 1911 0469 01       		.byte	0x1
 1912 046a FE02     		.2byte	0x2fe
 1913 046c 00000000 		.4byte	.LFB19
 1914 0470 10000000 		.4byte	.LFE19-.LFB19
 1915 0474 01       		.uleb128 0x1
 1916 0475 9C       		.byte	0x9c
 1917 0476 8B040000 		.4byte	0x48b
 1918 047a 09       		.uleb128 0x9
 1919 047b 88040000 		.4byte	.LASF47
 1920 047f 01       		.byte	0x1
 1921 0480 FE02     		.2byte	0x2fe
 1922 0482 77000000 		.4byte	0x77
 1923 0486 EC020000 		.4byte	.LLST24
 1924 048a 00       		.byte	0
 1925 048b 0A       		.uleb128 0xa
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 60


 1926 048c DB020000 		.4byte	.LASF48
 1927 0490 01       		.byte	0x1
 1928 0491 1203     		.2byte	0x312
 1929 0493 77000000 		.4byte	0x77
 1930 0497 00000000 		.4byte	.LFB20
 1931 049b 10000000 		.4byte	.LFE20-.LFB20
 1932 049f 01       		.uleb128 0x1
 1933 04a0 9C       		.byte	0x9c
 1934 04a1 06       		.uleb128 0x6
 1935 04a2 9B030000 		.4byte	.LASF49
 1936 04a6 01       		.byte	0x1
 1937 04a7 2C03     		.2byte	0x32c
 1938 04a9 00000000 		.4byte	.LFB21
 1939 04ad 28000000 		.4byte	.LFE21-.LFB21
 1940 04b1 01       		.uleb128 0x1
 1941 04b2 9C       		.byte	0x9c
 1942 04b3 EA040000 		.4byte	0x4ea
 1943 04b7 09       		.uleb128 0x9
 1944 04b8 F7040000 		.4byte	.LASF45
 1945 04bc 01       		.byte	0x1
 1946 04bd 2C03     		.2byte	0x32c
 1947 04bf 77000000 		.4byte	0x77
 1948 04c3 0D030000 		.4byte	.LLST25
 1949 04c7 07       		.uleb128 0x7
 1950 04c8 A5040000 		.4byte	.LASF18
 1951 04cc 01       		.byte	0x1
 1952 04cd 2E03     		.2byte	0x32e
 1953 04cf 6B000000 		.4byte	0x6b
 1954 04d3 39030000 		.4byte	.LLST26
 1955 04d7 08       		.uleb128 0x8
 1956 04d8 08000000 		.4byte	.LVL51
 1957 04dc ED080000 		.4byte	0x8ed
 1958 04e0 08       		.uleb128 0x8
 1959 04e1 22000000 		.4byte	.LVL53
 1960 04e5 F8080000 		.4byte	0x8f8
 1961 04e9 00       		.byte	0
 1962 04ea 06       		.uleb128 0x6
 1963 04eb 6A020000 		.4byte	.LASF50
 1964 04ef 01       		.byte	0x1
 1965 04f0 5103     		.2byte	0x351
 1966 04f2 00000000 		.4byte	.LFB22
 1967 04f6 10000000 		.4byte	.LFE22-.LFB22
 1968 04fa 01       		.uleb128 0x1
 1969 04fb 9C       		.byte	0x9c
 1970 04fc 11050000 		.4byte	0x511
 1971 0500 09       		.uleb128 0x9
 1972 0501 C4020000 		.4byte	.LASF51
 1973 0505 01       		.byte	0x1
 1974 0506 5103     		.2byte	0x351
 1975 0508 77000000 		.4byte	0x77
 1976 050c 4C030000 		.4byte	.LLST27
 1977 0510 00       		.byte	0
 1978 0511 0A       		.uleb128 0xa
 1979 0512 2C050000 		.4byte	.LASF52
 1980 0516 01       		.byte	0x1
 1981 0517 8403     		.2byte	0x384
 1982 0519 77000000 		.4byte	0x77
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 61


 1983 051d 00000000 		.4byte	.LFB23
 1984 0521 10000000 		.4byte	.LFE23-.LFB23
 1985 0525 01       		.uleb128 0x1
 1986 0526 9C       		.byte	0x9c
 1987 0527 06       		.uleb128 0x6
 1988 0528 CA000000 		.4byte	.LASF53
 1989 052c 01       		.byte	0x1
 1990 052d BA03     		.2byte	0x3ba
 1991 052f 00000000 		.4byte	.LFB24
 1992 0533 10000000 		.4byte	.LFE24-.LFB24
 1993 0537 01       		.uleb128 0x1
 1994 0538 9C       		.byte	0x9c
 1995 0539 4E050000 		.4byte	0x54e
 1996 053d 09       		.uleb128 0x9
 1997 053e 7D040000 		.4byte	.LASF54
 1998 0542 01       		.byte	0x1
 1999 0543 BA03     		.2byte	0x3ba
 2000 0545 77000000 		.4byte	0x77
 2001 0549 6D030000 		.4byte	.LLST28
 2002 054d 00       		.byte	0
 2003 054e 0A       		.uleb128 0xa
 2004 054f 1C010000 		.4byte	.LASF55
 2005 0553 01       		.byte	0x1
 2006 0554 E803     		.2byte	0x3e8
 2007 0556 77000000 		.4byte	0x77
 2008 055a 00000000 		.4byte	.LFB25
 2009 055e 10000000 		.4byte	.LFE25-.LFB25
 2010 0562 01       		.uleb128 0x1
 2011 0563 9C       		.byte	0x9c
 2012 0564 0A       		.uleb128 0xa
 2013 0565 8B030000 		.4byte	.LASF56
 2014 0569 01       		.byte	0x1
 2015 056a 1604     		.2byte	0x416
 2016 056c 77000000 		.4byte	0x77
 2017 0570 00000000 		.4byte	.LFB26
 2018 0574 10000000 		.4byte	.LFE26-.LFB26
 2019 0578 01       		.uleb128 0x1
 2020 0579 9C       		.byte	0x9c
 2021 057a 0A       		.uleb128 0xa
 2022 057b 92040000 		.4byte	.LASF57
 2023 057f 01       		.byte	0x1
 2024 0580 2B04     		.2byte	0x42b
 2025 0582 77000000 		.4byte	0x77
 2026 0586 00000000 		.4byte	.LFB27
 2027 058a 10000000 		.4byte	.LFE27-.LFB27
 2028 058e 01       		.uleb128 0x1
 2029 058f 9C       		.byte	0x9c
 2030 0590 06       		.uleb128 0x6
 2031 0591 58000000 		.4byte	.LASF58
 2032 0595 01       		.byte	0x1
 2033 0596 4604     		.2byte	0x446
 2034 0598 00000000 		.4byte	.LFB28
 2035 059c 24000000 		.4byte	.LFE28-.LFB28
 2036 05a0 01       		.uleb128 0x1
 2037 05a1 9C       		.byte	0x9c
 2038 05a2 D9050000 		.4byte	0x5d9
 2039 05a6 09       		.uleb128 0x9
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 62


 2040 05a7 74010000 		.4byte	.LASF59
 2041 05ab 01       		.byte	0x1
 2042 05ac 4604     		.2byte	0x446
 2043 05ae 77000000 		.4byte	0x77
 2044 05b2 8E030000 		.4byte	.LLST29
 2045 05b6 07       		.uleb128 0x7
 2046 05b7 A5040000 		.4byte	.LASF18
 2047 05bb 01       		.byte	0x1
 2048 05bc 4804     		.2byte	0x448
 2049 05be 6B000000 		.4byte	0x6b
 2050 05c2 BA030000 		.4byte	.LLST30
 2051 05c6 08       		.uleb128 0x8
 2052 05c7 08000000 		.4byte	.LVL59
 2053 05cb ED080000 		.4byte	0x8ed
 2054 05cf 08       		.uleb128 0x8
 2055 05d0 1C000000 		.4byte	.LVL61
 2056 05d4 F8080000 		.4byte	0x8f8
 2057 05d8 00       		.byte	0
 2058 05d9 06       		.uleb128 0x6
 2059 05da 5F040000 		.4byte	.LASF60
 2060 05de 01       		.byte	0x1
 2061 05df 6704     		.2byte	0x467
 2062 05e1 00000000 		.4byte	.LFB29
 2063 05e5 24000000 		.4byte	.LFE29-.LFB29
 2064 05e9 01       		.uleb128 0x1
 2065 05ea 9C       		.byte	0x9c
 2066 05eb 22060000 		.4byte	0x622
 2067 05ef 09       		.uleb128 0x9
 2068 05f0 74010000 		.4byte	.LASF59
 2069 05f4 01       		.byte	0x1
 2070 05f5 6704     		.2byte	0x467
 2071 05f7 77000000 		.4byte	0x77
 2072 05fb CD030000 		.4byte	.LLST31
 2073 05ff 07       		.uleb128 0x7
 2074 0600 A5040000 		.4byte	.LASF18
 2075 0604 01       		.byte	0x1
 2076 0605 6904     		.2byte	0x469
 2077 0607 6B000000 		.4byte	0x6b
 2078 060b F9030000 		.4byte	.LLST32
 2079 060f 08       		.uleb128 0x8
 2080 0610 08000000 		.4byte	.LVL63
 2081 0614 ED080000 		.4byte	0x8ed
 2082 0618 08       		.uleb128 0x8
 2083 0619 1E000000 		.4byte	.LVL65
 2084 061d F8080000 		.4byte	0x8f8
 2085 0621 00       		.byte	0
 2086 0622 06       		.uleb128 0x6
 2087 0623 63010000 		.4byte	.LASF61
 2088 0627 01       		.byte	0x1
 2089 0628 8804     		.2byte	0x488
 2090 062a 00000000 		.4byte	.LFB30
 2091 062e 28000000 		.4byte	.LFE30-.LFB30
 2092 0632 01       		.uleb128 0x1
 2093 0633 9C       		.byte	0x9c
 2094 0634 6B060000 		.4byte	0x66b
 2095 0638 09       		.uleb128 0x9
 2096 0639 74010000 		.4byte	.LASF59
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 63


 2097 063d 01       		.byte	0x1
 2098 063e 8804     		.2byte	0x488
 2099 0640 77000000 		.4byte	0x77
 2100 0644 0C040000 		.4byte	.LLST33
 2101 0648 07       		.uleb128 0x7
 2102 0649 A5040000 		.4byte	.LASF18
 2103 064d 01       		.byte	0x1
 2104 064e 8A04     		.2byte	0x48a
 2105 0650 6B000000 		.4byte	0x6b
 2106 0654 38040000 		.4byte	.LLST34
 2107 0658 08       		.uleb128 0x8
 2108 0659 08000000 		.4byte	.LVL67
 2109 065d ED080000 		.4byte	0x8ed
 2110 0661 08       		.uleb128 0x8
 2111 0662 1E000000 		.4byte	.LVL69
 2112 0666 F8080000 		.4byte	0x8f8
 2113 066a 00       		.byte	0
 2114 066b 06       		.uleb128 0x6
 2115 066c BB010000 		.4byte	.LASF62
 2116 0670 01       		.byte	0x1
 2117 0671 A804     		.2byte	0x4a8
 2118 0673 00000000 		.4byte	.LFB31
 2119 0677 24000000 		.4byte	.LFE31-.LFB31
 2120 067b 01       		.uleb128 0x1
 2121 067c 9C       		.byte	0x9c
 2122 067d B4060000 		.4byte	0x6b4
 2123 0681 09       		.uleb128 0x9
 2124 0682 74010000 		.4byte	.LASF59
 2125 0686 01       		.byte	0x1
 2126 0687 A804     		.2byte	0x4a8
 2127 0689 77000000 		.4byte	0x77
 2128 068d 4B040000 		.4byte	.LLST35
 2129 0691 07       		.uleb128 0x7
 2130 0692 A5040000 		.4byte	.LASF18
 2131 0696 01       		.byte	0x1
 2132 0697 AA04     		.2byte	0x4aa
 2133 0699 6B000000 		.4byte	0x6b
 2134 069d 77040000 		.4byte	.LLST36
 2135 06a1 08       		.uleb128 0x8
 2136 06a2 08000000 		.4byte	.LVL71
 2137 06a6 ED080000 		.4byte	0x8ed
 2138 06aa 08       		.uleb128 0x8
 2139 06ab 1E000000 		.4byte	.LVL73
 2140 06af F8080000 		.4byte	0x8f8
 2141 06b3 00       		.byte	0
 2142 06b4 06       		.uleb128 0x6
 2143 06b5 C5040000 		.4byte	.LASF63
 2144 06b9 01       		.byte	0x1
 2145 06ba C904     		.2byte	0x4c9
 2146 06bc 00000000 		.4byte	.LFB32
 2147 06c0 24000000 		.4byte	.LFE32-.LFB32
 2148 06c4 01       		.uleb128 0x1
 2149 06c5 9C       		.byte	0x9c
 2150 06c6 FD060000 		.4byte	0x6fd
 2151 06ca 09       		.uleb128 0x9
 2152 06cb 74010000 		.4byte	.LASF59
 2153 06cf 01       		.byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 64


 2154 06d0 C904     		.2byte	0x4c9
 2155 06d2 77000000 		.4byte	0x77
 2156 06d6 8A040000 		.4byte	.LLST37
 2157 06da 07       		.uleb128 0x7
 2158 06db A5040000 		.4byte	.LASF18
 2159 06df 01       		.byte	0x1
 2160 06e0 CB04     		.2byte	0x4cb
 2161 06e2 6B000000 		.4byte	0x6b
 2162 06e6 B6040000 		.4byte	.LLST38
 2163 06ea 08       		.uleb128 0x8
 2164 06eb 08000000 		.4byte	.LVL75
 2165 06ef ED080000 		.4byte	0x8ed
 2166 06f3 08       		.uleb128 0x8
 2167 06f4 1E000000 		.4byte	.LVL77
 2168 06f8 F8080000 		.4byte	0x8f8
 2169 06fc 00       		.byte	0
 2170 06fd 06       		.uleb128 0x6
 2171 06fe 57020000 		.4byte	.LASF64
 2172 0702 01       		.byte	0x1
 2173 0703 F104     		.2byte	0x4f1
 2174 0705 00000000 		.4byte	.LFB33
 2175 0709 1C000000 		.4byte	.LFE33-.LFB33
 2176 070d 01       		.uleb128 0x1
 2177 070e 9C       		.byte	0x9c
 2178 070f 56070000 		.4byte	0x756
 2179 0713 09       		.uleb128 0x9
 2180 0714 80010000 		.4byte	.LASF35
 2181 0718 01       		.byte	0x1
 2182 0719 F104     		.2byte	0x4f1
 2183 071b 77000000 		.4byte	0x77
 2184 071f C9040000 		.4byte	.LLST39
 2185 0723 09       		.uleb128 0x9
 2186 0724 EB010000 		.4byte	.LASF65
 2187 0728 01       		.byte	0x1
 2188 0729 F104     		.2byte	0x4f1
 2189 072b 77000000 		.4byte	0x77
 2190 072f F5040000 		.4byte	.LLST40
 2191 0733 07       		.uleb128 0x7
 2192 0734 A5040000 		.4byte	.LASF18
 2193 0738 01       		.byte	0x1
 2194 0739 F304     		.2byte	0x4f3
 2195 073b 6B000000 		.4byte	0x6b
 2196 073f 21050000 		.4byte	.LLST41
 2197 0743 08       		.uleb128 0x8
 2198 0744 0A000000 		.4byte	.LVL79
 2199 0748 ED080000 		.4byte	0x8ed
 2200 074c 08       		.uleb128 0x8
 2201 074d 14000000 		.4byte	.LVL81
 2202 0751 F8080000 		.4byte	0x8f8
 2203 0755 00       		.byte	0
 2204 0756 0B       		.uleb128 0xb
 2205 0757 06000000 		.4byte	.LASF66
 2206 075b 01       		.byte	0x1
 2207 075c B1       		.byte	0xb1
 2208 075d 00000000 		.4byte	.LFB1
 2209 0761 24000000 		.4byte	.LFE1-.LFB1
 2210 0765 01       		.uleb128 0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 65


 2211 0766 9C       		.byte	0x9c
 2212 0767 A1070000 		.4byte	0x7a1
 2213 076b 0C       		.uleb128 0xc
 2214 076c A5040000 		.4byte	.LASF18
 2215 0770 01       		.byte	0x1
 2216 0771 B3       		.byte	0xb3
 2217 0772 6B000000 		.4byte	0x6b
 2218 0776 34050000 		.4byte	.LLST42
 2219 077a 08       		.uleb128 0x8
 2220 077b 06000000 		.4byte	.LVL83
 2221 077f ED080000 		.4byte	0x8ed
 2222 0783 08       		.uleb128 0x8
 2223 0784 14000000 		.4byte	.LVL84
 2224 0788 F8080000 		.4byte	0x8f8
 2225 078c 0D       		.uleb128 0xd
 2226 078d 1C000000 		.4byte	.LVL85
 2227 0791 FD060000 		.4byte	0x6fd
 2228 0795 0E       		.uleb128 0xe
 2229 0796 01       		.uleb128 0x1
 2230 0797 51       		.byte	0x51
 2231 0798 01       		.uleb128 0x1
 2232 0799 48       		.byte	0x48
 2233 079a 0E       		.uleb128 0xe
 2234 079b 01       		.uleb128 0x1
 2235 079c 50       		.byte	0x50
 2236 079d 01       		.uleb128 0x1
 2237 079e 31       		.byte	0x31
 2238 079f 00       		.byte	0
 2239 07a0 00       		.byte	0
 2240 07a1 0A       		.uleb128 0xa
 2241 07a2 B6040000 		.4byte	.LASF67
 2242 07a6 01       		.byte	0x1
 2243 07a7 0E05     		.2byte	0x50e
 2244 07a9 77000000 		.4byte	0x77
 2245 07ad 00000000 		.4byte	.LFB34
 2246 07b1 14000000 		.4byte	.LFE34-.LFB34
 2247 07b5 01       		.uleb128 0x1
 2248 07b6 9C       		.byte	0x9c
 2249 07b7 06       		.uleb128 0x6
 2250 07b8 DE000000 		.4byte	.LASF68
 2251 07bc 01       		.byte	0x1
 2252 07bd 2705     		.2byte	0x527
 2253 07bf 00000000 		.4byte	.LFB35
 2254 07c3 0C000000 		.4byte	.LFE35-.LFB35
 2255 07c7 01       		.uleb128 0x1
 2256 07c8 9C       		.byte	0x9c
 2257 07c9 DC070000 		.4byte	0x7dc
 2258 07cd 0F       		.uleb128 0xf
 2259 07ce 0B040000 		.4byte	.LASF69
 2260 07d2 01       		.byte	0x1
 2261 07d3 2705     		.2byte	0x527
 2262 07d5 77000000 		.4byte	0x77
 2263 07d9 01       		.uleb128 0x1
 2264 07da 50       		.byte	0x50
 2265 07db 00       		.byte	0
 2266 07dc 0B       		.uleb128 0xb
 2267 07dd BB030000 		.4byte	.LASF70
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 66


 2268 07e1 01       		.byte	0x1
 2269 07e2 26       		.byte	0x26
 2270 07e3 00000000 		.4byte	.LFB0
 2271 07e7 54000000 		.4byte	.LFE0-.LFB0
 2272 07eb 01       		.uleb128 0x1
 2273 07ec 9C       		.byte	0x9c
 2274 07ed 3E080000 		.4byte	0x83e
 2275 07f1 10       		.uleb128 0x10
 2276 07f2 14000000 		.4byte	.LVL87
 2277 07f6 58030000 		.4byte	0x358
 2278 07fa 04080000 		.4byte	0x804
 2279 07fe 0E       		.uleb128 0xe
 2280 07ff 01       		.uleb128 0x1
 2281 0800 50       		.byte	0x50
 2282 0801 01       		.uleb128 0x1
 2283 0802 30       		.byte	0x30
 2284 0803 00       		.byte	0
 2285 0804 10       		.uleb128 0x10
 2286 0805 2C000000 		.4byte	.LVL88
 2287 0809 B7070000 		.4byte	0x7b7
 2288 080d 17080000 		.4byte	0x817
 2289 0811 0E       		.uleb128 0xe
 2290 0812 01       		.uleb128 0x1
 2291 0813 50       		.byte	0x50
 2292 0814 01       		.uleb128 0x1
 2293 0815 30       		.byte	0x30
 2294 0816 00       		.byte	0
 2295 0817 10       		.uleb128 0x10
 2296 0818 38000000 		.4byte	.LVL89
 2297 081c DE030000 		.4byte	0x3de
 2298 0820 2C080000 		.4byte	0x82c
 2299 0824 0E       		.uleb128 0xe
 2300 0825 01       		.uleb128 0x1
 2301 0826 50       		.byte	0x50
 2302 0827 03       		.uleb128 0x3
 2303 0828 0A       		.byte	0xa
 2304 0829 E216     		.2byte	0x16e2
 2305 082b 00       		.byte	0
 2306 082c 0D       		.uleb128 0xd
 2307 082d 3E000000 		.4byte	.LVL90
 2308 0831 EA040000 		.4byte	0x4ea
 2309 0835 0E       		.uleb128 0xe
 2310 0836 01       		.uleb128 0x1
 2311 0837 50       		.byte	0x50
 2312 0838 03       		.uleb128 0x3
 2313 0839 0A       		.byte	0xa
 2314 083a 710B     		.2byte	0xb71
 2315 083c 00       		.byte	0
 2316 083d 00       		.byte	0
 2317 083e 0B       		.uleb128 0xb
 2318 083f 19040000 		.4byte	.LASF71
 2319 0843 01       		.byte	0x1
 2320 0844 E6       		.byte	0xe6
 2321 0845 00000000 		.4byte	.LFB2
 2322 0849 20000000 		.4byte	.LFE2-.LFB2
 2323 084d 01       		.uleb128 0x1
 2324 084e 9C       		.byte	0x9c
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 67


 2325 084f 66080000 		.4byte	0x866
 2326 0853 08       		.uleb128 0x8
 2327 0854 0E000000 		.4byte	.LVL91
 2328 0858 DC070000 		.4byte	0x7dc
 2329 085c 08       		.uleb128 0x8
 2330 085d 18000000 		.4byte	.LVL92
 2331 0861 56070000 		.4byte	0x756
 2332 0865 00       		.byte	0
 2333 0866 0A       		.uleb128 0xa
 2334 0867 EE030000 		.4byte	.LASF72
 2335 086b 01       		.byte	0x1
 2336 086c 3E05     		.2byte	0x53e
 2337 086e 77000000 		.4byte	0x77
 2338 0872 00000000 		.4byte	.LFB36
 2339 0876 0C000000 		.4byte	.LFE36-.LFB36
 2340 087a 01       		.uleb128 0x1
 2341 087b 9C       		.byte	0x9c
 2342 087c 0A       		.uleb128 0xa
 2343 087d 02050000 		.4byte	.LASF73
 2344 0881 01       		.byte	0x1
 2345 0882 5505     		.2byte	0x555
 2346 0884 77000000 		.4byte	0x77
 2347 0888 00000000 		.4byte	.LFB37
 2348 088c 0C000000 		.4byte	.LFE37-.LFB37
 2349 0890 01       		.uleb128 0x1
 2350 0891 9C       		.byte	0x9c
 2351 0892 06       		.uleb128 0x6
 2352 0893 F3000000 		.4byte	.LASF74
 2353 0897 01       		.byte	0x1
 2354 0898 6C05     		.2byte	0x56c
 2355 089a 00000000 		.4byte	.LFB38
 2356 089e 0C000000 		.4byte	.LFE38-.LFB38
 2357 08a2 01       		.uleb128 0x1
 2358 08a3 9C       		.byte	0x9c
 2359 08a4 B7080000 		.4byte	0x8b7
 2360 08a8 0F       		.uleb128 0xf
 2361 08a9 0B040000 		.4byte	.LASF69
 2362 08ad 01       		.byte	0x1
 2363 08ae 6C05     		.2byte	0x56c
 2364 08b0 77000000 		.4byte	0x77
 2365 08b4 01       		.uleb128 0x1
 2366 08b5 50       		.byte	0x50
 2367 08b6 00       		.byte	0
 2368 08b7 06       		.uleb128 0x6
 2369 08b8 4E040000 		.4byte	.LASF75
 2370 08bc 01       		.byte	0x1
 2371 08bd 8305     		.2byte	0x583
 2372 08bf 00000000 		.4byte	.LFB39
 2373 08c3 0C000000 		.4byte	.LFE39-.LFB39
 2374 08c7 01       		.uleb128 0x1
 2375 08c8 9C       		.byte	0x9c
 2376 08c9 DC080000 		.4byte	0x8dc
 2377 08cd 0F       		.uleb128 0xf
 2378 08ce 0B040000 		.4byte	.LASF69
 2379 08d2 01       		.byte	0x1
 2380 08d3 8305     		.2byte	0x583
 2381 08d5 77000000 		.4byte	0x77
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 68


 2382 08d9 01       		.uleb128 0x1
 2383 08da 50       		.byte	0x50
 2384 08db 00       		.byte	0
 2385 08dc 11       		.uleb128 0x11
 2386 08dd 91020000 		.4byte	.LASF79
 2387 08e1 01       		.byte	0x1
 2388 08e2 15       		.byte	0x15
 2389 08e3 6B000000 		.4byte	0x6b
 2390 08e7 05       		.uleb128 0x5
 2391 08e8 03       		.byte	0x3
 2392 08e9 00000000 		.4byte	PWM_initVar
 2393 08ed 12       		.uleb128 0x12
 2394 08ee 0E020000 		.4byte	.LASF80
 2395 08f2 03       		.byte	0x3
 2396 08f3 E3       		.byte	0xe3
 2397 08f4 6B000000 		.4byte	0x6b
 2398 08f8 13       		.uleb128 0x13
 2399 08f9 11000000 		.4byte	.LASF81
 2400 08fd 03       		.byte	0x3
 2401 08fe E4       		.byte	0xe4
 2402 08ff 14       		.uleb128 0x14
 2403 0900 6B000000 		.4byte	0x6b
 2404 0904 00       		.byte	0
 2405 0905 00       		.byte	0
 2406              		.section	.debug_abbrev,"",%progbits
 2407              	.Ldebug_abbrev0:
 2408 0000 01       		.uleb128 0x1
 2409 0001 11       		.uleb128 0x11
 2410 0002 01       		.byte	0x1
 2411 0003 25       		.uleb128 0x25
 2412 0004 0E       		.uleb128 0xe
 2413 0005 13       		.uleb128 0x13
 2414 0006 0B       		.uleb128 0xb
 2415 0007 03       		.uleb128 0x3
 2416 0008 0E       		.uleb128 0xe
 2417 0009 1B       		.uleb128 0x1b
 2418 000a 0E       		.uleb128 0xe
 2419 000b 55       		.uleb128 0x55
 2420 000c 17       		.uleb128 0x17
 2421 000d 11       		.uleb128 0x11
 2422 000e 01       		.uleb128 0x1
 2423 000f 10       		.uleb128 0x10
 2424 0010 17       		.uleb128 0x17
 2425 0011 00       		.byte	0
 2426 0012 00       		.byte	0
 2427 0013 02       		.uleb128 0x2
 2428 0014 24       		.uleb128 0x24
 2429 0015 00       		.byte	0
 2430 0016 0B       		.uleb128 0xb
 2431 0017 0B       		.uleb128 0xb
 2432 0018 3E       		.uleb128 0x3e
 2433 0019 0B       		.uleb128 0xb
 2434 001a 03       		.uleb128 0x3
 2435 001b 0E       		.uleb128 0xe
 2436 001c 00       		.byte	0
 2437 001d 00       		.byte	0
 2438 001e 03       		.uleb128 0x3
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 69


 2439 001f 24       		.uleb128 0x24
 2440 0020 00       		.byte	0
 2441 0021 0B       		.uleb128 0xb
 2442 0022 0B       		.uleb128 0xb
 2443 0023 3E       		.uleb128 0x3e
 2444 0024 0B       		.uleb128 0xb
 2445 0025 03       		.uleb128 0x3
 2446 0026 08       		.uleb128 0x8
 2447 0027 00       		.byte	0
 2448 0028 00       		.byte	0
 2449 0029 04       		.uleb128 0x4
 2450 002a 16       		.uleb128 0x16
 2451 002b 00       		.byte	0
 2452 002c 03       		.uleb128 0x3
 2453 002d 0E       		.uleb128 0xe
 2454 002e 3A       		.uleb128 0x3a
 2455 002f 0B       		.uleb128 0xb
 2456 0030 3B       		.uleb128 0x3b
 2457 0031 05       		.uleb128 0x5
 2458 0032 49       		.uleb128 0x49
 2459 0033 13       		.uleb128 0x13
 2460 0034 00       		.byte	0
 2461 0035 00       		.byte	0
 2462 0036 05       		.uleb128 0x5
 2463 0037 35       		.uleb128 0x35
 2464 0038 00       		.byte	0
 2465 0039 49       		.uleb128 0x49
 2466 003a 13       		.uleb128 0x13
 2467 003b 00       		.byte	0
 2468 003c 00       		.byte	0
 2469 003d 06       		.uleb128 0x6
 2470 003e 2E       		.uleb128 0x2e
 2471 003f 01       		.byte	0x1
 2472 0040 3F       		.uleb128 0x3f
 2473 0041 19       		.uleb128 0x19
 2474 0042 03       		.uleb128 0x3
 2475 0043 0E       		.uleb128 0xe
 2476 0044 3A       		.uleb128 0x3a
 2477 0045 0B       		.uleb128 0xb
 2478 0046 3B       		.uleb128 0x3b
 2479 0047 05       		.uleb128 0x5
 2480 0048 27       		.uleb128 0x27
 2481 0049 19       		.uleb128 0x19
 2482 004a 11       		.uleb128 0x11
 2483 004b 01       		.uleb128 0x1
 2484 004c 12       		.uleb128 0x12
 2485 004d 06       		.uleb128 0x6
 2486 004e 40       		.uleb128 0x40
 2487 004f 18       		.uleb128 0x18
 2488 0050 9742     		.uleb128 0x2117
 2489 0052 19       		.uleb128 0x19
 2490 0053 01       		.uleb128 0x1
 2491 0054 13       		.uleb128 0x13
 2492 0055 00       		.byte	0
 2493 0056 00       		.byte	0
 2494 0057 07       		.uleb128 0x7
 2495 0058 34       		.uleb128 0x34
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 70


 2496 0059 00       		.byte	0
 2497 005a 03       		.uleb128 0x3
 2498 005b 0E       		.uleb128 0xe
 2499 005c 3A       		.uleb128 0x3a
 2500 005d 0B       		.uleb128 0xb
 2501 005e 3B       		.uleb128 0x3b
 2502 005f 05       		.uleb128 0x5
 2503 0060 49       		.uleb128 0x49
 2504 0061 13       		.uleb128 0x13
 2505 0062 02       		.uleb128 0x2
 2506 0063 17       		.uleb128 0x17
 2507 0064 00       		.byte	0
 2508 0065 00       		.byte	0
 2509 0066 08       		.uleb128 0x8
 2510 0067 898201   		.uleb128 0x4109
 2511 006a 00       		.byte	0
 2512 006b 11       		.uleb128 0x11
 2513 006c 01       		.uleb128 0x1
 2514 006d 31       		.uleb128 0x31
 2515 006e 13       		.uleb128 0x13
 2516 006f 00       		.byte	0
 2517 0070 00       		.byte	0
 2518 0071 09       		.uleb128 0x9
 2519 0072 05       		.uleb128 0x5
 2520 0073 00       		.byte	0
 2521 0074 03       		.uleb128 0x3
 2522 0075 0E       		.uleb128 0xe
 2523 0076 3A       		.uleb128 0x3a
 2524 0077 0B       		.uleb128 0xb
 2525 0078 3B       		.uleb128 0x3b
 2526 0079 05       		.uleb128 0x5
 2527 007a 49       		.uleb128 0x49
 2528 007b 13       		.uleb128 0x13
 2529 007c 02       		.uleb128 0x2
 2530 007d 17       		.uleb128 0x17
 2531 007e 00       		.byte	0
 2532 007f 00       		.byte	0
 2533 0080 0A       		.uleb128 0xa
 2534 0081 2E       		.uleb128 0x2e
 2535 0082 00       		.byte	0
 2536 0083 3F       		.uleb128 0x3f
 2537 0084 19       		.uleb128 0x19
 2538 0085 03       		.uleb128 0x3
 2539 0086 0E       		.uleb128 0xe
 2540 0087 3A       		.uleb128 0x3a
 2541 0088 0B       		.uleb128 0xb
 2542 0089 3B       		.uleb128 0x3b
 2543 008a 05       		.uleb128 0x5
 2544 008b 27       		.uleb128 0x27
 2545 008c 19       		.uleb128 0x19
 2546 008d 49       		.uleb128 0x49
 2547 008e 13       		.uleb128 0x13
 2548 008f 11       		.uleb128 0x11
 2549 0090 01       		.uleb128 0x1
 2550 0091 12       		.uleb128 0x12
 2551 0092 06       		.uleb128 0x6
 2552 0093 40       		.uleb128 0x40
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 71


 2553 0094 18       		.uleb128 0x18
 2554 0095 9742     		.uleb128 0x2117
 2555 0097 19       		.uleb128 0x19
 2556 0098 00       		.byte	0
 2557 0099 00       		.byte	0
 2558 009a 0B       		.uleb128 0xb
 2559 009b 2E       		.uleb128 0x2e
 2560 009c 01       		.byte	0x1
 2561 009d 3F       		.uleb128 0x3f
 2562 009e 19       		.uleb128 0x19
 2563 009f 03       		.uleb128 0x3
 2564 00a0 0E       		.uleb128 0xe
 2565 00a1 3A       		.uleb128 0x3a
 2566 00a2 0B       		.uleb128 0xb
 2567 00a3 3B       		.uleb128 0x3b
 2568 00a4 0B       		.uleb128 0xb
 2569 00a5 27       		.uleb128 0x27
 2570 00a6 19       		.uleb128 0x19
 2571 00a7 11       		.uleb128 0x11
 2572 00a8 01       		.uleb128 0x1
 2573 00a9 12       		.uleb128 0x12
 2574 00aa 06       		.uleb128 0x6
 2575 00ab 40       		.uleb128 0x40
 2576 00ac 18       		.uleb128 0x18
 2577 00ad 9742     		.uleb128 0x2117
 2578 00af 19       		.uleb128 0x19
 2579 00b0 01       		.uleb128 0x1
 2580 00b1 13       		.uleb128 0x13
 2581 00b2 00       		.byte	0
 2582 00b3 00       		.byte	0
 2583 00b4 0C       		.uleb128 0xc
 2584 00b5 34       		.uleb128 0x34
 2585 00b6 00       		.byte	0
 2586 00b7 03       		.uleb128 0x3
 2587 00b8 0E       		.uleb128 0xe
 2588 00b9 3A       		.uleb128 0x3a
 2589 00ba 0B       		.uleb128 0xb
 2590 00bb 3B       		.uleb128 0x3b
 2591 00bc 0B       		.uleb128 0xb
 2592 00bd 49       		.uleb128 0x49
 2593 00be 13       		.uleb128 0x13
 2594 00bf 02       		.uleb128 0x2
 2595 00c0 17       		.uleb128 0x17
 2596 00c1 00       		.byte	0
 2597 00c2 00       		.byte	0
 2598 00c3 0D       		.uleb128 0xd
 2599 00c4 898201   		.uleb128 0x4109
 2600 00c7 01       		.byte	0x1
 2601 00c8 11       		.uleb128 0x11
 2602 00c9 01       		.uleb128 0x1
 2603 00ca 31       		.uleb128 0x31
 2604 00cb 13       		.uleb128 0x13
 2605 00cc 00       		.byte	0
 2606 00cd 00       		.byte	0
 2607 00ce 0E       		.uleb128 0xe
 2608 00cf 8A8201   		.uleb128 0x410a
 2609 00d2 00       		.byte	0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 72


 2610 00d3 02       		.uleb128 0x2
 2611 00d4 18       		.uleb128 0x18
 2612 00d5 9142     		.uleb128 0x2111
 2613 00d7 18       		.uleb128 0x18
 2614 00d8 00       		.byte	0
 2615 00d9 00       		.byte	0
 2616 00da 0F       		.uleb128 0xf
 2617 00db 05       		.uleb128 0x5
 2618 00dc 00       		.byte	0
 2619 00dd 03       		.uleb128 0x3
 2620 00de 0E       		.uleb128 0xe
 2621 00df 3A       		.uleb128 0x3a
 2622 00e0 0B       		.uleb128 0xb
 2623 00e1 3B       		.uleb128 0x3b
 2624 00e2 05       		.uleb128 0x5
 2625 00e3 49       		.uleb128 0x49
 2626 00e4 13       		.uleb128 0x13
 2627 00e5 02       		.uleb128 0x2
 2628 00e6 18       		.uleb128 0x18
 2629 00e7 00       		.byte	0
 2630 00e8 00       		.byte	0
 2631 00e9 10       		.uleb128 0x10
 2632 00ea 898201   		.uleb128 0x4109
 2633 00ed 01       		.byte	0x1
 2634 00ee 11       		.uleb128 0x11
 2635 00ef 01       		.uleb128 0x1
 2636 00f0 31       		.uleb128 0x31
 2637 00f1 13       		.uleb128 0x13
 2638 00f2 01       		.uleb128 0x1
 2639 00f3 13       		.uleb128 0x13
 2640 00f4 00       		.byte	0
 2641 00f5 00       		.byte	0
 2642 00f6 11       		.uleb128 0x11
 2643 00f7 34       		.uleb128 0x34
 2644 00f8 00       		.byte	0
 2645 00f9 03       		.uleb128 0x3
 2646 00fa 0E       		.uleb128 0xe
 2647 00fb 3A       		.uleb128 0x3a
 2648 00fc 0B       		.uleb128 0xb
 2649 00fd 3B       		.uleb128 0x3b
 2650 00fe 0B       		.uleb128 0xb
 2651 00ff 49       		.uleb128 0x49
 2652 0100 13       		.uleb128 0x13
 2653 0101 3F       		.uleb128 0x3f
 2654 0102 19       		.uleb128 0x19
 2655 0103 02       		.uleb128 0x2
 2656 0104 18       		.uleb128 0x18
 2657 0105 00       		.byte	0
 2658 0106 00       		.byte	0
 2659 0107 12       		.uleb128 0x12
 2660 0108 2E       		.uleb128 0x2e
 2661 0109 00       		.byte	0
 2662 010a 3F       		.uleb128 0x3f
 2663 010b 19       		.uleb128 0x19
 2664 010c 03       		.uleb128 0x3
 2665 010d 0E       		.uleb128 0xe
 2666 010e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 73


 2667 010f 0B       		.uleb128 0xb
 2668 0110 3B       		.uleb128 0x3b
 2669 0111 0B       		.uleb128 0xb
 2670 0112 27       		.uleb128 0x27
 2671 0113 19       		.uleb128 0x19
 2672 0114 49       		.uleb128 0x49
 2673 0115 13       		.uleb128 0x13
 2674 0116 3C       		.uleb128 0x3c
 2675 0117 19       		.uleb128 0x19
 2676 0118 00       		.byte	0
 2677 0119 00       		.byte	0
 2678 011a 13       		.uleb128 0x13
 2679 011b 2E       		.uleb128 0x2e
 2680 011c 01       		.byte	0x1
 2681 011d 3F       		.uleb128 0x3f
 2682 011e 19       		.uleb128 0x19
 2683 011f 03       		.uleb128 0x3
 2684 0120 0E       		.uleb128 0xe
 2685 0121 3A       		.uleb128 0x3a
 2686 0122 0B       		.uleb128 0xb
 2687 0123 3B       		.uleb128 0x3b
 2688 0124 0B       		.uleb128 0xb
 2689 0125 27       		.uleb128 0x27
 2690 0126 19       		.uleb128 0x19
 2691 0127 3C       		.uleb128 0x3c
 2692 0128 19       		.uleb128 0x19
 2693 0129 00       		.byte	0
 2694 012a 00       		.byte	0
 2695 012b 14       		.uleb128 0x14
 2696 012c 05       		.uleb128 0x5
 2697 012d 00       		.byte	0
 2698 012e 49       		.uleb128 0x49
 2699 012f 13       		.uleb128 0x13
 2700 0130 00       		.byte	0
 2701 0131 00       		.byte	0
 2702 0132 00       		.byte	0
 2703              		.section	.debug_loc,"",%progbits
 2704              	.Ldebug_loc0:
 2705              	.LLST0:
 2706 0000 06000000 		.4byte	.LVL0
 2707 0004 13000000 		.4byte	.LVL1-1
 2708 0008 0100     		.2byte	0x1
 2709 000a 50       		.byte	0x50
 2710 000b 00000000 		.4byte	0
 2711 000f 00000000 		.4byte	0
 2712              	.LLST1:
 2713 0013 00000000 		.4byte	.LVL2
 2714 0017 07000000 		.4byte	.LVL3-1
 2715 001b 0100     		.2byte	0x1
 2716 001d 50       		.byte	0x50
 2717 001e 07000000 		.4byte	.LVL3-1
 2718 0022 16000000 		.4byte	.LVL4
 2719 0026 0100     		.2byte	0x1
 2720 0028 54       		.byte	0x54
 2721 0029 16000000 		.4byte	.LVL4
 2722 002d 28000000 		.4byte	.LFE4
 2723 0031 0400     		.2byte	0x4
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 74


 2724 0033 F3       		.byte	0xf3
 2725 0034 01       		.uleb128 0x1
 2726 0035 50       		.byte	0x50
 2727 0036 9F       		.byte	0x9f
 2728 0037 00000000 		.4byte	0
 2729 003b 00000000 		.4byte	0
 2730              	.LLST2:
 2731 003f 08000000 		.4byte	.LVL3
 2732 0043 1B000000 		.4byte	.LVL5-1
 2733 0047 0100     		.2byte	0x1
 2734 0049 50       		.byte	0x50
 2735 004a 00000000 		.4byte	0
 2736 004e 00000000 		.4byte	0
 2737              	.LLST3:
 2738 0052 00000000 		.4byte	.LVL6
 2739 0056 07000000 		.4byte	.LVL7-1
 2740 005a 0100     		.2byte	0x1
 2741 005c 50       		.byte	0x50
 2742 005d 07000000 		.4byte	.LVL7-1
 2743 0061 16000000 		.4byte	.LVL8
 2744 0065 0100     		.2byte	0x1
 2745 0067 54       		.byte	0x54
 2746 0068 16000000 		.4byte	.LVL8
 2747 006c 28000000 		.4byte	.LFE5
 2748 0070 0400     		.2byte	0x4
 2749 0072 F3       		.byte	0xf3
 2750 0073 01       		.uleb128 0x1
 2751 0074 50       		.byte	0x50
 2752 0075 9F       		.byte	0x9f
 2753 0076 00000000 		.4byte	0
 2754 007a 00000000 		.4byte	0
 2755              	.LLST4:
 2756 007e 08000000 		.4byte	.LVL7
 2757 0082 1B000000 		.4byte	.LVL9-1
 2758 0086 0100     		.2byte	0x1
 2759 0088 50       		.byte	0x50
 2760 0089 00000000 		.4byte	0
 2761 008d 00000000 		.4byte	0
 2762              	.LLST5:
 2763 0091 00000000 		.4byte	.LVL10
 2764 0095 07000000 		.4byte	.LVL11-1
 2765 0099 0100     		.2byte	0x1
 2766 009b 50       		.byte	0x50
 2767 009c 07000000 		.4byte	.LVL11-1
 2768 00a0 16000000 		.4byte	.LVL12
 2769 00a4 0100     		.2byte	0x1
 2770 00a6 54       		.byte	0x54
 2771 00a7 16000000 		.4byte	.LVL12
 2772 00ab 28000000 		.4byte	.LFE6
 2773 00af 0400     		.2byte	0x4
 2774 00b1 F3       		.byte	0xf3
 2775 00b2 01       		.uleb128 0x1
 2776 00b3 50       		.byte	0x50
 2777 00b4 9F       		.byte	0x9f
 2778 00b5 00000000 		.4byte	0
 2779 00b9 00000000 		.4byte	0
 2780              	.LLST6:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 75


 2781 00bd 08000000 		.4byte	.LVL11
 2782 00c1 1B000000 		.4byte	.LVL13-1
 2783 00c5 0100     		.2byte	0x1
 2784 00c7 50       		.byte	0x50
 2785 00c8 00000000 		.4byte	0
 2786 00cc 00000000 		.4byte	0
 2787              	.LLST7:
 2788 00d0 00000000 		.4byte	.LVL14
 2789 00d4 07000000 		.4byte	.LVL15-1
 2790 00d8 0100     		.2byte	0x1
 2791 00da 50       		.byte	0x50
 2792 00db 07000000 		.4byte	.LVL15-1
 2793 00df 18000000 		.4byte	.LVL16
 2794 00e3 0100     		.2byte	0x1
 2795 00e5 54       		.byte	0x54
 2796 00e6 18000000 		.4byte	.LVL16
 2797 00ea 2C000000 		.4byte	.LFE7
 2798 00ee 0400     		.2byte	0x4
 2799 00f0 F3       		.byte	0xf3
 2800 00f1 01       		.uleb128 0x1
 2801 00f2 50       		.byte	0x50
 2802 00f3 9F       		.byte	0x9f
 2803 00f4 00000000 		.4byte	0
 2804 00f8 00000000 		.4byte	0
 2805              	.LLST8:
 2806 00fc 08000000 		.4byte	.LVL15
 2807 0100 21000000 		.4byte	.LVL17-1
 2808 0104 0100     		.2byte	0x1
 2809 0106 50       		.byte	0x50
 2810 0107 00000000 		.4byte	0
 2811 010b 00000000 		.4byte	0
 2812              	.LLST9:
 2813 010f 00000000 		.4byte	.LVL18
 2814 0113 04000000 		.4byte	.LVL19
 2815 0117 0100     		.2byte	0x1
 2816 0119 50       		.byte	0x50
 2817 011a 04000000 		.4byte	.LVL19
 2818 011e 10000000 		.4byte	.LFE8
 2819 0122 0400     		.2byte	0x4
 2820 0124 F3       		.byte	0xf3
 2821 0125 01       		.uleb128 0x1
 2822 0126 50       		.byte	0x50
 2823 0127 9F       		.byte	0x9f
 2824 0128 00000000 		.4byte	0
 2825 012c 00000000 		.4byte	0
 2826              	.LLST10:
 2827 0130 00000000 		.4byte	.LVL20
 2828 0134 07000000 		.4byte	.LVL21-1
 2829 0138 0100     		.2byte	0x1
 2830 013a 50       		.byte	0x50
 2831 013b 07000000 		.4byte	.LVL21-1
 2832 013f 18000000 		.4byte	.LVL22
 2833 0143 0100     		.2byte	0x1
 2834 0145 54       		.byte	0x54
 2835 0146 18000000 		.4byte	.LVL22
 2836 014a 28000000 		.4byte	.LFE9
 2837 014e 0400     		.2byte	0x4
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 76


 2838 0150 F3       		.byte	0xf3
 2839 0151 01       		.uleb128 0x1
 2840 0152 50       		.byte	0x50
 2841 0153 9F       		.byte	0x9f
 2842 0154 00000000 		.4byte	0
 2843 0158 00000000 		.4byte	0
 2844              	.LLST11:
 2845 015c 08000000 		.4byte	.LVL21
 2846 0160 21000000 		.4byte	.LVL23-1
 2847 0164 0100     		.2byte	0x1
 2848 0166 50       		.byte	0x50
 2849 0167 00000000 		.4byte	0
 2850 016b 00000000 		.4byte	0
 2851              	.LLST12:
 2852 016f 00000000 		.4byte	.LVL24
 2853 0173 07000000 		.4byte	.LVL25-1
 2854 0177 0100     		.2byte	0x1
 2855 0179 50       		.byte	0x50
 2856 017a 07000000 		.4byte	.LVL25-1
 2857 017e 18000000 		.4byte	.LVL26
 2858 0182 0100     		.2byte	0x1
 2859 0184 54       		.byte	0x54
 2860 0185 18000000 		.4byte	.LVL26
 2861 0189 28000000 		.4byte	.LFE10
 2862 018d 0400     		.2byte	0x4
 2863 018f F3       		.byte	0xf3
 2864 0190 01       		.uleb128 0x1
 2865 0191 50       		.byte	0x50
 2866 0192 9F       		.byte	0x9f
 2867 0193 00000000 		.4byte	0
 2868 0197 00000000 		.4byte	0
 2869              	.LLST13:
 2870 019b 08000000 		.4byte	.LVL25
 2871 019f 21000000 		.4byte	.LVL27-1
 2872 01a3 0100     		.2byte	0x1
 2873 01a5 50       		.byte	0x50
 2874 01a6 00000000 		.4byte	0
 2875 01aa 00000000 		.4byte	0
 2876              	.LLST14:
 2877 01ae 00000000 		.4byte	.LVL28
 2878 01b2 07000000 		.4byte	.LVL29-1
 2879 01b6 0100     		.2byte	0x1
 2880 01b8 50       		.byte	0x50
 2881 01b9 07000000 		.4byte	.LVL29-1
 2882 01bd 16000000 		.4byte	.LVL30
 2883 01c1 0100     		.2byte	0x1
 2884 01c3 54       		.byte	0x54
 2885 01c4 16000000 		.4byte	.LVL30
 2886 01c8 2C000000 		.4byte	.LFE11
 2887 01cc 0400     		.2byte	0x4
 2888 01ce F3       		.byte	0xf3
 2889 01cf 01       		.uleb128 0x1
 2890 01d0 50       		.byte	0x50
 2891 01d1 9F       		.byte	0x9f
 2892 01d2 00000000 		.4byte	0
 2893 01d6 00000000 		.4byte	0
 2894              	.LLST15:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 77


 2895 01da 08000000 		.4byte	.LVL29
 2896 01de 1F000000 		.4byte	.LVL31-1
 2897 01e2 0100     		.2byte	0x1
 2898 01e4 50       		.byte	0x50
 2899 01e5 00000000 		.4byte	0
 2900 01e9 00000000 		.4byte	0
 2901              	.LLST16:
 2902 01ed 00000000 		.4byte	.LVL32
 2903 01f1 07000000 		.4byte	.LVL33-1
 2904 01f5 0100     		.2byte	0x1
 2905 01f7 50       		.byte	0x50
 2906 01f8 07000000 		.4byte	.LVL33-1
 2907 01fc 16000000 		.4byte	.LVL34
 2908 0200 0100     		.2byte	0x1
 2909 0202 54       		.byte	0x54
 2910 0203 16000000 		.4byte	.LVL34
 2911 0207 28000000 		.4byte	.LFE12
 2912 020b 0400     		.2byte	0x4
 2913 020d F3       		.byte	0xf3
 2914 020e 01       		.uleb128 0x1
 2915 020f 50       		.byte	0x50
 2916 0210 9F       		.byte	0x9f
 2917 0211 00000000 		.4byte	0
 2918 0215 00000000 		.4byte	0
 2919              	.LLST17:
 2920 0219 08000000 		.4byte	.LVL33
 2921 021d 1B000000 		.4byte	.LVL35-1
 2922 0221 0100     		.2byte	0x1
 2923 0223 50       		.byte	0x50
 2924 0224 00000000 		.4byte	0
 2925 0228 00000000 		.4byte	0
 2926              	.LLST18:
 2927 022c 00000000 		.4byte	.LVL36
 2928 0230 02000000 		.4byte	.LVL37
 2929 0234 0100     		.2byte	0x1
 2930 0236 50       		.byte	0x50
 2931 0237 02000000 		.4byte	.LVL37
 2932 023b 10000000 		.4byte	.LFE13
 2933 023f 0400     		.2byte	0x4
 2934 0241 F3       		.byte	0xf3
 2935 0242 01       		.uleb128 0x1
 2936 0243 50       		.byte	0x50
 2937 0244 9F       		.byte	0x9f
 2938 0245 00000000 		.4byte	0
 2939 0249 00000000 		.4byte	0
 2940              	.LLST19:
 2941 024d 00000000 		.4byte	.LVL38
 2942 0251 07000000 		.4byte	.LVL39-1
 2943 0255 0100     		.2byte	0x1
 2944 0257 50       		.byte	0x50
 2945 0258 07000000 		.4byte	.LVL39-1
 2946 025c 16000000 		.4byte	.LVL40
 2947 0260 0100     		.2byte	0x1
 2948 0262 54       		.byte	0x54
 2949 0263 16000000 		.4byte	.LVL40
 2950 0267 28000000 		.4byte	.LFE15
 2951 026b 0400     		.2byte	0x4
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 78


 2952 026d F3       		.byte	0xf3
 2953 026e 01       		.uleb128 0x1
 2954 026f 50       		.byte	0x50
 2955 0270 9F       		.byte	0x9f
 2956 0271 00000000 		.4byte	0
 2957 0275 00000000 		.4byte	0
 2958              	.LLST20:
 2959 0279 08000000 		.4byte	.LVL39
 2960 027d 1B000000 		.4byte	.LVL41-1
 2961 0281 0100     		.2byte	0x1
 2962 0283 50       		.byte	0x50
 2963 0284 00000000 		.4byte	0
 2964 0288 00000000 		.4byte	0
 2965              	.LLST21:
 2966 028c 00000000 		.4byte	.LVL42
 2967 0290 02000000 		.4byte	.LVL43
 2968 0294 0100     		.2byte	0x1
 2969 0296 50       		.byte	0x50
 2970 0297 02000000 		.4byte	.LVL43
 2971 029b 10000000 		.4byte	.LFE16
 2972 029f 0400     		.2byte	0x4
 2973 02a1 F3       		.byte	0xf3
 2974 02a2 01       		.uleb128 0x1
 2975 02a3 50       		.byte	0x50
 2976 02a4 9F       		.byte	0x9f
 2977 02a5 00000000 		.4byte	0
 2978 02a9 00000000 		.4byte	0
 2979              	.LLST22:
 2980 02ad 00000000 		.4byte	.LVL44
 2981 02b1 07000000 		.4byte	.LVL45-1
 2982 02b5 0100     		.2byte	0x1
 2983 02b7 50       		.byte	0x50
 2984 02b8 07000000 		.4byte	.LVL45-1
 2985 02bc 16000000 		.4byte	.LVL46
 2986 02c0 0100     		.2byte	0x1
 2987 02c2 54       		.byte	0x54
 2988 02c3 16000000 		.4byte	.LVL46
 2989 02c7 24000000 		.4byte	.LFE18
 2990 02cb 0400     		.2byte	0x4
 2991 02cd F3       		.byte	0xf3
 2992 02ce 01       		.uleb128 0x1
 2993 02cf 50       		.byte	0x50
 2994 02d0 9F       		.byte	0x9f
 2995 02d1 00000000 		.4byte	0
 2996 02d5 00000000 		.4byte	0
 2997              	.LLST23:
 2998 02d9 08000000 		.4byte	.LVL45
 2999 02dd 1D000000 		.4byte	.LVL47-1
 3000 02e1 0100     		.2byte	0x1
 3001 02e3 50       		.byte	0x50
 3002 02e4 00000000 		.4byte	0
 3003 02e8 00000000 		.4byte	0
 3004              	.LLST24:
 3005 02ec 00000000 		.4byte	.LVL48
 3006 02f0 02000000 		.4byte	.LVL49
 3007 02f4 0100     		.2byte	0x1
 3008 02f6 50       		.byte	0x50
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 79


 3009 02f7 02000000 		.4byte	.LVL49
 3010 02fb 10000000 		.4byte	.LFE19
 3011 02ff 0400     		.2byte	0x4
 3012 0301 F3       		.byte	0xf3
 3013 0302 01       		.uleb128 0x1
 3014 0303 50       		.byte	0x50
 3015 0304 9F       		.byte	0x9f
 3016 0305 00000000 		.4byte	0
 3017 0309 00000000 		.4byte	0
 3018              	.LLST25:
 3019 030d 00000000 		.4byte	.LVL50
 3020 0311 07000000 		.4byte	.LVL51-1
 3021 0315 0100     		.2byte	0x1
 3022 0317 50       		.byte	0x50
 3023 0318 07000000 		.4byte	.LVL51-1
 3024 031c 18000000 		.4byte	.LVL52
 3025 0320 0100     		.2byte	0x1
 3026 0322 54       		.byte	0x54
 3027 0323 18000000 		.4byte	.LVL52
 3028 0327 28000000 		.4byte	.LFE21
 3029 032b 0400     		.2byte	0x4
 3030 032d F3       		.byte	0xf3
 3031 032e 01       		.uleb128 0x1
 3032 032f 50       		.byte	0x50
 3033 0330 9F       		.byte	0x9f
 3034 0331 00000000 		.4byte	0
 3035 0335 00000000 		.4byte	0
 3036              	.LLST26:
 3037 0339 08000000 		.4byte	.LVL51
 3038 033d 21000000 		.4byte	.LVL53-1
 3039 0341 0100     		.2byte	0x1
 3040 0343 50       		.byte	0x50
 3041 0344 00000000 		.4byte	0
 3042 0348 00000000 		.4byte	0
 3043              	.LLST27:
 3044 034c 00000000 		.4byte	.LVL54
 3045 0350 02000000 		.4byte	.LVL55
 3046 0354 0100     		.2byte	0x1
 3047 0356 50       		.byte	0x50
 3048 0357 02000000 		.4byte	.LVL55
 3049 035b 10000000 		.4byte	.LFE22
 3050 035f 0400     		.2byte	0x4
 3051 0361 F3       		.byte	0xf3
 3052 0362 01       		.uleb128 0x1
 3053 0363 50       		.byte	0x50
 3054 0364 9F       		.byte	0x9f
 3055 0365 00000000 		.4byte	0
 3056 0369 00000000 		.4byte	0
 3057              	.LLST28:
 3058 036d 00000000 		.4byte	.LVL56
 3059 0371 02000000 		.4byte	.LVL57
 3060 0375 0100     		.2byte	0x1
 3061 0377 50       		.byte	0x50
 3062 0378 02000000 		.4byte	.LVL57
 3063 037c 10000000 		.4byte	.LFE24
 3064 0380 0400     		.2byte	0x4
 3065 0382 F3       		.byte	0xf3
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 80


 3066 0383 01       		.uleb128 0x1
 3067 0384 50       		.byte	0x50
 3068 0385 9F       		.byte	0x9f
 3069 0386 00000000 		.4byte	0
 3070 038a 00000000 		.4byte	0
 3071              	.LLST29:
 3072 038e 00000000 		.4byte	.LVL58
 3073 0392 07000000 		.4byte	.LVL59-1
 3074 0396 0100     		.2byte	0x1
 3075 0398 50       		.byte	0x50
 3076 0399 07000000 		.4byte	.LVL59-1
 3077 039d 16000000 		.4byte	.LVL60
 3078 03a1 0100     		.2byte	0x1
 3079 03a3 54       		.byte	0x54
 3080 03a4 16000000 		.4byte	.LVL60
 3081 03a8 24000000 		.4byte	.LFE28
 3082 03ac 0400     		.2byte	0x4
 3083 03ae F3       		.byte	0xf3
 3084 03af 01       		.uleb128 0x1
 3085 03b0 50       		.byte	0x50
 3086 03b1 9F       		.byte	0x9f
 3087 03b2 00000000 		.4byte	0
 3088 03b6 00000000 		.4byte	0
 3089              	.LLST30:
 3090 03ba 08000000 		.4byte	.LVL59
 3091 03be 1B000000 		.4byte	.LVL61-1
 3092 03c2 0100     		.2byte	0x1
 3093 03c4 50       		.byte	0x50
 3094 03c5 00000000 		.4byte	0
 3095 03c9 00000000 		.4byte	0
 3096              	.LLST31:
 3097 03cd 00000000 		.4byte	.LVL62
 3098 03d1 07000000 		.4byte	.LVL63-1
 3099 03d5 0100     		.2byte	0x1
 3100 03d7 50       		.byte	0x50
 3101 03d8 07000000 		.4byte	.LVL63-1
 3102 03dc 16000000 		.4byte	.LVL64
 3103 03e0 0100     		.2byte	0x1
 3104 03e2 54       		.byte	0x54
 3105 03e3 16000000 		.4byte	.LVL64
 3106 03e7 24000000 		.4byte	.LFE29
 3107 03eb 0400     		.2byte	0x4
 3108 03ed F3       		.byte	0xf3
 3109 03ee 01       		.uleb128 0x1
 3110 03ef 50       		.byte	0x50
 3111 03f0 9F       		.byte	0x9f
 3112 03f1 00000000 		.4byte	0
 3113 03f5 00000000 		.4byte	0
 3114              	.LLST32:
 3115 03f9 08000000 		.4byte	.LVL63
 3116 03fd 1D000000 		.4byte	.LVL65-1
 3117 0401 0100     		.2byte	0x1
 3118 0403 50       		.byte	0x50
 3119 0404 00000000 		.4byte	0
 3120 0408 00000000 		.4byte	0
 3121              	.LLST33:
 3122 040c 00000000 		.4byte	.LVL66
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 81


 3123 0410 07000000 		.4byte	.LVL67-1
 3124 0414 0100     		.2byte	0x1
 3125 0416 50       		.byte	0x50
 3126 0417 07000000 		.4byte	.LVL67-1
 3127 041b 16000000 		.4byte	.LVL68
 3128 041f 0100     		.2byte	0x1
 3129 0421 54       		.byte	0x54
 3130 0422 16000000 		.4byte	.LVL68
 3131 0426 28000000 		.4byte	.LFE30
 3132 042a 0400     		.2byte	0x4
 3133 042c F3       		.byte	0xf3
 3134 042d 01       		.uleb128 0x1
 3135 042e 50       		.byte	0x50
 3136 042f 9F       		.byte	0x9f
 3137 0430 00000000 		.4byte	0
 3138 0434 00000000 		.4byte	0
 3139              	.LLST34:
 3140 0438 08000000 		.4byte	.LVL67
 3141 043c 1D000000 		.4byte	.LVL69-1
 3142 0440 0100     		.2byte	0x1
 3143 0442 50       		.byte	0x50
 3144 0443 00000000 		.4byte	0
 3145 0447 00000000 		.4byte	0
 3146              	.LLST35:
 3147 044b 00000000 		.4byte	.LVL70
 3148 044f 07000000 		.4byte	.LVL71-1
 3149 0453 0100     		.2byte	0x1
 3150 0455 50       		.byte	0x50
 3151 0456 07000000 		.4byte	.LVL71-1
 3152 045a 16000000 		.4byte	.LVL72
 3153 045e 0100     		.2byte	0x1
 3154 0460 54       		.byte	0x54
 3155 0461 16000000 		.4byte	.LVL72
 3156 0465 24000000 		.4byte	.LFE31
 3157 0469 0400     		.2byte	0x4
 3158 046b F3       		.byte	0xf3
 3159 046c 01       		.uleb128 0x1
 3160 046d 50       		.byte	0x50
 3161 046e 9F       		.byte	0x9f
 3162 046f 00000000 		.4byte	0
 3163 0473 00000000 		.4byte	0
 3164              	.LLST36:
 3165 0477 08000000 		.4byte	.LVL71
 3166 047b 1D000000 		.4byte	.LVL73-1
 3167 047f 0100     		.2byte	0x1
 3168 0481 50       		.byte	0x50
 3169 0482 00000000 		.4byte	0
 3170 0486 00000000 		.4byte	0
 3171              	.LLST37:
 3172 048a 00000000 		.4byte	.LVL74
 3173 048e 07000000 		.4byte	.LVL75-1
 3174 0492 0100     		.2byte	0x1
 3175 0494 50       		.byte	0x50
 3176 0495 07000000 		.4byte	.LVL75-1
 3177 0499 16000000 		.4byte	.LVL76
 3178 049d 0100     		.2byte	0x1
 3179 049f 54       		.byte	0x54
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 82


 3180 04a0 16000000 		.4byte	.LVL76
 3181 04a4 24000000 		.4byte	.LFE32
 3182 04a8 0400     		.2byte	0x4
 3183 04aa F3       		.byte	0xf3
 3184 04ab 01       		.uleb128 0x1
 3185 04ac 50       		.byte	0x50
 3186 04ad 9F       		.byte	0x9f
 3187 04ae 00000000 		.4byte	0
 3188 04b2 00000000 		.4byte	0
 3189              	.LLST38:
 3190 04b6 08000000 		.4byte	.LVL75
 3191 04ba 1D000000 		.4byte	.LVL77-1
 3192 04be 0100     		.2byte	0x1
 3193 04c0 50       		.byte	0x50
 3194 04c1 00000000 		.4byte	0
 3195 04c5 00000000 		.4byte	0
 3196              	.LLST39:
 3197 04c9 00000000 		.4byte	.LVL78
 3198 04cd 09000000 		.4byte	.LVL79-1
 3199 04d1 0100     		.2byte	0x1
 3200 04d3 50       		.byte	0x50
 3201 04d4 09000000 		.4byte	.LVL79-1
 3202 04d8 0C000000 		.4byte	.LVL80
 3203 04dc 0100     		.2byte	0x1
 3204 04de 54       		.byte	0x54
 3205 04df 0C000000 		.4byte	.LVL80
 3206 04e3 1C000000 		.4byte	.LFE33
 3207 04e7 0400     		.2byte	0x4
 3208 04e9 F3       		.byte	0xf3
 3209 04ea 01       		.uleb128 0x1
 3210 04eb 50       		.byte	0x50
 3211 04ec 9F       		.byte	0x9f
 3212 04ed 00000000 		.4byte	0
 3213 04f1 00000000 		.4byte	0
 3214              	.LLST40:
 3215 04f5 00000000 		.4byte	.LVL78
 3216 04f9 09000000 		.4byte	.LVL79-1
 3217 04fd 0100     		.2byte	0x1
 3218 04ff 51       		.byte	0x51
 3219 0500 09000000 		.4byte	.LVL79-1
 3220 0504 14000000 		.4byte	.LVL82
 3221 0508 0100     		.2byte	0x1
 3222 050a 55       		.byte	0x55
 3223 050b 14000000 		.4byte	.LVL82
 3224 050f 1C000000 		.4byte	.LFE33
 3225 0513 0400     		.2byte	0x4
 3226 0515 F3       		.byte	0xf3
 3227 0516 01       		.uleb128 0x1
 3228 0517 51       		.byte	0x51
 3229 0518 9F       		.byte	0x9f
 3230 0519 00000000 		.4byte	0
 3231 051d 00000000 		.4byte	0
 3232              	.LLST41:
 3233 0521 0A000000 		.4byte	.LVL79
 3234 0525 13000000 		.4byte	.LVL81-1
 3235 0529 0100     		.2byte	0x1
 3236 052b 50       		.byte	0x50
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 83


 3237 052c 00000000 		.4byte	0
 3238 0530 00000000 		.4byte	0
 3239              	.LLST42:
 3240 0534 06000000 		.4byte	.LVL83
 3241 0538 13000000 		.4byte	.LVL84-1
 3242 053c 0100     		.2byte	0x1
 3243 053e 50       		.byte	0x50
 3244 053f 00000000 		.4byte	0
 3245 0543 00000000 		.4byte	0
 3246              		.section	.debug_aranges,"",%progbits
 3247 0000 54010000 		.4byte	0x154
 3248 0004 0200     		.2byte	0x2
 3249 0006 00000000 		.4byte	.Ldebug_info0
 3250 000a 04       		.byte	0x4
 3251 000b 00       		.byte	0
 3252 000c 0000     		.2byte	0
 3253 000e 0000     		.2byte	0
 3254 0010 00000000 		.4byte	.LFB3
 3255 0014 1C000000 		.4byte	.LFE3-.LFB3
 3256 0018 00000000 		.4byte	.LFB4
 3257 001c 28000000 		.4byte	.LFE4-.LFB4
 3258 0020 00000000 		.4byte	.LFB5
 3259 0024 28000000 		.4byte	.LFE5-.LFB5
 3260 0028 00000000 		.4byte	.LFB6
 3261 002c 28000000 		.4byte	.LFE6-.LFB6
 3262 0030 00000000 		.4byte	.LFB7
 3263 0034 2C000000 		.4byte	.LFE7-.LFB7
 3264 0038 00000000 		.4byte	.LFB8
 3265 003c 10000000 		.4byte	.LFE8-.LFB8
 3266 0040 00000000 		.4byte	.LFB9
 3267 0044 28000000 		.4byte	.LFE9-.LFB9
 3268 0048 00000000 		.4byte	.LFB10
 3269 004c 28000000 		.4byte	.LFE10-.LFB10
 3270 0050 00000000 		.4byte	.LFB11
 3271 0054 2C000000 		.4byte	.LFE11-.LFB11
 3272 0058 00000000 		.4byte	.LFB12
 3273 005c 28000000 		.4byte	.LFE12-.LFB12
 3274 0060 00000000 		.4byte	.LFB13
 3275 0064 10000000 		.4byte	.LFE13-.LFB13
 3276 0068 00000000 		.4byte	.LFB14
 3277 006c 10000000 		.4byte	.LFE14-.LFB14
 3278 0070 00000000 		.4byte	.LFB15
 3279 0074 28000000 		.4byte	.LFE15-.LFB15
 3280 0078 00000000 		.4byte	.LFB16
 3281 007c 10000000 		.4byte	.LFE16-.LFB16
 3282 0080 00000000 		.4byte	.LFB17
 3283 0084 10000000 		.4byte	.LFE17-.LFB17
 3284 0088 00000000 		.4byte	.LFB18
 3285 008c 24000000 		.4byte	.LFE18-.LFB18
 3286 0090 00000000 		.4byte	.LFB19
 3287 0094 10000000 		.4byte	.LFE19-.LFB19
 3288 0098 00000000 		.4byte	.LFB20
 3289 009c 10000000 		.4byte	.LFE20-.LFB20
 3290 00a0 00000000 		.4byte	.LFB21
 3291 00a4 28000000 		.4byte	.LFE21-.LFB21
 3292 00a8 00000000 		.4byte	.LFB22
 3293 00ac 10000000 		.4byte	.LFE22-.LFB22
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 84


 3294 00b0 00000000 		.4byte	.LFB23
 3295 00b4 10000000 		.4byte	.LFE23-.LFB23
 3296 00b8 00000000 		.4byte	.LFB24
 3297 00bc 10000000 		.4byte	.LFE24-.LFB24
 3298 00c0 00000000 		.4byte	.LFB25
 3299 00c4 10000000 		.4byte	.LFE25-.LFB25
 3300 00c8 00000000 		.4byte	.LFB26
 3301 00cc 10000000 		.4byte	.LFE26-.LFB26
 3302 00d0 00000000 		.4byte	.LFB27
 3303 00d4 10000000 		.4byte	.LFE27-.LFB27
 3304 00d8 00000000 		.4byte	.LFB28
 3305 00dc 24000000 		.4byte	.LFE28-.LFB28
 3306 00e0 00000000 		.4byte	.LFB29
 3307 00e4 24000000 		.4byte	.LFE29-.LFB29
 3308 00e8 00000000 		.4byte	.LFB30
 3309 00ec 28000000 		.4byte	.LFE30-.LFB30
 3310 00f0 00000000 		.4byte	.LFB31
 3311 00f4 24000000 		.4byte	.LFE31-.LFB31
 3312 00f8 00000000 		.4byte	.LFB32
 3313 00fc 24000000 		.4byte	.LFE32-.LFB32
 3314 0100 00000000 		.4byte	.LFB33
 3315 0104 1C000000 		.4byte	.LFE33-.LFB33
 3316 0108 00000000 		.4byte	.LFB1
 3317 010c 24000000 		.4byte	.LFE1-.LFB1
 3318 0110 00000000 		.4byte	.LFB34
 3319 0114 14000000 		.4byte	.LFE34-.LFB34
 3320 0118 00000000 		.4byte	.LFB35
 3321 011c 0C000000 		.4byte	.LFE35-.LFB35
 3322 0120 00000000 		.4byte	.LFB0
 3323 0124 54000000 		.4byte	.LFE0-.LFB0
 3324 0128 00000000 		.4byte	.LFB2
 3325 012c 20000000 		.4byte	.LFE2-.LFB2
 3326 0130 00000000 		.4byte	.LFB36
 3327 0134 0C000000 		.4byte	.LFE36-.LFB36
 3328 0138 00000000 		.4byte	.LFB37
 3329 013c 0C000000 		.4byte	.LFE37-.LFB37
 3330 0140 00000000 		.4byte	.LFB38
 3331 0144 0C000000 		.4byte	.LFE38-.LFB38
 3332 0148 00000000 		.4byte	.LFB39
 3333 014c 0C000000 		.4byte	.LFE39-.LFB39
 3334 0150 00000000 		.4byte	0
 3335 0154 00000000 		.4byte	0
 3336              		.section	.debug_ranges,"",%progbits
 3337              	.Ldebug_ranges0:
 3338 0000 00000000 		.4byte	.LFB3
 3339 0004 1C000000 		.4byte	.LFE3
 3340 0008 00000000 		.4byte	.LFB4
 3341 000c 28000000 		.4byte	.LFE4
 3342 0010 00000000 		.4byte	.LFB5
 3343 0014 28000000 		.4byte	.LFE5
 3344 0018 00000000 		.4byte	.LFB6
 3345 001c 28000000 		.4byte	.LFE6
 3346 0020 00000000 		.4byte	.LFB7
 3347 0024 2C000000 		.4byte	.LFE7
 3348 0028 00000000 		.4byte	.LFB8
 3349 002c 10000000 		.4byte	.LFE8
 3350 0030 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 85


 3351 0034 28000000 		.4byte	.LFE9
 3352 0038 00000000 		.4byte	.LFB10
 3353 003c 28000000 		.4byte	.LFE10
 3354 0040 00000000 		.4byte	.LFB11
 3355 0044 2C000000 		.4byte	.LFE11
 3356 0048 00000000 		.4byte	.LFB12
 3357 004c 28000000 		.4byte	.LFE12
 3358 0050 00000000 		.4byte	.LFB13
 3359 0054 10000000 		.4byte	.LFE13
 3360 0058 00000000 		.4byte	.LFB14
 3361 005c 10000000 		.4byte	.LFE14
 3362 0060 00000000 		.4byte	.LFB15
 3363 0064 28000000 		.4byte	.LFE15
 3364 0068 00000000 		.4byte	.LFB16
 3365 006c 10000000 		.4byte	.LFE16
 3366 0070 00000000 		.4byte	.LFB17
 3367 0074 10000000 		.4byte	.LFE17
 3368 0078 00000000 		.4byte	.LFB18
 3369 007c 24000000 		.4byte	.LFE18
 3370 0080 00000000 		.4byte	.LFB19
 3371 0084 10000000 		.4byte	.LFE19
 3372 0088 00000000 		.4byte	.LFB20
 3373 008c 10000000 		.4byte	.LFE20
 3374 0090 00000000 		.4byte	.LFB21
 3375 0094 28000000 		.4byte	.LFE21
 3376 0098 00000000 		.4byte	.LFB22
 3377 009c 10000000 		.4byte	.LFE22
 3378 00a0 00000000 		.4byte	.LFB23
 3379 00a4 10000000 		.4byte	.LFE23
 3380 00a8 00000000 		.4byte	.LFB24
 3381 00ac 10000000 		.4byte	.LFE24
 3382 00b0 00000000 		.4byte	.LFB25
 3383 00b4 10000000 		.4byte	.LFE25
 3384 00b8 00000000 		.4byte	.LFB26
 3385 00bc 10000000 		.4byte	.LFE26
 3386 00c0 00000000 		.4byte	.LFB27
 3387 00c4 10000000 		.4byte	.LFE27
 3388 00c8 00000000 		.4byte	.LFB28
 3389 00cc 24000000 		.4byte	.LFE28
 3390 00d0 00000000 		.4byte	.LFB29
 3391 00d4 24000000 		.4byte	.LFE29
 3392 00d8 00000000 		.4byte	.LFB30
 3393 00dc 28000000 		.4byte	.LFE30
 3394 00e0 00000000 		.4byte	.LFB31
 3395 00e4 24000000 		.4byte	.LFE31
 3396 00e8 00000000 		.4byte	.LFB32
 3397 00ec 24000000 		.4byte	.LFE32
 3398 00f0 00000000 		.4byte	.LFB33
 3399 00f4 1C000000 		.4byte	.LFE33
 3400 00f8 00000000 		.4byte	.LFB1
 3401 00fc 24000000 		.4byte	.LFE1
 3402 0100 00000000 		.4byte	.LFB34
 3403 0104 14000000 		.4byte	.LFE34
 3404 0108 00000000 		.4byte	.LFB35
 3405 010c 0C000000 		.4byte	.LFE35
 3406 0110 00000000 		.4byte	.LFB0
 3407 0114 54000000 		.4byte	.LFE0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 86


 3408 0118 00000000 		.4byte	.LFB2
 3409 011c 20000000 		.4byte	.LFE2
 3410 0120 00000000 		.4byte	.LFB36
 3411 0124 0C000000 		.4byte	.LFE36
 3412 0128 00000000 		.4byte	.LFB37
 3413 012c 0C000000 		.4byte	.LFE37
 3414 0130 00000000 		.4byte	.LFB38
 3415 0134 0C000000 		.4byte	.LFE38
 3416 0138 00000000 		.4byte	.LFB39
 3417 013c 0C000000 		.4byte	.LFE39
 3418 0140 00000000 		.4byte	0
 3419 0144 00000000 		.4byte	0
 3420              		.section	.debug_line,"",%progbits
 3421              	.Ldebug_line0:
 3422 0000 78030000 		.section	.debug_str,"MS",%progbits,1
 3422      02004B00 
 3422      00000201 
 3422      FB0E0D00 
 3422      01010101 
 3423              	.LASF37:
 3424 0000 636F756E 		.ascii	"count\000"
 3424      7400
 3425              	.LASF66:
 3426 0006 50574D5F 		.ascii	"PWM_Enable\000"
 3426      456E6162 
 3426      6C6500
 3427              	.LASF81:
 3428 0011 43794578 		.ascii	"CyExitCriticalSection\000"
 3428      69744372 
 3428      69746963 
 3428      616C5365 
 3428      6374696F 
 3429              	.LASF28:
 3430 0027 50574D5F 		.ascii	"PWM_SetPWMSyncKill\000"
 3430      53657450 
 3430      574D5379 
 3430      6E634B69 
 3430      6C6C00
 3431              	.LASF41:
 3432 003a 70657269 		.ascii	"period\000"
 3432      6F6400
 3433              	.LASF7:
 3434 0041 6C6F6E67 		.ascii	"long long unsigned int\000"
 3434      206C6F6E 
 3434      6720756E 
 3434      7369676E 
 3434      65642069 
 3435              	.LASF58:
 3436 0058 50574D5F 		.ascii	"PWM_SetCaptureMode\000"
 3436      53657443 
 3436      61707475 
 3436      72654D6F 
 3436      646500
 3437              	.LASF21:
 3438 006b 71644D6F 		.ascii	"qdMode\000"
 3438      646500
 3439              	.LASF36:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 87


 3440 0072 50574D5F 		.ascii	"PWM_WriteCounter\000"
 3440      57726974 
 3440      65436F75 
 3440      6E746572 
 3440      00
 3441              	.LASF77:
 3442 0083 47656E65 		.ascii	"Generated_Source\\PSoC4\\PWM.c\000"
 3442      72617465 
 3442      645F536F 
 3442      75726365 
 3442      5C50536F 
 3443              	.LASF42:
 3444 00a0 50574D5F 		.ascii	"PWM_ReadCounter\000"
 3444      52656164 
 3444      436F756E 
 3444      74657200 
 3445              	.LASF6:
 3446 00b0 6C6F6E67 		.ascii	"long long int\000"
 3446      206C6F6E 
 3446      6720696E 
 3446      7400
 3447              	.LASF0:
 3448 00be 7369676E 		.ascii	"signed char\000"
 3448      65642063 
 3448      68617200 
 3449              	.LASF53:
 3450 00ca 50574D5F 		.ascii	"PWM_WriteCompareBuf\000"
 3450      57726974 
 3450      65436F6D 
 3450      70617265 
 3450      42756600 
 3451              	.LASF68:
 3452 00de 50574D5F 		.ascii	"PWM_SetInterruptMode\000"
 3452      53657449 
 3452      6E746572 
 3452      72757074 
 3452      4D6F6465 
 3453              	.LASF74:
 3454 00f3 50574D5F 		.ascii	"PWM_ClearInterrupt\000"
 3454      436C6561 
 3454      72496E74 
 3454      65727275 
 3454      707400
 3455              	.LASF4:
 3456 0106 6C6F6E67 		.ascii	"long int\000"
 3456      20696E74 
 3456      00
 3457              	.LASF9:
 3458 010f 75696E74 		.ascii	"uint8\000"
 3458      3800
 3459              	.LASF12:
 3460 0115 646F7562 		.ascii	"double\000"
 3460      6C6500
 3461              	.LASF55:
 3462 011c 50574D5F 		.ascii	"PWM_ReadCompareBuf\000"
 3462      52656164 
 3462      436F6D70 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 88


 3462      61726542 
 3462      756600
 3463              	.LASF44:
 3464 012f 50574D5F 		.ascii	"PWM_SetCompareSwap\000"
 3464      53657443 
 3464      6F6D7061 
 3464      72655377 
 3464      617000
 3465              	.LASF16:
 3466 0142 50574D5F 		.ascii	"PWM_Stop\000"
 3466      53746F70 
 3466      00
 3467              	.LASF34:
 3468 014b 50574D5F 		.ascii	"PWM_SetPWMInvert\000"
 3468      53657450 
 3468      574D496E 
 3468      76657274 
 3468      00
 3469              	.LASF10:
 3470 015c 75696E74 		.ascii	"uint32\000"
 3470      333200
 3471              	.LASF61:
 3472 0163 50574D5F 		.ascii	"PWM_SetStartMode\000"
 3472      53657453 
 3472      74617274 
 3472      4D6F6465 
 3472      00
 3473              	.LASF59:
 3474 0174 74726967 		.ascii	"triggerMode\000"
 3474      6765724D 
 3474      6F646500 
 3475              	.LASF35:
 3476 0180 6D61736B 		.ascii	"mask\000"
 3476      00
 3477              	.LASF78:
 3478 0185 443A5C63 		.ascii	"D:\\code\\cypress\\SCB_Bootloader\\cncboot.cydsn\000"
 3478      6F64655C 
 3478      63797072 
 3478      6573735C 
 3478      5343425F 
 3479              	.LASF33:
 3480 01b2 64656164 		.ascii	"deadTime\000"
 3480      54696D65 
 3480      00
 3481              	.LASF62:
 3482 01bb 50574D5F 		.ascii	"PWM_SetStopMode\000"
 3482      53657453 
 3482      746F704D 
 3482      6F646500 
 3483              	.LASF8:
 3484 01cb 756E7369 		.ascii	"unsigned int\000"
 3484      676E6564 
 3484      20696E74 
 3484      00
 3485              	.LASF32:
 3486 01d8 50574D5F 		.ascii	"PWM_SetPWMDeadTime\000"
 3486      53657450 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 89


 3486      574D4465 
 3486      61645469 
 3486      6D6500
 3487              	.LASF65:
 3488 01eb 636F6D6D 		.ascii	"command\000"
 3488      616E6400 
 3489              	.LASF5:
 3490 01f3 6C6F6E67 		.ascii	"long unsigned int\000"
 3490      20756E73 
 3490      69676E65 
 3490      6420696E 
 3490      7400
 3491              	.LASF27:
 3492 0205 6D6F6465 		.ascii	"modeMask\000"
 3492      4D61736B 
 3492      00
 3493              	.LASF80:
 3494 020e 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3494      74657243 
 3494      72697469 
 3494      63616C53 
 3494      65637469 
 3495              	.LASF3:
 3496 0225 73686F72 		.ascii	"short unsigned int\000"
 3496      7420756E 
 3496      7369676E 
 3496      65642069 
 3496      6E7400
 3497              	.LASF22:
 3498 0238 50574D5F 		.ascii	"PWM_SetPrescaler\000"
 3498      53657450 
 3498      72657363 
 3498      616C6572 
 3498      00
 3499              	.LASF25:
 3500 0249 6F6E6553 		.ascii	"oneShotEnable\000"
 3500      686F7445 
 3500      6E61626C 
 3500      6500
 3501              	.LASF64:
 3502 0257 50574D5F 		.ascii	"PWM_TriggerCommand\000"
 3502      54726967 
 3502      67657243 
 3502      6F6D6D61 
 3502      6E6400
 3503              	.LASF50:
 3504 026a 50574D5F 		.ascii	"PWM_WriteCompare\000"
 3504      57726974 
 3504      65436F6D 
 3504      70617265 
 3504      00
 3505              	.LASF40:
 3506 027b 50574D5F 		.ascii	"PWM_WritePeriod\000"
 3506      57726974 
 3506      65506572 
 3506      696F6400 
 3507              	.LASF14:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 90


 3508 028b 72656733 		.ascii	"reg32\000"
 3508      3200
 3509              	.LASF79:
 3510 0291 50574D5F 		.ascii	"PWM_initVar\000"
 3510      696E6974 
 3510      56617200 
 3511              	.LASF43:
 3512 029d 50574D5F 		.ascii	"PWM_ReadPeriod\000"
 3512      52656164 
 3512      50657269 
 3512      6F6400
 3513              	.LASF15:
 3514 02ac 73697A65 		.ascii	"sizetype\000"
 3514      74797065 
 3514      00
 3515              	.LASF29:
 3516 02b5 73796E63 		.ascii	"syncKillEnable\000"
 3516      4B696C6C 
 3516      456E6162 
 3516      6C6500
 3517              	.LASF51:
 3518 02c4 636F6D70 		.ascii	"compare\000"
 3518      61726500 
 3519              	.LASF24:
 3520 02cc 50574D5F 		.ascii	"PWM_SetOneShot\000"
 3520      5365744F 
 3520      6E655368 
 3520      6F7400
 3521              	.LASF48:
 3522 02db 50574D5F 		.ascii	"PWM_ReadPeriodBuf\000"
 3522      52656164 
 3522      50657269 
 3522      6F644275 
 3522      6600
 3523              	.LASF76:
 3524 02ed 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3524      4320342E 
 3524      392E3320 
 3524      32303135 
 3524      30333033 
 3525 0320 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 3525      20726576 
 3525      6973696F 
 3525      6E203232 
 3525      31323230 
 3526 0353 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3526      66756E63 
 3526      74696F6E 
 3526      2D736563 
 3526      74696F6E 
 3527              	.LASF11:
 3528 037b 666C6F61 		.ascii	"float\000"
 3528      7400
 3529              	.LASF23:
 3530 0381 70726573 		.ascii	"prescaler\000"
 3530      63616C65 
 3530      7200
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 91


 3531              	.LASF56:
 3532 038b 50574D5F 		.ascii	"PWM_ReadCapture\000"
 3532      52656164 
 3532      43617074 
 3532      75726500 
 3533              	.LASF49:
 3534 039b 50574D5F 		.ascii	"PWM_SetPeriodSwap\000"
 3534      53657450 
 3534      6572696F 
 3534      64537761 
 3534      7000
 3535              	.LASF1:
 3536 03ad 756E7369 		.ascii	"unsigned char\000"
 3536      676E6564 
 3536      20636861 
 3536      7200
 3537              	.LASF70:
 3538 03bb 50574D5F 		.ascii	"PWM_Init\000"
 3538      496E6974 
 3538      00
 3539              	.LASF31:
 3540 03c4 73746F70 		.ascii	"stopOnKillEnable\000"
 3540      4F6E4B69 
 3540      6C6C456E 
 3540      61626C65 
 3540      00
 3541              	.LASF26:
 3542 03d5 50574D5F 		.ascii	"PWM_SetPWMMode\000"
 3542      53657450 
 3542      574D4D6F 
 3542      646500
 3543              	.LASF2:
 3544 03e4 73686F72 		.ascii	"short int\000"
 3544      7420696E 
 3544      7400
 3545              	.LASF72:
 3546 03ee 50574D5F 		.ascii	"PWM_GetInterruptSourceMasked\000"
 3546      47657449 
 3546      6E746572 
 3546      72757074 
 3546      536F7572 
 3547              	.LASF69:
 3548 040b 696E7465 		.ascii	"interruptMask\000"
 3548      72727570 
 3548      744D6173 
 3548      6B00
 3549              	.LASF71:
 3550 0419 50574D5F 		.ascii	"PWM_Start\000"
 3550      53746172 
 3550      7400
 3551              	.LASF46:
 3552 0423 50574D5F 		.ascii	"PWM_WritePeriodBuf\000"
 3552      57726974 
 3552      65506572 
 3552      696F6442 
 3552      756600
 3553              	.LASF19:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 92


 3554 0436 50574D5F 		.ascii	"PWM_SetQDMode\000"
 3554      53657451 
 3554      444D6F64 
 3554      6500
 3555              	.LASF13:
 3556 0444 63686172 		.ascii	"char\000"
 3556      00
 3557              	.LASF20:
 3558 0449 6D6F6465 		.ascii	"mode\000"
 3558      00
 3559              	.LASF75:
 3560 044e 50574D5F 		.ascii	"PWM_SetInterrupt\000"
 3560      53657449 
 3560      6E746572 
 3560      72757074 
 3560      00
 3561              	.LASF60:
 3562 045f 50574D5F 		.ascii	"PWM_SetReloadMode\000"
 3562      53657452 
 3562      656C6F61 
 3562      644D6F64 
 3562      6500
 3563              	.LASF39:
 3564 0471 636F756E 		.ascii	"counterMode\000"
 3564      7465724D 
 3564      6F646500 
 3565              	.LASF54:
 3566 047d 636F6D70 		.ascii	"compareBuf\000"
 3566      61726542 
 3566      756600
 3567              	.LASF47:
 3568 0488 70657269 		.ascii	"periodBuf\000"
 3568      6F644275 
 3568      6600
 3569              	.LASF57:
 3570 0492 50574D5F 		.ascii	"PWM_ReadCaptureBuf\000"
 3570      52656164 
 3570      43617074 
 3570      75726542 
 3570      756600
 3571              	.LASF18:
 3572 04a5 656E6162 		.ascii	"enableInterrupts\000"
 3572      6C65496E 
 3572      74657272 
 3572      75707473 
 3572      00
 3573              	.LASF67:
 3574 04b6 50574D5F 		.ascii	"PWM_ReadStatus\000"
 3574      52656164 
 3574      53746174 
 3574      757300
 3575              	.LASF63:
 3576 04c5 50574D5F 		.ascii	"PWM_SetCountMode\000"
 3576      53657443 
 3576      6F756E74 
 3576      4D6F6465 
 3576      00
ARM GAS  C:\Users\g\AppData\Local\Temp\ccBVUzor.s 			page 93


 3577              	.LASF17:
 3578 04d6 50574D5F 		.ascii	"PWM_SetMode\000"
 3578      5365744D 
 3578      6F646500 
 3579              	.LASF30:
 3580 04e2 50574D5F 		.ascii	"PWM_SetPWMStopOnKill\000"
 3580      53657450 
 3580      574D5374 
 3580      6F704F6E 
 3580      4B696C6C 
 3581              	.LASF45:
 3582 04f7 73776170 		.ascii	"swapEnable\000"
 3582      456E6162 
 3582      6C6500
 3583              	.LASF73:
 3584 0502 50574D5F 		.ascii	"PWM_GetInterruptSource\000"
 3584      47657449 
 3584      6E746572 
 3584      72757074 
 3584      536F7572 
 3585              	.LASF38:
 3586 0519 50574D5F 		.ascii	"PWM_SetCounterMode\000"
 3586      53657443 
 3586      6F756E74 
 3586      65724D6F 
 3586      646500
 3587              	.LASF52:
 3588 052c 50574D5F 		.ascii	"PWM_ReadCompare\000"
 3588      52656164 
 3588      436F6D70 
 3588      61726500 
 3589              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
