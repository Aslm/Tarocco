ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.PWM_Init,"ax",%progbits
  18              		.align	1
  19              		.global	PWM_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	PWM_Init, %function
  23              	PWM_Init:
  24              	.LFB0:
  25              		.file 1 "Generated_Source\\PSoC4\\PWM.c"
   1:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/PWM.c **** * File Name: PWM.c
   3:Generated_Source\PSoC4/PWM.c **** * Version 2.10
   4:Generated_Source\PSoC4/PWM.c **** *
   5:Generated_Source\PSoC4/PWM.c **** * Description:
   6:Generated_Source\PSoC4/PWM.c **** *  This file provides the source code to the API for the PWM
   7:Generated_Source\PSoC4/PWM.c **** *  component
   8:Generated_Source\PSoC4/PWM.c **** *
   9:Generated_Source\PSoC4/PWM.c **** * Note:
  10:Generated_Source\PSoC4/PWM.c **** *  None
  11:Generated_Source\PSoC4/PWM.c **** *
  12:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  13:Generated_Source\PSoC4/PWM.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/PWM.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/PWM.c **** 
  19:Generated_Source\PSoC4/PWM.c **** #include "PWM.h"
  20:Generated_Source\PSoC4/PWM.c **** 
  21:Generated_Source\PSoC4/PWM.c **** uint8 PWM_initVar = 0u;
  22:Generated_Source\PSoC4/PWM.c **** 
  23:Generated_Source\PSoC4/PWM.c **** 
  24:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
  25:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Init
  26:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  27:Generated_Source\PSoC4/PWM.c **** *
  28:Generated_Source\PSoC4/PWM.c **** * Summary:
  29:Generated_Source\PSoC4/PWM.c **** *  Initialize/Restore default PWM configuration.
  30:Generated_Source\PSoC4/PWM.c **** *
  31:Generated_Source\PSoC4/PWM.c **** * Parameters:
  32:Generated_Source\PSoC4/PWM.c **** *  None
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 2


  33:Generated_Source\PSoC4/PWM.c **** *
  34:Generated_Source\PSoC4/PWM.c **** * Return:
  35:Generated_Source\PSoC4/PWM.c **** *  None
  36:Generated_Source\PSoC4/PWM.c **** *
  37:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  38:Generated_Source\PSoC4/PWM.c **** void PWM_Init(void)
  39:Generated_Source\PSoC4/PWM.c **** {
  26              		.loc 1 39 0
  27              		.cfi_startproc
  40:Generated_Source\PSoC4/PWM.c **** 
  41:Generated_Source\PSoC4/PWM.c ****     /* Set values from customizer to CTRL */
  42:Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
  43:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_QUAD_BASE_CONFIG;
  44:Generated_Source\PSoC4/PWM.c ****         
  45:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
  46:Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_QUAD_SIGNALS_MODES;
  47:Generated_Source\PSoC4/PWM.c **** 
  48:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
  49:Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_QUAD_INTERRUPT_MASK);
  50:Generated_Source\PSoC4/PWM.c ****         
  51:Generated_Source\PSoC4/PWM.c ****          /* Set other values */
  52:Generated_Source\PSoC4/PWM.c ****         PWM_SetCounterMode(PWM_COUNT_DOWN);
  53:Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_QUAD_PERIOD_INIT_VALUE);
  54:Generated_Source\PSoC4/PWM.c ****         PWM_WriteCounter(PWM_QUAD_PERIOD_INIT_VALUE);
  55:Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
  56:Generated_Source\PSoC4/PWM.c **** 
  57:Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
  58:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_TIMER_BASE_CONFIG;
  59:Generated_Source\PSoC4/PWM.c ****         
  60:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
  61:Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_TIMER_SIGNALS_MODES;
  62:Generated_Source\PSoC4/PWM.c ****     
  63:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
  64:Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_TC_INTERRUPT_MASK);
  65:Generated_Source\PSoC4/PWM.c ****         
  66:Generated_Source\PSoC4/PWM.c ****         /* Set other values from customizer */
  67:Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_TC_PERIOD_VALUE );
  68:Generated_Source\PSoC4/PWM.c **** 
  69:Generated_Source\PSoC4/PWM.c ****         #if (PWM__COMPARE == PWM_TC_COMP_CAP_MODE)
  70:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare(PWM_TC_COMPARE_VALUE);
  71:Generated_Source\PSoC4/PWM.c **** 
  72:Generated_Source\PSoC4/PWM.c ****             #if (1u == PWM_TC_COMPARE_SWAP)
  73:Generated_Source\PSoC4/PWM.c ****                 PWM_SetCompareSwap(1u);
  74:Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCompareBuf(PWM_TC_COMPARE_BUF_VALUE);
  75:Generated_Source\PSoC4/PWM.c ****             #endif  /* (1u == PWM_TC_COMPARE_SWAP) */
  76:Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__COMPARE == PWM_TC_COMP_CAP_MODE) */
  77:Generated_Source\PSoC4/PWM.c **** 
  78:Generated_Source\PSoC4/PWM.c ****         /* Initialize counter value */
  79:Generated_Source\PSoC4/PWM.c ****         #if (PWM_CY_TCPWM_V2 && PWM_TIMER_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000)
  80:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(1u);
  81:Generated_Source\PSoC4/PWM.c ****         #elif(PWM__COUNT_DOWN == PWM_TC_COUNTER_MODE)
  82:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(PWM_TC_PERIOD_VALUE);
  83:Generated_Source\PSoC4/PWM.c ****         #else
  84:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(0u);
  85:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_CY_TCPWM_V2 && PWM_TIMER_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000) */
  86:Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
  87:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 3


  88:Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
  89:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_PWM_BASE_CONFIG;
  28              		.loc 1 89 0
  29 0000 8022     		mov	r2, #128
  30              	.LBB10:
  31              	.LBB11:
  90:Generated_Source\PSoC4/PWM.c **** 
  91:Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
  92:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_RUN_MODE;
  93:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(PWM_PWM_PR_INIT_VALUE);
  94:Generated_Source\PSoC4/PWM.c ****         #else
  95:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_ALIGN | PWM_CTRL_PWM_KILL_EVENT;
  96:Generated_Source\PSoC4/PWM.c ****             
  97:Generated_Source\PSoC4/PWM.c ****             /* Initialize counter value */
  98:Generated_Source\PSoC4/PWM.c ****             #if (PWM_CY_TCPWM_V2 && PWM_PWM_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000)
  99:Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(1u);
 100:Generated_Source\PSoC4/PWM.c ****             #elif (PWM__RIGHT == PWM_PWM_ALIGN)
 101:Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(PWM_PWM_PERIOD_VALUE);
 102:Generated_Source\PSoC4/PWM.c ****             #else 
 103:Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(0u);
 104:Generated_Source\PSoC4/PWM.c ****             #endif  /* (PWM_CY_TCPWM_V2 && PWM_PWM_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000) */
 105:Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
 106:Generated_Source\PSoC4/PWM.c **** 
 107:Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_DT == PWM_PWM_MODE)
 108:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_DEAD_TIME_CYCLE;
 109:Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_DT == PWM_PWM_MODE) */
 110:Generated_Source\PSoC4/PWM.c **** 
 111:Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM == PWM_PWM_MODE)
 112:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_PRESCALER;
 113:Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM == PWM_PWM_MODE) */
 114:Generated_Source\PSoC4/PWM.c **** 
 115:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
 116:Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_PWM_SIGNALS_MODES;
 117:Generated_Source\PSoC4/PWM.c ****     
 118:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
 119:Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_PWM_INTERRUPT_MASK);
 120:Generated_Source\PSoC4/PWM.c **** 
 121:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL2 */
 122:Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
 123:Generated_Source\PSoC4/PWM.c ****             PWM_TRIG_CONTROL2_REG =
 124:Generated_Source\PSoC4/PWM.c ****                     (PWM_CC_MATCH_NO_CHANGE    |
 125:Generated_Source\PSoC4/PWM.c ****                     PWM_OVERLOW_NO_CHANGE      |
 126:Generated_Source\PSoC4/PWM.c ****                     PWM_UNDERFLOW_NO_CHANGE);
 127:Generated_Source\PSoC4/PWM.c ****         #else
 128:Generated_Source\PSoC4/PWM.c ****             #if (PWM__LEFT == PWM_PWM_ALIGN)
 129:Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_LEFT;
 130:Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_LEFT == PWM_PWM_ALIGN) */
 131:Generated_Source\PSoC4/PWM.c **** 
 132:Generated_Source\PSoC4/PWM.c ****             #if (PWM__RIGHT == PWM_PWM_ALIGN)
 133:Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_RIGHT;
 134:Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_RIGHT == PWM_PWM_ALIGN) */
 135:Generated_Source\PSoC4/PWM.c **** 
 136:Generated_Source\PSoC4/PWM.c ****             #if (PWM__CENTER == PWM_PWM_ALIGN)
 137:Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_CENTER;
 138:Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_CENTER == PWM_PWM_ALIGN) */
 139:Generated_Source\PSoC4/PWM.c **** 
 140:Generated_Source\PSoC4/PWM.c ****             #if (PWM__ASYMMETRIC == PWM_PWM_ALIGN)
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 4


 141:Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_ASYM;
 142:Generated_Source\PSoC4/PWM.c ****             #endif  /* (PWM__ASYMMETRIC == PWM_PWM_ALIGN) */
 143:Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
 144:Generated_Source\PSoC4/PWM.c **** 
 145:Generated_Source\PSoC4/PWM.c ****         /* Set other values from customizer */
 146:Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_PWM_PERIOD_VALUE );
 147:Generated_Source\PSoC4/PWM.c ****         PWM_WriteCompare(PWM_PWM_COMPARE_VALUE);
 148:Generated_Source\PSoC4/PWM.c **** 
 149:Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_COMPARE_SWAP)
 150:Generated_Source\PSoC4/PWM.c ****             PWM_SetCompareSwap(1u);
 151:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompareBuf(PWM_PWM_COMPARE_BUF_VALUE);
 152:Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_COMPARE_SWAP) */
 153:Generated_Source\PSoC4/PWM.c **** 
 154:Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_PERIOD_SWAP)
 155:Generated_Source\PSoC4/PWM.c ****             PWM_SetPeriodSwap(1u);
 156:Generated_Source\PSoC4/PWM.c ****             PWM_WritePeriodBuf(PWM_PWM_PERIOD_BUF_VALUE);
 157:Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_PERIOD_SWAP) */
 158:Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
 159:Generated_Source\PSoC4/PWM.c ****     
 160:Generated_Source\PSoC4/PWM.c **** }
 161:Generated_Source\PSoC4/PWM.c **** 
 162:Generated_Source\PSoC4/PWM.c **** 
 163:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 164:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Enable
 165:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 166:Generated_Source\PSoC4/PWM.c **** *
 167:Generated_Source\PSoC4/PWM.c **** * Summary:
 168:Generated_Source\PSoC4/PWM.c **** *  Enables the PWM.
 169:Generated_Source\PSoC4/PWM.c **** *
 170:Generated_Source\PSoC4/PWM.c **** * Parameters:
 171:Generated_Source\PSoC4/PWM.c **** *  None
 172:Generated_Source\PSoC4/PWM.c **** *
 173:Generated_Source\PSoC4/PWM.c **** * Return:
 174:Generated_Source\PSoC4/PWM.c **** *  None
 175:Generated_Source\PSoC4/PWM.c **** *
 176:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 177:Generated_Source\PSoC4/PWM.c **** void PWM_Enable(void)
 178:Generated_Source\PSoC4/PWM.c **** {
 179:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 180:Generated_Source\PSoC4/PWM.c **** 
 181:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 182:Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG |= PWM_MASK;
 183:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 184:Generated_Source\PSoC4/PWM.c **** 
 185:Generated_Source\PSoC4/PWM.c ****     /* Start Timer or PWM if start input is absent */
 186:Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
 187:Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_PWM_START_SIGNAL_PRESENT)
 188:Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 189:Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_PWM_START_SIGNAL_PRESENT) */
 190:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__PWM_SEL == PWM_CONFIG) */
 191:Generated_Source\PSoC4/PWM.c **** 
 192:Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 193:Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_TC_START_SIGNAL_PRESENT)
 194:Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 195:Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_TC_START_SIGNAL_PRESENT) */
 196:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__TIMER == PWM_CONFIG) */
 197:Generated_Source\PSoC4/PWM.c ****     
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 5


 198:Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
 199:Generated_Source\PSoC4/PWM.c ****         #if (0u != PWM_QUAD_AUTO_START)
 200:Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_RELOAD);
 201:Generated_Source\PSoC4/PWM.c ****         #endif /* (0u != PWM_QUAD_AUTO_START) */
 202:Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
 203:Generated_Source\PSoC4/PWM.c **** }
 204:Generated_Source\PSoC4/PWM.c **** 
 205:Generated_Source\PSoC4/PWM.c **** 
 206:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 207:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Start
 208:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 209:Generated_Source\PSoC4/PWM.c **** *
 210:Generated_Source\PSoC4/PWM.c **** * Summary:
 211:Generated_Source\PSoC4/PWM.c **** *  Initializes the PWM with default customizer
 212:Generated_Source\PSoC4/PWM.c **** *  values when called the first time and enables the PWM.
 213:Generated_Source\PSoC4/PWM.c **** *  For subsequent calls the configuration is left unchanged and the component is
 214:Generated_Source\PSoC4/PWM.c **** *  just enabled.
 215:Generated_Source\PSoC4/PWM.c **** *
 216:Generated_Source\PSoC4/PWM.c **** * Parameters:
 217:Generated_Source\PSoC4/PWM.c **** *  None
 218:Generated_Source\PSoC4/PWM.c **** *
 219:Generated_Source\PSoC4/PWM.c **** * Return:
 220:Generated_Source\PSoC4/PWM.c **** *  None
 221:Generated_Source\PSoC4/PWM.c **** *
 222:Generated_Source\PSoC4/PWM.c **** * Global variables:
 223:Generated_Source\PSoC4/PWM.c **** *  PWM_initVar: global variable is used to indicate initial
 224:Generated_Source\PSoC4/PWM.c **** *  configuration of this component.  The variable is initialized to zero and set
 225:Generated_Source\PSoC4/PWM.c **** *  to 1 the first time PWM_Start() is called. This allows
 226:Generated_Source\PSoC4/PWM.c **** *  enabling/disabling a component without re-initialization in all subsequent
 227:Generated_Source\PSoC4/PWM.c **** *  calls to the PWM_Start() routine.
 228:Generated_Source\PSoC4/PWM.c **** *
 229:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 230:Generated_Source\PSoC4/PWM.c **** void PWM_Start(void)
 231:Generated_Source\PSoC4/PWM.c **** {
 232:Generated_Source\PSoC4/PWM.c ****     if (0u == PWM_initVar)
 233:Generated_Source\PSoC4/PWM.c ****     {
 234:Generated_Source\PSoC4/PWM.c ****         PWM_Init();
 235:Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 236:Generated_Source\PSoC4/PWM.c ****     }
 237:Generated_Source\PSoC4/PWM.c **** 
 238:Generated_Source\PSoC4/PWM.c ****     PWM_Enable();
 239:Generated_Source\PSoC4/PWM.c **** }
 240:Generated_Source\PSoC4/PWM.c **** 
 241:Generated_Source\PSoC4/PWM.c **** 
 242:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 243:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Stop
 244:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 245:Generated_Source\PSoC4/PWM.c **** *
 246:Generated_Source\PSoC4/PWM.c **** * Summary:
 247:Generated_Source\PSoC4/PWM.c **** *  Disables the PWM.
 248:Generated_Source\PSoC4/PWM.c **** *
 249:Generated_Source\PSoC4/PWM.c **** * Parameters:
 250:Generated_Source\PSoC4/PWM.c **** *  None
 251:Generated_Source\PSoC4/PWM.c **** *
 252:Generated_Source\PSoC4/PWM.c **** * Return:
 253:Generated_Source\PSoC4/PWM.c **** *  None
 254:Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 6


 255:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 256:Generated_Source\PSoC4/PWM.c **** void PWM_Stop(void)
 257:Generated_Source\PSoC4/PWM.c **** {
 258:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 259:Generated_Source\PSoC4/PWM.c **** 
 260:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 261:Generated_Source\PSoC4/PWM.c **** 
 262:Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG &= (uint32)~PWM_MASK;
 263:Generated_Source\PSoC4/PWM.c **** 
 264:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 265:Generated_Source\PSoC4/PWM.c **** }
 266:Generated_Source\PSoC4/PWM.c **** 
 267:Generated_Source\PSoC4/PWM.c **** 
 268:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 269:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetMode
 270:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 271:Generated_Source\PSoC4/PWM.c **** *
 272:Generated_Source\PSoC4/PWM.c **** * Summary:
 273:Generated_Source\PSoC4/PWM.c **** *  Sets the operation mode of the PWM. This function is used when
 274:Generated_Source\PSoC4/PWM.c **** *  configured as a generic PWM and the actual mode of operation is
 275:Generated_Source\PSoC4/PWM.c **** *  set at runtime. The mode must be set while the component is disabled.
 276:Generated_Source\PSoC4/PWM.c **** *
 277:Generated_Source\PSoC4/PWM.c **** * Parameters:
 278:Generated_Source\PSoC4/PWM.c **** *  mode: Mode for the PWM to operate in
 279:Generated_Source\PSoC4/PWM.c **** *   Values:
 280:Generated_Source\PSoC4/PWM.c **** *   - PWM_MODE_TIMER_COMPARE - Timer / Counter with
 281:Generated_Source\PSoC4/PWM.c **** *                                                 compare capability
 282:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_TIMER_CAPTURE - Timer / Counter with
 283:Generated_Source\PSoC4/PWM.c **** *                                                 capture capability
 284:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_QUAD - Quadrature decoder
 285:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM - PWM
 286:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_DT - PWM with dead time
 287:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_PR - PWM with pseudo random capability
 288:Generated_Source\PSoC4/PWM.c **** *
 289:Generated_Source\PSoC4/PWM.c **** * Return:
 290:Generated_Source\PSoC4/PWM.c **** *  None
 291:Generated_Source\PSoC4/PWM.c **** *
 292:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 293:Generated_Source\PSoC4/PWM.c **** void PWM_SetMode(uint32 mode)
 294:Generated_Source\PSoC4/PWM.c **** {
 295:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 296:Generated_Source\PSoC4/PWM.c **** 
 297:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 298:Generated_Source\PSoC4/PWM.c **** 
 299:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_MODE_MASK;
 300:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mode;
 301:Generated_Source\PSoC4/PWM.c **** 
 302:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 303:Generated_Source\PSoC4/PWM.c **** }
 304:Generated_Source\PSoC4/PWM.c **** 
 305:Generated_Source\PSoC4/PWM.c **** 
 306:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 307:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetQDMode
 308:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 309:Generated_Source\PSoC4/PWM.c **** *
 310:Generated_Source\PSoC4/PWM.c **** * Summary:
 311:Generated_Source\PSoC4/PWM.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 7


 312:Generated_Source\PSoC4/PWM.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 313:Generated_Source\PSoC4/PWM.c **** *
 314:Generated_Source\PSoC4/PWM.c **** * Parameters:
 315:Generated_Source\PSoC4/PWM.c **** *  qdMode: Quadrature Decoder mode
 316:Generated_Source\PSoC4/PWM.c **** *   Values:
 317:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X1 - Counts on phi 1 rising
 318:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X2 - Counts on both edges of phi1 (2x faster)
 319:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X4 - Counts on both edges of phi1 and phi2
 320:Generated_Source\PSoC4/PWM.c **** *                                        (4x faster)
 321:Generated_Source\PSoC4/PWM.c **** *
 322:Generated_Source\PSoC4/PWM.c **** * Return:
 323:Generated_Source\PSoC4/PWM.c **** *  None
 324:Generated_Source\PSoC4/PWM.c **** *
 325:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 326:Generated_Source\PSoC4/PWM.c **** void PWM_SetQDMode(uint32 qdMode)
 327:Generated_Source\PSoC4/PWM.c **** {
 328:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 329:Generated_Source\PSoC4/PWM.c **** 
 330:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 331:Generated_Source\PSoC4/PWM.c **** 
 332:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_QUAD_MODE_MASK;
 333:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= qdMode;
 334:Generated_Source\PSoC4/PWM.c **** 
 335:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 336:Generated_Source\PSoC4/PWM.c **** }
 337:Generated_Source\PSoC4/PWM.c **** 
 338:Generated_Source\PSoC4/PWM.c **** 
 339:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 340:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPrescaler
 341:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 342:Generated_Source\PSoC4/PWM.c **** *
 343:Generated_Source\PSoC4/PWM.c **** * Summary:
 344:Generated_Source\PSoC4/PWM.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 345:Generated_Source\PSoC4/PWM.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 346:Generated_Source\PSoC4/PWM.c **** *
 347:Generated_Source\PSoC4/PWM.c **** * Parameters:
 348:Generated_Source\PSoC4/PWM.c **** *  prescaler: Prescaler divider value
 349:Generated_Source\PSoC4/PWM.c **** *   Values:
 350:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 351:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY2    - Divide by 2
 352:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY4    - Divide by 4
 353:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY8    - Divide by 8
 354:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY16   - Divide by 16
 355:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY32   - Divide by 32
 356:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY64   - Divide by 64
 357:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY128  - Divide by 128
 358:Generated_Source\PSoC4/PWM.c **** *
 359:Generated_Source\PSoC4/PWM.c **** * Return:
 360:Generated_Source\PSoC4/PWM.c **** *  None
 361:Generated_Source\PSoC4/PWM.c **** *
 362:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 363:Generated_Source\PSoC4/PWM.c **** void PWM_SetPrescaler(uint32 prescaler)
 364:Generated_Source\PSoC4/PWM.c **** {
 365:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 366:Generated_Source\PSoC4/PWM.c **** 
 367:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 368:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 8


 369:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 370:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= prescaler;
 371:Generated_Source\PSoC4/PWM.c **** 
 372:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 373:Generated_Source\PSoC4/PWM.c **** }
 374:Generated_Source\PSoC4/PWM.c **** 
 375:Generated_Source\PSoC4/PWM.c **** 
 376:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 377:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetOneShot
 378:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 379:Generated_Source\PSoC4/PWM.c **** *
 380:Generated_Source\PSoC4/PWM.c **** * Summary:
 381:Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM runs
 382:Generated_Source\PSoC4/PWM.c **** *  continuously or stops when terminal count is reached.  By default the
 383:Generated_Source\PSoC4/PWM.c **** *  PWM operates in the continuous mode.
 384:Generated_Source\PSoC4/PWM.c **** *
 385:Generated_Source\PSoC4/PWM.c **** * Parameters:
 386:Generated_Source\PSoC4/PWM.c **** *  oneShotEnable
 387:Generated_Source\PSoC4/PWM.c **** *   Values:
 388:Generated_Source\PSoC4/PWM.c **** *     - 0 - Continuous
 389:Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable One Shot
 390:Generated_Source\PSoC4/PWM.c **** *
 391:Generated_Source\PSoC4/PWM.c **** * Return:
 392:Generated_Source\PSoC4/PWM.c **** *  None
 393:Generated_Source\PSoC4/PWM.c **** *
 394:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 395:Generated_Source\PSoC4/PWM.c **** void PWM_SetOneShot(uint32 oneShotEnable)
 396:Generated_Source\PSoC4/PWM.c **** {
 397:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 398:Generated_Source\PSoC4/PWM.c **** 
 399:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 400:Generated_Source\PSoC4/PWM.c **** 
 401:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_ONESHOT_MASK;
 402:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_1BIT_MASK) <<
 403:Generated_Source\PSoC4/PWM.c ****                                                                PWM_ONESHOT_SHIFT));
 404:Generated_Source\PSoC4/PWM.c **** 
 405:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 406:Generated_Source\PSoC4/PWM.c **** }
 407:Generated_Source\PSoC4/PWM.c **** 
 408:Generated_Source\PSoC4/PWM.c **** 
 409:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 410:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMMode
 411:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 412:Generated_Source\PSoC4/PWM.c **** *
 413:Generated_Source\PSoC4/PWM.c **** * Summary:
 414:Generated_Source\PSoC4/PWM.c **** *  Writes the control register that determines what mode of operation the PWM
 415:Generated_Source\PSoC4/PWM.c **** *  output lines are driven in.  There is a setting for what to do on a
 416:Generated_Source\PSoC4/PWM.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 417:Generated_Source\PSoC4/PWM.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 418:Generated_Source\PSoC4/PWM.c **** *  the mode.
 419:Generated_Source\PSoC4/PWM.c **** *
 420:Generated_Source\PSoC4/PWM.c **** * Parameters:
 421:Generated_Source\PSoC4/PWM.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 422:Generated_Source\PSoC4/PWM.c **** *  for each of the three or use one of the preconfigured PWM settings.
 423:Generated_Source\PSoC4/PWM.c **** *   Values:
 424:Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_SET        - Set on comparison match
 425:Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 9


 426:Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 427:Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 428:Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_SET         - Set on overflow
 429:Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 430:Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_INVERT      - Invert on overflow
 431:Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 432:Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_SET       - Set on underflow
 433:Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 434:Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 435:Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 436:Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 437:Generated_Source\PSoC4/PWM.c **** *                             with up counting mode
 438:Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 439:Generated_Source\PSoC4/PWM.c **** *                             with down counting mode
 440:Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 441:Generated_Source\PSoC4/PWM.c **** *                             combined with up/down 0 mode
 442:Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 443:Generated_Source\PSoC4/PWM.c **** *                             with up/down 1 mode
 444:Generated_Source\PSoC4/PWM.c **** *
 445:Generated_Source\PSoC4/PWM.c **** * Return:
 446:Generated_Source\PSoC4/PWM.c **** *  None
 447:Generated_Source\PSoC4/PWM.c **** *
 448:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 449:Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMMode(uint32 modeMask)
 450:Generated_Source\PSoC4/PWM.c **** {
 451:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL2_REG = (modeMask & PWM_6BIT_MASK);
 452:Generated_Source\PSoC4/PWM.c **** }
 453:Generated_Source\PSoC4/PWM.c **** 
 454:Generated_Source\PSoC4/PWM.c **** 
 455:Generated_Source\PSoC4/PWM.c **** 
 456:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 457:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMSyncKill
 458:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 459:Generated_Source\PSoC4/PWM.c **** *
 460:Generated_Source\PSoC4/PWM.c **** * Summary:
 461:Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 462:Generated_Source\PSoC4/PWM.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 463:Generated_Source\PSoC4/PWM.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 464:Generated_Source\PSoC4/PWM.c **** *  and PWM with dead time modes.
 465:Generated_Source\PSoC4/PWM.c **** *
 466:Generated_Source\PSoC4/PWM.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 467:Generated_Source\PSoC4/PWM.c **** *  signals until the next terminal count.
 468:Generated_Source\PSoC4/PWM.c **** *
 469:Generated_Source\PSoC4/PWM.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 470:Generated_Source\PSoC4/PWM.c **** *  signals when the kill signal is present.  This mode should only be used
 471:Generated_Source\PSoC4/PWM.c **** *  when the kill signal (stop input) is configured in the pass through mode
 472:Generated_Source\PSoC4/PWM.c **** *  (Level sensitive signal).
 473:Generated_Source\PSoC4/PWM.c **** 
 474:Generated_Source\PSoC4/PWM.c **** *
 475:Generated_Source\PSoC4/PWM.c **** * Parameters:
 476:Generated_Source\PSoC4/PWM.c **** *  syncKillEnable
 477:Generated_Source\PSoC4/PWM.c **** *   Values:
 478:Generated_Source\PSoC4/PWM.c **** *     - 0 - Asynchronous
 479:Generated_Source\PSoC4/PWM.c **** *     - 1 - Synchronous
 480:Generated_Source\PSoC4/PWM.c **** *
 481:Generated_Source\PSoC4/PWM.c **** * Return:
 482:Generated_Source\PSoC4/PWM.c **** *  None
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 10


 483:Generated_Source\PSoC4/PWM.c **** *
 484:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 485:Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMSyncKill(uint32 syncKillEnable)
 486:Generated_Source\PSoC4/PWM.c **** {
 487:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 488:Generated_Source\PSoC4/PWM.c **** 
 489:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 490:Generated_Source\PSoC4/PWM.c **** 
 491:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_SYNC_KILL_MASK;
 492:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_1BIT_MASK)  <<
 493:Generated_Source\PSoC4/PWM.c ****                                                PWM_PWM_SYNC_KILL_SHIFT));
 494:Generated_Source\PSoC4/PWM.c **** 
 495:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 496:Generated_Source\PSoC4/PWM.c **** }
 497:Generated_Source\PSoC4/PWM.c **** 
 498:Generated_Source\PSoC4/PWM.c **** 
 499:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 500:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMStopOnKill
 501:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 502:Generated_Source\PSoC4/PWM.c **** *
 503:Generated_Source\PSoC4/PWM.c **** * Summary:
 504:Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 505:Generated_Source\PSoC4/PWM.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 506:Generated_Source\PSoC4/PWM.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 507:Generated_Source\PSoC4/PWM.c **** *
 508:Generated_Source\PSoC4/PWM.c **** *
 509:Generated_Source\PSoC4/PWM.c **** * Parameters:
 510:Generated_Source\PSoC4/PWM.c **** *  stopOnKillEnable
 511:Generated_Source\PSoC4/PWM.c **** *   Values:
 512:Generated_Source\PSoC4/PWM.c **** *     - 0 - Don't stop
 513:Generated_Source\PSoC4/PWM.c **** *     - 1 - Stop
 514:Generated_Source\PSoC4/PWM.c **** *
 515:Generated_Source\PSoC4/PWM.c **** * Return:
 516:Generated_Source\PSoC4/PWM.c **** *  None
 517:Generated_Source\PSoC4/PWM.c **** *
 518:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 519:Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMStopOnKill(uint32 stopOnKillEnable)
 520:Generated_Source\PSoC4/PWM.c **** {
 521:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 522:Generated_Source\PSoC4/PWM.c **** 
 523:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 524:Generated_Source\PSoC4/PWM.c **** 
 525:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_STOP_KILL_MASK;
 526:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_1BIT_MASK)  <<
 527:Generated_Source\PSoC4/PWM.c ****                                                          PWM_PWM_STOP_KILL_SHIFT));
 528:Generated_Source\PSoC4/PWM.c **** 
 529:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 530:Generated_Source\PSoC4/PWM.c **** }
 531:Generated_Source\PSoC4/PWM.c **** 
 532:Generated_Source\PSoC4/PWM.c **** 
 533:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 534:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMDeadTime
 535:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 536:Generated_Source\PSoC4/PWM.c **** *
 537:Generated_Source\PSoC4/PWM.c **** * Summary:
 538:Generated_Source\PSoC4/PWM.c **** *  Writes the dead time control value.  This value delays the rising edge of
 539:Generated_Source\PSoC4/PWM.c **** *  both the line and line_n signals the designated number of cycles resulting
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 11


 540:Generated_Source\PSoC4/PWM.c **** *  in both signals being inactive for that many cycles.  This functionality is
 541:Generated_Source\PSoC4/PWM.c **** *  only applicable to the PWM in the dead time mode.
 542:Generated_Source\PSoC4/PWM.c **** 
 543:Generated_Source\PSoC4/PWM.c **** *
 544:Generated_Source\PSoC4/PWM.c **** * Parameters:
 545:Generated_Source\PSoC4/PWM.c **** *  Dead time to insert
 546:Generated_Source\PSoC4/PWM.c **** *   Values: 0 to 255
 547:Generated_Source\PSoC4/PWM.c **** *
 548:Generated_Source\PSoC4/PWM.c **** * Return:
 549:Generated_Source\PSoC4/PWM.c **** *  None
 550:Generated_Source\PSoC4/PWM.c **** *
 551:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 552:Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMDeadTime(uint32 deadTime)
 553:Generated_Source\PSoC4/PWM.c **** {
 554:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 555:Generated_Source\PSoC4/PWM.c **** 
 556:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 557:Generated_Source\PSoC4/PWM.c **** 
 558:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 559:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((deadTime & PWM_8BIT_MASK) <<
 560:Generated_Source\PSoC4/PWM.c ****                                                           PWM_PRESCALER_SHIFT));
 561:Generated_Source\PSoC4/PWM.c **** 
 562:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 563:Generated_Source\PSoC4/PWM.c **** }
 564:Generated_Source\PSoC4/PWM.c **** 
 565:Generated_Source\PSoC4/PWM.c **** 
 566:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 567:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMInvert
 568:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 569:Generated_Source\PSoC4/PWM.c **** *
 570:Generated_Source\PSoC4/PWM.c **** * Summary:
 571:Generated_Source\PSoC4/PWM.c **** *  Writes the bits that control whether the line and line_n outputs are
 572:Generated_Source\PSoC4/PWM.c **** *  inverted from their normal output values.  This functionality is only
 573:Generated_Source\PSoC4/PWM.c **** *  applicable to the three PWM modes.
 574:Generated_Source\PSoC4/PWM.c **** *
 575:Generated_Source\PSoC4/PWM.c **** * Parameters:
 576:Generated_Source\PSoC4/PWM.c **** *  mask: Mask of outputs to invert.
 577:Generated_Source\PSoC4/PWM.c **** *   Values:
 578:Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE   - Inverts the line output
 579:Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE_N - Inverts the line_n output
 580:Generated_Source\PSoC4/PWM.c **** *
 581:Generated_Source\PSoC4/PWM.c **** * Return:
 582:Generated_Source\PSoC4/PWM.c **** *  None
 583:Generated_Source\PSoC4/PWM.c **** *
 584:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 585:Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMInvert(uint32 mask)
 586:Generated_Source\PSoC4/PWM.c **** {
 587:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 588:Generated_Source\PSoC4/PWM.c **** 
 589:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 590:Generated_Source\PSoC4/PWM.c **** 
 591:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_INV_OUT_MASK;
 592:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mask;
 593:Generated_Source\PSoC4/PWM.c **** 
 594:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 595:Generated_Source\PSoC4/PWM.c **** }
 596:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 12


 597:Generated_Source\PSoC4/PWM.c **** 
 598:Generated_Source\PSoC4/PWM.c **** 
 599:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 600:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCounter
 601:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 602:Generated_Source\PSoC4/PWM.c **** *
 603:Generated_Source\PSoC4/PWM.c **** * Summary:
 604:Generated_Source\PSoC4/PWM.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 605:Generated_Source\PSoC4/PWM.c **** *  setting the counter (not the period) to the value written. It is not
 606:Generated_Source\PSoC4/PWM.c **** *  advised to write to this field when the counter is running.
 607:Generated_Source\PSoC4/PWM.c **** *
 608:Generated_Source\PSoC4/PWM.c **** * Parameters:
 609:Generated_Source\PSoC4/PWM.c **** *  count: value to write
 610:Generated_Source\PSoC4/PWM.c **** *
 611:Generated_Source\PSoC4/PWM.c **** * Return:
 612:Generated_Source\PSoC4/PWM.c **** *  None
 613:Generated_Source\PSoC4/PWM.c **** *
 614:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 615:Generated_Source\PSoC4/PWM.c **** void PWM_WriteCounter(uint32 count)
 616:Generated_Source\PSoC4/PWM.c **** {
 617:Generated_Source\PSoC4/PWM.c ****     PWM_COUNTER_REG = (count & PWM_16BIT_MASK);
  32              		.loc 1 617 0
  33 0002 0021     		mov	r1, #0
  34              	.LBE11:
  35              	.LBE10:
 112:Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM == PWM_PWM_MODE) */
  36              		.loc 1 112 0
  37 0004 E020     		mov	r0, #224
  89:Generated_Source\PSoC4/PWM.c **** 
  38              		.loc 1 89 0
  39 0006 0D4B     		ldr	r3, .L2
  40 0008 D204     		lsl	r2, r2, #19
  41 000a 1A60     		str	r2, [r3]
  95:Generated_Source\PSoC4/PWM.c ****             
  42              		.loc 1 95 0
  43 000c 1A68     		ldr	r2, [r3]
 112:Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM == PWM_PWM_MODE) */
  44              		.loc 1 112 0
  45 000e C000     		lsl	r0, r0, #3
  95:Generated_Source\PSoC4/PWM.c ****             
  46              		.loc 1 95 0
  47 0010 1A60     		str	r2, [r3]
  48              	.LVL0:
  49              	.LBB14:
  50              	.LBB12:
  51              		.loc 1 617 0
  52 0012 0B4A     		ldr	r2, .L2+4
  53              	.LBE12:
  54              	.LBE14:
 160:Generated_Source\PSoC4/PWM.c **** 
  55              		.loc 1 160 0
  56              		@ sp needed
  57              	.LBB15:
  58              	.LBB13:
  59              		.loc 1 617 0
  60 0014 1160     		str	r1, [r2]
  61              	.LBE13:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 13


  62              	.LBE15:
 112:Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM == PWM_PWM_MODE) */
  63              		.loc 1 112 0
  64 0016 1A68     		ldr	r2, [r3]
  65 0018 0243     		orr	r2, r0
  66 001a 1A60     		str	r2, [r3]
 116:Generated_Source\PSoC4/PWM.c ****     
  67              		.loc 1 116 0
  68 001c C322     		mov	r2, #195
  69 001e 094B     		ldr	r3, .L2+8
  70 0020 9200     		lsl	r2, r2, #2
  71 0022 1A60     		str	r2, [r3]
  72              	.LVL1:
 129:Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_LEFT == PWM_PWM_ALIGN) */
  73              		.loc 1 129 0
  74 0024 3122     		mov	r2, #49
  75              	.LBB16:
  76              	.LBB17:
 618:Generated_Source\PSoC4/PWM.c **** }
 619:Generated_Source\PSoC4/PWM.c **** 
 620:Generated_Source\PSoC4/PWM.c **** 
 621:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCounter
 623:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 624:Generated_Source\PSoC4/PWM.c **** *
 625:Generated_Source\PSoC4/PWM.c **** * Summary:
 626:Generated_Source\PSoC4/PWM.c **** *  Reads the current counter value.
 627:Generated_Source\PSoC4/PWM.c **** *
 628:Generated_Source\PSoC4/PWM.c **** * Parameters:
 629:Generated_Source\PSoC4/PWM.c **** *  None
 630:Generated_Source\PSoC4/PWM.c **** *
 631:Generated_Source\PSoC4/PWM.c **** * Return:
 632:Generated_Source\PSoC4/PWM.c **** *  Current counter value
 633:Generated_Source\PSoC4/PWM.c **** *
 634:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 635:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCounter(void)
 636:Generated_Source\PSoC4/PWM.c **** {
 637:Generated_Source\PSoC4/PWM.c ****     return (PWM_COUNTER_REG & PWM_16BIT_MASK);
 638:Generated_Source\PSoC4/PWM.c **** }
 639:Generated_Source\PSoC4/PWM.c **** 
 640:Generated_Source\PSoC4/PWM.c **** 
 641:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 642:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCounterMode
 643:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 644:Generated_Source\PSoC4/PWM.c **** *
 645:Generated_Source\PSoC4/PWM.c **** * Summary:
 646:Generated_Source\PSoC4/PWM.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 647:Generated_Source\PSoC4/PWM.c **** *  and the PWM with a pseudo random output.
 648:Generated_Source\PSoC4/PWM.c **** *
 649:Generated_Source\PSoC4/PWM.c **** * Parameters:
 650:Generated_Source\PSoC4/PWM.c **** *  counterMode: Enumerated counter type values
 651:Generated_Source\PSoC4/PWM.c **** *   Values:
 652:Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UP       - Counts up
 653:Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_DOWN     - Counts down
 654:Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN0  - Counts up and down. Terminal count
 655:Generated_Source\PSoC4/PWM.c **** *                                         generated when counter reaches 0
 656:Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN1  - Counts up and down. Terminal count
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 14


 657:Generated_Source\PSoC4/PWM.c **** *                                         generated both when counter reaches 0
 658:Generated_Source\PSoC4/PWM.c **** *                                         and period
 659:Generated_Source\PSoC4/PWM.c **** *
 660:Generated_Source\PSoC4/PWM.c **** * Return:
 661:Generated_Source\PSoC4/PWM.c **** *  None
 662:Generated_Source\PSoC4/PWM.c **** *
 663:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 664:Generated_Source\PSoC4/PWM.c **** void PWM_SetCounterMode(uint32 counterMode)
 665:Generated_Source\PSoC4/PWM.c **** {
 666:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 667:Generated_Source\PSoC4/PWM.c **** 
 668:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 669:Generated_Source\PSoC4/PWM.c **** 
 670:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_UPDOWN_MASK;
 671:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= counterMode;
 672:Generated_Source\PSoC4/PWM.c **** 
 673:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 674:Generated_Source\PSoC4/PWM.c **** }
 675:Generated_Source\PSoC4/PWM.c **** 
 676:Generated_Source\PSoC4/PWM.c **** 
 677:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 678:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriod
 679:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 680:Generated_Source\PSoC4/PWM.c **** *
 681:Generated_Source\PSoC4/PWM.c **** * Summary:
 682:Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period register with the new period value.
 683:Generated_Source\PSoC4/PWM.c **** *  To cause the counter to count for N cycles this register should be written
 684:Generated_Source\PSoC4/PWM.c **** *  with N-1 (counts from 0 to period inclusive).
 685:Generated_Source\PSoC4/PWM.c **** *
 686:Generated_Source\PSoC4/PWM.c **** * Parameters:
 687:Generated_Source\PSoC4/PWM.c **** *  period: Period value
 688:Generated_Source\PSoC4/PWM.c **** *
 689:Generated_Source\PSoC4/PWM.c **** * Return:
 690:Generated_Source\PSoC4/PWM.c **** *  None
 691:Generated_Source\PSoC4/PWM.c **** *
 692:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 693:Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriod(uint32 period)
 694:Generated_Source\PSoC4/PWM.c **** {
 695:Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_REG = (period & PWM_16BIT_MASK);
 696:Generated_Source\PSoC4/PWM.c **** }
 697:Generated_Source\PSoC4/PWM.c **** 
 698:Generated_Source\PSoC4/PWM.c **** 
 699:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 700:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriod
 701:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 702:Generated_Source\PSoC4/PWM.c **** *
 703:Generated_Source\PSoC4/PWM.c **** * Summary:
 704:Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period register.
 705:Generated_Source\PSoC4/PWM.c **** *
 706:Generated_Source\PSoC4/PWM.c **** * Parameters:
 707:Generated_Source\PSoC4/PWM.c **** *  None
 708:Generated_Source\PSoC4/PWM.c **** *
 709:Generated_Source\PSoC4/PWM.c **** * Return:
 710:Generated_Source\PSoC4/PWM.c **** *  Period value
 711:Generated_Source\PSoC4/PWM.c **** *
 712:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 713:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriod(void)
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 15


 714:Generated_Source\PSoC4/PWM.c **** {
 715:Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_REG & PWM_16BIT_MASK);
 716:Generated_Source\PSoC4/PWM.c **** }
 717:Generated_Source\PSoC4/PWM.c **** 
 718:Generated_Source\PSoC4/PWM.c **** 
 719:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 720:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCompareSwap
 721:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 722:Generated_Source\PSoC4/PWM.c **** *
 723:Generated_Source\PSoC4/PWM.c **** * Summary:
 724:Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the compare registers are
 725:Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 726:Generated_Source\PSoC4/PWM.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 727:Generated_Source\PSoC4/PWM.c **** *  following a hardware switch event.
 728:Generated_Source\PSoC4/PWM.c **** *
 729:Generated_Source\PSoC4/PWM.c **** * Parameters:
 730:Generated_Source\PSoC4/PWM.c **** *  swapEnable
 731:Generated_Source\PSoC4/PWM.c **** *   Values:
 732:Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 733:Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 734:Generated_Source\PSoC4/PWM.c **** *
 735:Generated_Source\PSoC4/PWM.c **** * Return:
 736:Generated_Source\PSoC4/PWM.c **** *  None
 737:Generated_Source\PSoC4/PWM.c **** *
 738:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 739:Generated_Source\PSoC4/PWM.c **** void PWM_SetCompareSwap(uint32 swapEnable)
 740:Generated_Source\PSoC4/PWM.c **** {
 741:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 742:Generated_Source\PSoC4/PWM.c **** 
 743:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 744:Generated_Source\PSoC4/PWM.c **** 
 745:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_CC_MASK;
 746:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= (swapEnable & PWM_1BIT_MASK);
 747:Generated_Source\PSoC4/PWM.c **** 
 748:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 749:Generated_Source\PSoC4/PWM.c **** }
 750:Generated_Source\PSoC4/PWM.c **** 
 751:Generated_Source\PSoC4/PWM.c **** 
 752:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 753:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriodBuf
 754:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 755:Generated_Source\PSoC4/PWM.c **** *
 756:Generated_Source\PSoC4/PWM.c **** * Summary:
 757:Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period buf register with the new period value.
 758:Generated_Source\PSoC4/PWM.c **** *
 759:Generated_Source\PSoC4/PWM.c **** * Parameters:
 760:Generated_Source\PSoC4/PWM.c **** *  periodBuf: Period value
 761:Generated_Source\PSoC4/PWM.c **** *
 762:Generated_Source\PSoC4/PWM.c **** * Return:
 763:Generated_Source\PSoC4/PWM.c **** *  None
 764:Generated_Source\PSoC4/PWM.c **** *
 765:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 766:Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriodBuf(uint32 periodBuf)
 767:Generated_Source\PSoC4/PWM.c **** {
 768:Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_BUF_REG = (periodBuf & PWM_16BIT_MASK);
 769:Generated_Source\PSoC4/PWM.c **** }
 770:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 16


 771:Generated_Source\PSoC4/PWM.c **** 
 772:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriodBuf
 774:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 775:Generated_Source\PSoC4/PWM.c **** *
 776:Generated_Source\PSoC4/PWM.c **** * Summary:
 777:Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period buf register.
 778:Generated_Source\PSoC4/PWM.c **** *
 779:Generated_Source\PSoC4/PWM.c **** * Parameters:
 780:Generated_Source\PSoC4/PWM.c **** *  None
 781:Generated_Source\PSoC4/PWM.c **** *
 782:Generated_Source\PSoC4/PWM.c **** * Return:
 783:Generated_Source\PSoC4/PWM.c **** *  Period value
 784:Generated_Source\PSoC4/PWM.c **** *
 785:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 786:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriodBuf(void)
 787:Generated_Source\PSoC4/PWM.c **** {
 788:Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_BUF_REG & PWM_16BIT_MASK);
 789:Generated_Source\PSoC4/PWM.c **** }
 790:Generated_Source\PSoC4/PWM.c **** 
 791:Generated_Source\PSoC4/PWM.c **** 
 792:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 793:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPeriodSwap
 794:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 795:Generated_Source\PSoC4/PWM.c **** *
 796:Generated_Source\PSoC4/PWM.c **** * Summary:
 797:Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the period registers are
 798:Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 799:Generated_Source\PSoC4/PWM.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 800:Generated_Source\PSoC4/PWM.c **** *  switch event.
 801:Generated_Source\PSoC4/PWM.c **** *
 802:Generated_Source\PSoC4/PWM.c **** * Parameters:
 803:Generated_Source\PSoC4/PWM.c **** *  swapEnable
 804:Generated_Source\PSoC4/PWM.c **** *   Values:
 805:Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 806:Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 807:Generated_Source\PSoC4/PWM.c **** *
 808:Generated_Source\PSoC4/PWM.c **** * Return:
 809:Generated_Source\PSoC4/PWM.c **** *  None
 810:Generated_Source\PSoC4/PWM.c **** *
 811:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 812:Generated_Source\PSoC4/PWM.c **** void PWM_SetPeriodSwap(uint32 swapEnable)
 813:Generated_Source\PSoC4/PWM.c **** {
 814:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 815:Generated_Source\PSoC4/PWM.c **** 
 816:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 817:Generated_Source\PSoC4/PWM.c **** 
 818:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_PERIOD_MASK;
 819:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((swapEnable & PWM_1BIT_MASK) <<
 820:Generated_Source\PSoC4/PWM.c ****                                                             PWM_RELOAD_PERIOD_SHIFT));
 821:Generated_Source\PSoC4/PWM.c **** 
 822:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 823:Generated_Source\PSoC4/PWM.c **** }
 824:Generated_Source\PSoC4/PWM.c **** 
 825:Generated_Source\PSoC4/PWM.c **** 
 826:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 827:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompare
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 17


 828:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 829:Generated_Source\PSoC4/PWM.c **** *
 830:Generated_Source\PSoC4/PWM.c **** * Summary:
 831:Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare register with the new compare value. Not
 832:Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 833:Generated_Source\PSoC4/PWM.c **** *
 834:Generated_Source\PSoC4/PWM.c **** * Parameters:
 835:Generated_Source\PSoC4/PWM.c **** *  compare: Compare value
 836:Generated_Source\PSoC4/PWM.c **** *
 837:Generated_Source\PSoC4/PWM.c **** * Return:
 838:Generated_Source\PSoC4/PWM.c **** *  None
 839:Generated_Source\PSoC4/PWM.c **** *
 840:Generated_Source\PSoC4/PWM.c **** * Note:
 841:Generated_Source\PSoC4/PWM.c **** *  It is not recommended to use the value equal to "0" or equal to 
 842:Generated_Source\PSoC4/PWM.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 843:Generated_Source\PSoC4/PWM.c **** *  PSoC 4100/PSoC 4200 devices.
 844:Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 845:Generated_Source\PSoC4/PWM.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 846:Generated_Source\PSoC4/PWM.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 847:Generated_Source\PSoC4/PWM.c **** *
 848:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 849:Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompare(uint32 compare)
 850:Generated_Source\PSoC4/PWM.c **** {
 851:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 852:Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 853:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 854:Generated_Source\PSoC4/PWM.c **** 
 855:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 856:Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 857:Generated_Source\PSoC4/PWM.c **** 
 858:Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 859:Generated_Source\PSoC4/PWM.c ****         {
 860:Generated_Source\PSoC4/PWM.c ****             compare++;
 861:Generated_Source\PSoC4/PWM.c ****         }
 862:Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0u != compare))
 863:Generated_Source\PSoC4/PWM.c ****         {
 864:Generated_Source\PSoC4/PWM.c ****             compare--;
 865:Generated_Source\PSoC4/PWM.c ****         }
 866:Generated_Source\PSoC4/PWM.c ****         else
 867:Generated_Source\PSoC4/PWM.c ****         {
 868:Generated_Source\PSoC4/PWM.c ****         }
 869:Generated_Source\PSoC4/PWM.c ****         
 870:Generated_Source\PSoC4/PWM.c ****     
 871:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 872:Generated_Source\PSoC4/PWM.c ****     
 873:Generated_Source\PSoC4/PWM.c ****     PWM_COMP_CAP_REG = (compare & PWM_16BIT_MASK);
 874:Generated_Source\PSoC4/PWM.c **** }
 875:Generated_Source\PSoC4/PWM.c **** 
 876:Generated_Source\PSoC4/PWM.c **** 
 877:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 878:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompare
 879:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 880:Generated_Source\PSoC4/PWM.c **** *
 881:Generated_Source\PSoC4/PWM.c **** * Summary:
 882:Generated_Source\PSoC4/PWM.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 883:Generated_Source\PSoC4/PWM.c **** *  or in Quadrature Decoder modes.
 884:Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices read the incremented compare register value in the 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 18


 885:Generated_Source\PSoC4/PWM.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 886:Generated_Source\PSoC4/PWM.c **** *  Down counting mode (except 0x0u).
 887:Generated_Source\PSoC4/PWM.c **** *
 888:Generated_Source\PSoC4/PWM.c **** * Parameters:
 889:Generated_Source\PSoC4/PWM.c **** *  None
 890:Generated_Source\PSoC4/PWM.c **** *
 891:Generated_Source\PSoC4/PWM.c **** * Return:
 892:Generated_Source\PSoC4/PWM.c **** *  Compare value
 893:Generated_Source\PSoC4/PWM.c **** *
 894:Generated_Source\PSoC4/PWM.c **** * Note:
 895:Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 896:Generated_Source\PSoC4/PWM.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 897:Generated_Source\PSoC4/PWM.c **** *  Down counting mode (except 0x0u).
 898:Generated_Source\PSoC4/PWM.c **** *
 899:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 900:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompare(void)
 901:Generated_Source\PSoC4/PWM.c **** {
 902:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 903:Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 904:Generated_Source\PSoC4/PWM.c ****         uint32 regVal;
 905:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 906:Generated_Source\PSoC4/PWM.c **** 
 907:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 908:Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 909:Generated_Source\PSoC4/PWM.c ****         
 910:Generated_Source\PSoC4/PWM.c ****         regVal = PWM_COMP_CAP_REG;
 911:Generated_Source\PSoC4/PWM.c ****         
 912:Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0u != regVal))
 913:Generated_Source\PSoC4/PWM.c ****         {
 914:Generated_Source\PSoC4/PWM.c ****             regVal--;
 915:Generated_Source\PSoC4/PWM.c ****         }
 916:Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 917:Generated_Source\PSoC4/PWM.c ****         {
 918:Generated_Source\PSoC4/PWM.c ****             regVal++;
 919:Generated_Source\PSoC4/PWM.c ****         }
 920:Generated_Source\PSoC4/PWM.c ****         else
 921:Generated_Source\PSoC4/PWM.c ****         {
 922:Generated_Source\PSoC4/PWM.c ****         }
 923:Generated_Source\PSoC4/PWM.c **** 
 924:Generated_Source\PSoC4/PWM.c ****         return (regVal & PWM_16BIT_MASK);
 925:Generated_Source\PSoC4/PWM.c ****     #else
 926:Generated_Source\PSoC4/PWM.c ****         return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 927:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 928:Generated_Source\PSoC4/PWM.c **** }
 929:Generated_Source\PSoC4/PWM.c **** 
 930:Generated_Source\PSoC4/PWM.c **** 
 931:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 932:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompareBuf
 933:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 934:Generated_Source\PSoC4/PWM.c **** *
 935:Generated_Source\PSoC4/PWM.c **** * Summary:
 936:Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 937:Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 938:Generated_Source\PSoC4/PWM.c **** *
 939:Generated_Source\PSoC4/PWM.c **** * Parameters:
 940:Generated_Source\PSoC4/PWM.c **** *  compareBuf: Compare value
 941:Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 19


 942:Generated_Source\PSoC4/PWM.c **** * Return:
 943:Generated_Source\PSoC4/PWM.c **** *  None
 944:Generated_Source\PSoC4/PWM.c **** *
 945:Generated_Source\PSoC4/PWM.c **** * Note:
 946:Generated_Source\PSoC4/PWM.c **** *  It is not recommended to use the value equal to "0" or equal to 
 947:Generated_Source\PSoC4/PWM.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 948:Generated_Source\PSoC4/PWM.c **** *  PSoC 4100/PSoC 4200 devices.
 949:Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 950:Generated_Source\PSoC4/PWM.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 951:Generated_Source\PSoC4/PWM.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 952:Generated_Source\PSoC4/PWM.c **** *
 953:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 954:Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompareBuf(uint32 compareBuf)
 955:Generated_Source\PSoC4/PWM.c **** {
 956:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 957:Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 958:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 959:Generated_Source\PSoC4/PWM.c **** 
 960:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 961:Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 962:Generated_Source\PSoC4/PWM.c **** 
 963:Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 964:Generated_Source\PSoC4/PWM.c ****         {
 965:Generated_Source\PSoC4/PWM.c ****             compareBuf++;
 966:Generated_Source\PSoC4/PWM.c ****         }
 967:Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0u != compareBuf))
 968:Generated_Source\PSoC4/PWM.c ****         {
 969:Generated_Source\PSoC4/PWM.c ****             compareBuf --;
 970:Generated_Source\PSoC4/PWM.c ****         }
 971:Generated_Source\PSoC4/PWM.c ****         else
 972:Generated_Source\PSoC4/PWM.c ****         {
 973:Generated_Source\PSoC4/PWM.c ****         }
 974:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 975:Generated_Source\PSoC4/PWM.c ****     
 976:Generated_Source\PSoC4/PWM.c ****     PWM_COMP_CAP_BUF_REG = (compareBuf & PWM_16BIT_MASK);
 977:Generated_Source\PSoC4/PWM.c **** }
 978:Generated_Source\PSoC4/PWM.c **** 
 979:Generated_Source\PSoC4/PWM.c **** 
 980:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 981:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompareBuf
 982:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 983:Generated_Source\PSoC4/PWM.c **** *
 984:Generated_Source\PSoC4/PWM.c **** * Summary:
 985:Generated_Source\PSoC4/PWM.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 986:Generated_Source\PSoC4/PWM.c **** *  Capture or in Quadrature Decoder modes.
 987:Generated_Source\PSoC4/PWM.c **** *
 988:Generated_Source\PSoC4/PWM.c **** * Parameters:
 989:Generated_Source\PSoC4/PWM.c **** *  None
 990:Generated_Source\PSoC4/PWM.c **** *
 991:Generated_Source\PSoC4/PWM.c **** * Return:
 992:Generated_Source\PSoC4/PWM.c **** *  Compare buffer value
 993:Generated_Source\PSoC4/PWM.c **** *
 994:Generated_Source\PSoC4/PWM.c **** * Note:
 995:Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 996:Generated_Source\PSoC4/PWM.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 997:Generated_Source\PSoC4/PWM.c **** *  Down counting mode (except 0x0u).
 998:Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 20


 999:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1000:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompareBuf(void)
1001:Generated_Source\PSoC4/PWM.c **** {
1002:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
1003:Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
1004:Generated_Source\PSoC4/PWM.c ****         uint32 regVal;
1005:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
1006:Generated_Source\PSoC4/PWM.c **** 
1007:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
1008:Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
1009:Generated_Source\PSoC4/PWM.c **** 
1010:Generated_Source\PSoC4/PWM.c ****         regVal = PWM_COMP_CAP_BUF_REG;
1011:Generated_Source\PSoC4/PWM.c ****         
1012:Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0u != regVal))
1013:Generated_Source\PSoC4/PWM.c ****         {
1014:Generated_Source\PSoC4/PWM.c ****             regVal--;
1015:Generated_Source\PSoC4/PWM.c ****         }
1016:Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0xFFFFu != regVal))
1017:Generated_Source\PSoC4/PWM.c ****         {
1018:Generated_Source\PSoC4/PWM.c ****             regVal++;
1019:Generated_Source\PSoC4/PWM.c ****         }
1020:Generated_Source\PSoC4/PWM.c ****         else
1021:Generated_Source\PSoC4/PWM.c ****         {
1022:Generated_Source\PSoC4/PWM.c ****         }
1023:Generated_Source\PSoC4/PWM.c **** 
1024:Generated_Source\PSoC4/PWM.c ****         return (regVal & PWM_16BIT_MASK);
1025:Generated_Source\PSoC4/PWM.c ****     #else
1026:Generated_Source\PSoC4/PWM.c ****         return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
1027:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
1028:Generated_Source\PSoC4/PWM.c **** }
1029:Generated_Source\PSoC4/PWM.c **** 
1030:Generated_Source\PSoC4/PWM.c **** 
1031:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1032:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCapture
1033:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1034:Generated_Source\PSoC4/PWM.c **** *
1035:Generated_Source\PSoC4/PWM.c **** * Summary:
1036:Generated_Source\PSoC4/PWM.c **** *  Reads the captured counter value. This API is applicable only for
1037:Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1038:Generated_Source\PSoC4/PWM.c **** *
1039:Generated_Source\PSoC4/PWM.c **** * Parameters:
1040:Generated_Source\PSoC4/PWM.c **** *  None
1041:Generated_Source\PSoC4/PWM.c **** *
1042:Generated_Source\PSoC4/PWM.c **** * Return:
1043:Generated_Source\PSoC4/PWM.c **** *  Capture value
1044:Generated_Source\PSoC4/PWM.c **** *
1045:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1046:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCapture(void)
1047:Generated_Source\PSoC4/PWM.c **** {
1048:Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
1049:Generated_Source\PSoC4/PWM.c **** }
1050:Generated_Source\PSoC4/PWM.c **** 
1051:Generated_Source\PSoC4/PWM.c **** 
1052:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1053:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCaptureBuf
1054:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1055:Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 21


1056:Generated_Source\PSoC4/PWM.c **** * Summary:
1057:Generated_Source\PSoC4/PWM.c **** *  Reads the capture buffer register. This API is applicable only for
1058:Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1059:Generated_Source\PSoC4/PWM.c **** *
1060:Generated_Source\PSoC4/PWM.c **** * Parameters:
1061:Generated_Source\PSoC4/PWM.c **** *  None
1062:Generated_Source\PSoC4/PWM.c **** *
1063:Generated_Source\PSoC4/PWM.c **** * Return:
1064:Generated_Source\PSoC4/PWM.c **** *  Capture buffer value
1065:Generated_Source\PSoC4/PWM.c **** *
1066:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCaptureBuf(void)
1068:Generated_Source\PSoC4/PWM.c **** {
1069:Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
1070:Generated_Source\PSoC4/PWM.c **** }
1071:Generated_Source\PSoC4/PWM.c **** 
1072:Generated_Source\PSoC4/PWM.c **** 
1073:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1074:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCaptureMode
1075:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1076:Generated_Source\PSoC4/PWM.c **** *
1077:Generated_Source\PSoC4/PWM.c **** * Summary:
1078:Generated_Source\PSoC4/PWM.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1079:Generated_Source\PSoC4/PWM.c **** *  This input is not applicable to the Timer/Counter without Capture and
1080:Generated_Source\PSoC4/PWM.c **** *  Quadrature Decoder modes.
1081:Generated_Source\PSoC4/PWM.c **** *
1082:Generated_Source\PSoC4/PWM.c **** * Parameters:
1083:Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1084:Generated_Source\PSoC4/PWM.c **** *   Values:
1085:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1086:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1087:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1088:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1089:Generated_Source\PSoC4/PWM.c **** *
1090:Generated_Source\PSoC4/PWM.c **** * Return:
1091:Generated_Source\PSoC4/PWM.c **** *  None
1092:Generated_Source\PSoC4/PWM.c **** *
1093:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1094:Generated_Source\PSoC4/PWM.c **** void PWM_SetCaptureMode(uint32 triggerMode)
1095:Generated_Source\PSoC4/PWM.c **** {
1096:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1097:Generated_Source\PSoC4/PWM.c **** 
1098:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
1099:Generated_Source\PSoC4/PWM.c **** 
1100:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_CAPTURE_MASK;
1101:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= triggerMode;
1102:Generated_Source\PSoC4/PWM.c **** 
1103:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
1104:Generated_Source\PSoC4/PWM.c **** }
1105:Generated_Source\PSoC4/PWM.c **** 
1106:Generated_Source\PSoC4/PWM.c **** 
1107:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1108:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetReloadMode
1109:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1110:Generated_Source\PSoC4/PWM.c **** *
1111:Generated_Source\PSoC4/PWM.c **** * Summary:
1112:Generated_Source\PSoC4/PWM.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 22


1113:Generated_Source\PSoC4/PWM.c **** *  input.
1114:Generated_Source\PSoC4/PWM.c **** *
1115:Generated_Source\PSoC4/PWM.c **** * Parameters:
1116:Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1117:Generated_Source\PSoC4/PWM.c **** *   Values:
1118:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1119:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1120:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1121:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1122:Generated_Source\PSoC4/PWM.c **** *
1123:Generated_Source\PSoC4/PWM.c **** * Return:
1124:Generated_Source\PSoC4/PWM.c **** *  None
1125:Generated_Source\PSoC4/PWM.c **** *
1126:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1127:Generated_Source\PSoC4/PWM.c **** void PWM_SetReloadMode(uint32 triggerMode)
1128:Generated_Source\PSoC4/PWM.c **** {
1129:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1130:Generated_Source\PSoC4/PWM.c **** 
1131:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
1132:Generated_Source\PSoC4/PWM.c **** 
1133:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_RELOAD_MASK;
1134:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_RELOAD_SHIFT));
1135:Generated_Source\PSoC4/PWM.c **** 
1136:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
1137:Generated_Source\PSoC4/PWM.c **** }
1138:Generated_Source\PSoC4/PWM.c **** 
1139:Generated_Source\PSoC4/PWM.c **** 
1140:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1141:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStartMode
1142:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1143:Generated_Source\PSoC4/PWM.c **** *
1144:Generated_Source\PSoC4/PWM.c **** * Summary:
1145:Generated_Source\PSoC4/PWM.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1146:Generated_Source\PSoC4/PWM.c **** *  phiB input.
1147:Generated_Source\PSoC4/PWM.c **** *
1148:Generated_Source\PSoC4/PWM.c **** * Parameters:
1149:Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1150:Generated_Source\PSoC4/PWM.c **** *   Values:
1151:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1152:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1153:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1154:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1155:Generated_Source\PSoC4/PWM.c **** *
1156:Generated_Source\PSoC4/PWM.c **** * Return:
1157:Generated_Source\PSoC4/PWM.c **** *  None
1158:Generated_Source\PSoC4/PWM.c **** *
1159:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1160:Generated_Source\PSoC4/PWM.c **** void PWM_SetStartMode(uint32 triggerMode)
1161:Generated_Source\PSoC4/PWM.c **** {
1162:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1163:Generated_Source\PSoC4/PWM.c **** 
1164:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
1165:Generated_Source\PSoC4/PWM.c **** 
1166:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_START_MASK;
1167:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_START_SHIFT));
1168:Generated_Source\PSoC4/PWM.c **** 
1169:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 23


1170:Generated_Source\PSoC4/PWM.c **** }
1171:Generated_Source\PSoC4/PWM.c **** 
1172:Generated_Source\PSoC4/PWM.c **** 
1173:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1174:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStopMode
1175:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1176:Generated_Source\PSoC4/PWM.c **** *
1177:Generated_Source\PSoC4/PWM.c **** * Summary:
1178:Generated_Source\PSoC4/PWM.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1179:Generated_Source\PSoC4/PWM.c **** *
1180:Generated_Source\PSoC4/PWM.c **** * Parameters:
1181:Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1182:Generated_Source\PSoC4/PWM.c **** *   Values:
1183:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1184:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1185:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1186:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1187:Generated_Source\PSoC4/PWM.c **** *
1188:Generated_Source\PSoC4/PWM.c **** * Return:
1189:Generated_Source\PSoC4/PWM.c **** *  None
1190:Generated_Source\PSoC4/PWM.c **** *
1191:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1192:Generated_Source\PSoC4/PWM.c **** void PWM_SetStopMode(uint32 triggerMode)
1193:Generated_Source\PSoC4/PWM.c **** {
1194:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1195:Generated_Source\PSoC4/PWM.c **** 
1196:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
1197:Generated_Source\PSoC4/PWM.c **** 
1198:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_STOP_MASK;
1199:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_STOP_SHIFT));
1200:Generated_Source\PSoC4/PWM.c **** 
1201:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
1202:Generated_Source\PSoC4/PWM.c **** }
1203:Generated_Source\PSoC4/PWM.c **** 
1204:Generated_Source\PSoC4/PWM.c **** 
1205:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCountMode
1207:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1208:Generated_Source\PSoC4/PWM.c **** *
1209:Generated_Source\PSoC4/PWM.c **** * Summary:
1210:Generated_Source\PSoC4/PWM.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1211:Generated_Source\PSoC4/PWM.c **** *  input.
1212:Generated_Source\PSoC4/PWM.c **** *
1213:Generated_Source\PSoC4/PWM.c **** * Parameters:
1214:Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1215:Generated_Source\PSoC4/PWM.c **** *   Values:
1216:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1217:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1218:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1219:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1220:Generated_Source\PSoC4/PWM.c **** *
1221:Generated_Source\PSoC4/PWM.c **** * Return:
1222:Generated_Source\PSoC4/PWM.c **** *  None
1223:Generated_Source\PSoC4/PWM.c **** *
1224:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1225:Generated_Source\PSoC4/PWM.c **** void PWM_SetCountMode(uint32 triggerMode)
1226:Generated_Source\PSoC4/PWM.c **** {
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 24


1227:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1228:Generated_Source\PSoC4/PWM.c **** 
1229:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
1230:Generated_Source\PSoC4/PWM.c **** 
1231:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_COUNT_MASK;
1232:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_COUNT_SHIFT));
1233:Generated_Source\PSoC4/PWM.c **** 
1234:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
1235:Generated_Source\PSoC4/PWM.c **** }
1236:Generated_Source\PSoC4/PWM.c **** 
1237:Generated_Source\PSoC4/PWM.c **** 
1238:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1239:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_TriggerCommand
1240:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1241:Generated_Source\PSoC4/PWM.c **** *
1242:Generated_Source\PSoC4/PWM.c **** * Summary:
1243:Generated_Source\PSoC4/PWM.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1244:Generated_Source\PSoC4/PWM.c **** *  The mask can be used to apply this command simultaneously to more than one
1245:Generated_Source\PSoC4/PWM.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1246:Generated_Source\PSoC4/PWM.c **** *
1247:Generated_Source\PSoC4/PWM.c **** * Parameters:
1248:Generated_Source\PSoC4/PWM.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1249:Generated_Source\PSoC4/PWM.c **** *        command should apply to.  This function from one instance can be used
1250:Generated_Source\PSoC4/PWM.c **** *        to apply the command to any of the instances in the design.
1251:Generated_Source\PSoC4/PWM.c **** *        The mask value for a specific instance is available with the MASK
1252:Generated_Source\PSoC4/PWM.c **** *        define.
1253:Generated_Source\PSoC4/PWM.c **** *  command: Enumerated command values. Capture command only applicable for
1254:Generated_Source\PSoC4/PWM.c **** *           Timer/Counter with Capture and PWM modes.
1255:Generated_Source\PSoC4/PWM.c **** *   Values:
1256:Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_CAPTURE    - Trigger Capture/Switch command
1257:Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_RELOAD     - Trigger Reload/Index command
1258:Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_STOP       - Trigger Stop/Kill command
1259:Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_START      - Trigger Start/phiB command
1260:Generated_Source\PSoC4/PWM.c **** *
1261:Generated_Source\PSoC4/PWM.c **** * Return:
1262:Generated_Source\PSoC4/PWM.c **** *  None
1263:Generated_Source\PSoC4/PWM.c **** *
1264:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1265:Generated_Source\PSoC4/PWM.c **** void PWM_TriggerCommand(uint32 mask, uint32 command)
1266:Generated_Source\PSoC4/PWM.c **** {
1267:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1268:Generated_Source\PSoC4/PWM.c **** 
1269:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
1270:Generated_Source\PSoC4/PWM.c **** 
1271:Generated_Source\PSoC4/PWM.c ****     PWM_COMMAND_REG = ((uint32)(mask << command));
1272:Generated_Source\PSoC4/PWM.c **** 
1273:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
1274:Generated_Source\PSoC4/PWM.c **** }
1275:Generated_Source\PSoC4/PWM.c **** 
1276:Generated_Source\PSoC4/PWM.c **** 
1277:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1278:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadStatus
1279:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1280:Generated_Source\PSoC4/PWM.c **** *
1281:Generated_Source\PSoC4/PWM.c **** * Summary:
1282:Generated_Source\PSoC4/PWM.c **** *  Reads the status of the PWM.
1283:Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 25


1284:Generated_Source\PSoC4/PWM.c **** * Parameters:
1285:Generated_Source\PSoC4/PWM.c **** *  None
1286:Generated_Source\PSoC4/PWM.c **** *
1287:Generated_Source\PSoC4/PWM.c **** * Return:
1288:Generated_Source\PSoC4/PWM.c **** *  Status
1289:Generated_Source\PSoC4/PWM.c **** *   Values:
1290:Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_DOWN    - Set if counting down
1291:Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_RUNNING - Set if counter is running
1292:Generated_Source\PSoC4/PWM.c **** *
1293:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1294:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadStatus(void)
1295:Generated_Source\PSoC4/PWM.c **** {
1296:Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
1297:Generated_Source\PSoC4/PWM.c ****             (PWM_STATUS_REG & PWM_STATUS_DOWN));
1298:Generated_Source\PSoC4/PWM.c **** }
1299:Generated_Source\PSoC4/PWM.c **** 
1300:Generated_Source\PSoC4/PWM.c **** 
1301:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1302:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterruptMode
1303:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1304:Generated_Source\PSoC4/PWM.c **** *
1305:Generated_Source\PSoC4/PWM.c **** * Summary:
1306:Generated_Source\PSoC4/PWM.c **** *  Sets the interrupt mask to control which interrupt
1307:Generated_Source\PSoC4/PWM.c **** *  requests generate the interrupt signal.
1308:Generated_Source\PSoC4/PWM.c **** *
1309:Generated_Source\PSoC4/PWM.c **** * Parameters:
1310:Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of bits to be enabled
1311:Generated_Source\PSoC4/PWM.c **** *   Values:
1312:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1313:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1314:Generated_Source\PSoC4/PWM.c **** *
1315:Generated_Source\PSoC4/PWM.c **** * Return:
1316:Generated_Source\PSoC4/PWM.c **** *  None
1317:Generated_Source\PSoC4/PWM.c **** *
1318:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1319:Generated_Source\PSoC4/PWM.c **** void PWM_SetInterruptMode(uint32 interruptMask)
1320:Generated_Source\PSoC4/PWM.c **** {
1321:Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_MASK_REG =  interruptMask;
  77              		.loc 1 1321 0
  78 0026 084B     		ldr	r3, .L2+12
  79 0028 1960     		str	r1, [r3]
  80              	.LBE17:
  81              	.LBE16:
 129:Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_LEFT == PWM_PWM_ALIGN) */
  82              		.loc 1 129 0
  83 002a 084B     		ldr	r3, .L2+16
  84 002c 1A60     		str	r2, [r3]
  85              	.LVL2:
  86              	.LBB18:
  87              	.LBB19:
 695:Generated_Source\PSoC4/PWM.c **** }
  88              		.loc 1 695 0
  89 002e 084A     		ldr	r2, .L2+20
  90 0030 084B     		ldr	r3, .L2+24
  91 0032 1A60     		str	r2, [r3]
  92              	.LVL3:
  93              	.LBE19:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 26


  94              	.LBE18:
  95              	.LBB20:
  96              	.LBB21:
 873:Generated_Source\PSoC4/PWM.c **** }
  97              		.loc 1 873 0
  98 0034 084A     		ldr	r2, .L2+28
  99 0036 094B     		ldr	r3, .L2+32
 100 0038 1A60     		str	r2, [r3]
 101              	.LBE21:
 102              	.LBE20:
 160:Generated_Source\PSoC4/PWM.c **** 
 103              		.loc 1 160 0
 104 003a 7047     		bx	lr
 105              	.L3:
 106              		.align	2
 107              	.L2:
 108 003c 00010540 		.word	1074069760
 109 0040 08010540 		.word	1074069768
 110 0044 24010540 		.word	1074069796
 111 0048 38010540 		.word	1074069816
 112 004c 28010540 		.word	1074069800
 113 0050 E2160000 		.word	5858
 114 0054 14010540 		.word	1074069780
 115 0058 710B0000 		.word	2929
 116 005c 0C010540 		.word	1074069772
 117              		.cfi_endproc
 118              	.LFE0:
 119              		.size	PWM_Init, .-PWM_Init
 120              		.section	.text.PWM_Stop,"ax",%progbits
 121              		.align	1
 122              		.global	PWM_Stop
 123              		.code	16
 124              		.thumb_func
 125              		.type	PWM_Stop, %function
 126              	PWM_Stop:
 127              	.LFB3:
 257:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 128              		.loc 1 257 0
 129              		.cfi_startproc
 130 0000 08B5     		push	{r3, lr}
 131              		.cfi_def_cfa_offset 8
 132              		.cfi_offset 3, -8
 133              		.cfi_offset 14, -4
 260:Generated_Source\PSoC4/PWM.c **** 
 134              		.loc 1 260 0
 135 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 136              	.LVL4:
 262:Generated_Source\PSoC4/PWM.c **** 
 137              		.loc 1 262 0
 138 0006 0121     		mov	r1, #1
 139 0008 034A     		ldr	r2, .L5
 265:Generated_Source\PSoC4/PWM.c **** 
 140              		.loc 1 265 0
 141              		@ sp needed
 262:Generated_Source\PSoC4/PWM.c **** 
 142              		.loc 1 262 0
 143 000a 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 27


 144 000c 8B43     		bic	r3, r1
 145 000e 1360     		str	r3, [r2]
 264:Generated_Source\PSoC4/PWM.c **** }
 146              		.loc 1 264 0
 147 0010 FFF7FEFF 		bl	CyExitCriticalSection
 148              	.LVL5:
 265:Generated_Source\PSoC4/PWM.c **** 
 149              		.loc 1 265 0
 150 0014 08BD     		pop	{r3, pc}
 151              	.L6:
 152 0016 C046     		.align	2
 153              	.L5:
 154 0018 00000540 		.word	1074069504
 155              		.cfi_endproc
 156              	.LFE3:
 157              		.size	PWM_Stop, .-PWM_Stop
 158              		.section	.text.PWM_SetMode,"ax",%progbits
 159              		.align	1
 160              		.global	PWM_SetMode
 161              		.code	16
 162              		.thumb_func
 163              		.type	PWM_SetMode, %function
 164              	PWM_SetMode:
 165              	.LFB4:
 294:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 166              		.loc 1 294 0
 167              		.cfi_startproc
 168              	.LVL6:
 169 0000 10B5     		push	{r4, lr}
 170              		.cfi_def_cfa_offset 8
 171              		.cfi_offset 4, -8
 172              		.cfi_offset 14, -4
 294:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 173              		.loc 1 294 0
 174 0002 041C     		mov	r4, r0
 297:Generated_Source\PSoC4/PWM.c **** 
 175              		.loc 1 297 0
 176 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 177              	.LVL7:
 299:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mode;
 178              		.loc 1 299 0
 179 0008 054B     		ldr	r3, .L8
 180 000a 064A     		ldr	r2, .L8+4
 181 000c 1968     		ldr	r1, [r3]
 303:Generated_Source\PSoC4/PWM.c **** 
 182              		.loc 1 303 0
 183              		@ sp needed
 299:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mode;
 184              		.loc 1 299 0
 185 000e 0A40     		and	r2, r1
 186 0010 1A60     		str	r2, [r3]
 300:Generated_Source\PSoC4/PWM.c **** 
 187              		.loc 1 300 0
 188 0012 1A68     		ldr	r2, [r3]
 189 0014 2243     		orr	r2, r4
 190 0016 1A60     		str	r2, [r3]
 302:Generated_Source\PSoC4/PWM.c **** }
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 28


 191              		.loc 1 302 0
 192 0018 FFF7FEFF 		bl	CyExitCriticalSection
 193              	.LVL8:
 194              	.LVL9:
 303:Generated_Source\PSoC4/PWM.c **** 
 195              		.loc 1 303 0
 196 001c 10BD     		pop	{r4, pc}
 197              	.L9:
 198 001e C046     		.align	2
 199              	.L8:
 200 0020 00010540 		.word	1074069760
 201 0024 FFFFFFF8 		.word	-117440513
 202              		.cfi_endproc
 203              	.LFE4:
 204              		.size	PWM_SetMode, .-PWM_SetMode
 205              		.section	.text.PWM_SetQDMode,"ax",%progbits
 206              		.align	1
 207              		.global	PWM_SetQDMode
 208              		.code	16
 209              		.thumb_func
 210              		.type	PWM_SetQDMode, %function
 211              	PWM_SetQDMode:
 212              	.LFB5:
 327:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 213              		.loc 1 327 0
 214              		.cfi_startproc
 215              	.LVL10:
 216 0000 10B5     		push	{r4, lr}
 217              		.cfi_def_cfa_offset 8
 218              		.cfi_offset 4, -8
 219              		.cfi_offset 14, -4
 327:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 220              		.loc 1 327 0
 221 0002 041C     		mov	r4, r0
 330:Generated_Source\PSoC4/PWM.c **** 
 222              		.loc 1 330 0
 223 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 224              	.LVL11:
 332:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= qdMode;
 225              		.loc 1 332 0
 226 0008 054B     		ldr	r3, .L11
 227 000a 064A     		ldr	r2, .L11+4
 228 000c 1968     		ldr	r1, [r3]
 336:Generated_Source\PSoC4/PWM.c **** 
 229              		.loc 1 336 0
 230              		@ sp needed
 332:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= qdMode;
 231              		.loc 1 332 0
 232 000e 0A40     		and	r2, r1
 233 0010 1A60     		str	r2, [r3]
 333:Generated_Source\PSoC4/PWM.c **** 
 234              		.loc 1 333 0
 235 0012 1A68     		ldr	r2, [r3]
 236 0014 2243     		orr	r2, r4
 237 0016 1A60     		str	r2, [r3]
 335:Generated_Source\PSoC4/PWM.c **** }
 238              		.loc 1 335 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 29


 239 0018 FFF7FEFF 		bl	CyExitCriticalSection
 240              	.LVL12:
 241              	.LVL13:
 336:Generated_Source\PSoC4/PWM.c **** 
 242              		.loc 1 336 0
 243 001c 10BD     		pop	{r4, pc}
 244              	.L12:
 245 001e C046     		.align	2
 246              	.L11:
 247 0020 00010540 		.word	1074069760
 248 0024 FFFF8FFF 		.word	-7340033
 249              		.cfi_endproc
 250              	.LFE5:
 251              		.size	PWM_SetQDMode, .-PWM_SetQDMode
 252              		.section	.text.PWM_SetPrescaler,"ax",%progbits
 253              		.align	1
 254              		.global	PWM_SetPrescaler
 255              		.code	16
 256              		.thumb_func
 257              		.type	PWM_SetPrescaler, %function
 258              	PWM_SetPrescaler:
 259              	.LFB6:
 364:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 260              		.loc 1 364 0
 261              		.cfi_startproc
 262              	.LVL14:
 263 0000 10B5     		push	{r4, lr}
 264              		.cfi_def_cfa_offset 8
 265              		.cfi_offset 4, -8
 266              		.cfi_offset 14, -4
 364:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 267              		.loc 1 364 0
 268 0002 041C     		mov	r4, r0
 367:Generated_Source\PSoC4/PWM.c **** 
 269              		.loc 1 367 0
 270 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 271              	.LVL15:
 369:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= prescaler;
 272              		.loc 1 369 0
 273 0008 054B     		ldr	r3, .L14
 274 000a 064A     		ldr	r2, .L14+4
 275 000c 1968     		ldr	r1, [r3]
 373:Generated_Source\PSoC4/PWM.c **** 
 276              		.loc 1 373 0
 277              		@ sp needed
 369:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= prescaler;
 278              		.loc 1 369 0
 279 000e 0A40     		and	r2, r1
 280 0010 1A60     		str	r2, [r3]
 370:Generated_Source\PSoC4/PWM.c **** 
 281              		.loc 1 370 0
 282 0012 1A68     		ldr	r2, [r3]
 283 0014 2243     		orr	r2, r4
 284 0016 1A60     		str	r2, [r3]
 372:Generated_Source\PSoC4/PWM.c **** }
 285              		.loc 1 372 0
 286 0018 FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 30


 287              	.LVL16:
 288              	.LVL17:
 373:Generated_Source\PSoC4/PWM.c **** 
 289              		.loc 1 373 0
 290 001c 10BD     		pop	{r4, pc}
 291              	.L15:
 292 001e C046     		.align	2
 293              	.L14:
 294 0020 00010540 		.word	1074069760
 295 0024 FF00FFFF 		.word	-65281
 296              		.cfi_endproc
 297              	.LFE6:
 298              		.size	PWM_SetPrescaler, .-PWM_SetPrescaler
 299              		.section	.text.PWM_SetOneShot,"ax",%progbits
 300              		.align	1
 301              		.global	PWM_SetOneShot
 302              		.code	16
 303              		.thumb_func
 304              		.type	PWM_SetOneShot, %function
 305              	PWM_SetOneShot:
 306              	.LFB7:
 396:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 307              		.loc 1 396 0
 308              		.cfi_startproc
 309              	.LVL18:
 310 0000 10B5     		push	{r4, lr}
 311              		.cfi_def_cfa_offset 8
 312              		.cfi_offset 4, -8
 313              		.cfi_offset 14, -4
 396:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 314              		.loc 1 396 0
 315 0002 041C     		mov	r4, r0
 399:Generated_Source\PSoC4/PWM.c **** 
 316              		.loc 1 399 0
 317 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 318              	.LVL19:
 401:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_1BIT_MASK) <<
 319              		.loc 1 401 0
 320 0008 064A     		ldr	r2, .L17
 321 000a 074B     		ldr	r3, .L17+4
 322 000c 1168     		ldr	r1, [r2]
 406:Generated_Source\PSoC4/PWM.c **** 
 323              		.loc 1 406 0
 324              		@ sp needed
 401:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_1BIT_MASK) <<
 325              		.loc 1 401 0
 326 000e 0B40     		and	r3, r1
 327 0010 1360     		str	r3, [r2]
 402:Generated_Source\PSoC4/PWM.c ****                                                                PWM_ONESHOT_SHIFT));
 328              		.loc 1 402 0
 329 0012 0123     		mov	r3, #1
 330 0014 1168     		ldr	r1, [r2]
 331 0016 2340     		and	r3, r4
 332 0018 9B04     		lsl	r3, r3, #18
 333 001a 0B43     		orr	r3, r1
 334 001c 1360     		str	r3, [r2]
 405:Generated_Source\PSoC4/PWM.c **** }
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 31


 335              		.loc 1 405 0
 336 001e FFF7FEFF 		bl	CyExitCriticalSection
 337              	.LVL20:
 338              	.LVL21:
 406:Generated_Source\PSoC4/PWM.c **** 
 339              		.loc 1 406 0
 340 0022 10BD     		pop	{r4, pc}
 341              	.L18:
 342              		.align	2
 343              	.L17:
 344 0024 00010540 		.word	1074069760
 345 0028 FFFFFBFF 		.word	-262145
 346              		.cfi_endproc
 347              	.LFE7:
 348              		.size	PWM_SetOneShot, .-PWM_SetOneShot
 349              		.section	.text.PWM_SetPWMMode,"ax",%progbits
 350              		.align	1
 351              		.global	PWM_SetPWMMode
 352              		.code	16
 353              		.thumb_func
 354              		.type	PWM_SetPWMMode, %function
 355              	PWM_SetPWMMode:
 356              	.LFB8:
 450:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL2_REG = (modeMask & PWM_6BIT_MASK);
 357              		.loc 1 450 0
 358              		.cfi_startproc
 359              	.LVL22:
 451:Generated_Source\PSoC4/PWM.c **** }
 360              		.loc 1 451 0
 361 0000 3F23     		mov	r3, #63
 362 0002 1840     		and	r0, r3
 363              	.LVL23:
 364 0004 014B     		ldr	r3, .L20
 452:Generated_Source\PSoC4/PWM.c **** 
 365              		.loc 1 452 0
 366              		@ sp needed
 451:Generated_Source\PSoC4/PWM.c **** }
 367              		.loc 1 451 0
 368 0006 1860     		str	r0, [r3]
 452:Generated_Source\PSoC4/PWM.c **** 
 369              		.loc 1 452 0
 370 0008 7047     		bx	lr
 371              	.L21:
 372 000a C046     		.align	2
 373              	.L20:
 374 000c 28010540 		.word	1074069800
 375              		.cfi_endproc
 376              	.LFE8:
 377              		.size	PWM_SetPWMMode, .-PWM_SetPWMMode
 378              		.section	.text.PWM_SetPWMSyncKill,"ax",%progbits
 379              		.align	1
 380              		.global	PWM_SetPWMSyncKill
 381              		.code	16
 382              		.thumb_func
 383              		.type	PWM_SetPWMSyncKill, %function
 384              	PWM_SetPWMSyncKill:
 385              	.LFB9:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 32


 486:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 386              		.loc 1 486 0
 387              		.cfi_startproc
 388              	.LVL24:
 389 0000 10B5     		push	{r4, lr}
 390              		.cfi_def_cfa_offset 8
 391              		.cfi_offset 4, -8
 392              		.cfi_offset 14, -4
 486:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 393              		.loc 1 486 0
 394 0002 041C     		mov	r4, r0
 489:Generated_Source\PSoC4/PWM.c **** 
 395              		.loc 1 489 0
 396 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 397              	.LVL25:
 491:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_1BIT_MASK)  <<
 398              		.loc 1 491 0
 399 0008 0421     		mov	r1, #4
 400 000a 064A     		ldr	r2, .L23
 496:Generated_Source\PSoC4/PWM.c **** 
 401              		.loc 1 496 0
 402              		@ sp needed
 491:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_1BIT_MASK)  <<
 403              		.loc 1 491 0
 404 000c 1368     		ldr	r3, [r2]
 405 000e 8B43     		bic	r3, r1
 406 0010 1360     		str	r3, [r2]
 492:Generated_Source\PSoC4/PWM.c ****                                                PWM_PWM_SYNC_KILL_SHIFT));
 407              		.loc 1 492 0
 408 0012 0123     		mov	r3, #1
 409 0014 1168     		ldr	r1, [r2]
 410 0016 2340     		and	r3, r4
 411 0018 9B00     		lsl	r3, r3, #2
 412 001a 0B43     		orr	r3, r1
 413 001c 1360     		str	r3, [r2]
 495:Generated_Source\PSoC4/PWM.c **** }
 414              		.loc 1 495 0
 415 001e FFF7FEFF 		bl	CyExitCriticalSection
 416              	.LVL26:
 417              	.LVL27:
 496:Generated_Source\PSoC4/PWM.c **** 
 418              		.loc 1 496 0
 419 0022 10BD     		pop	{r4, pc}
 420              	.L24:
 421              		.align	2
 422              	.L23:
 423 0024 00010540 		.word	1074069760
 424              		.cfi_endproc
 425              	.LFE9:
 426              		.size	PWM_SetPWMSyncKill, .-PWM_SetPWMSyncKill
 427              		.section	.text.PWM_SetPWMStopOnKill,"ax",%progbits
 428              		.align	1
 429              		.global	PWM_SetPWMStopOnKill
 430              		.code	16
 431              		.thumb_func
 432              		.type	PWM_SetPWMStopOnKill, %function
 433              	PWM_SetPWMStopOnKill:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 33


 434              	.LFB10:
 520:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 435              		.loc 1 520 0
 436              		.cfi_startproc
 437              	.LVL28:
 438 0000 10B5     		push	{r4, lr}
 439              		.cfi_def_cfa_offset 8
 440              		.cfi_offset 4, -8
 441              		.cfi_offset 14, -4
 520:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 442              		.loc 1 520 0
 443 0002 041C     		mov	r4, r0
 523:Generated_Source\PSoC4/PWM.c **** 
 444              		.loc 1 523 0
 445 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 446              	.LVL29:
 525:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_1BIT_MASK)  <<
 447              		.loc 1 525 0
 448 0008 0821     		mov	r1, #8
 449 000a 064A     		ldr	r2, .L26
 530:Generated_Source\PSoC4/PWM.c **** 
 450              		.loc 1 530 0
 451              		@ sp needed
 525:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_1BIT_MASK)  <<
 452              		.loc 1 525 0
 453 000c 1368     		ldr	r3, [r2]
 454 000e 8B43     		bic	r3, r1
 455 0010 1360     		str	r3, [r2]
 526:Generated_Source\PSoC4/PWM.c ****                                                          PWM_PWM_STOP_KILL_SHIFT));
 456              		.loc 1 526 0
 457 0012 0123     		mov	r3, #1
 458 0014 1168     		ldr	r1, [r2]
 459 0016 2340     		and	r3, r4
 460 0018 DB00     		lsl	r3, r3, #3
 461 001a 0B43     		orr	r3, r1
 462 001c 1360     		str	r3, [r2]
 529:Generated_Source\PSoC4/PWM.c **** }
 463              		.loc 1 529 0
 464 001e FFF7FEFF 		bl	CyExitCriticalSection
 465              	.LVL30:
 466              	.LVL31:
 530:Generated_Source\PSoC4/PWM.c **** 
 467              		.loc 1 530 0
 468 0022 10BD     		pop	{r4, pc}
 469              	.L27:
 470              		.align	2
 471              	.L26:
 472 0024 00010540 		.word	1074069760
 473              		.cfi_endproc
 474              	.LFE10:
 475              		.size	PWM_SetPWMStopOnKill, .-PWM_SetPWMStopOnKill
 476              		.section	.text.PWM_SetPWMDeadTime,"ax",%progbits
 477              		.align	1
 478              		.global	PWM_SetPWMDeadTime
 479              		.code	16
 480              		.thumb_func
 481              		.type	PWM_SetPWMDeadTime, %function
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 34


 482              	PWM_SetPWMDeadTime:
 483              	.LFB11:
 553:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 484              		.loc 1 553 0
 485              		.cfi_startproc
 486              	.LVL32:
 487 0000 10B5     		push	{r4, lr}
 488              		.cfi_def_cfa_offset 8
 489              		.cfi_offset 4, -8
 490              		.cfi_offset 14, -4
 553:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 491              		.loc 1 553 0
 492 0002 041C     		mov	r4, r0
 556:Generated_Source\PSoC4/PWM.c **** 
 493              		.loc 1 556 0
 494 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 495              	.LVL33:
 558:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((deadTime & PWM_8BIT_MASK) <<
 496              		.loc 1 558 0
 497 0008 064B     		ldr	r3, .L29
 498 000a 074A     		ldr	r2, .L29+4
 499 000c 1968     		ldr	r1, [r3]
 559:Generated_Source\PSoC4/PWM.c ****                                                           PWM_PRESCALER_SHIFT));
 500              		.loc 1 559 0
 501 000e 2406     		lsl	r4, r4, #24
 502              	.LVL34:
 558:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((deadTime & PWM_8BIT_MASK) <<
 503              		.loc 1 558 0
 504 0010 0A40     		and	r2, r1
 505 0012 1A60     		str	r2, [r3]
 559:Generated_Source\PSoC4/PWM.c ****                                                           PWM_PRESCALER_SHIFT));
 506              		.loc 1 559 0
 507 0014 1A68     		ldr	r2, [r3]
 508 0016 240C     		lsr	r4, r4, #16
 509 0018 1443     		orr	r4, r2
 510 001a 1C60     		str	r4, [r3]
 562:Generated_Source\PSoC4/PWM.c **** }
 511              		.loc 1 562 0
 512 001c FFF7FEFF 		bl	CyExitCriticalSection
 513              	.LVL35:
 563:Generated_Source\PSoC4/PWM.c **** 
 514              		.loc 1 563 0
 515              		@ sp needed
 516 0020 10BD     		pop	{r4, pc}
 517              	.L30:
 518 0022 C046     		.align	2
 519              	.L29:
 520 0024 00010540 		.word	1074069760
 521 0028 FF00FFFF 		.word	-65281
 522              		.cfi_endproc
 523              	.LFE11:
 524              		.size	PWM_SetPWMDeadTime, .-PWM_SetPWMDeadTime
 525              		.section	.text.PWM_SetPWMInvert,"ax",%progbits
 526              		.align	1
 527              		.global	PWM_SetPWMInvert
 528              		.code	16
 529              		.thumb_func
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 35


 530              		.type	PWM_SetPWMInvert, %function
 531              	PWM_SetPWMInvert:
 532              	.LFB12:
 586:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 533              		.loc 1 586 0
 534              		.cfi_startproc
 535              	.LVL36:
 536 0000 10B5     		push	{r4, lr}
 537              		.cfi_def_cfa_offset 8
 538              		.cfi_offset 4, -8
 539              		.cfi_offset 14, -4
 586:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 540              		.loc 1 586 0
 541 0002 041C     		mov	r4, r0
 589:Generated_Source\PSoC4/PWM.c **** 
 542              		.loc 1 589 0
 543 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 544              	.LVL37:
 591:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mask;
 545              		.loc 1 591 0
 546 0008 054B     		ldr	r3, .L32
 547 000a 064A     		ldr	r2, .L32+4
 548 000c 1968     		ldr	r1, [r3]
 595:Generated_Source\PSoC4/PWM.c **** 
 549              		.loc 1 595 0
 550              		@ sp needed
 591:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mask;
 551              		.loc 1 591 0
 552 000e 0A40     		and	r2, r1
 553 0010 1A60     		str	r2, [r3]
 592:Generated_Source\PSoC4/PWM.c **** 
 554              		.loc 1 592 0
 555 0012 1A68     		ldr	r2, [r3]
 556 0014 2243     		orr	r2, r4
 557 0016 1A60     		str	r2, [r3]
 594:Generated_Source\PSoC4/PWM.c **** }
 558              		.loc 1 594 0
 559 0018 FFF7FEFF 		bl	CyExitCriticalSection
 560              	.LVL38:
 561              	.LVL39:
 595:Generated_Source\PSoC4/PWM.c **** 
 562              		.loc 1 595 0
 563 001c 10BD     		pop	{r4, pc}
 564              	.L33:
 565 001e C046     		.align	2
 566              	.L32:
 567 0020 00010540 		.word	1074069760
 568 0024 FFFFCFFF 		.word	-3145729
 569              		.cfi_endproc
 570              	.LFE12:
 571              		.size	PWM_SetPWMInvert, .-PWM_SetPWMInvert
 572              		.section	.text.PWM_WriteCounter,"ax",%progbits
 573              		.align	1
 574              		.global	PWM_WriteCounter
 575              		.code	16
 576              		.thumb_func
 577              		.type	PWM_WriteCounter, %function
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 36


 578              	PWM_WriteCounter:
 579              	.LFB13:
 616:Generated_Source\PSoC4/PWM.c ****     PWM_COUNTER_REG = (count & PWM_16BIT_MASK);
 580              		.loc 1 616 0
 581              		.cfi_startproc
 582              	.LVL40:
 617:Generated_Source\PSoC4/PWM.c **** }
 583              		.loc 1 617 0
 584 0000 014B     		ldr	r3, .L35
 585 0002 80B2     		uxth	r0, r0
 586              	.LVL41:
 587 0004 1860     		str	r0, [r3]
 618:Generated_Source\PSoC4/PWM.c **** 
 588              		.loc 1 618 0
 589              		@ sp needed
 590 0006 7047     		bx	lr
 591              	.L36:
 592              		.align	2
 593              	.L35:
 594 0008 08010540 		.word	1074069768
 595              		.cfi_endproc
 596              	.LFE13:
 597              		.size	PWM_WriteCounter, .-PWM_WriteCounter
 598              		.section	.text.PWM_ReadCounter,"ax",%progbits
 599              		.align	1
 600              		.global	PWM_ReadCounter
 601              		.code	16
 602              		.thumb_func
 603              		.type	PWM_ReadCounter, %function
 604              	PWM_ReadCounter:
 605              	.LFB14:
 636:Generated_Source\PSoC4/PWM.c ****     return (PWM_COUNTER_REG & PWM_16BIT_MASK);
 606              		.loc 1 636 0
 607              		.cfi_startproc
 637:Generated_Source\PSoC4/PWM.c **** }
 608              		.loc 1 637 0
 609 0000 014B     		ldr	r3, .L38
 638:Generated_Source\PSoC4/PWM.c **** 
 610              		.loc 1 638 0
 611              		@ sp needed
 637:Generated_Source\PSoC4/PWM.c **** }
 612              		.loc 1 637 0
 613 0002 1868     		ldr	r0, [r3]
 614 0004 80B2     		uxth	r0, r0
 638:Generated_Source\PSoC4/PWM.c **** 
 615              		.loc 1 638 0
 616 0006 7047     		bx	lr
 617              	.L39:
 618              		.align	2
 619              	.L38:
 620 0008 08010540 		.word	1074069768
 621              		.cfi_endproc
 622              	.LFE14:
 623              		.size	PWM_ReadCounter, .-PWM_ReadCounter
 624              		.section	.text.PWM_SetCounterMode,"ax",%progbits
 625              		.align	1
 626              		.global	PWM_SetCounterMode
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 37


 627              		.code	16
 628              		.thumb_func
 629              		.type	PWM_SetCounterMode, %function
 630              	PWM_SetCounterMode:
 631              	.LFB15:
 665:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 632              		.loc 1 665 0
 633              		.cfi_startproc
 634              	.LVL42:
 635 0000 10B5     		push	{r4, lr}
 636              		.cfi_def_cfa_offset 8
 637              		.cfi_offset 4, -8
 638              		.cfi_offset 14, -4
 665:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 639              		.loc 1 665 0
 640 0002 041C     		mov	r4, r0
 668:Generated_Source\PSoC4/PWM.c **** 
 641              		.loc 1 668 0
 642 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 643              	.LVL43:
 670:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= counterMode;
 644              		.loc 1 670 0
 645 0008 054B     		ldr	r3, .L41
 646 000a 064A     		ldr	r2, .L41+4
 647 000c 1968     		ldr	r1, [r3]
 674:Generated_Source\PSoC4/PWM.c **** 
 648              		.loc 1 674 0
 649              		@ sp needed
 670:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= counterMode;
 650              		.loc 1 670 0
 651 000e 0A40     		and	r2, r1
 652 0010 1A60     		str	r2, [r3]
 671:Generated_Source\PSoC4/PWM.c **** 
 653              		.loc 1 671 0
 654 0012 1A68     		ldr	r2, [r3]
 655 0014 2243     		orr	r2, r4
 656 0016 1A60     		str	r2, [r3]
 673:Generated_Source\PSoC4/PWM.c **** }
 657              		.loc 1 673 0
 658 0018 FFF7FEFF 		bl	CyExitCriticalSection
 659              	.LVL44:
 660              	.LVL45:
 674:Generated_Source\PSoC4/PWM.c **** 
 661              		.loc 1 674 0
 662 001c 10BD     		pop	{r4, pc}
 663              	.L42:
 664 001e C046     		.align	2
 665              	.L41:
 666 0020 00010540 		.word	1074069760
 667 0024 FFFFFCFF 		.word	-196609
 668              		.cfi_endproc
 669              	.LFE15:
 670              		.size	PWM_SetCounterMode, .-PWM_SetCounterMode
 671              		.section	.text.PWM_WritePeriod,"ax",%progbits
 672              		.align	1
 673              		.global	PWM_WritePeriod
 674              		.code	16
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 38


 675              		.thumb_func
 676              		.type	PWM_WritePeriod, %function
 677              	PWM_WritePeriod:
 678              	.LFB16:
 694:Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_REG = (period & PWM_16BIT_MASK);
 679              		.loc 1 694 0
 680              		.cfi_startproc
 681              	.LVL46:
 695:Generated_Source\PSoC4/PWM.c **** }
 682              		.loc 1 695 0
 683 0000 014B     		ldr	r3, .L44
 684 0002 80B2     		uxth	r0, r0
 685              	.LVL47:
 686 0004 1860     		str	r0, [r3]
 696:Generated_Source\PSoC4/PWM.c **** 
 687              		.loc 1 696 0
 688              		@ sp needed
 689 0006 7047     		bx	lr
 690              	.L45:
 691              		.align	2
 692              	.L44:
 693 0008 14010540 		.word	1074069780
 694              		.cfi_endproc
 695              	.LFE16:
 696              		.size	PWM_WritePeriod, .-PWM_WritePeriod
 697              		.section	.text.PWM_ReadPeriod,"ax",%progbits
 698              		.align	1
 699              		.global	PWM_ReadPeriod
 700              		.code	16
 701              		.thumb_func
 702              		.type	PWM_ReadPeriod, %function
 703              	PWM_ReadPeriod:
 704              	.LFB17:
 714:Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_REG & PWM_16BIT_MASK);
 705              		.loc 1 714 0
 706              		.cfi_startproc
 715:Generated_Source\PSoC4/PWM.c **** }
 707              		.loc 1 715 0
 708 0000 014B     		ldr	r3, .L47
 716:Generated_Source\PSoC4/PWM.c **** 
 709              		.loc 1 716 0
 710              		@ sp needed
 715:Generated_Source\PSoC4/PWM.c **** }
 711              		.loc 1 715 0
 712 0002 1868     		ldr	r0, [r3]
 713 0004 80B2     		uxth	r0, r0
 716:Generated_Source\PSoC4/PWM.c **** 
 714              		.loc 1 716 0
 715 0006 7047     		bx	lr
 716              	.L48:
 717              		.align	2
 718              	.L47:
 719 0008 14010540 		.word	1074069780
 720              		.cfi_endproc
 721              	.LFE17:
 722              		.size	PWM_ReadPeriod, .-PWM_ReadPeriod
 723              		.section	.text.PWM_SetCompareSwap,"ax",%progbits
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 39


 724              		.align	1
 725              		.global	PWM_SetCompareSwap
 726              		.code	16
 727              		.thumb_func
 728              		.type	PWM_SetCompareSwap, %function
 729              	PWM_SetCompareSwap:
 730              	.LFB18:
 740:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 731              		.loc 1 740 0
 732              		.cfi_startproc
 733              	.LVL48:
 734 0000 10B5     		push	{r4, lr}
 735              		.cfi_def_cfa_offset 8
 736              		.cfi_offset 4, -8
 737              		.cfi_offset 14, -4
 740:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 738              		.loc 1 740 0
 739 0002 041C     		mov	r4, r0
 743:Generated_Source\PSoC4/PWM.c **** 
 740              		.loc 1 743 0
 741 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 742              	.LVL49:
 745:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= (swapEnable & PWM_1BIT_MASK);
 743              		.loc 1 745 0
 744 0008 0122     		mov	r2, #1
 745 000a 054B     		ldr	r3, .L50
 749:Generated_Source\PSoC4/PWM.c **** 
 746              		.loc 1 749 0
 747              		@ sp needed
 745:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= (swapEnable & PWM_1BIT_MASK);
 748              		.loc 1 745 0
 749 000c 1968     		ldr	r1, [r3]
 750 000e 9143     		bic	r1, r2
 751 0010 1960     		str	r1, [r3]
 746:Generated_Source\PSoC4/PWM.c **** 
 752              		.loc 1 746 0
 753 0012 1968     		ldr	r1, [r3]
 754 0014 2240     		and	r2, r4
 755 0016 0A43     		orr	r2, r1
 756 0018 1A60     		str	r2, [r3]
 748:Generated_Source\PSoC4/PWM.c **** }
 757              		.loc 1 748 0
 758 001a FFF7FEFF 		bl	CyExitCriticalSection
 759              	.LVL50:
 760              	.LVL51:
 749:Generated_Source\PSoC4/PWM.c **** 
 761              		.loc 1 749 0
 762 001e 10BD     		pop	{r4, pc}
 763              	.L51:
 764              		.align	2
 765              	.L50:
 766 0020 00010540 		.word	1074069760
 767              		.cfi_endproc
 768              	.LFE18:
 769              		.size	PWM_SetCompareSwap, .-PWM_SetCompareSwap
 770              		.section	.text.PWM_WritePeriodBuf,"ax",%progbits
 771              		.align	1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 40


 772              		.global	PWM_WritePeriodBuf
 773              		.code	16
 774              		.thumb_func
 775              		.type	PWM_WritePeriodBuf, %function
 776              	PWM_WritePeriodBuf:
 777              	.LFB19:
 767:Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_BUF_REG = (periodBuf & PWM_16BIT_MASK);
 778              		.loc 1 767 0
 779              		.cfi_startproc
 780              	.LVL52:
 768:Generated_Source\PSoC4/PWM.c **** }
 781              		.loc 1 768 0
 782 0000 014B     		ldr	r3, .L53
 783 0002 80B2     		uxth	r0, r0
 784              	.LVL53:
 785 0004 1860     		str	r0, [r3]
 769:Generated_Source\PSoC4/PWM.c **** 
 786              		.loc 1 769 0
 787              		@ sp needed
 788 0006 7047     		bx	lr
 789              	.L54:
 790              		.align	2
 791              	.L53:
 792 0008 18010540 		.word	1074069784
 793              		.cfi_endproc
 794              	.LFE19:
 795              		.size	PWM_WritePeriodBuf, .-PWM_WritePeriodBuf
 796              		.section	.text.PWM_ReadPeriodBuf,"ax",%progbits
 797              		.align	1
 798              		.global	PWM_ReadPeriodBuf
 799              		.code	16
 800              		.thumb_func
 801              		.type	PWM_ReadPeriodBuf, %function
 802              	PWM_ReadPeriodBuf:
 803              	.LFB20:
 787:Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_BUF_REG & PWM_16BIT_MASK);
 804              		.loc 1 787 0
 805              		.cfi_startproc
 788:Generated_Source\PSoC4/PWM.c **** }
 806              		.loc 1 788 0
 807 0000 014B     		ldr	r3, .L56
 789:Generated_Source\PSoC4/PWM.c **** 
 808              		.loc 1 789 0
 809              		@ sp needed
 788:Generated_Source\PSoC4/PWM.c **** }
 810              		.loc 1 788 0
 811 0002 1868     		ldr	r0, [r3]
 812 0004 80B2     		uxth	r0, r0
 789:Generated_Source\PSoC4/PWM.c **** 
 813              		.loc 1 789 0
 814 0006 7047     		bx	lr
 815              	.L57:
 816              		.align	2
 817              	.L56:
 818 0008 18010540 		.word	1074069784
 819              		.cfi_endproc
 820              	.LFE20:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 41


 821              		.size	PWM_ReadPeriodBuf, .-PWM_ReadPeriodBuf
 822              		.section	.text.PWM_SetPeriodSwap,"ax",%progbits
 823              		.align	1
 824              		.global	PWM_SetPeriodSwap
 825              		.code	16
 826              		.thumb_func
 827              		.type	PWM_SetPeriodSwap, %function
 828              	PWM_SetPeriodSwap:
 829              	.LFB21:
 813:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 830              		.loc 1 813 0
 831              		.cfi_startproc
 832              	.LVL54:
 833 0000 10B5     		push	{r4, lr}
 834              		.cfi_def_cfa_offset 8
 835              		.cfi_offset 4, -8
 836              		.cfi_offset 14, -4
 813:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 837              		.loc 1 813 0
 838 0002 041C     		mov	r4, r0
 816:Generated_Source\PSoC4/PWM.c **** 
 839              		.loc 1 816 0
 840 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 841              	.LVL55:
 818:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((swapEnable & PWM_1BIT_MASK) <<
 842              		.loc 1 818 0
 843 0008 0221     		mov	r1, #2
 844 000a 064A     		ldr	r2, .L59
 823:Generated_Source\PSoC4/PWM.c **** 
 845              		.loc 1 823 0
 846              		@ sp needed
 818:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((swapEnable & PWM_1BIT_MASK) <<
 847              		.loc 1 818 0
 848 000c 1368     		ldr	r3, [r2]
 849 000e 8B43     		bic	r3, r1
 850 0010 1360     		str	r3, [r2]
 819:Generated_Source\PSoC4/PWM.c ****                                                             PWM_RELOAD_PERIOD_SHIFT));
 851              		.loc 1 819 0
 852 0012 0123     		mov	r3, #1
 853 0014 1168     		ldr	r1, [r2]
 854 0016 2340     		and	r3, r4
 855 0018 5B00     		lsl	r3, r3, #1
 856 001a 0B43     		orr	r3, r1
 857 001c 1360     		str	r3, [r2]
 822:Generated_Source\PSoC4/PWM.c **** }
 858              		.loc 1 822 0
 859 001e FFF7FEFF 		bl	CyExitCriticalSection
 860              	.LVL56:
 861              	.LVL57:
 823:Generated_Source\PSoC4/PWM.c **** 
 862              		.loc 1 823 0
 863 0022 10BD     		pop	{r4, pc}
 864              	.L60:
 865              		.align	2
 866              	.L59:
 867 0024 00010540 		.word	1074069760
 868              		.cfi_endproc
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 42


 869              	.LFE21:
 870              		.size	PWM_SetPeriodSwap, .-PWM_SetPeriodSwap
 871              		.section	.text.PWM_WriteCompare,"ax",%progbits
 872              		.align	1
 873              		.global	PWM_WriteCompare
 874              		.code	16
 875              		.thumb_func
 876              		.type	PWM_WriteCompare, %function
 877              	PWM_WriteCompare:
 878              	.LFB22:
 850:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 879              		.loc 1 850 0
 880              		.cfi_startproc
 881              	.LVL58:
 873:Generated_Source\PSoC4/PWM.c **** }
 882              		.loc 1 873 0
 883 0000 014B     		ldr	r3, .L62
 884 0002 80B2     		uxth	r0, r0
 885              	.LVL59:
 886 0004 1860     		str	r0, [r3]
 874:Generated_Source\PSoC4/PWM.c **** 
 887              		.loc 1 874 0
 888              		@ sp needed
 889 0006 7047     		bx	lr
 890              	.L63:
 891              		.align	2
 892              	.L62:
 893 0008 0C010540 		.word	1074069772
 894              		.cfi_endproc
 895              	.LFE22:
 896              		.size	PWM_WriteCompare, .-PWM_WriteCompare
 897              		.section	.text.PWM_ReadCompare,"ax",%progbits
 898              		.align	1
 899              		.global	PWM_ReadCompare
 900              		.code	16
 901              		.thumb_func
 902              		.type	PWM_ReadCompare, %function
 903              	PWM_ReadCompare:
 904              	.LFB23:
 901:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 905              		.loc 1 901 0
 906              		.cfi_startproc
 926:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 907              		.loc 1 926 0
 908 0000 014B     		ldr	r3, .L65
 928:Generated_Source\PSoC4/PWM.c **** 
 909              		.loc 1 928 0
 910              		@ sp needed
 926:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 911              		.loc 1 926 0
 912 0002 1868     		ldr	r0, [r3]
 913 0004 80B2     		uxth	r0, r0
 928:Generated_Source\PSoC4/PWM.c **** 
 914              		.loc 1 928 0
 915 0006 7047     		bx	lr
 916              	.L66:
 917              		.align	2
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 43


 918              	.L65:
 919 0008 0C010540 		.word	1074069772
 920              		.cfi_endproc
 921              	.LFE23:
 922              		.size	PWM_ReadCompare, .-PWM_ReadCompare
 923              		.section	.text.PWM_WriteCompareBuf,"ax",%progbits
 924              		.align	1
 925              		.global	PWM_WriteCompareBuf
 926              		.code	16
 927              		.thumb_func
 928              		.type	PWM_WriteCompareBuf, %function
 929              	PWM_WriteCompareBuf:
 930              	.LFB24:
 955:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 931              		.loc 1 955 0
 932              		.cfi_startproc
 933              	.LVL60:
 976:Generated_Source\PSoC4/PWM.c **** }
 934              		.loc 1 976 0
 935 0000 014B     		ldr	r3, .L68
 936 0002 80B2     		uxth	r0, r0
 937              	.LVL61:
 938 0004 1860     		str	r0, [r3]
 977:Generated_Source\PSoC4/PWM.c **** 
 939              		.loc 1 977 0
 940              		@ sp needed
 941 0006 7047     		bx	lr
 942              	.L69:
 943              		.align	2
 944              	.L68:
 945 0008 10010540 		.word	1074069776
 946              		.cfi_endproc
 947              	.LFE24:
 948              		.size	PWM_WriteCompareBuf, .-PWM_WriteCompareBuf
 949              		.section	.text.PWM_ReadCompareBuf,"ax",%progbits
 950              		.align	1
 951              		.global	PWM_ReadCompareBuf
 952              		.code	16
 953              		.thumb_func
 954              		.type	PWM_ReadCompareBuf, %function
 955              	PWM_ReadCompareBuf:
 956              	.LFB25:
1001:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 957              		.loc 1 1001 0
 958              		.cfi_startproc
1026:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 959              		.loc 1 1026 0
 960 0000 014B     		ldr	r3, .L71
1028:Generated_Source\PSoC4/PWM.c **** 
 961              		.loc 1 1028 0
 962              		@ sp needed
1026:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 963              		.loc 1 1026 0
 964 0002 1868     		ldr	r0, [r3]
 965 0004 80B2     		uxth	r0, r0
1028:Generated_Source\PSoC4/PWM.c **** 
 966              		.loc 1 1028 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 44


 967 0006 7047     		bx	lr
 968              	.L72:
 969              		.align	2
 970              	.L71:
 971 0008 10010540 		.word	1074069776
 972              		.cfi_endproc
 973              	.LFE25:
 974              		.size	PWM_ReadCompareBuf, .-PWM_ReadCompareBuf
 975              		.section	.text.PWM_ReadCapture,"ax",%progbits
 976              		.align	1
 977              		.global	PWM_ReadCapture
 978              		.code	16
 979              		.thumb_func
 980              		.type	PWM_ReadCapture, %function
 981              	PWM_ReadCapture:
 982              	.LFB26:
1047:Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 983              		.loc 1 1047 0
 984              		.cfi_startproc
1048:Generated_Source\PSoC4/PWM.c **** }
 985              		.loc 1 1048 0
 986 0000 014B     		ldr	r3, .L74
1049:Generated_Source\PSoC4/PWM.c **** 
 987              		.loc 1 1049 0
 988              		@ sp needed
1048:Generated_Source\PSoC4/PWM.c **** }
 989              		.loc 1 1048 0
 990 0002 1868     		ldr	r0, [r3]
 991 0004 80B2     		uxth	r0, r0
1049:Generated_Source\PSoC4/PWM.c **** 
 992              		.loc 1 1049 0
 993 0006 7047     		bx	lr
 994              	.L75:
 995              		.align	2
 996              	.L74:
 997 0008 0C010540 		.word	1074069772
 998              		.cfi_endproc
 999              	.LFE26:
 1000              		.size	PWM_ReadCapture, .-PWM_ReadCapture
 1001              		.section	.text.PWM_ReadCaptureBuf,"ax",%progbits
 1002              		.align	1
 1003              		.global	PWM_ReadCaptureBuf
 1004              		.code	16
 1005              		.thumb_func
 1006              		.type	PWM_ReadCaptureBuf, %function
 1007              	PWM_ReadCaptureBuf:
 1008              	.LFB27:
1068:Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 1009              		.loc 1 1068 0
 1010              		.cfi_startproc
1069:Generated_Source\PSoC4/PWM.c **** }
 1011              		.loc 1 1069 0
 1012 0000 014B     		ldr	r3, .L77
1070:Generated_Source\PSoC4/PWM.c **** 
 1013              		.loc 1 1070 0
 1014              		@ sp needed
1069:Generated_Source\PSoC4/PWM.c **** }
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 45


 1015              		.loc 1 1069 0
 1016 0002 1868     		ldr	r0, [r3]
 1017 0004 80B2     		uxth	r0, r0
1070:Generated_Source\PSoC4/PWM.c **** 
 1018              		.loc 1 1070 0
 1019 0006 7047     		bx	lr
 1020              	.L78:
 1021              		.align	2
 1022              	.L77:
 1023 0008 10010540 		.word	1074069776
 1024              		.cfi_endproc
 1025              	.LFE27:
 1026              		.size	PWM_ReadCaptureBuf, .-PWM_ReadCaptureBuf
 1027              		.section	.text.PWM_SetCaptureMode,"ax",%progbits
 1028              		.align	1
 1029              		.global	PWM_SetCaptureMode
 1030              		.code	16
 1031              		.thumb_func
 1032              		.type	PWM_SetCaptureMode, %function
 1033              	PWM_SetCaptureMode:
 1034              	.LFB28:
1095:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1035              		.loc 1 1095 0
 1036              		.cfi_startproc
 1037              	.LVL62:
 1038 0000 10B5     		push	{r4, lr}
 1039              		.cfi_def_cfa_offset 8
 1040              		.cfi_offset 4, -8
 1041              		.cfi_offset 14, -4
1095:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1042              		.loc 1 1095 0
 1043 0002 041C     		mov	r4, r0
1098:Generated_Source\PSoC4/PWM.c **** 
 1044              		.loc 1 1098 0
 1045 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1046              	.LVL63:
1100:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= triggerMode;
 1047              		.loc 1 1100 0
 1048 0008 0321     		mov	r1, #3
 1049 000a 054B     		ldr	r3, .L80
1104:Generated_Source\PSoC4/PWM.c **** 
 1050              		.loc 1 1104 0
 1051              		@ sp needed
1100:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= triggerMode;
 1052              		.loc 1 1100 0
 1053 000c 1A68     		ldr	r2, [r3]
 1054 000e 8A43     		bic	r2, r1
 1055 0010 1A60     		str	r2, [r3]
1101:Generated_Source\PSoC4/PWM.c **** 
 1056              		.loc 1 1101 0
 1057 0012 1A68     		ldr	r2, [r3]
 1058 0014 2243     		orr	r2, r4
 1059 0016 1A60     		str	r2, [r3]
1103:Generated_Source\PSoC4/PWM.c **** }
 1060              		.loc 1 1103 0
 1061 0018 FFF7FEFF 		bl	CyExitCriticalSection
 1062              	.LVL64:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 46


 1063              	.LVL65:
1104:Generated_Source\PSoC4/PWM.c **** 
 1064              		.loc 1 1104 0
 1065 001c 10BD     		pop	{r4, pc}
 1066              	.L81:
 1067 001e C046     		.align	2
 1068              	.L80:
 1069 0020 24010540 		.word	1074069796
 1070              		.cfi_endproc
 1071              	.LFE28:
 1072              		.size	PWM_SetCaptureMode, .-PWM_SetCaptureMode
 1073              		.section	.text.PWM_SetReloadMode,"ax",%progbits
 1074              		.align	1
 1075              		.global	PWM_SetReloadMode
 1076              		.code	16
 1077              		.thumb_func
 1078              		.type	PWM_SetReloadMode, %function
 1079              	PWM_SetReloadMode:
 1080              	.LFB29:
1128:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1081              		.loc 1 1128 0
 1082              		.cfi_startproc
 1083              	.LVL66:
 1084 0000 10B5     		push	{r4, lr}
 1085              		.cfi_def_cfa_offset 8
 1086              		.cfi_offset 4, -8
 1087              		.cfi_offset 14, -4
1128:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1088              		.loc 1 1128 0
 1089 0002 041C     		mov	r4, r0
1131:Generated_Source\PSoC4/PWM.c **** 
 1090              		.loc 1 1131 0
 1091 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1092              	.LVL67:
1133:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_RELOAD_SHIFT));
 1093              		.loc 1 1133 0
 1094 0008 3021     		mov	r1, #48
 1095 000a 054B     		ldr	r3, .L83
1137:Generated_Source\PSoC4/PWM.c **** 
 1096              		.loc 1 1137 0
 1097              		@ sp needed
1133:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_RELOAD_SHIFT));
 1098              		.loc 1 1133 0
 1099 000c 1A68     		ldr	r2, [r3]
 1100 000e 8A43     		bic	r2, r1
 1101 0010 1A60     		str	r2, [r3]
1134:Generated_Source\PSoC4/PWM.c **** 
 1102              		.loc 1 1134 0
 1103 0012 1968     		ldr	r1, [r3]
 1104 0014 2201     		lsl	r2, r4, #4
 1105 0016 0A43     		orr	r2, r1
 1106 0018 1A60     		str	r2, [r3]
1136:Generated_Source\PSoC4/PWM.c **** }
 1107              		.loc 1 1136 0
 1108 001a FFF7FEFF 		bl	CyExitCriticalSection
 1109              	.LVL68:
 1110              	.LVL69:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 47


1137:Generated_Source\PSoC4/PWM.c **** 
 1111              		.loc 1 1137 0
 1112 001e 10BD     		pop	{r4, pc}
 1113              	.L84:
 1114              		.align	2
 1115              	.L83:
 1116 0020 24010540 		.word	1074069796
 1117              		.cfi_endproc
 1118              	.LFE29:
 1119              		.size	PWM_SetReloadMode, .-PWM_SetReloadMode
 1120              		.section	.text.PWM_SetStartMode,"ax",%progbits
 1121              		.align	1
 1122              		.global	PWM_SetStartMode
 1123              		.code	16
 1124              		.thumb_func
 1125              		.type	PWM_SetStartMode, %function
 1126              	PWM_SetStartMode:
 1127              	.LFB30:
1161:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1128              		.loc 1 1161 0
 1129              		.cfi_startproc
 1130              	.LVL70:
 1131 0000 10B5     		push	{r4, lr}
 1132              		.cfi_def_cfa_offset 8
 1133              		.cfi_offset 4, -8
 1134              		.cfi_offset 14, -4
1161:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1135              		.loc 1 1161 0
 1136 0002 041C     		mov	r4, r0
1164:Generated_Source\PSoC4/PWM.c **** 
 1137              		.loc 1 1164 0
 1138 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1139              	.LVL71:
1166:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_START_SHIFT));
 1140              		.loc 1 1166 0
 1141 0008 054B     		ldr	r3, .L86
 1142 000a 064A     		ldr	r2, .L86+4
 1143 000c 1968     		ldr	r1, [r3]
1170:Generated_Source\PSoC4/PWM.c **** 
 1144              		.loc 1 1170 0
 1145              		@ sp needed
1166:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_START_SHIFT));
 1146              		.loc 1 1166 0
 1147 000e 0A40     		and	r2, r1
 1148 0010 1A60     		str	r2, [r3]
1167:Generated_Source\PSoC4/PWM.c **** 
 1149              		.loc 1 1167 0
 1150 0012 1968     		ldr	r1, [r3]
 1151 0014 2202     		lsl	r2, r4, #8
 1152 0016 0A43     		orr	r2, r1
 1153 0018 1A60     		str	r2, [r3]
1169:Generated_Source\PSoC4/PWM.c **** }
 1154              		.loc 1 1169 0
 1155 001a FFF7FEFF 		bl	CyExitCriticalSection
 1156              	.LVL72:
 1157              	.LVL73:
1170:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 48


 1158              		.loc 1 1170 0
 1159 001e 10BD     		pop	{r4, pc}
 1160              	.L87:
 1161              		.align	2
 1162              	.L86:
 1163 0020 24010540 		.word	1074069796
 1164 0024 FFFCFFFF 		.word	-769
 1165              		.cfi_endproc
 1166              	.LFE30:
 1167              		.size	PWM_SetStartMode, .-PWM_SetStartMode
 1168              		.section	.text.PWM_SetStopMode,"ax",%progbits
 1169              		.align	1
 1170              		.global	PWM_SetStopMode
 1171              		.code	16
 1172              		.thumb_func
 1173              		.type	PWM_SetStopMode, %function
 1174              	PWM_SetStopMode:
 1175              	.LFB31:
1193:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1176              		.loc 1 1193 0
 1177              		.cfi_startproc
 1178              	.LVL74:
 1179 0000 10B5     		push	{r4, lr}
 1180              		.cfi_def_cfa_offset 8
 1181              		.cfi_offset 4, -8
 1182              		.cfi_offset 14, -4
1193:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1183              		.loc 1 1193 0
 1184 0002 041C     		mov	r4, r0
1196:Generated_Source\PSoC4/PWM.c **** 
 1185              		.loc 1 1196 0
 1186 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1187              	.LVL75:
1198:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_STOP_SHIFT));
 1188              		.loc 1 1198 0
 1189 0008 C021     		mov	r1, #192
 1190 000a 054B     		ldr	r3, .L89
1202:Generated_Source\PSoC4/PWM.c **** 
 1191              		.loc 1 1202 0
 1192              		@ sp needed
1198:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_STOP_SHIFT));
 1193              		.loc 1 1198 0
 1194 000c 1A68     		ldr	r2, [r3]
 1195 000e 8A43     		bic	r2, r1
 1196 0010 1A60     		str	r2, [r3]
1199:Generated_Source\PSoC4/PWM.c **** 
 1197              		.loc 1 1199 0
 1198 0012 1968     		ldr	r1, [r3]
 1199 0014 A201     		lsl	r2, r4, #6
 1200 0016 0A43     		orr	r2, r1
 1201 0018 1A60     		str	r2, [r3]
1201:Generated_Source\PSoC4/PWM.c **** }
 1202              		.loc 1 1201 0
 1203 001a FFF7FEFF 		bl	CyExitCriticalSection
 1204              	.LVL76:
 1205              	.LVL77:
1202:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 49


 1206              		.loc 1 1202 0
 1207 001e 10BD     		pop	{r4, pc}
 1208              	.L90:
 1209              		.align	2
 1210              	.L89:
 1211 0020 24010540 		.word	1074069796
 1212              		.cfi_endproc
 1213              	.LFE31:
 1214              		.size	PWM_SetStopMode, .-PWM_SetStopMode
 1215              		.section	.text.PWM_SetCountMode,"ax",%progbits
 1216              		.align	1
 1217              		.global	PWM_SetCountMode
 1218              		.code	16
 1219              		.thumb_func
 1220              		.type	PWM_SetCountMode, %function
 1221              	PWM_SetCountMode:
 1222              	.LFB32:
1226:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1223              		.loc 1 1226 0
 1224              		.cfi_startproc
 1225              	.LVL78:
 1226 0000 10B5     		push	{r4, lr}
 1227              		.cfi_def_cfa_offset 8
 1228              		.cfi_offset 4, -8
 1229              		.cfi_offset 14, -4
1226:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1230              		.loc 1 1226 0
 1231 0002 041C     		mov	r4, r0
1229:Generated_Source\PSoC4/PWM.c **** 
 1232              		.loc 1 1229 0
 1233 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1234              	.LVL79:
1231:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_COUNT_SHIFT));
 1235              		.loc 1 1231 0
 1236 0008 0C21     		mov	r1, #12
 1237 000a 054B     		ldr	r3, .L92
1235:Generated_Source\PSoC4/PWM.c **** 
 1238              		.loc 1 1235 0
 1239              		@ sp needed
1231:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_COUNT_SHIFT));
 1240              		.loc 1 1231 0
 1241 000c 1A68     		ldr	r2, [r3]
 1242 000e 8A43     		bic	r2, r1
 1243 0010 1A60     		str	r2, [r3]
1232:Generated_Source\PSoC4/PWM.c **** 
 1244              		.loc 1 1232 0
 1245 0012 1968     		ldr	r1, [r3]
 1246 0014 A200     		lsl	r2, r4, #2
 1247 0016 0A43     		orr	r2, r1
 1248 0018 1A60     		str	r2, [r3]
1234:Generated_Source\PSoC4/PWM.c **** }
 1249              		.loc 1 1234 0
 1250 001a FFF7FEFF 		bl	CyExitCriticalSection
 1251              	.LVL80:
 1252              	.LVL81:
1235:Generated_Source\PSoC4/PWM.c **** 
 1253              		.loc 1 1235 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 50


 1254 001e 10BD     		pop	{r4, pc}
 1255              	.L93:
 1256              		.align	2
 1257              	.L92:
 1258 0020 24010540 		.word	1074069796
 1259              		.cfi_endproc
 1260              	.LFE32:
 1261              		.size	PWM_SetCountMode, .-PWM_SetCountMode
 1262              		.section	.text.PWM_TriggerCommand,"ax",%progbits
 1263              		.align	1
 1264              		.global	PWM_TriggerCommand
 1265              		.code	16
 1266              		.thumb_func
 1267              		.type	PWM_TriggerCommand, %function
 1268              	PWM_TriggerCommand:
 1269              	.LFB33:
1266:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1270              		.loc 1 1266 0
 1271              		.cfi_startproc
 1272              	.LVL82:
 1273 0000 38B5     		push	{r3, r4, r5, lr}
 1274              		.cfi_def_cfa_offset 16
 1275              		.cfi_offset 3, -16
 1276              		.cfi_offset 4, -12
 1277              		.cfi_offset 5, -8
 1278              		.cfi_offset 14, -4
1266:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1279              		.loc 1 1266 0
 1280 0002 0D1C     		mov	r5, r1
 1281 0004 041C     		mov	r4, r0
1271:Generated_Source\PSoC4/PWM.c **** 
 1282              		.loc 1 1271 0
 1283 0006 AC40     		lsl	r4, r4, r5
1269:Generated_Source\PSoC4/PWM.c **** 
 1284              		.loc 1 1269 0
 1285 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1286              	.LVL83:
1271:Generated_Source\PSoC4/PWM.c **** 
 1287              		.loc 1 1271 0
 1288 000c 024B     		ldr	r3, .L95
1274:Generated_Source\PSoC4/PWM.c **** 
 1289              		.loc 1 1274 0
 1290              		@ sp needed
1271:Generated_Source\PSoC4/PWM.c **** 
 1291              		.loc 1 1271 0
 1292 000e 1C60     		str	r4, [r3]
1273:Generated_Source\PSoC4/PWM.c **** }
 1293              		.loc 1 1273 0
 1294 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1295              	.LVL84:
 1296              	.LVL85:
1274:Generated_Source\PSoC4/PWM.c **** 
 1297              		.loc 1 1274 0
 1298 0014 38BD     		pop	{r3, r4, r5, pc}
 1299              	.L96:
 1300 0016 C046     		.align	2
 1301              	.L95:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 51


 1302 0018 08000540 		.word	1074069512
 1303              		.cfi_endproc
 1304              	.LFE33:
 1305              		.size	PWM_TriggerCommand, .-PWM_TriggerCommand
 1306              		.section	.text.PWM_Enable,"ax",%progbits
 1307              		.align	1
 1308              		.global	PWM_Enable
 1309              		.code	16
 1310              		.thumb_func
 1311              		.type	PWM_Enable, %function
 1312              	PWM_Enable:
 1313              	.LFB1:
 178:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1314              		.loc 1 178 0
 1315              		.cfi_startproc
 1316 0000 10B5     		push	{r4, lr}
 1317              		.cfi_def_cfa_offset 8
 1318              		.cfi_offset 4, -8
 1319              		.cfi_offset 14, -4
 182:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1320              		.loc 1 182 0
 1321 0002 0124     		mov	r4, #1
 181:Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG |= PWM_MASK;
 1322              		.loc 1 181 0
 1323 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1324              	.LVL86:
 182:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1325              		.loc 1 182 0
 1326 0008 054A     		ldr	r2, .L98
 203:Generated_Source\PSoC4/PWM.c **** 
 1327              		.loc 1 203 0
 1328              		@ sp needed
 182:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1329              		.loc 1 182 0
 1330 000a 1368     		ldr	r3, [r2]
 1331 000c 2343     		orr	r3, r4
 1332 000e 1360     		str	r3, [r2]
 183:Generated_Source\PSoC4/PWM.c **** 
 1333              		.loc 1 183 0
 1334 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1335              	.LVL87:
 188:Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_PWM_START_SIGNAL_PRESENT) */
 1336              		.loc 1 188 0
 1337 0014 201C     		mov	r0, r4
 1338 0016 1821     		mov	r1, #24
 1339 0018 FFF7FEFF 		bl	PWM_TriggerCommand
 1340              	.LVL88:
 203:Generated_Source\PSoC4/PWM.c **** 
 1341              		.loc 1 203 0
 1342 001c 10BD     		pop	{r4, pc}
 1343              	.L99:
 1344 001e C046     		.align	2
 1345              	.L98:
 1346 0020 00000540 		.word	1074069504
 1347              		.cfi_endproc
 1348              	.LFE1:
 1349              		.size	PWM_Enable, .-PWM_Enable
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 52


 1350              		.section	.text.PWM_Start,"ax",%progbits
 1351              		.align	1
 1352              		.global	PWM_Start
 1353              		.code	16
 1354              		.thumb_func
 1355              		.type	PWM_Start, %function
 1356              	PWM_Start:
 1357              	.LFB2:
 231:Generated_Source\PSoC4/PWM.c ****     if (0u == PWM_initVar)
 1358              		.loc 1 231 0
 1359              		.cfi_startproc
 1360 0000 10B5     		push	{r4, lr}
 1361              		.cfi_def_cfa_offset 8
 1362              		.cfi_offset 4, -8
 1363              		.cfi_offset 14, -4
 232:Generated_Source\PSoC4/PWM.c ****     {
 1364              		.loc 1 232 0
 1365 0002 054C     		ldr	r4, .L103
 1366 0004 2378     		ldrb	r3, [r4]
 1367 0006 002B     		cmp	r3, #0
 1368 0008 03D1     		bne	.L101
 234:Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 1369              		.loc 1 234 0
 1370 000a FFF7FEFF 		bl	PWM_Init
 1371              	.LVL89:
 235:Generated_Source\PSoC4/PWM.c ****     }
 1372              		.loc 1 235 0
 1373 000e 0123     		mov	r3, #1
 1374 0010 2370     		strb	r3, [r4]
 1375              	.L101:
 238:Generated_Source\PSoC4/PWM.c **** }
 1376              		.loc 1 238 0
 1377 0012 FFF7FEFF 		bl	PWM_Enable
 1378              	.LVL90:
 239:Generated_Source\PSoC4/PWM.c **** 
 1379              		.loc 1 239 0
 1380              		@ sp needed
 1381 0016 10BD     		pop	{r4, pc}
 1382              	.L104:
 1383              		.align	2
 1384              	.L103:
 1385 0018 00000000 		.word	.LANCHOR0
 1386              		.cfi_endproc
 1387              	.LFE2:
 1388              		.size	PWM_Start, .-PWM_Start
 1389              		.section	.text.PWM_ReadStatus,"ax",%progbits
 1390              		.align	1
 1391              		.global	PWM_ReadStatus
 1392              		.code	16
 1393              		.thumb_func
 1394              		.type	PWM_ReadStatus, %function
 1395              	PWM_ReadStatus:
 1396              	.LFB34:
1295:Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
 1397              		.loc 1 1295 0
 1398              		.cfi_startproc
1296:Generated_Source\PSoC4/PWM.c ****             (PWM_STATUS_REG & PWM_STATUS_DOWN));
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 53


 1399              		.loc 1 1296 0
 1400 0000 034A     		ldr	r2, .L106
1298:Generated_Source\PSoC4/PWM.c **** 
 1401              		.loc 1 1298 0
 1402              		@ sp needed
1296:Generated_Source\PSoC4/PWM.c ****             (PWM_STATUS_REG & PWM_STATUS_DOWN));
 1403              		.loc 1 1296 0
 1404 0002 1368     		ldr	r3, [r2]
1297:Generated_Source\PSoC4/PWM.c **** }
 1405              		.loc 1 1297 0
 1406 0004 1068     		ldr	r0, [r2]
 1407 0006 0122     		mov	r2, #1
1296:Generated_Source\PSoC4/PWM.c ****             (PWM_STATUS_REG & PWM_STATUS_DOWN));
 1408              		.loc 1 1296 0
 1409 0008 9B0F     		lsr	r3, r3, #30
1297:Generated_Source\PSoC4/PWM.c **** }
 1410              		.loc 1 1297 0
 1411 000a 1040     		and	r0, r2
1296:Generated_Source\PSoC4/PWM.c ****             (PWM_STATUS_REG & PWM_STATUS_DOWN));
 1412              		.loc 1 1296 0
 1413 000c 1843     		orr	r0, r3
1298:Generated_Source\PSoC4/PWM.c **** 
 1414              		.loc 1 1298 0
 1415 000e 7047     		bx	lr
 1416              	.L107:
 1417              		.align	2
 1418              	.L106:
 1419 0010 04010540 		.word	1074069764
 1420              		.cfi_endproc
 1421              	.LFE34:
 1422              		.size	PWM_ReadStatus, .-PWM_ReadStatus
 1423              		.section	.text.PWM_SetInterruptMode,"ax",%progbits
 1424              		.align	1
 1425              		.global	PWM_SetInterruptMode
 1426              		.code	16
 1427              		.thumb_func
 1428              		.type	PWM_SetInterruptMode, %function
 1429              	PWM_SetInterruptMode:
 1430              	.LFB35:
1320:Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_MASK_REG =  interruptMask;
 1431              		.loc 1 1320 0
 1432              		.cfi_startproc
 1433              	.LVL91:
 1434              		.loc 1 1321 0
 1435 0000 014B     		ldr	r3, .L109
1322:Generated_Source\PSoC4/PWM.c **** }
 1436              		.loc 1 1322 0
 1437              		@ sp needed
1321:Generated_Source\PSoC4/PWM.c **** }
 1438              		.loc 1 1321 0
 1439 0002 1860     		str	r0, [r3]
 1440              		.loc 1 1322 0
 1441 0004 7047     		bx	lr
 1442              	.L110:
 1443 0006 C046     		.align	2
 1444              	.L109:
 1445 0008 38010540 		.word	1074069816
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 54


 1446              		.cfi_endproc
 1447              	.LFE35:
 1448              		.size	PWM_SetInterruptMode, .-PWM_SetInterruptMode
 1449              		.section	.text.PWM_GetInterruptSourceMasked,"ax",%progbits
 1450              		.align	1
 1451              		.global	PWM_GetInterruptSourceMasked
 1452              		.code	16
 1453              		.thumb_func
 1454              		.type	PWM_GetInterruptSourceMasked, %function
 1455              	PWM_GetInterruptSourceMasked:
 1456              	.LFB36:
1323:Generated_Source\PSoC4/PWM.c **** 
1324:Generated_Source\PSoC4/PWM.c **** 
1325:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1326:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSourceMasked
1327:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1328:Generated_Source\PSoC4/PWM.c **** *
1329:Generated_Source\PSoC4/PWM.c **** * Summary:
1330:Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests masked by the interrupt mask.
1331:Generated_Source\PSoC4/PWM.c **** *
1332:Generated_Source\PSoC4/PWM.c **** * Parameters:
1333:Generated_Source\PSoC4/PWM.c **** *   None
1334:Generated_Source\PSoC4/PWM.c **** *
1335:Generated_Source\PSoC4/PWM.c **** * Return:
1336:Generated_Source\PSoC4/PWM.c **** *  Masked interrupt source
1337:Generated_Source\PSoC4/PWM.c **** *   Values:
1338:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1339:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1340:Generated_Source\PSoC4/PWM.c **** *
1341:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1342:Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSourceMasked(void)
1343:Generated_Source\PSoC4/PWM.c **** {
 1457              		.loc 1 1343 0
 1458              		.cfi_startproc
1344:Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_MASKED_REG);
 1459              		.loc 1 1344 0
 1460 0000 014B     		ldr	r3, .L112
1345:Generated_Source\PSoC4/PWM.c **** }
 1461              		.loc 1 1345 0
 1462              		@ sp needed
1344:Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_MASKED_REG);
 1463              		.loc 1 1344 0
 1464 0002 1868     		ldr	r0, [r3]
 1465              		.loc 1 1345 0
 1466 0004 7047     		bx	lr
 1467              	.L113:
 1468 0006 C046     		.align	2
 1469              	.L112:
 1470 0008 3C010540 		.word	1074069820
 1471              		.cfi_endproc
 1472              	.LFE36:
 1473              		.size	PWM_GetInterruptSourceMasked, .-PWM_GetInterruptSourceMasked
 1474              		.section	.text.PWM_GetInterruptSource,"ax",%progbits
 1475              		.align	1
 1476              		.global	PWM_GetInterruptSource
 1477              		.code	16
 1478              		.thumb_func
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 55


 1479              		.type	PWM_GetInterruptSource, %function
 1480              	PWM_GetInterruptSource:
 1481              	.LFB37:
1346:Generated_Source\PSoC4/PWM.c **** 
1347:Generated_Source\PSoC4/PWM.c **** 
1348:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1349:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSource
1350:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1351:Generated_Source\PSoC4/PWM.c **** *
1352:Generated_Source\PSoC4/PWM.c **** * Summary:
1353:Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests (without masking).
1354:Generated_Source\PSoC4/PWM.c **** *
1355:Generated_Source\PSoC4/PWM.c **** * Parameters:
1356:Generated_Source\PSoC4/PWM.c **** *  None
1357:Generated_Source\PSoC4/PWM.c **** *
1358:Generated_Source\PSoC4/PWM.c **** * Return:
1359:Generated_Source\PSoC4/PWM.c **** *  Interrupt request value
1360:Generated_Source\PSoC4/PWM.c **** *   Values:
1361:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1362:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1363:Generated_Source\PSoC4/PWM.c **** *
1364:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1365:Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSource(void)
1366:Generated_Source\PSoC4/PWM.c **** {
 1482              		.loc 1 1366 0
 1483              		.cfi_startproc
1367:Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_REQ_REG);
 1484              		.loc 1 1367 0
 1485 0000 014B     		ldr	r3, .L115
1368:Generated_Source\PSoC4/PWM.c **** }
 1486              		.loc 1 1368 0
 1487              		@ sp needed
1367:Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_REQ_REG);
 1488              		.loc 1 1367 0
 1489 0002 1868     		ldr	r0, [r3]
 1490              		.loc 1 1368 0
 1491 0004 7047     		bx	lr
 1492              	.L116:
 1493 0006 C046     		.align	2
 1494              	.L115:
 1495 0008 30010540 		.word	1074069808
 1496              		.cfi_endproc
 1497              	.LFE37:
 1498              		.size	PWM_GetInterruptSource, .-PWM_GetInterruptSource
 1499              		.section	.text.PWM_ClearInterrupt,"ax",%progbits
 1500              		.align	1
 1501              		.global	PWM_ClearInterrupt
 1502              		.code	16
 1503              		.thumb_func
 1504              		.type	PWM_ClearInterrupt, %function
 1505              	PWM_ClearInterrupt:
 1506              	.LFB38:
1369:Generated_Source\PSoC4/PWM.c **** 
1370:Generated_Source\PSoC4/PWM.c **** 
1371:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1372:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ClearInterrupt
1373:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 56


1374:Generated_Source\PSoC4/PWM.c **** *
1375:Generated_Source\PSoC4/PWM.c **** * Summary:
1376:Generated_Source\PSoC4/PWM.c **** *  Clears the interrupt request.
1377:Generated_Source\PSoC4/PWM.c **** *
1378:Generated_Source\PSoC4/PWM.c **** * Parameters:
1379:Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to clear
1380:Generated_Source\PSoC4/PWM.c **** *   Values:
1381:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1382:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1383:Generated_Source\PSoC4/PWM.c **** *
1384:Generated_Source\PSoC4/PWM.c **** * Return:
1385:Generated_Source\PSoC4/PWM.c **** *  None
1386:Generated_Source\PSoC4/PWM.c **** *
1387:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1388:Generated_Source\PSoC4/PWM.c **** void PWM_ClearInterrupt(uint32 interruptMask)
1389:Generated_Source\PSoC4/PWM.c **** {
 1507              		.loc 1 1389 0
 1508              		.cfi_startproc
 1509              	.LVL92:
1390:Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_REQ_REG = interruptMask;
 1510              		.loc 1 1390 0
 1511 0000 014B     		ldr	r3, .L118
1391:Generated_Source\PSoC4/PWM.c **** }
 1512              		.loc 1 1391 0
 1513              		@ sp needed
1390:Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_REQ_REG = interruptMask;
 1514              		.loc 1 1390 0
 1515 0002 1860     		str	r0, [r3]
 1516              		.loc 1 1391 0
 1517 0004 7047     		bx	lr
 1518              	.L119:
 1519 0006 C046     		.align	2
 1520              	.L118:
 1521 0008 30010540 		.word	1074069808
 1522              		.cfi_endproc
 1523              	.LFE38:
 1524              		.size	PWM_ClearInterrupt, .-PWM_ClearInterrupt
 1525              		.section	.text.PWM_SetInterrupt,"ax",%progbits
 1526              		.align	1
 1527              		.global	PWM_SetInterrupt
 1528              		.code	16
 1529              		.thumb_func
 1530              		.type	PWM_SetInterrupt, %function
 1531              	PWM_SetInterrupt:
 1532              	.LFB39:
1392:Generated_Source\PSoC4/PWM.c **** 
1393:Generated_Source\PSoC4/PWM.c **** 
1394:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1395:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterrupt
1396:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1397:Generated_Source\PSoC4/PWM.c **** *
1398:Generated_Source\PSoC4/PWM.c **** * Summary:
1399:Generated_Source\PSoC4/PWM.c **** *  Sets a software interrupt request.
1400:Generated_Source\PSoC4/PWM.c **** *
1401:Generated_Source\PSoC4/PWM.c **** * Parameters:
1402:Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to set
1403:Generated_Source\PSoC4/PWM.c **** *   Values:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 57


1404:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1405:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1406:Generated_Source\PSoC4/PWM.c **** *
1407:Generated_Source\PSoC4/PWM.c **** * Return:
1408:Generated_Source\PSoC4/PWM.c **** *  None
1409:Generated_Source\PSoC4/PWM.c **** *
1410:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1411:Generated_Source\PSoC4/PWM.c **** void PWM_SetInterrupt(uint32 interruptMask)
1412:Generated_Source\PSoC4/PWM.c **** {
 1533              		.loc 1 1412 0
 1534              		.cfi_startproc
 1535              	.LVL93:
1413:Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_SET_REG = interruptMask;
 1536              		.loc 1 1413 0
 1537 0000 014B     		ldr	r3, .L121
1414:Generated_Source\PSoC4/PWM.c **** }
 1538              		.loc 1 1414 0
 1539              		@ sp needed
1413:Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_SET_REG = interruptMask;
 1540              		.loc 1 1413 0
 1541 0002 1860     		str	r0, [r3]
 1542              		.loc 1 1414 0
 1543 0004 7047     		bx	lr
 1544              	.L122:
 1545 0006 C046     		.align	2
 1546              	.L121:
 1547 0008 34010540 		.word	1074069812
 1548              		.cfi_endproc
 1549              	.LFE39:
 1550              		.size	PWM_SetInterrupt, .-PWM_SetInterrupt
 1551              		.global	PWM_initVar
 1552              		.bss
 1553              		.set	.LANCHOR0,. + 0
 1554              		.type	PWM_initVar, %object
 1555              		.size	PWM_initVar, 1
 1556              	PWM_initVar:
 1557 0000 00       		.space	1
 1558              		.text
 1559              	.Letext0:
 1560              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1561              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 1562              		.section	.debug_info,"",%progbits
 1563              	.Ldebug_info0:
 1564 0000 5D090000 		.4byte	0x95d
 1565 0004 0400     		.2byte	0x4
 1566 0006 00000000 		.4byte	.Ldebug_abbrev0
 1567 000a 04       		.byte	0x4
 1568 000b 01       		.uleb128 0x1
 1569 000c 06000000 		.4byte	.LASF76
 1570 0010 01       		.byte	0x1
 1571 0011 11010000 		.4byte	.LASF77
 1572 0015 4E040000 		.4byte	.LASF78
 1573 0019 20000000 		.4byte	.Ldebug_ranges0+0x20
 1574 001d 00000000 		.4byte	0
 1575 0021 00000000 		.4byte	.Ldebug_line0
 1576 0025 02       		.uleb128 0x2
 1577 0026 01       		.byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 58


 1578 0027 06       		.byte	0x6
 1579 0028 4C010000 		.4byte	.LASF0
 1580 002c 02       		.uleb128 0x2
 1581 002d 01       		.byte	0x1
 1582 002e 08       		.byte	0x8
 1583 002f 88030000 		.4byte	.LASF1
 1584 0033 02       		.uleb128 0x2
 1585 0034 02       		.byte	0x2
 1586 0035 05       		.byte	0x5
 1587 0036 BF030000 		.4byte	.LASF2
 1588 003a 02       		.uleb128 0x2
 1589 003b 02       		.byte	0x2
 1590 003c 07       		.byte	0x7
 1591 003d 95020000 		.4byte	.LASF3
 1592 0041 02       		.uleb128 0x2
 1593 0042 04       		.byte	0x4
 1594 0043 05       		.byte	0x5
 1595 0044 94010000 		.4byte	.LASF4
 1596 0048 02       		.uleb128 0x2
 1597 0049 04       		.byte	0x4
 1598 004a 07       		.byte	0x7
 1599 004b 63020000 		.4byte	.LASF5
 1600 004f 02       		.uleb128 0x2
 1601 0050 08       		.byte	0x8
 1602 0051 05       		.byte	0x5
 1603 0052 3E010000 		.4byte	.LASF6
 1604 0056 02       		.uleb128 0x2
 1605 0057 08       		.byte	0x8
 1606 0058 07       		.byte	0x7
 1607 0059 CF000000 		.4byte	.LASF7
 1608 005d 03       		.uleb128 0x3
 1609 005e 04       		.byte	0x4
 1610 005f 05       		.byte	0x5
 1611 0060 696E7400 		.ascii	"int\000"
 1612 0064 02       		.uleb128 0x2
 1613 0065 04       		.byte	0x4
 1614 0066 07       		.byte	0x7
 1615 0067 3B020000 		.4byte	.LASF8
 1616 006b 04       		.uleb128 0x4
 1617 006c 9D010000 		.4byte	.LASF9
 1618 0070 02       		.byte	0x2
 1619 0071 9801     		.2byte	0x198
 1620 0073 2C000000 		.4byte	0x2c
 1621 0077 04       		.uleb128 0x4
 1622 0078 EA010000 		.4byte	.LASF10
 1623 007c 02       		.byte	0x2
 1624 007d 9A01     		.2byte	0x19a
 1625 007f 48000000 		.4byte	0x48
 1626 0083 02       		.uleb128 0x2
 1627 0084 04       		.byte	0x4
 1628 0085 04       		.byte	0x4
 1629 0086 56030000 		.4byte	.LASF11
 1630 008a 02       		.uleb128 0x2
 1631 008b 08       		.byte	0x8
 1632 008c 04       		.byte	0x4
 1633 008d A3010000 		.4byte	.LASF12
 1634 0091 02       		.uleb128 0x2
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 59


 1635 0092 01       		.byte	0x1
 1636 0093 08       		.byte	0x8
 1637 0094 15040000 		.4byte	.LASF13
 1638 0098 04       		.uleb128 0x4
 1639 0099 EA020000 		.4byte	.LASF14
 1640 009d 02       		.byte	0x2
 1641 009e 4402     		.2byte	0x244
 1642 00a0 A4000000 		.4byte	0xa4
 1643 00a4 05       		.uleb128 0x5
 1644 00a5 77000000 		.4byte	0x77
 1645 00a9 02       		.uleb128 0x2
 1646 00aa 04       		.byte	0x4
 1647 00ab 07       		.byte	0x7
 1648 00ac 0B030000 		.4byte	.LASF15
 1649 00b0 06       		.uleb128 0x6
 1650 00b1 00010000 		.4byte	.LASF16
 1651 00b5 01       		.byte	0x1
 1652 00b6 6702     		.2byte	0x267
 1653 00b8 01       		.byte	0x1
 1654 00b9 CA000000 		.4byte	0xca
 1655 00bd 07       		.uleb128 0x7
 1656 00be 00000000 		.4byte	.LASF18
 1657 00c2 01       		.byte	0x1
 1658 00c3 6702     		.2byte	0x267
 1659 00c5 77000000 		.4byte	0x77
 1660 00c9 00       		.byte	0
 1661 00ca 06       		.uleb128 0x6
 1662 00cb 6C010000 		.4byte	.LASF17
 1663 00cf 01       		.byte	0x1
 1664 00d0 2705     		.2byte	0x527
 1665 00d2 01       		.byte	0x1
 1666 00d3 E4000000 		.4byte	0xe4
 1667 00d7 07       		.uleb128 0x7
 1668 00d8 E6030000 		.4byte	.LASF19
 1669 00dc 01       		.byte	0x1
 1670 00dd 2705     		.2byte	0x527
 1671 00df 77000000 		.4byte	0x77
 1672 00e3 00       		.byte	0
 1673 00e4 06       		.uleb128 0x6
 1674 00e5 DA020000 		.4byte	.LASF20
 1675 00e9 01       		.byte	0x1
 1676 00ea B502     		.2byte	0x2b5
 1677 00ec 01       		.byte	0x1
 1678 00ed FE000000 		.4byte	0xfe
 1679 00f1 07       		.uleb128 0x7
 1680 00f2 C8000000 		.4byte	.LASF21
 1681 00f6 01       		.byte	0x1
 1682 00f7 B502     		.2byte	0x2b5
 1683 00f9 77000000 		.4byte	0x77
 1684 00fd 00       		.byte	0
 1685 00fe 06       		.uleb128 0x6
 1686 00ff 14050000 		.4byte	.LASF22
 1687 0103 01       		.byte	0x1
 1688 0104 5103     		.2byte	0x351
 1689 0106 01       		.byte	0x1
 1690 0107 18010000 		.4byte	0x118
 1691 010b 07       		.uleb128 0x7
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 60


 1692 010c 23030000 		.4byte	.LASF23
 1693 0110 01       		.byte	0x1
 1694 0111 5103     		.2byte	0x351
 1695 0113 77000000 		.4byte	0x77
 1696 0117 00       		.byte	0
 1697 0118 08       		.uleb128 0x8
 1698 0119 96030000 		.4byte	.LASF24
 1699 011d 01       		.byte	0x1
 1700 011e 26       		.byte	0x26
 1701 011f 00000000 		.4byte	.LFB0
 1702 0123 60000000 		.4byte	.LFE0-.LFB0
 1703 0127 01       		.uleb128 0x1
 1704 0128 9C       		.byte	0x9c
 1705 0129 94010000 		.4byte	0x194
 1706 012d 09       		.uleb128 0x9
 1707 012e B0000000 		.4byte	0xb0
 1708 0132 02000000 		.4byte	.LBB10
 1709 0136 00000000 		.4byte	.Ldebug_ranges0+0
 1710 013a 01       		.byte	0x1
 1711 013b 67       		.byte	0x67
 1712 013c 47010000 		.4byte	0x147
 1713 0140 0A       		.uleb128 0xa
 1714 0141 BD000000 		.4byte	0xbd
 1715 0145 00       		.byte	0
 1716 0146 00       		.byte	0
 1717 0147 0B       		.uleb128 0xb
 1718 0148 CA000000 		.4byte	0xca
 1719 014c 26000000 		.4byte	.LBB16
 1720 0150 04000000 		.4byte	.LBE16-.LBB16
 1721 0154 01       		.byte	0x1
 1722 0155 77       		.byte	0x77
 1723 0156 61010000 		.4byte	0x161
 1724 015a 0A       		.uleb128 0xa
 1725 015b D7000000 		.4byte	0xd7
 1726 015f 00       		.byte	0
 1727 0160 00       		.byte	0
 1728 0161 0B       		.uleb128 0xb
 1729 0162 E4000000 		.4byte	0xe4
 1730 0166 2E000000 		.4byte	.LBB18
 1731 016a 06000000 		.4byte	.LBE18-.LBB18
 1732 016e 01       		.byte	0x1
 1733 016f 92       		.byte	0x92
 1734 0170 7C010000 		.4byte	0x17c
 1735 0174 0C       		.uleb128 0xc
 1736 0175 F1000000 		.4byte	0xf1
 1737 0179 E216     		.2byte	0x16e2
 1738 017b 00       		.byte	0
 1739 017c 0D       		.uleb128 0xd
 1740 017d FE000000 		.4byte	0xfe
 1741 0181 34000000 		.4byte	.LBB20
 1742 0185 06000000 		.4byte	.LBE20-.LBB20
 1743 0189 01       		.byte	0x1
 1744 018a 93       		.byte	0x93
 1745 018b 0C       		.uleb128 0xc
 1746 018c 0B010000 		.4byte	0x10b
 1747 0190 710B     		.2byte	0xb71
 1748 0192 00       		.byte	0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 61


 1749 0193 00       		.byte	0
 1750 0194 0E       		.uleb128 0xe
 1751 0195 D0010000 		.4byte	.LASF25
 1752 0199 01       		.byte	0x1
 1753 019a 0001     		.2byte	0x100
 1754 019c 00000000 		.4byte	.LFB3
 1755 01a0 1C000000 		.4byte	.LFE3-.LFB3
 1756 01a4 01       		.uleb128 0x1
 1757 01a5 9C       		.byte	0x9c
 1758 01a6 CD010000 		.4byte	0x1cd
 1759 01aa 0F       		.uleb128 0xf
 1760 01ab 9C040000 		.4byte	.LASF27
 1761 01af 01       		.byte	0x1
 1762 01b0 0201     		.2byte	0x102
 1763 01b2 6B000000 		.4byte	0x6b
 1764 01b6 00000000 		.4byte	.LLST0
 1765 01ba 10       		.uleb128 0x10
 1766 01bb 06000000 		.4byte	.LVL4
 1767 01bf 48090000 		.4byte	0x948
 1768 01c3 10       		.uleb128 0x10
 1769 01c4 14000000 		.4byte	.LVL5
 1770 01c8 53090000 		.4byte	0x953
 1771 01cc 00       		.byte	0
 1772 01cd 0E       		.uleb128 0xe
 1773 01ce BE040000 		.4byte	.LASF26
 1774 01d2 01       		.byte	0x1
 1775 01d3 2501     		.2byte	0x125
 1776 01d5 00000000 		.4byte	.LFB4
 1777 01d9 28000000 		.4byte	.LFE4-.LFB4
 1778 01dd 01       		.uleb128 0x1
 1779 01de 9C       		.byte	0x9c
 1780 01df 16020000 		.4byte	0x216
 1781 01e3 11       		.uleb128 0x11
 1782 01e4 1A040000 		.4byte	.LASF29
 1783 01e8 01       		.byte	0x1
 1784 01e9 2501     		.2byte	0x125
 1785 01eb 77000000 		.4byte	0x77
 1786 01ef 13000000 		.4byte	.LLST1
 1787 01f3 0F       		.uleb128 0xf
 1788 01f4 9C040000 		.4byte	.LASF27
 1789 01f8 01       		.byte	0x1
 1790 01f9 2701     		.2byte	0x127
 1791 01fb 6B000000 		.4byte	0x6b
 1792 01ff 3F000000 		.4byte	.LLST2
 1793 0203 10       		.uleb128 0x10
 1794 0204 08000000 		.4byte	.LVL7
 1795 0208 48090000 		.4byte	0x948
 1796 020c 10       		.uleb128 0x10
 1797 020d 1C000000 		.4byte	.LVL8
 1798 0211 53090000 		.4byte	0x953
 1799 0215 00       		.byte	0
 1800 0216 0E       		.uleb128 0xe
 1801 0217 07040000 		.4byte	.LASF28
 1802 021b 01       		.byte	0x1
 1803 021c 4601     		.2byte	0x146
 1804 021e 00000000 		.4byte	.LFB5
 1805 0222 28000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 62


 1806 0226 01       		.uleb128 0x1
 1807 0227 9C       		.byte	0x9c
 1808 0228 5F020000 		.4byte	0x25f
 1809 022c 11       		.uleb128 0x11
 1810 022d F9000000 		.4byte	.LASF30
 1811 0231 01       		.byte	0x1
 1812 0232 4601     		.2byte	0x146
 1813 0234 77000000 		.4byte	0x77
 1814 0238 52000000 		.4byte	.LLST3
 1815 023c 0F       		.uleb128 0xf
 1816 023d 9C040000 		.4byte	.LASF27
 1817 0241 01       		.byte	0x1
 1818 0242 4801     		.2byte	0x148
 1819 0244 6B000000 		.4byte	0x6b
 1820 0248 7E000000 		.4byte	.LLST4
 1821 024c 10       		.uleb128 0x10
 1822 024d 08000000 		.4byte	.LVL11
 1823 0251 48090000 		.4byte	0x948
 1824 0255 10       		.uleb128 0x10
 1825 0256 1C000000 		.4byte	.LVL12
 1826 025a 53090000 		.4byte	0x953
 1827 025e 00       		.byte	0
 1828 025f 0E       		.uleb128 0xe
 1829 0260 A8020000 		.4byte	.LASF31
 1830 0264 01       		.byte	0x1
 1831 0265 6B01     		.2byte	0x16b
 1832 0267 00000000 		.4byte	.LFB6
 1833 026b 28000000 		.4byte	.LFE6-.LFB6
 1834 026f 01       		.uleb128 0x1
 1835 0270 9C       		.byte	0x9c
 1836 0271 A8020000 		.4byte	0x2a8
 1837 0275 11       		.uleb128 0x11
 1838 0276 5C030000 		.4byte	.LASF32
 1839 027a 01       		.byte	0x1
 1840 027b 6B01     		.2byte	0x16b
 1841 027d 77000000 		.4byte	0x77
 1842 0281 91000000 		.4byte	.LLST5
 1843 0285 0F       		.uleb128 0xf
 1844 0286 9C040000 		.4byte	.LASF27
 1845 028a 01       		.byte	0x1
 1846 028b 6D01     		.2byte	0x16d
 1847 028d 6B000000 		.4byte	0x6b
 1848 0291 BD000000 		.4byte	.LLST6
 1849 0295 10       		.uleb128 0x10
 1850 0296 08000000 		.4byte	.LVL15
 1851 029a 48090000 		.4byte	0x948
 1852 029e 10       		.uleb128 0x10
 1853 029f 1C000000 		.4byte	.LVL16
 1854 02a3 53090000 		.4byte	0x953
 1855 02a7 00       		.byte	0
 1856 02a8 0E       		.uleb128 0xe
 1857 02a9 2B030000 		.4byte	.LASF33
 1858 02ad 01       		.byte	0x1
 1859 02ae 8B01     		.2byte	0x18b
 1860 02b0 00000000 		.4byte	.LFB7
 1861 02b4 2C000000 		.4byte	.LFE7-.LFB7
 1862 02b8 01       		.uleb128 0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 63


 1863 02b9 9C       		.byte	0x9c
 1864 02ba F1020000 		.4byte	0x2f1
 1865 02be 11       		.uleb128 0x11
 1866 02bf B9020000 		.4byte	.LASF34
 1867 02c3 01       		.byte	0x1
 1868 02c4 8B01     		.2byte	0x18b
 1869 02c6 77000000 		.4byte	0x77
 1870 02ca D0000000 		.4byte	.LLST7
 1871 02ce 0F       		.uleb128 0xf
 1872 02cf 9C040000 		.4byte	.LASF27
 1873 02d3 01       		.byte	0x1
 1874 02d4 8D01     		.2byte	0x18d
 1875 02d6 6B000000 		.4byte	0x6b
 1876 02da FC000000 		.4byte	.LLST8
 1877 02de 10       		.uleb128 0x10
 1878 02df 08000000 		.4byte	.LVL19
 1879 02e3 48090000 		.4byte	0x948
 1880 02e7 10       		.uleb128 0x10
 1881 02e8 22000000 		.4byte	.LVL20
 1882 02ec 53090000 		.4byte	0x953
 1883 02f0 00       		.byte	0
 1884 02f1 0E       		.uleb128 0xe
 1885 02f2 B0030000 		.4byte	.LASF35
 1886 02f6 01       		.byte	0x1
 1887 02f7 C101     		.2byte	0x1c1
 1888 02f9 00000000 		.4byte	.LFB8
 1889 02fd 10000000 		.4byte	.LFE8-.LFB8
 1890 0301 01       		.uleb128 0x1
 1891 0302 9C       		.byte	0x9c
 1892 0303 18030000 		.4byte	0x318
 1893 0307 11       		.uleb128 0x11
 1894 0308 75020000 		.4byte	.LASF36
 1895 030c 01       		.byte	0x1
 1896 030d C101     		.2byte	0x1c1
 1897 030f 77000000 		.4byte	0x77
 1898 0313 0F010000 		.4byte	.LLST9
 1899 0317 00       		.byte	0
 1900 0318 0E       		.uleb128 0xe
 1901 0319 B5000000 		.4byte	.LASF37
 1902 031d 01       		.byte	0x1
 1903 031e E501     		.2byte	0x1e5
 1904 0320 00000000 		.4byte	.LFB9
 1905 0324 28000000 		.4byte	.LFE9-.LFB9
 1906 0328 01       		.uleb128 0x1
 1907 0329 9C       		.byte	0x9c
 1908 032a 61030000 		.4byte	0x361
 1909 032e 11       		.uleb128 0x11
 1910 032f 14030000 		.4byte	.LASF38
 1911 0333 01       		.byte	0x1
 1912 0334 E501     		.2byte	0x1e5
 1913 0336 77000000 		.4byte	0x77
 1914 033a 30010000 		.4byte	.LLST10
 1915 033e 0F       		.uleb128 0xf
 1916 033f 9C040000 		.4byte	.LASF27
 1917 0343 01       		.byte	0x1
 1918 0344 E701     		.2byte	0x1e7
 1919 0346 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 64


 1920 034a 5C010000 		.4byte	.LLST11
 1921 034e 10       		.uleb128 0x10
 1922 034f 08000000 		.4byte	.LVL25
 1923 0353 48090000 		.4byte	0x948
 1924 0357 10       		.uleb128 0x10
 1925 0358 22000000 		.4byte	.LVL26
 1926 035c 53090000 		.4byte	0x953
 1927 0360 00       		.byte	0
 1928 0361 0E       		.uleb128 0xe
 1929 0362 CA040000 		.4byte	.LASF39
 1930 0366 01       		.byte	0x1
 1931 0367 0702     		.2byte	0x207
 1932 0369 00000000 		.4byte	.LFB10
 1933 036d 28000000 		.4byte	.LFE10-.LFB10
 1934 0371 01       		.uleb128 0x1
 1935 0372 9C       		.byte	0x9c
 1936 0373 AA030000 		.4byte	0x3aa
 1937 0377 11       		.uleb128 0x11
 1938 0378 9F030000 		.4byte	.LASF40
 1939 037c 01       		.byte	0x1
 1940 037d 0702     		.2byte	0x207
 1941 037f 77000000 		.4byte	0x77
 1942 0383 6F010000 		.4byte	.LLST12
 1943 0387 0F       		.uleb128 0xf
 1944 0388 9C040000 		.4byte	.LASF27
 1945 038c 01       		.byte	0x1
 1946 038d 0902     		.2byte	0x209
 1947 038f 6B000000 		.4byte	0x6b
 1948 0393 9B010000 		.4byte	.LLST13
 1949 0397 10       		.uleb128 0x10
 1950 0398 08000000 		.4byte	.LVL29
 1951 039c 48090000 		.4byte	0x948
 1952 03a0 10       		.uleb128 0x10
 1953 03a1 22000000 		.4byte	.LVL30
 1954 03a5 53090000 		.4byte	0x953
 1955 03a9 00       		.byte	0
 1956 03aa 0E       		.uleb128 0xe
 1957 03ab 48020000 		.4byte	.LASF41
 1958 03af 01       		.byte	0x1
 1959 03b0 2802     		.2byte	0x228
 1960 03b2 00000000 		.4byte	.LFB11
 1961 03b6 2C000000 		.4byte	.LFE11-.LFB11
 1962 03ba 01       		.uleb128 0x1
 1963 03bb 9C       		.byte	0x9c
 1964 03bc F3030000 		.4byte	0x3f3
 1965 03c0 11       		.uleb128 0x11
 1966 03c1 22020000 		.4byte	.LASF42
 1967 03c5 01       		.byte	0x1
 1968 03c6 2802     		.2byte	0x228
 1969 03c8 77000000 		.4byte	0x77
 1970 03cc AE010000 		.4byte	.LLST14
 1971 03d0 0F       		.uleb128 0xf
 1972 03d1 9C040000 		.4byte	.LASF27
 1973 03d5 01       		.byte	0x1
 1974 03d6 2A02     		.2byte	0x22a
 1975 03d8 6B000000 		.4byte	0x6b
 1976 03dc DA010000 		.4byte	.LLST15
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 65


 1977 03e0 10       		.uleb128 0x10
 1978 03e1 08000000 		.4byte	.LVL33
 1979 03e5 48090000 		.4byte	0x948
 1980 03e9 10       		.uleb128 0x10
 1981 03ea 20000000 		.4byte	.LVL35
 1982 03ee 53090000 		.4byte	0x953
 1983 03f2 00       		.byte	0
 1984 03f3 0E       		.uleb128 0xe
 1985 03f4 D9010000 		.4byte	.LASF43
 1986 03f8 01       		.byte	0x1
 1987 03f9 4902     		.2byte	0x249
 1988 03fb 00000000 		.4byte	.LFB12
 1989 03ff 28000000 		.4byte	.LFE12-.LFB12
 1990 0403 01       		.uleb128 0x1
 1991 0404 9C       		.byte	0x9c
 1992 0405 3C040000 		.4byte	0x43c
 1993 0409 11       		.uleb128 0x11
 1994 040a 0E020000 		.4byte	.LASF44
 1995 040e 01       		.byte	0x1
 1996 040f 4902     		.2byte	0x249
 1997 0411 77000000 		.4byte	0x77
 1998 0415 ED010000 		.4byte	.LLST16
 1999 0419 0F       		.uleb128 0xf
 2000 041a 9C040000 		.4byte	.LASF27
 2001 041e 01       		.byte	0x1
 2002 041f 4B02     		.2byte	0x24b
 2003 0421 6B000000 		.4byte	0x6b
 2004 0425 19020000 		.4byte	.LLST17
 2005 0429 10       		.uleb128 0x10
 2006 042a 08000000 		.4byte	.LVL37
 2007 042e 48090000 		.4byte	0x948
 2008 0432 10       		.uleb128 0x10
 2009 0433 1C000000 		.4byte	.LVL38
 2010 0437 53090000 		.4byte	0x953
 2011 043b 00       		.byte	0
 2012 043c 12       		.uleb128 0x12
 2013 043d B0000000 		.4byte	0xb0
 2014 0441 00000000 		.4byte	.LFB13
 2015 0445 0C000000 		.4byte	.LFE13-.LFB13
 2016 0449 01       		.uleb128 0x1
 2017 044a 9C       		.byte	0x9c
 2018 044b 59040000 		.4byte	0x459
 2019 044f 13       		.uleb128 0x13
 2020 0450 BD000000 		.4byte	0xbd
 2021 0454 2C020000 		.4byte	.LLST18
 2022 0458 00       		.byte	0
 2023 0459 14       		.uleb128 0x14
 2024 045a 2E010000 		.4byte	.LASF47
 2025 045e 01       		.byte	0x1
 2026 045f 7B02     		.2byte	0x27b
 2027 0461 77000000 		.4byte	0x77
 2028 0465 00000000 		.4byte	.LFB14
 2029 0469 0C000000 		.4byte	.LFE14-.LFB14
 2030 046d 01       		.uleb128 0x1
 2031 046e 9C       		.byte	0x9c
 2032 046f 0E       		.uleb128 0xe
 2033 0470 DF040000 		.4byte	.LASF45
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 66


 2034 0474 01       		.byte	0x1
 2035 0475 9802     		.2byte	0x298
 2036 0477 00000000 		.4byte	.LFB15
 2037 047b 28000000 		.4byte	.LFE15-.LFB15
 2038 047f 01       		.uleb128 0x1
 2039 0480 9C       		.byte	0x9c
 2040 0481 B8040000 		.4byte	0x4b8
 2041 0485 11       		.uleb128 0x11
 2042 0486 42040000 		.4byte	.LASF46
 2043 048a 01       		.byte	0x1
 2044 048b 9802     		.2byte	0x298
 2045 048d 77000000 		.4byte	0x77
 2046 0491 4D020000 		.4byte	.LLST19
 2047 0495 0F       		.uleb128 0xf
 2048 0496 9C040000 		.4byte	.LASF27
 2049 049a 01       		.byte	0x1
 2050 049b 9A02     		.2byte	0x29a
 2051 049d 6B000000 		.4byte	0x6b
 2052 04a1 79020000 		.4byte	.LLST20
 2053 04a5 10       		.uleb128 0x10
 2054 04a6 08000000 		.4byte	.LVL43
 2055 04aa 48090000 		.4byte	0x948
 2056 04ae 10       		.uleb128 0x10
 2057 04af 1C000000 		.4byte	.LVL44
 2058 04b3 53090000 		.4byte	0x953
 2059 04b7 00       		.byte	0
 2060 04b8 12       		.uleb128 0x12
 2061 04b9 E4000000 		.4byte	0xe4
 2062 04bd 00000000 		.4byte	.LFB16
 2063 04c1 0C000000 		.4byte	.LFE16-.LFB16
 2064 04c5 01       		.uleb128 0x1
 2065 04c6 9C       		.byte	0x9c
 2066 04c7 D5040000 		.4byte	0x4d5
 2067 04cb 13       		.uleb128 0x13
 2068 04cc F1000000 		.4byte	0xf1
 2069 04d0 8C020000 		.4byte	.LLST21
 2070 04d4 00       		.byte	0
 2071 04d5 14       		.uleb128 0x14
 2072 04d6 FC020000 		.4byte	.LASF48
 2073 04da 01       		.byte	0x1
 2074 04db C902     		.2byte	0x2c9
 2075 04dd 77000000 		.4byte	0x77
 2076 04e1 00000000 		.4byte	.LFB17
 2077 04e5 0C000000 		.4byte	.LFE17-.LFB17
 2078 04e9 01       		.uleb128 0x1
 2079 04ea 9C       		.byte	0x9c
 2080 04eb 0E       		.uleb128 0xe
 2081 04ec BD010000 		.4byte	.LASF49
 2082 04f0 01       		.byte	0x1
 2083 04f1 E302     		.2byte	0x2e3
 2084 04f3 00000000 		.4byte	.LFB18
 2085 04f7 24000000 		.4byte	.LFE18-.LFB18
 2086 04fb 01       		.uleb128 0x1
 2087 04fc 9C       		.byte	0x9c
 2088 04fd 34050000 		.4byte	0x534
 2089 0501 11       		.uleb128 0x11
 2090 0502 F2040000 		.4byte	.LASF50
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 67


 2091 0506 01       		.byte	0x1
 2092 0507 E302     		.2byte	0x2e3
 2093 0509 77000000 		.4byte	0x77
 2094 050d AD020000 		.4byte	.LLST22
 2095 0511 0F       		.uleb128 0xf
 2096 0512 9C040000 		.4byte	.LASF27
 2097 0516 01       		.byte	0x1
 2098 0517 E502     		.2byte	0x2e5
 2099 0519 6B000000 		.4byte	0x6b
 2100 051d D9020000 		.4byte	.LLST23
 2101 0521 10       		.uleb128 0x10
 2102 0522 08000000 		.4byte	.LVL49
 2103 0526 48090000 		.4byte	0x948
 2104 052a 10       		.uleb128 0x10
 2105 052b 1E000000 		.4byte	.LVL50
 2106 052f 53090000 		.4byte	0x953
 2107 0533 00       		.byte	0
 2108 0534 0E       		.uleb128 0xe
 2109 0535 F4030000 		.4byte	.LASF51
 2110 0539 01       		.byte	0x1
 2111 053a FE02     		.2byte	0x2fe
 2112 053c 00000000 		.4byte	.LFB19
 2113 0540 0C000000 		.4byte	.LFE19-.LFB19
 2114 0544 01       		.uleb128 0x1
 2115 0545 9C       		.byte	0x9c
 2116 0546 5B050000 		.4byte	0x55b
 2117 054a 11       		.uleb128 0x11
 2118 054b 7F040000 		.4byte	.LASF52
 2119 054f 01       		.byte	0x1
 2120 0550 FE02     		.2byte	0x2fe
 2121 0552 77000000 		.4byte	0x77
 2122 0556 EC020000 		.4byte	.LLST24
 2123 055a 00       		.byte	0
 2124 055b 14       		.uleb128 0x14
 2125 055c 3A030000 		.4byte	.LASF53
 2126 0560 01       		.byte	0x1
 2127 0561 1203     		.2byte	0x312
 2128 0563 77000000 		.4byte	0x77
 2129 0567 00000000 		.4byte	.LFB20
 2130 056b 0C000000 		.4byte	.LFE20-.LFB20
 2131 056f 01       		.uleb128 0x1
 2132 0570 9C       		.byte	0x9c
 2133 0571 0E       		.uleb128 0xe
 2134 0572 76030000 		.4byte	.LASF54
 2135 0576 01       		.byte	0x1
 2136 0577 2C03     		.2byte	0x32c
 2137 0579 00000000 		.4byte	.LFB21
 2138 057d 28000000 		.4byte	.LFE21-.LFB21
 2139 0581 01       		.uleb128 0x1
 2140 0582 9C       		.byte	0x9c
 2141 0583 BA050000 		.4byte	0x5ba
 2142 0587 11       		.uleb128 0x11
 2143 0588 F2040000 		.4byte	.LASF50
 2144 058c 01       		.byte	0x1
 2145 058d 2C03     		.2byte	0x32c
 2146 058f 77000000 		.4byte	0x77
 2147 0593 0D030000 		.4byte	.LLST25
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 68


 2148 0597 0F       		.uleb128 0xf
 2149 0598 9C040000 		.4byte	.LASF27
 2150 059c 01       		.byte	0x1
 2151 059d 2E03     		.2byte	0x32e
 2152 059f 6B000000 		.4byte	0x6b
 2153 05a3 39030000 		.4byte	.LLST26
 2154 05a7 10       		.uleb128 0x10
 2155 05a8 08000000 		.4byte	.LVL55
 2156 05ac 48090000 		.4byte	0x948
 2157 05b0 10       		.uleb128 0x10
 2158 05b1 22000000 		.4byte	.LVL56
 2159 05b5 53090000 		.4byte	0x953
 2160 05b9 00       		.byte	0
 2161 05ba 12       		.uleb128 0x12
 2162 05bb FE000000 		.4byte	0xfe
 2163 05bf 00000000 		.4byte	.LFB22
 2164 05c3 0C000000 		.4byte	.LFE22-.LFB22
 2165 05c7 01       		.uleb128 0x1
 2166 05c8 9C       		.byte	0x9c
 2167 05c9 D7050000 		.4byte	0x5d7
 2168 05cd 13       		.uleb128 0x13
 2169 05ce 0B010000 		.4byte	0x10b
 2170 05d2 4C030000 		.4byte	.LLST27
 2171 05d6 00       		.byte	0
 2172 05d7 14       		.uleb128 0x14
 2173 05d8 25050000 		.4byte	.LASF55
 2174 05dc 01       		.byte	0x1
 2175 05dd 8403     		.2byte	0x384
 2176 05df 77000000 		.4byte	0x77
 2177 05e3 00000000 		.4byte	.LFB23
 2178 05e7 0C000000 		.4byte	.LFE23-.LFB23
 2179 05eb 01       		.uleb128 0x1
 2180 05ec 9C       		.byte	0x9c
 2181 05ed 0E       		.uleb128 0xe
 2182 05ee 58010000 		.4byte	.LASF56
 2183 05f2 01       		.byte	0x1
 2184 05f3 BA03     		.2byte	0x3ba
 2185 05f5 00000000 		.4byte	.LFB24
 2186 05f9 0C000000 		.4byte	.LFE24-.LFB24
 2187 05fd 01       		.uleb128 0x1
 2188 05fe 9C       		.byte	0x9c
 2189 05ff 14060000 		.4byte	0x614
 2190 0603 11       		.uleb128 0x11
 2191 0604 74040000 		.4byte	.LASF57
 2192 0608 01       		.byte	0x1
 2193 0609 BA03     		.2byte	0x3ba
 2194 060b 77000000 		.4byte	0x77
 2195 060f 6D030000 		.4byte	.LLST28
 2196 0613 00       		.byte	0
 2197 0614 14       		.uleb128 0x14
 2198 0615 AA010000 		.4byte	.LASF58
 2199 0619 01       		.byte	0x1
 2200 061a E803     		.2byte	0x3e8
 2201 061c 77000000 		.4byte	0x77
 2202 0620 00000000 		.4byte	.LFB25
 2203 0624 0C000000 		.4byte	.LFE25-.LFB25
 2204 0628 01       		.uleb128 0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 69


 2205 0629 9C       		.byte	0x9c
 2206 062a 14       		.uleb128 0x14
 2207 062b 66030000 		.4byte	.LASF59
 2208 062f 01       		.byte	0x1
 2209 0630 1604     		.2byte	0x416
 2210 0632 77000000 		.4byte	0x77
 2211 0636 00000000 		.4byte	.LFB26
 2212 063a 0C000000 		.4byte	.LFE26-.LFB26
 2213 063e 01       		.uleb128 0x1
 2214 063f 9C       		.byte	0x9c
 2215 0640 14       		.uleb128 0x14
 2216 0641 89040000 		.4byte	.LASF60
 2217 0645 01       		.byte	0x1
 2218 0646 2B04     		.2byte	0x42b
 2219 0648 77000000 		.4byte	0x77
 2220 064c 00000000 		.4byte	.LFB27
 2221 0650 0C000000 		.4byte	.LFE27-.LFB27
 2222 0654 01       		.uleb128 0x1
 2223 0655 9C       		.byte	0x9c
 2224 0656 0E       		.uleb128 0xe
 2225 0657 E6000000 		.4byte	.LASF61
 2226 065b 01       		.byte	0x1
 2227 065c 4604     		.2byte	0x446
 2228 065e 00000000 		.4byte	.LFB28
 2229 0662 24000000 		.4byte	.LFE28-.LFB28
 2230 0666 01       		.uleb128 0x1
 2231 0667 9C       		.byte	0x9c
 2232 0668 9F060000 		.4byte	0x69f
 2233 066c 11       		.uleb128 0x11
 2234 066d 02020000 		.4byte	.LASF62
 2235 0671 01       		.byte	0x1
 2236 0672 4604     		.2byte	0x446
 2237 0674 77000000 		.4byte	0x77
 2238 0678 8E030000 		.4byte	.LLST29
 2239 067c 0F       		.uleb128 0xf
 2240 067d 9C040000 		.4byte	.LASF27
 2241 0681 01       		.byte	0x1
 2242 0682 4804     		.2byte	0x448
 2243 0684 6B000000 		.4byte	0x6b
 2244 0688 BA030000 		.4byte	.LLST30
 2245 068c 10       		.uleb128 0x10
 2246 068d 08000000 		.4byte	.LVL63
 2247 0691 48090000 		.4byte	0x948
 2248 0695 10       		.uleb128 0x10
 2249 0696 1C000000 		.4byte	.LVL64
 2250 069a 53090000 		.4byte	0x953
 2251 069e 00       		.byte	0
 2252 069f 0E       		.uleb128 0xe
 2253 06a0 30040000 		.4byte	.LASF63
 2254 06a4 01       		.byte	0x1
 2255 06a5 6704     		.2byte	0x467
 2256 06a7 00000000 		.4byte	.LFB29
 2257 06ab 24000000 		.4byte	.LFE29-.LFB29
 2258 06af 01       		.uleb128 0x1
 2259 06b0 9C       		.byte	0x9c
 2260 06b1 E8060000 		.4byte	0x6e8
 2261 06b5 11       		.uleb128 0x11
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 70


 2262 06b6 02020000 		.4byte	.LASF62
 2263 06ba 01       		.byte	0x1
 2264 06bb 6704     		.2byte	0x467
 2265 06bd 77000000 		.4byte	0x77
 2266 06c1 CD030000 		.4byte	.LLST31
 2267 06c5 0F       		.uleb128 0xf
 2268 06c6 9C040000 		.4byte	.LASF27
 2269 06ca 01       		.byte	0x1
 2270 06cb 6904     		.2byte	0x469
 2271 06cd 6B000000 		.4byte	0x6b
 2272 06d1 F9030000 		.4byte	.LLST32
 2273 06d5 10       		.uleb128 0x10
 2274 06d6 08000000 		.4byte	.LVL67
 2275 06da 48090000 		.4byte	0x948
 2276 06de 10       		.uleb128 0x10
 2277 06df 1E000000 		.4byte	.LVL68
 2278 06e3 53090000 		.4byte	0x953
 2279 06e7 00       		.byte	0
 2280 06e8 0E       		.uleb128 0xe
 2281 06e9 F1010000 		.4byte	.LASF64
 2282 06ed 01       		.byte	0x1
 2283 06ee 8804     		.2byte	0x488
 2284 06f0 00000000 		.4byte	.LFB30
 2285 06f4 28000000 		.4byte	.LFE30-.LFB30
 2286 06f8 01       		.uleb128 0x1
 2287 06f9 9C       		.byte	0x9c
 2288 06fa 31070000 		.4byte	0x731
 2289 06fe 11       		.uleb128 0x11
 2290 06ff 02020000 		.4byte	.LASF62
 2291 0703 01       		.byte	0x1
 2292 0704 8804     		.2byte	0x488
 2293 0706 77000000 		.4byte	0x77
 2294 070a 0C040000 		.4byte	.LLST33
 2295 070e 0F       		.uleb128 0xf
 2296 070f 9C040000 		.4byte	.LASF27
 2297 0713 01       		.byte	0x1
 2298 0714 8A04     		.2byte	0x48a
 2299 0716 6B000000 		.4byte	0x6b
 2300 071a 38040000 		.4byte	.LLST34
 2301 071e 10       		.uleb128 0x10
 2302 071f 08000000 		.4byte	.LVL71
 2303 0723 48090000 		.4byte	0x948
 2304 0727 10       		.uleb128 0x10
 2305 0728 1E000000 		.4byte	.LVL72
 2306 072c 53090000 		.4byte	0x953
 2307 0730 00       		.byte	0
 2308 0731 0E       		.uleb128 0xe
 2309 0732 2B020000 		.4byte	.LASF65
 2310 0736 01       		.byte	0x1
 2311 0737 A804     		.2byte	0x4a8
 2312 0739 00000000 		.4byte	.LFB31
 2313 073d 24000000 		.4byte	.LFE31-.LFB31
 2314 0741 01       		.uleb128 0x1
 2315 0742 9C       		.byte	0x9c
 2316 0743 7A070000 		.4byte	0x77a
 2317 0747 11       		.uleb128 0x11
 2318 0748 02020000 		.4byte	.LASF62
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 71


 2319 074c 01       		.byte	0x1
 2320 074d A804     		.2byte	0x4a8
 2321 074f 77000000 		.4byte	0x77
 2322 0753 4B040000 		.4byte	.LLST35
 2323 0757 0F       		.uleb128 0xf
 2324 0758 9C040000 		.4byte	.LASF27
 2325 075c 01       		.byte	0x1
 2326 075d AA04     		.2byte	0x4aa
 2327 075f 6B000000 		.4byte	0x6b
 2328 0763 77040000 		.4byte	.LLST36
 2329 0767 10       		.uleb128 0x10
 2330 0768 08000000 		.4byte	.LVL75
 2331 076c 48090000 		.4byte	0x948
 2332 0770 10       		.uleb128 0x10
 2333 0771 1E000000 		.4byte	.LVL76
 2334 0775 53090000 		.4byte	0x953
 2335 0779 00       		.byte	0
 2336 077a 0E       		.uleb128 0xe
 2337 077b AD040000 		.4byte	.LASF66
 2338 077f 01       		.byte	0x1
 2339 0780 C904     		.2byte	0x4c9
 2340 0782 00000000 		.4byte	.LFB32
 2341 0786 24000000 		.4byte	.LFE32-.LFB32
 2342 078a 01       		.uleb128 0x1
 2343 078b 9C       		.byte	0x9c
 2344 078c C3070000 		.4byte	0x7c3
 2345 0790 11       		.uleb128 0x11
 2346 0791 02020000 		.4byte	.LASF62
 2347 0795 01       		.byte	0x1
 2348 0796 C904     		.2byte	0x4c9
 2349 0798 77000000 		.4byte	0x77
 2350 079c 8A040000 		.4byte	.LLST37
 2351 07a0 0F       		.uleb128 0xf
 2352 07a1 9C040000 		.4byte	.LASF27
 2353 07a5 01       		.byte	0x1
 2354 07a6 CB04     		.2byte	0x4cb
 2355 07a8 6B000000 		.4byte	0x6b
 2356 07ac B6040000 		.4byte	.LLST38
 2357 07b0 10       		.uleb128 0x10
 2358 07b1 08000000 		.4byte	.LVL79
 2359 07b5 48090000 		.4byte	0x948
 2360 07b9 10       		.uleb128 0x10
 2361 07ba 1E000000 		.4byte	.LVL80
 2362 07be 53090000 		.4byte	0x953
 2363 07c2 00       		.byte	0
 2364 07c3 0E       		.uleb128 0xe
 2365 07c4 C7020000 		.4byte	.LASF67
 2366 07c8 01       		.byte	0x1
 2367 07c9 F104     		.2byte	0x4f1
 2368 07cb 00000000 		.4byte	.LFB33
 2369 07cf 1C000000 		.4byte	.LFE33-.LFB33
 2370 07d3 01       		.uleb128 0x1
 2371 07d4 9C       		.byte	0x9c
 2372 07d5 1C080000 		.4byte	0x81c
 2373 07d9 11       		.uleb128 0x11
 2374 07da 0E020000 		.4byte	.LASF44
 2375 07de 01       		.byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 72


 2376 07df F104     		.2byte	0x4f1
 2377 07e1 77000000 		.4byte	0x77
 2378 07e5 C9040000 		.4byte	.LLST39
 2379 07e9 11       		.uleb128 0x11
 2380 07ea 5B020000 		.4byte	.LASF68
 2381 07ee 01       		.byte	0x1
 2382 07ef F104     		.2byte	0x4f1
 2383 07f1 77000000 		.4byte	0x77
 2384 07f5 EA040000 		.4byte	.LLST40
 2385 07f9 0F       		.uleb128 0xf
 2386 07fa 9C040000 		.4byte	.LASF27
 2387 07fe 01       		.byte	0x1
 2388 07ff F304     		.2byte	0x4f3
 2389 0801 6B000000 		.4byte	0x6b
 2390 0805 16050000 		.4byte	.LLST41
 2391 0809 10       		.uleb128 0x10
 2392 080a 0C000000 		.4byte	.LVL83
 2393 080e 48090000 		.4byte	0x948
 2394 0812 10       		.uleb128 0x10
 2395 0813 14000000 		.4byte	.LVL84
 2396 0817 53090000 		.4byte	0x953
 2397 081b 00       		.byte	0
 2398 081c 08       		.uleb128 0x8
 2399 081d 94000000 		.4byte	.LASF69
 2400 0821 01       		.byte	0x1
 2401 0822 B1       		.byte	0xb1
 2402 0823 00000000 		.4byte	.LFB1
 2403 0827 24000000 		.4byte	.LFE1-.LFB1
 2404 082b 01       		.uleb128 0x1
 2405 082c 9C       		.byte	0x9c
 2406 082d 68080000 		.4byte	0x868
 2407 0831 15       		.uleb128 0x15
 2408 0832 9C040000 		.4byte	.LASF27
 2409 0836 01       		.byte	0x1
 2410 0837 B3       		.byte	0xb3
 2411 0838 6B000000 		.4byte	0x6b
 2412 083c 29050000 		.4byte	.LLST42
 2413 0840 10       		.uleb128 0x10
 2414 0841 08000000 		.4byte	.LVL86
 2415 0845 48090000 		.4byte	0x948
 2416 0849 10       		.uleb128 0x10
 2417 084a 14000000 		.4byte	.LVL87
 2418 084e 53090000 		.4byte	0x953
 2419 0852 16       		.uleb128 0x16
 2420 0853 1C000000 		.4byte	.LVL88
 2421 0857 C3070000 		.4byte	0x7c3
 2422 085b 17       		.uleb128 0x17
 2423 085c 01       		.uleb128 0x1
 2424 085d 51       		.byte	0x51
 2425 085e 01       		.uleb128 0x1
 2426 085f 48       		.byte	0x48
 2427 0860 17       		.uleb128 0x17
 2428 0861 01       		.uleb128 0x1
 2429 0862 50       		.byte	0x50
 2430 0863 02       		.uleb128 0x2
 2431 0864 74       		.byte	0x74
 2432 0865 00       		.sleb128 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 73


 2433 0866 00       		.byte	0
 2434 0867 00       		.byte	0
 2435 0868 08       		.uleb128 0x8
 2436 0869 4C030000 		.4byte	.LASF70
 2437 086d 01       		.byte	0x1
 2438 086e E6       		.byte	0xe6
 2439 086f 00000000 		.4byte	.LFB2
 2440 0873 1C000000 		.4byte	.LFE2-.LFB2
 2441 0877 01       		.uleb128 0x1
 2442 0878 9C       		.byte	0x9c
 2443 0879 90080000 		.4byte	0x890
 2444 087d 10       		.uleb128 0x10
 2445 087e 0E000000 		.4byte	.LVL89
 2446 0882 18010000 		.4byte	0x118
 2447 0886 10       		.uleb128 0x10
 2448 0887 16000000 		.4byte	.LVL90
 2449 088b 1C080000 		.4byte	0x81c
 2450 088f 00       		.byte	0
 2451 0890 14       		.uleb128 0x14
 2452 0891 13020000 		.4byte	.LASF71
 2453 0895 01       		.byte	0x1
 2454 0896 0E05     		.2byte	0x50e
 2455 0898 77000000 		.4byte	0x77
 2456 089c 00000000 		.4byte	.LFB34
 2457 08a0 14000000 		.4byte	.LFE34-.LFB34
 2458 08a4 01       		.uleb128 0x1
 2459 08a5 9C       		.byte	0x9c
 2460 08a6 12       		.uleb128 0x12
 2461 08a7 CA000000 		.4byte	0xca
 2462 08ab 00000000 		.4byte	.LFB35
 2463 08af 0C000000 		.4byte	.LFE35-.LFB35
 2464 08b3 01       		.uleb128 0x1
 2465 08b4 9C       		.byte	0x9c
 2466 08b5 C1080000 		.4byte	0x8c1
 2467 08b9 18       		.uleb128 0x18
 2468 08ba D7000000 		.4byte	0xd7
 2469 08be 01       		.uleb128 0x1
 2470 08bf 50       		.byte	0x50
 2471 08c0 00       		.byte	0
 2472 08c1 14       		.uleb128 0x14
 2473 08c2 C9030000 		.4byte	.LASF72
 2474 08c6 01       		.byte	0x1
 2475 08c7 3E05     		.2byte	0x53e
 2476 08c9 77000000 		.4byte	0x77
 2477 08cd 00000000 		.4byte	.LFB36
 2478 08d1 0C000000 		.4byte	.LFE36-.LFB36
 2479 08d5 01       		.uleb128 0x1
 2480 08d6 9C       		.byte	0x9c
 2481 08d7 14       		.uleb128 0x14
 2482 08d8 FD040000 		.4byte	.LASF73
 2483 08dc 01       		.byte	0x1
 2484 08dd 5505     		.2byte	0x555
 2485 08df 77000000 		.4byte	0x77
 2486 08e3 00000000 		.4byte	.LFB37
 2487 08e7 0C000000 		.4byte	.LFE37-.LFB37
 2488 08eb 01       		.uleb128 0x1
 2489 08ec 9C       		.byte	0x9c
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 74


 2490 08ed 0E       		.uleb128 0xe
 2491 08ee 81010000 		.4byte	.LASF74
 2492 08f2 01       		.byte	0x1
 2493 08f3 6C05     		.2byte	0x56c
 2494 08f5 00000000 		.4byte	.LFB38
 2495 08f9 0C000000 		.4byte	.LFE38-.LFB38
 2496 08fd 01       		.uleb128 0x1
 2497 08fe 9C       		.byte	0x9c
 2498 08ff 12090000 		.4byte	0x912
 2499 0903 19       		.uleb128 0x19
 2500 0904 E6030000 		.4byte	.LASF19
 2501 0908 01       		.byte	0x1
 2502 0909 6C05     		.2byte	0x56c
 2503 090b 77000000 		.4byte	0x77
 2504 090f 01       		.uleb128 0x1
 2505 0910 50       		.byte	0x50
 2506 0911 00       		.byte	0
 2507 0912 0E       		.uleb128 0xe
 2508 0913 1F040000 		.4byte	.LASF75
 2509 0917 01       		.byte	0x1
 2510 0918 8305     		.2byte	0x583
 2511 091a 00000000 		.4byte	.LFB39
 2512 091e 0C000000 		.4byte	.LFE39-.LFB39
 2513 0922 01       		.uleb128 0x1
 2514 0923 9C       		.byte	0x9c
 2515 0924 37090000 		.4byte	0x937
 2516 0928 19       		.uleb128 0x19
 2517 0929 E6030000 		.4byte	.LASF19
 2518 092d 01       		.byte	0x1
 2519 092e 8305     		.2byte	0x583
 2520 0930 77000000 		.4byte	0x77
 2521 0934 01       		.uleb128 0x1
 2522 0935 50       		.byte	0x50
 2523 0936 00       		.byte	0
 2524 0937 1A       		.uleb128 0x1a
 2525 0938 F0020000 		.4byte	.LASF79
 2526 093c 01       		.byte	0x1
 2527 093d 15       		.byte	0x15
 2528 093e 6B000000 		.4byte	0x6b
 2529 0942 05       		.uleb128 0x5
 2530 0943 03       		.byte	0x3
 2531 0944 00000000 		.4byte	PWM_initVar
 2532 0948 1B       		.uleb128 0x1b
 2533 0949 7E020000 		.4byte	.LASF80
 2534 094d 03       		.byte	0x3
 2535 094e E3       		.byte	0xe3
 2536 094f 6B000000 		.4byte	0x6b
 2537 0953 1C       		.uleb128 0x1c
 2538 0954 9F000000 		.4byte	.LASF81
 2539 0958 03       		.byte	0x3
 2540 0959 E4       		.byte	0xe4
 2541 095a 1D       		.uleb128 0x1d
 2542 095b 6B000000 		.4byte	0x6b
 2543 095f 00       		.byte	0
 2544 0960 00       		.byte	0
 2545              		.section	.debug_abbrev,"",%progbits
 2546              	.Ldebug_abbrev0:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 75


 2547 0000 01       		.uleb128 0x1
 2548 0001 11       		.uleb128 0x11
 2549 0002 01       		.byte	0x1
 2550 0003 25       		.uleb128 0x25
 2551 0004 0E       		.uleb128 0xe
 2552 0005 13       		.uleb128 0x13
 2553 0006 0B       		.uleb128 0xb
 2554 0007 03       		.uleb128 0x3
 2555 0008 0E       		.uleb128 0xe
 2556 0009 1B       		.uleb128 0x1b
 2557 000a 0E       		.uleb128 0xe
 2558 000b 55       		.uleb128 0x55
 2559 000c 17       		.uleb128 0x17
 2560 000d 11       		.uleb128 0x11
 2561 000e 01       		.uleb128 0x1
 2562 000f 10       		.uleb128 0x10
 2563 0010 17       		.uleb128 0x17
 2564 0011 00       		.byte	0
 2565 0012 00       		.byte	0
 2566 0013 02       		.uleb128 0x2
 2567 0014 24       		.uleb128 0x24
 2568 0015 00       		.byte	0
 2569 0016 0B       		.uleb128 0xb
 2570 0017 0B       		.uleb128 0xb
 2571 0018 3E       		.uleb128 0x3e
 2572 0019 0B       		.uleb128 0xb
 2573 001a 03       		.uleb128 0x3
 2574 001b 0E       		.uleb128 0xe
 2575 001c 00       		.byte	0
 2576 001d 00       		.byte	0
 2577 001e 03       		.uleb128 0x3
 2578 001f 24       		.uleb128 0x24
 2579 0020 00       		.byte	0
 2580 0021 0B       		.uleb128 0xb
 2581 0022 0B       		.uleb128 0xb
 2582 0023 3E       		.uleb128 0x3e
 2583 0024 0B       		.uleb128 0xb
 2584 0025 03       		.uleb128 0x3
 2585 0026 08       		.uleb128 0x8
 2586 0027 00       		.byte	0
 2587 0028 00       		.byte	0
 2588 0029 04       		.uleb128 0x4
 2589 002a 16       		.uleb128 0x16
 2590 002b 00       		.byte	0
 2591 002c 03       		.uleb128 0x3
 2592 002d 0E       		.uleb128 0xe
 2593 002e 3A       		.uleb128 0x3a
 2594 002f 0B       		.uleb128 0xb
 2595 0030 3B       		.uleb128 0x3b
 2596 0031 05       		.uleb128 0x5
 2597 0032 49       		.uleb128 0x49
 2598 0033 13       		.uleb128 0x13
 2599 0034 00       		.byte	0
 2600 0035 00       		.byte	0
 2601 0036 05       		.uleb128 0x5
 2602 0037 35       		.uleb128 0x35
 2603 0038 00       		.byte	0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 76


 2604 0039 49       		.uleb128 0x49
 2605 003a 13       		.uleb128 0x13
 2606 003b 00       		.byte	0
 2607 003c 00       		.byte	0
 2608 003d 06       		.uleb128 0x6
 2609 003e 2E       		.uleb128 0x2e
 2610 003f 01       		.byte	0x1
 2611 0040 3F       		.uleb128 0x3f
 2612 0041 19       		.uleb128 0x19
 2613 0042 03       		.uleb128 0x3
 2614 0043 0E       		.uleb128 0xe
 2615 0044 3A       		.uleb128 0x3a
 2616 0045 0B       		.uleb128 0xb
 2617 0046 3B       		.uleb128 0x3b
 2618 0047 05       		.uleb128 0x5
 2619 0048 27       		.uleb128 0x27
 2620 0049 19       		.uleb128 0x19
 2621 004a 20       		.uleb128 0x20
 2622 004b 0B       		.uleb128 0xb
 2623 004c 01       		.uleb128 0x1
 2624 004d 13       		.uleb128 0x13
 2625 004e 00       		.byte	0
 2626 004f 00       		.byte	0
 2627 0050 07       		.uleb128 0x7
 2628 0051 05       		.uleb128 0x5
 2629 0052 00       		.byte	0
 2630 0053 03       		.uleb128 0x3
 2631 0054 0E       		.uleb128 0xe
 2632 0055 3A       		.uleb128 0x3a
 2633 0056 0B       		.uleb128 0xb
 2634 0057 3B       		.uleb128 0x3b
 2635 0058 05       		.uleb128 0x5
 2636 0059 49       		.uleb128 0x49
 2637 005a 13       		.uleb128 0x13
 2638 005b 00       		.byte	0
 2639 005c 00       		.byte	0
 2640 005d 08       		.uleb128 0x8
 2641 005e 2E       		.uleb128 0x2e
 2642 005f 01       		.byte	0x1
 2643 0060 3F       		.uleb128 0x3f
 2644 0061 19       		.uleb128 0x19
 2645 0062 03       		.uleb128 0x3
 2646 0063 0E       		.uleb128 0xe
 2647 0064 3A       		.uleb128 0x3a
 2648 0065 0B       		.uleb128 0xb
 2649 0066 3B       		.uleb128 0x3b
 2650 0067 0B       		.uleb128 0xb
 2651 0068 27       		.uleb128 0x27
 2652 0069 19       		.uleb128 0x19
 2653 006a 11       		.uleb128 0x11
 2654 006b 01       		.uleb128 0x1
 2655 006c 12       		.uleb128 0x12
 2656 006d 06       		.uleb128 0x6
 2657 006e 40       		.uleb128 0x40
 2658 006f 18       		.uleb128 0x18
 2659 0070 9742     		.uleb128 0x2117
 2660 0072 19       		.uleb128 0x19
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 77


 2661 0073 01       		.uleb128 0x1
 2662 0074 13       		.uleb128 0x13
 2663 0075 00       		.byte	0
 2664 0076 00       		.byte	0
 2665 0077 09       		.uleb128 0x9
 2666 0078 1D       		.uleb128 0x1d
 2667 0079 01       		.byte	0x1
 2668 007a 31       		.uleb128 0x31
 2669 007b 13       		.uleb128 0x13
 2670 007c 52       		.uleb128 0x52
 2671 007d 01       		.uleb128 0x1
 2672 007e 55       		.uleb128 0x55
 2673 007f 17       		.uleb128 0x17
 2674 0080 58       		.uleb128 0x58
 2675 0081 0B       		.uleb128 0xb
 2676 0082 59       		.uleb128 0x59
 2677 0083 0B       		.uleb128 0xb
 2678 0084 01       		.uleb128 0x1
 2679 0085 13       		.uleb128 0x13
 2680 0086 00       		.byte	0
 2681 0087 00       		.byte	0
 2682 0088 0A       		.uleb128 0xa
 2683 0089 05       		.uleb128 0x5
 2684 008a 00       		.byte	0
 2685 008b 31       		.uleb128 0x31
 2686 008c 13       		.uleb128 0x13
 2687 008d 1C       		.uleb128 0x1c
 2688 008e 0B       		.uleb128 0xb
 2689 008f 00       		.byte	0
 2690 0090 00       		.byte	0
 2691 0091 0B       		.uleb128 0xb
 2692 0092 1D       		.uleb128 0x1d
 2693 0093 01       		.byte	0x1
 2694 0094 31       		.uleb128 0x31
 2695 0095 13       		.uleb128 0x13
 2696 0096 11       		.uleb128 0x11
 2697 0097 01       		.uleb128 0x1
 2698 0098 12       		.uleb128 0x12
 2699 0099 06       		.uleb128 0x6
 2700 009a 58       		.uleb128 0x58
 2701 009b 0B       		.uleb128 0xb
 2702 009c 59       		.uleb128 0x59
 2703 009d 0B       		.uleb128 0xb
 2704 009e 01       		.uleb128 0x1
 2705 009f 13       		.uleb128 0x13
 2706 00a0 00       		.byte	0
 2707 00a1 00       		.byte	0
 2708 00a2 0C       		.uleb128 0xc
 2709 00a3 05       		.uleb128 0x5
 2710 00a4 00       		.byte	0
 2711 00a5 31       		.uleb128 0x31
 2712 00a6 13       		.uleb128 0x13
 2713 00a7 1C       		.uleb128 0x1c
 2714 00a8 05       		.uleb128 0x5
 2715 00a9 00       		.byte	0
 2716 00aa 00       		.byte	0
 2717 00ab 0D       		.uleb128 0xd
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 78


 2718 00ac 1D       		.uleb128 0x1d
 2719 00ad 01       		.byte	0x1
 2720 00ae 31       		.uleb128 0x31
 2721 00af 13       		.uleb128 0x13
 2722 00b0 11       		.uleb128 0x11
 2723 00b1 01       		.uleb128 0x1
 2724 00b2 12       		.uleb128 0x12
 2725 00b3 06       		.uleb128 0x6
 2726 00b4 58       		.uleb128 0x58
 2727 00b5 0B       		.uleb128 0xb
 2728 00b6 59       		.uleb128 0x59
 2729 00b7 0B       		.uleb128 0xb
 2730 00b8 00       		.byte	0
 2731 00b9 00       		.byte	0
 2732 00ba 0E       		.uleb128 0xe
 2733 00bb 2E       		.uleb128 0x2e
 2734 00bc 01       		.byte	0x1
 2735 00bd 3F       		.uleb128 0x3f
 2736 00be 19       		.uleb128 0x19
 2737 00bf 03       		.uleb128 0x3
 2738 00c0 0E       		.uleb128 0xe
 2739 00c1 3A       		.uleb128 0x3a
 2740 00c2 0B       		.uleb128 0xb
 2741 00c3 3B       		.uleb128 0x3b
 2742 00c4 05       		.uleb128 0x5
 2743 00c5 27       		.uleb128 0x27
 2744 00c6 19       		.uleb128 0x19
 2745 00c7 11       		.uleb128 0x11
 2746 00c8 01       		.uleb128 0x1
 2747 00c9 12       		.uleb128 0x12
 2748 00ca 06       		.uleb128 0x6
 2749 00cb 40       		.uleb128 0x40
 2750 00cc 18       		.uleb128 0x18
 2751 00cd 9742     		.uleb128 0x2117
 2752 00cf 19       		.uleb128 0x19
 2753 00d0 01       		.uleb128 0x1
 2754 00d1 13       		.uleb128 0x13
 2755 00d2 00       		.byte	0
 2756 00d3 00       		.byte	0
 2757 00d4 0F       		.uleb128 0xf
 2758 00d5 34       		.uleb128 0x34
 2759 00d6 00       		.byte	0
 2760 00d7 03       		.uleb128 0x3
 2761 00d8 0E       		.uleb128 0xe
 2762 00d9 3A       		.uleb128 0x3a
 2763 00da 0B       		.uleb128 0xb
 2764 00db 3B       		.uleb128 0x3b
 2765 00dc 05       		.uleb128 0x5
 2766 00dd 49       		.uleb128 0x49
 2767 00de 13       		.uleb128 0x13
 2768 00df 02       		.uleb128 0x2
 2769 00e0 17       		.uleb128 0x17
 2770 00e1 00       		.byte	0
 2771 00e2 00       		.byte	0
 2772 00e3 10       		.uleb128 0x10
 2773 00e4 898201   		.uleb128 0x4109
 2774 00e7 00       		.byte	0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 79


 2775 00e8 11       		.uleb128 0x11
 2776 00e9 01       		.uleb128 0x1
 2777 00ea 31       		.uleb128 0x31
 2778 00eb 13       		.uleb128 0x13
 2779 00ec 00       		.byte	0
 2780 00ed 00       		.byte	0
 2781 00ee 11       		.uleb128 0x11
 2782 00ef 05       		.uleb128 0x5
 2783 00f0 00       		.byte	0
 2784 00f1 03       		.uleb128 0x3
 2785 00f2 0E       		.uleb128 0xe
 2786 00f3 3A       		.uleb128 0x3a
 2787 00f4 0B       		.uleb128 0xb
 2788 00f5 3B       		.uleb128 0x3b
 2789 00f6 05       		.uleb128 0x5
 2790 00f7 49       		.uleb128 0x49
 2791 00f8 13       		.uleb128 0x13
 2792 00f9 02       		.uleb128 0x2
 2793 00fa 17       		.uleb128 0x17
 2794 00fb 00       		.byte	0
 2795 00fc 00       		.byte	0
 2796 00fd 12       		.uleb128 0x12
 2797 00fe 2E       		.uleb128 0x2e
 2798 00ff 01       		.byte	0x1
 2799 0100 31       		.uleb128 0x31
 2800 0101 13       		.uleb128 0x13
 2801 0102 11       		.uleb128 0x11
 2802 0103 01       		.uleb128 0x1
 2803 0104 12       		.uleb128 0x12
 2804 0105 06       		.uleb128 0x6
 2805 0106 40       		.uleb128 0x40
 2806 0107 18       		.uleb128 0x18
 2807 0108 9742     		.uleb128 0x2117
 2808 010a 19       		.uleb128 0x19
 2809 010b 01       		.uleb128 0x1
 2810 010c 13       		.uleb128 0x13
 2811 010d 00       		.byte	0
 2812 010e 00       		.byte	0
 2813 010f 13       		.uleb128 0x13
 2814 0110 05       		.uleb128 0x5
 2815 0111 00       		.byte	0
 2816 0112 31       		.uleb128 0x31
 2817 0113 13       		.uleb128 0x13
 2818 0114 02       		.uleb128 0x2
 2819 0115 17       		.uleb128 0x17
 2820 0116 00       		.byte	0
 2821 0117 00       		.byte	0
 2822 0118 14       		.uleb128 0x14
 2823 0119 2E       		.uleb128 0x2e
 2824 011a 00       		.byte	0
 2825 011b 3F       		.uleb128 0x3f
 2826 011c 19       		.uleb128 0x19
 2827 011d 03       		.uleb128 0x3
 2828 011e 0E       		.uleb128 0xe
 2829 011f 3A       		.uleb128 0x3a
 2830 0120 0B       		.uleb128 0xb
 2831 0121 3B       		.uleb128 0x3b
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 80


 2832 0122 05       		.uleb128 0x5
 2833 0123 27       		.uleb128 0x27
 2834 0124 19       		.uleb128 0x19
 2835 0125 49       		.uleb128 0x49
 2836 0126 13       		.uleb128 0x13
 2837 0127 11       		.uleb128 0x11
 2838 0128 01       		.uleb128 0x1
 2839 0129 12       		.uleb128 0x12
 2840 012a 06       		.uleb128 0x6
 2841 012b 40       		.uleb128 0x40
 2842 012c 18       		.uleb128 0x18
 2843 012d 9742     		.uleb128 0x2117
 2844 012f 19       		.uleb128 0x19
 2845 0130 00       		.byte	0
 2846 0131 00       		.byte	0
 2847 0132 15       		.uleb128 0x15
 2848 0133 34       		.uleb128 0x34
 2849 0134 00       		.byte	0
 2850 0135 03       		.uleb128 0x3
 2851 0136 0E       		.uleb128 0xe
 2852 0137 3A       		.uleb128 0x3a
 2853 0138 0B       		.uleb128 0xb
 2854 0139 3B       		.uleb128 0x3b
 2855 013a 0B       		.uleb128 0xb
 2856 013b 49       		.uleb128 0x49
 2857 013c 13       		.uleb128 0x13
 2858 013d 02       		.uleb128 0x2
 2859 013e 17       		.uleb128 0x17
 2860 013f 00       		.byte	0
 2861 0140 00       		.byte	0
 2862 0141 16       		.uleb128 0x16
 2863 0142 898201   		.uleb128 0x4109
 2864 0145 01       		.byte	0x1
 2865 0146 11       		.uleb128 0x11
 2866 0147 01       		.uleb128 0x1
 2867 0148 31       		.uleb128 0x31
 2868 0149 13       		.uleb128 0x13
 2869 014a 00       		.byte	0
 2870 014b 00       		.byte	0
 2871 014c 17       		.uleb128 0x17
 2872 014d 8A8201   		.uleb128 0x410a
 2873 0150 00       		.byte	0
 2874 0151 02       		.uleb128 0x2
 2875 0152 18       		.uleb128 0x18
 2876 0153 9142     		.uleb128 0x2111
 2877 0155 18       		.uleb128 0x18
 2878 0156 00       		.byte	0
 2879 0157 00       		.byte	0
 2880 0158 18       		.uleb128 0x18
 2881 0159 05       		.uleb128 0x5
 2882 015a 00       		.byte	0
 2883 015b 31       		.uleb128 0x31
 2884 015c 13       		.uleb128 0x13
 2885 015d 02       		.uleb128 0x2
 2886 015e 18       		.uleb128 0x18
 2887 015f 00       		.byte	0
 2888 0160 00       		.byte	0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 81


 2889 0161 19       		.uleb128 0x19
 2890 0162 05       		.uleb128 0x5
 2891 0163 00       		.byte	0
 2892 0164 03       		.uleb128 0x3
 2893 0165 0E       		.uleb128 0xe
 2894 0166 3A       		.uleb128 0x3a
 2895 0167 0B       		.uleb128 0xb
 2896 0168 3B       		.uleb128 0x3b
 2897 0169 05       		.uleb128 0x5
 2898 016a 49       		.uleb128 0x49
 2899 016b 13       		.uleb128 0x13
 2900 016c 02       		.uleb128 0x2
 2901 016d 18       		.uleb128 0x18
 2902 016e 00       		.byte	0
 2903 016f 00       		.byte	0
 2904 0170 1A       		.uleb128 0x1a
 2905 0171 34       		.uleb128 0x34
 2906 0172 00       		.byte	0
 2907 0173 03       		.uleb128 0x3
 2908 0174 0E       		.uleb128 0xe
 2909 0175 3A       		.uleb128 0x3a
 2910 0176 0B       		.uleb128 0xb
 2911 0177 3B       		.uleb128 0x3b
 2912 0178 0B       		.uleb128 0xb
 2913 0179 49       		.uleb128 0x49
 2914 017a 13       		.uleb128 0x13
 2915 017b 3F       		.uleb128 0x3f
 2916 017c 19       		.uleb128 0x19
 2917 017d 02       		.uleb128 0x2
 2918 017e 18       		.uleb128 0x18
 2919 017f 00       		.byte	0
 2920 0180 00       		.byte	0
 2921 0181 1B       		.uleb128 0x1b
 2922 0182 2E       		.uleb128 0x2e
 2923 0183 00       		.byte	0
 2924 0184 3F       		.uleb128 0x3f
 2925 0185 19       		.uleb128 0x19
 2926 0186 03       		.uleb128 0x3
 2927 0187 0E       		.uleb128 0xe
 2928 0188 3A       		.uleb128 0x3a
 2929 0189 0B       		.uleb128 0xb
 2930 018a 3B       		.uleb128 0x3b
 2931 018b 0B       		.uleb128 0xb
 2932 018c 27       		.uleb128 0x27
 2933 018d 19       		.uleb128 0x19
 2934 018e 49       		.uleb128 0x49
 2935 018f 13       		.uleb128 0x13
 2936 0190 3C       		.uleb128 0x3c
 2937 0191 19       		.uleb128 0x19
 2938 0192 00       		.byte	0
 2939 0193 00       		.byte	0
 2940 0194 1C       		.uleb128 0x1c
 2941 0195 2E       		.uleb128 0x2e
 2942 0196 01       		.byte	0x1
 2943 0197 3F       		.uleb128 0x3f
 2944 0198 19       		.uleb128 0x19
 2945 0199 03       		.uleb128 0x3
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 82


 2946 019a 0E       		.uleb128 0xe
 2947 019b 3A       		.uleb128 0x3a
 2948 019c 0B       		.uleb128 0xb
 2949 019d 3B       		.uleb128 0x3b
 2950 019e 0B       		.uleb128 0xb
 2951 019f 27       		.uleb128 0x27
 2952 01a0 19       		.uleb128 0x19
 2953 01a1 3C       		.uleb128 0x3c
 2954 01a2 19       		.uleb128 0x19
 2955 01a3 00       		.byte	0
 2956 01a4 00       		.byte	0
 2957 01a5 1D       		.uleb128 0x1d
 2958 01a6 05       		.uleb128 0x5
 2959 01a7 00       		.byte	0
 2960 01a8 49       		.uleb128 0x49
 2961 01a9 13       		.uleb128 0x13
 2962 01aa 00       		.byte	0
 2963 01ab 00       		.byte	0
 2964 01ac 00       		.byte	0
 2965              		.section	.debug_loc,"",%progbits
 2966              	.Ldebug_loc0:
 2967              	.LLST0:
 2968 0000 06000000 		.4byte	.LVL4
 2969 0004 13000000 		.4byte	.LVL5-1
 2970 0008 0100     		.2byte	0x1
 2971 000a 50       		.byte	0x50
 2972 000b 00000000 		.4byte	0
 2973 000f 00000000 		.4byte	0
 2974              	.LLST1:
 2975 0013 00000000 		.4byte	.LVL6
 2976 0017 07000000 		.4byte	.LVL7-1
 2977 001b 0100     		.2byte	0x1
 2978 001d 50       		.byte	0x50
 2979 001e 07000000 		.4byte	.LVL7-1
 2980 0022 1C000000 		.4byte	.LVL9
 2981 0026 0100     		.2byte	0x1
 2982 0028 54       		.byte	0x54
 2983 0029 1C000000 		.4byte	.LVL9
 2984 002d 28000000 		.4byte	.LFE4
 2985 0031 0400     		.2byte	0x4
 2986 0033 F3       		.byte	0xf3
 2987 0034 01       		.uleb128 0x1
 2988 0035 50       		.byte	0x50
 2989 0036 9F       		.byte	0x9f
 2990 0037 00000000 		.4byte	0
 2991 003b 00000000 		.4byte	0
 2992              	.LLST2:
 2993 003f 08000000 		.4byte	.LVL7
 2994 0043 1B000000 		.4byte	.LVL8-1
 2995 0047 0100     		.2byte	0x1
 2996 0049 50       		.byte	0x50
 2997 004a 00000000 		.4byte	0
 2998 004e 00000000 		.4byte	0
 2999              	.LLST3:
 3000 0052 00000000 		.4byte	.LVL10
 3001 0056 07000000 		.4byte	.LVL11-1
 3002 005a 0100     		.2byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 83


 3003 005c 50       		.byte	0x50
 3004 005d 07000000 		.4byte	.LVL11-1
 3005 0061 1C000000 		.4byte	.LVL13
 3006 0065 0100     		.2byte	0x1
 3007 0067 54       		.byte	0x54
 3008 0068 1C000000 		.4byte	.LVL13
 3009 006c 28000000 		.4byte	.LFE5
 3010 0070 0400     		.2byte	0x4
 3011 0072 F3       		.byte	0xf3
 3012 0073 01       		.uleb128 0x1
 3013 0074 50       		.byte	0x50
 3014 0075 9F       		.byte	0x9f
 3015 0076 00000000 		.4byte	0
 3016 007a 00000000 		.4byte	0
 3017              	.LLST4:
 3018 007e 08000000 		.4byte	.LVL11
 3019 0082 1B000000 		.4byte	.LVL12-1
 3020 0086 0100     		.2byte	0x1
 3021 0088 50       		.byte	0x50
 3022 0089 00000000 		.4byte	0
 3023 008d 00000000 		.4byte	0
 3024              	.LLST5:
 3025 0091 00000000 		.4byte	.LVL14
 3026 0095 07000000 		.4byte	.LVL15-1
 3027 0099 0100     		.2byte	0x1
 3028 009b 50       		.byte	0x50
 3029 009c 07000000 		.4byte	.LVL15-1
 3030 00a0 1C000000 		.4byte	.LVL17
 3031 00a4 0100     		.2byte	0x1
 3032 00a6 54       		.byte	0x54
 3033 00a7 1C000000 		.4byte	.LVL17
 3034 00ab 28000000 		.4byte	.LFE6
 3035 00af 0400     		.2byte	0x4
 3036 00b1 F3       		.byte	0xf3
 3037 00b2 01       		.uleb128 0x1
 3038 00b3 50       		.byte	0x50
 3039 00b4 9F       		.byte	0x9f
 3040 00b5 00000000 		.4byte	0
 3041 00b9 00000000 		.4byte	0
 3042              	.LLST6:
 3043 00bd 08000000 		.4byte	.LVL15
 3044 00c1 1B000000 		.4byte	.LVL16-1
 3045 00c5 0100     		.2byte	0x1
 3046 00c7 50       		.byte	0x50
 3047 00c8 00000000 		.4byte	0
 3048 00cc 00000000 		.4byte	0
 3049              	.LLST7:
 3050 00d0 00000000 		.4byte	.LVL18
 3051 00d4 07000000 		.4byte	.LVL19-1
 3052 00d8 0100     		.2byte	0x1
 3053 00da 50       		.byte	0x50
 3054 00db 07000000 		.4byte	.LVL19-1
 3055 00df 22000000 		.4byte	.LVL21
 3056 00e3 0100     		.2byte	0x1
 3057 00e5 54       		.byte	0x54
 3058 00e6 22000000 		.4byte	.LVL21
 3059 00ea 2C000000 		.4byte	.LFE7
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 84


 3060 00ee 0400     		.2byte	0x4
 3061 00f0 F3       		.byte	0xf3
 3062 00f1 01       		.uleb128 0x1
 3063 00f2 50       		.byte	0x50
 3064 00f3 9F       		.byte	0x9f
 3065 00f4 00000000 		.4byte	0
 3066 00f8 00000000 		.4byte	0
 3067              	.LLST8:
 3068 00fc 08000000 		.4byte	.LVL19
 3069 0100 21000000 		.4byte	.LVL20-1
 3070 0104 0100     		.2byte	0x1
 3071 0106 50       		.byte	0x50
 3072 0107 00000000 		.4byte	0
 3073 010b 00000000 		.4byte	0
 3074              	.LLST9:
 3075 010f 00000000 		.4byte	.LVL22
 3076 0113 04000000 		.4byte	.LVL23
 3077 0117 0100     		.2byte	0x1
 3078 0119 50       		.byte	0x50
 3079 011a 04000000 		.4byte	.LVL23
 3080 011e 10000000 		.4byte	.LFE8
 3081 0122 0400     		.2byte	0x4
 3082 0124 F3       		.byte	0xf3
 3083 0125 01       		.uleb128 0x1
 3084 0126 50       		.byte	0x50
 3085 0127 9F       		.byte	0x9f
 3086 0128 00000000 		.4byte	0
 3087 012c 00000000 		.4byte	0
 3088              	.LLST10:
 3089 0130 00000000 		.4byte	.LVL24
 3090 0134 07000000 		.4byte	.LVL25-1
 3091 0138 0100     		.2byte	0x1
 3092 013a 50       		.byte	0x50
 3093 013b 07000000 		.4byte	.LVL25-1
 3094 013f 22000000 		.4byte	.LVL27
 3095 0143 0100     		.2byte	0x1
 3096 0145 54       		.byte	0x54
 3097 0146 22000000 		.4byte	.LVL27
 3098 014a 28000000 		.4byte	.LFE9
 3099 014e 0400     		.2byte	0x4
 3100 0150 F3       		.byte	0xf3
 3101 0151 01       		.uleb128 0x1
 3102 0152 50       		.byte	0x50
 3103 0153 9F       		.byte	0x9f
 3104 0154 00000000 		.4byte	0
 3105 0158 00000000 		.4byte	0
 3106              	.LLST11:
 3107 015c 08000000 		.4byte	.LVL25
 3108 0160 21000000 		.4byte	.LVL26-1
 3109 0164 0100     		.2byte	0x1
 3110 0166 50       		.byte	0x50
 3111 0167 00000000 		.4byte	0
 3112 016b 00000000 		.4byte	0
 3113              	.LLST12:
 3114 016f 00000000 		.4byte	.LVL28
 3115 0173 07000000 		.4byte	.LVL29-1
 3116 0177 0100     		.2byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 85


 3117 0179 50       		.byte	0x50
 3118 017a 07000000 		.4byte	.LVL29-1
 3119 017e 22000000 		.4byte	.LVL31
 3120 0182 0100     		.2byte	0x1
 3121 0184 54       		.byte	0x54
 3122 0185 22000000 		.4byte	.LVL31
 3123 0189 28000000 		.4byte	.LFE10
 3124 018d 0400     		.2byte	0x4
 3125 018f F3       		.byte	0xf3
 3126 0190 01       		.uleb128 0x1
 3127 0191 50       		.byte	0x50
 3128 0192 9F       		.byte	0x9f
 3129 0193 00000000 		.4byte	0
 3130 0197 00000000 		.4byte	0
 3131              	.LLST13:
 3132 019b 08000000 		.4byte	.LVL29
 3133 019f 21000000 		.4byte	.LVL30-1
 3134 01a3 0100     		.2byte	0x1
 3135 01a5 50       		.byte	0x50
 3136 01a6 00000000 		.4byte	0
 3137 01aa 00000000 		.4byte	0
 3138              	.LLST14:
 3139 01ae 00000000 		.4byte	.LVL32
 3140 01b2 07000000 		.4byte	.LVL33-1
 3141 01b6 0100     		.2byte	0x1
 3142 01b8 50       		.byte	0x50
 3143 01b9 07000000 		.4byte	.LVL33-1
 3144 01bd 10000000 		.4byte	.LVL34
 3145 01c1 0100     		.2byte	0x1
 3146 01c3 54       		.byte	0x54
 3147 01c4 10000000 		.4byte	.LVL34
 3148 01c8 2C000000 		.4byte	.LFE11
 3149 01cc 0400     		.2byte	0x4
 3150 01ce F3       		.byte	0xf3
 3151 01cf 01       		.uleb128 0x1
 3152 01d0 50       		.byte	0x50
 3153 01d1 9F       		.byte	0x9f
 3154 01d2 00000000 		.4byte	0
 3155 01d6 00000000 		.4byte	0
 3156              	.LLST15:
 3157 01da 08000000 		.4byte	.LVL33
 3158 01de 1F000000 		.4byte	.LVL35-1
 3159 01e2 0100     		.2byte	0x1
 3160 01e4 50       		.byte	0x50
 3161 01e5 00000000 		.4byte	0
 3162 01e9 00000000 		.4byte	0
 3163              	.LLST16:
 3164 01ed 00000000 		.4byte	.LVL36
 3165 01f1 07000000 		.4byte	.LVL37-1
 3166 01f5 0100     		.2byte	0x1
 3167 01f7 50       		.byte	0x50
 3168 01f8 07000000 		.4byte	.LVL37-1
 3169 01fc 1C000000 		.4byte	.LVL39
 3170 0200 0100     		.2byte	0x1
 3171 0202 54       		.byte	0x54
 3172 0203 1C000000 		.4byte	.LVL39
 3173 0207 28000000 		.4byte	.LFE12
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 86


 3174 020b 0400     		.2byte	0x4
 3175 020d F3       		.byte	0xf3
 3176 020e 01       		.uleb128 0x1
 3177 020f 50       		.byte	0x50
 3178 0210 9F       		.byte	0x9f
 3179 0211 00000000 		.4byte	0
 3180 0215 00000000 		.4byte	0
 3181              	.LLST17:
 3182 0219 08000000 		.4byte	.LVL37
 3183 021d 1B000000 		.4byte	.LVL38-1
 3184 0221 0100     		.2byte	0x1
 3185 0223 50       		.byte	0x50
 3186 0224 00000000 		.4byte	0
 3187 0228 00000000 		.4byte	0
 3188              	.LLST18:
 3189 022c 00000000 		.4byte	.LVL40
 3190 0230 04000000 		.4byte	.LVL41
 3191 0234 0100     		.2byte	0x1
 3192 0236 50       		.byte	0x50
 3193 0237 04000000 		.4byte	.LVL41
 3194 023b 0C000000 		.4byte	.LFE13
 3195 023f 0400     		.2byte	0x4
 3196 0241 F3       		.byte	0xf3
 3197 0242 01       		.uleb128 0x1
 3198 0243 50       		.byte	0x50
 3199 0244 9F       		.byte	0x9f
 3200 0245 00000000 		.4byte	0
 3201 0249 00000000 		.4byte	0
 3202              	.LLST19:
 3203 024d 00000000 		.4byte	.LVL42
 3204 0251 07000000 		.4byte	.LVL43-1
 3205 0255 0100     		.2byte	0x1
 3206 0257 50       		.byte	0x50
 3207 0258 07000000 		.4byte	.LVL43-1
 3208 025c 1C000000 		.4byte	.LVL45
 3209 0260 0100     		.2byte	0x1
 3210 0262 54       		.byte	0x54
 3211 0263 1C000000 		.4byte	.LVL45
 3212 0267 28000000 		.4byte	.LFE15
 3213 026b 0400     		.2byte	0x4
 3214 026d F3       		.byte	0xf3
 3215 026e 01       		.uleb128 0x1
 3216 026f 50       		.byte	0x50
 3217 0270 9F       		.byte	0x9f
 3218 0271 00000000 		.4byte	0
 3219 0275 00000000 		.4byte	0
 3220              	.LLST20:
 3221 0279 08000000 		.4byte	.LVL43
 3222 027d 1B000000 		.4byte	.LVL44-1
 3223 0281 0100     		.2byte	0x1
 3224 0283 50       		.byte	0x50
 3225 0284 00000000 		.4byte	0
 3226 0288 00000000 		.4byte	0
 3227              	.LLST21:
 3228 028c 00000000 		.4byte	.LVL46
 3229 0290 04000000 		.4byte	.LVL47
 3230 0294 0100     		.2byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 87


 3231 0296 50       		.byte	0x50
 3232 0297 04000000 		.4byte	.LVL47
 3233 029b 0C000000 		.4byte	.LFE16
 3234 029f 0400     		.2byte	0x4
 3235 02a1 F3       		.byte	0xf3
 3236 02a2 01       		.uleb128 0x1
 3237 02a3 50       		.byte	0x50
 3238 02a4 9F       		.byte	0x9f
 3239 02a5 00000000 		.4byte	0
 3240 02a9 00000000 		.4byte	0
 3241              	.LLST22:
 3242 02ad 00000000 		.4byte	.LVL48
 3243 02b1 07000000 		.4byte	.LVL49-1
 3244 02b5 0100     		.2byte	0x1
 3245 02b7 50       		.byte	0x50
 3246 02b8 07000000 		.4byte	.LVL49-1
 3247 02bc 1E000000 		.4byte	.LVL51
 3248 02c0 0100     		.2byte	0x1
 3249 02c2 54       		.byte	0x54
 3250 02c3 1E000000 		.4byte	.LVL51
 3251 02c7 24000000 		.4byte	.LFE18
 3252 02cb 0400     		.2byte	0x4
 3253 02cd F3       		.byte	0xf3
 3254 02ce 01       		.uleb128 0x1
 3255 02cf 50       		.byte	0x50
 3256 02d0 9F       		.byte	0x9f
 3257 02d1 00000000 		.4byte	0
 3258 02d5 00000000 		.4byte	0
 3259              	.LLST23:
 3260 02d9 08000000 		.4byte	.LVL49
 3261 02dd 1D000000 		.4byte	.LVL50-1
 3262 02e1 0100     		.2byte	0x1
 3263 02e3 50       		.byte	0x50
 3264 02e4 00000000 		.4byte	0
 3265 02e8 00000000 		.4byte	0
 3266              	.LLST24:
 3267 02ec 00000000 		.4byte	.LVL52
 3268 02f0 04000000 		.4byte	.LVL53
 3269 02f4 0100     		.2byte	0x1
 3270 02f6 50       		.byte	0x50
 3271 02f7 04000000 		.4byte	.LVL53
 3272 02fb 0C000000 		.4byte	.LFE19
 3273 02ff 0400     		.2byte	0x4
 3274 0301 F3       		.byte	0xf3
 3275 0302 01       		.uleb128 0x1
 3276 0303 50       		.byte	0x50
 3277 0304 9F       		.byte	0x9f
 3278 0305 00000000 		.4byte	0
 3279 0309 00000000 		.4byte	0
 3280              	.LLST25:
 3281 030d 00000000 		.4byte	.LVL54
 3282 0311 07000000 		.4byte	.LVL55-1
 3283 0315 0100     		.2byte	0x1
 3284 0317 50       		.byte	0x50
 3285 0318 07000000 		.4byte	.LVL55-1
 3286 031c 22000000 		.4byte	.LVL57
 3287 0320 0100     		.2byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 88


 3288 0322 54       		.byte	0x54
 3289 0323 22000000 		.4byte	.LVL57
 3290 0327 28000000 		.4byte	.LFE21
 3291 032b 0400     		.2byte	0x4
 3292 032d F3       		.byte	0xf3
 3293 032e 01       		.uleb128 0x1
 3294 032f 50       		.byte	0x50
 3295 0330 9F       		.byte	0x9f
 3296 0331 00000000 		.4byte	0
 3297 0335 00000000 		.4byte	0
 3298              	.LLST26:
 3299 0339 08000000 		.4byte	.LVL55
 3300 033d 21000000 		.4byte	.LVL56-1
 3301 0341 0100     		.2byte	0x1
 3302 0343 50       		.byte	0x50
 3303 0344 00000000 		.4byte	0
 3304 0348 00000000 		.4byte	0
 3305              	.LLST27:
 3306 034c 00000000 		.4byte	.LVL58
 3307 0350 04000000 		.4byte	.LVL59
 3308 0354 0100     		.2byte	0x1
 3309 0356 50       		.byte	0x50
 3310 0357 04000000 		.4byte	.LVL59
 3311 035b 0C000000 		.4byte	.LFE22
 3312 035f 0400     		.2byte	0x4
 3313 0361 F3       		.byte	0xf3
 3314 0362 01       		.uleb128 0x1
 3315 0363 50       		.byte	0x50
 3316 0364 9F       		.byte	0x9f
 3317 0365 00000000 		.4byte	0
 3318 0369 00000000 		.4byte	0
 3319              	.LLST28:
 3320 036d 00000000 		.4byte	.LVL60
 3321 0371 04000000 		.4byte	.LVL61
 3322 0375 0100     		.2byte	0x1
 3323 0377 50       		.byte	0x50
 3324 0378 04000000 		.4byte	.LVL61
 3325 037c 0C000000 		.4byte	.LFE24
 3326 0380 0400     		.2byte	0x4
 3327 0382 F3       		.byte	0xf3
 3328 0383 01       		.uleb128 0x1
 3329 0384 50       		.byte	0x50
 3330 0385 9F       		.byte	0x9f
 3331 0386 00000000 		.4byte	0
 3332 038a 00000000 		.4byte	0
 3333              	.LLST29:
 3334 038e 00000000 		.4byte	.LVL62
 3335 0392 07000000 		.4byte	.LVL63-1
 3336 0396 0100     		.2byte	0x1
 3337 0398 50       		.byte	0x50
 3338 0399 07000000 		.4byte	.LVL63-1
 3339 039d 1C000000 		.4byte	.LVL65
 3340 03a1 0100     		.2byte	0x1
 3341 03a3 54       		.byte	0x54
 3342 03a4 1C000000 		.4byte	.LVL65
 3343 03a8 24000000 		.4byte	.LFE28
 3344 03ac 0400     		.2byte	0x4
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 89


 3345 03ae F3       		.byte	0xf3
 3346 03af 01       		.uleb128 0x1
 3347 03b0 50       		.byte	0x50
 3348 03b1 9F       		.byte	0x9f
 3349 03b2 00000000 		.4byte	0
 3350 03b6 00000000 		.4byte	0
 3351              	.LLST30:
 3352 03ba 08000000 		.4byte	.LVL63
 3353 03be 1B000000 		.4byte	.LVL64-1
 3354 03c2 0100     		.2byte	0x1
 3355 03c4 50       		.byte	0x50
 3356 03c5 00000000 		.4byte	0
 3357 03c9 00000000 		.4byte	0
 3358              	.LLST31:
 3359 03cd 00000000 		.4byte	.LVL66
 3360 03d1 07000000 		.4byte	.LVL67-1
 3361 03d5 0100     		.2byte	0x1
 3362 03d7 50       		.byte	0x50
 3363 03d8 07000000 		.4byte	.LVL67-1
 3364 03dc 1E000000 		.4byte	.LVL69
 3365 03e0 0100     		.2byte	0x1
 3366 03e2 54       		.byte	0x54
 3367 03e3 1E000000 		.4byte	.LVL69
 3368 03e7 24000000 		.4byte	.LFE29
 3369 03eb 0400     		.2byte	0x4
 3370 03ed F3       		.byte	0xf3
 3371 03ee 01       		.uleb128 0x1
 3372 03ef 50       		.byte	0x50
 3373 03f0 9F       		.byte	0x9f
 3374 03f1 00000000 		.4byte	0
 3375 03f5 00000000 		.4byte	0
 3376              	.LLST32:
 3377 03f9 08000000 		.4byte	.LVL67
 3378 03fd 1D000000 		.4byte	.LVL68-1
 3379 0401 0100     		.2byte	0x1
 3380 0403 50       		.byte	0x50
 3381 0404 00000000 		.4byte	0
 3382 0408 00000000 		.4byte	0
 3383              	.LLST33:
 3384 040c 00000000 		.4byte	.LVL70
 3385 0410 07000000 		.4byte	.LVL71-1
 3386 0414 0100     		.2byte	0x1
 3387 0416 50       		.byte	0x50
 3388 0417 07000000 		.4byte	.LVL71-1
 3389 041b 1E000000 		.4byte	.LVL73
 3390 041f 0100     		.2byte	0x1
 3391 0421 54       		.byte	0x54
 3392 0422 1E000000 		.4byte	.LVL73
 3393 0426 28000000 		.4byte	.LFE30
 3394 042a 0400     		.2byte	0x4
 3395 042c F3       		.byte	0xf3
 3396 042d 01       		.uleb128 0x1
 3397 042e 50       		.byte	0x50
 3398 042f 9F       		.byte	0x9f
 3399 0430 00000000 		.4byte	0
 3400 0434 00000000 		.4byte	0
 3401              	.LLST34:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 90


 3402 0438 08000000 		.4byte	.LVL71
 3403 043c 1D000000 		.4byte	.LVL72-1
 3404 0440 0100     		.2byte	0x1
 3405 0442 50       		.byte	0x50
 3406 0443 00000000 		.4byte	0
 3407 0447 00000000 		.4byte	0
 3408              	.LLST35:
 3409 044b 00000000 		.4byte	.LVL74
 3410 044f 07000000 		.4byte	.LVL75-1
 3411 0453 0100     		.2byte	0x1
 3412 0455 50       		.byte	0x50
 3413 0456 07000000 		.4byte	.LVL75-1
 3414 045a 1E000000 		.4byte	.LVL77
 3415 045e 0100     		.2byte	0x1
 3416 0460 54       		.byte	0x54
 3417 0461 1E000000 		.4byte	.LVL77
 3418 0465 24000000 		.4byte	.LFE31
 3419 0469 0400     		.2byte	0x4
 3420 046b F3       		.byte	0xf3
 3421 046c 01       		.uleb128 0x1
 3422 046d 50       		.byte	0x50
 3423 046e 9F       		.byte	0x9f
 3424 046f 00000000 		.4byte	0
 3425 0473 00000000 		.4byte	0
 3426              	.LLST36:
 3427 0477 08000000 		.4byte	.LVL75
 3428 047b 1D000000 		.4byte	.LVL76-1
 3429 047f 0100     		.2byte	0x1
 3430 0481 50       		.byte	0x50
 3431 0482 00000000 		.4byte	0
 3432 0486 00000000 		.4byte	0
 3433              	.LLST37:
 3434 048a 00000000 		.4byte	.LVL78
 3435 048e 07000000 		.4byte	.LVL79-1
 3436 0492 0100     		.2byte	0x1
 3437 0494 50       		.byte	0x50
 3438 0495 07000000 		.4byte	.LVL79-1
 3439 0499 1E000000 		.4byte	.LVL81
 3440 049d 0100     		.2byte	0x1
 3441 049f 54       		.byte	0x54
 3442 04a0 1E000000 		.4byte	.LVL81
 3443 04a4 24000000 		.4byte	.LFE32
 3444 04a8 0400     		.2byte	0x4
 3445 04aa F3       		.byte	0xf3
 3446 04ab 01       		.uleb128 0x1
 3447 04ac 50       		.byte	0x50
 3448 04ad 9F       		.byte	0x9f
 3449 04ae 00000000 		.4byte	0
 3450 04b2 00000000 		.4byte	0
 3451              	.LLST38:
 3452 04b6 08000000 		.4byte	.LVL79
 3453 04ba 1D000000 		.4byte	.LVL80-1
 3454 04be 0100     		.2byte	0x1
 3455 04c0 50       		.byte	0x50
 3456 04c1 00000000 		.4byte	0
 3457 04c5 00000000 		.4byte	0
 3458              	.LLST39:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 91


 3459 04c9 00000000 		.4byte	.LVL82
 3460 04cd 0B000000 		.4byte	.LVL83-1
 3461 04d1 0100     		.2byte	0x1
 3462 04d3 50       		.byte	0x50
 3463 04d4 0B000000 		.4byte	.LVL83-1
 3464 04d8 1C000000 		.4byte	.LFE33
 3465 04dc 0400     		.2byte	0x4
 3466 04de F3       		.byte	0xf3
 3467 04df 01       		.uleb128 0x1
 3468 04e0 50       		.byte	0x50
 3469 04e1 9F       		.byte	0x9f
 3470 04e2 00000000 		.4byte	0
 3471 04e6 00000000 		.4byte	0
 3472              	.LLST40:
 3473 04ea 00000000 		.4byte	.LVL82
 3474 04ee 0B000000 		.4byte	.LVL83-1
 3475 04f2 0100     		.2byte	0x1
 3476 04f4 51       		.byte	0x51
 3477 04f5 0B000000 		.4byte	.LVL83-1
 3478 04f9 14000000 		.4byte	.LVL85
 3479 04fd 0100     		.2byte	0x1
 3480 04ff 55       		.byte	0x55
 3481 0500 14000000 		.4byte	.LVL85
 3482 0504 1C000000 		.4byte	.LFE33
 3483 0508 0400     		.2byte	0x4
 3484 050a F3       		.byte	0xf3
 3485 050b 01       		.uleb128 0x1
 3486 050c 51       		.byte	0x51
 3487 050d 9F       		.byte	0x9f
 3488 050e 00000000 		.4byte	0
 3489 0512 00000000 		.4byte	0
 3490              	.LLST41:
 3491 0516 0C000000 		.4byte	.LVL83
 3492 051a 13000000 		.4byte	.LVL84-1
 3493 051e 0100     		.2byte	0x1
 3494 0520 50       		.byte	0x50
 3495 0521 00000000 		.4byte	0
 3496 0525 00000000 		.4byte	0
 3497              	.LLST42:
 3498 0529 08000000 		.4byte	.LVL86
 3499 052d 13000000 		.4byte	.LVL87-1
 3500 0531 0100     		.2byte	0x1
 3501 0533 50       		.byte	0x50
 3502 0534 00000000 		.4byte	0
 3503 0538 00000000 		.4byte	0
 3504              		.section	.debug_aranges,"",%progbits
 3505 0000 54010000 		.4byte	0x154
 3506 0004 0200     		.2byte	0x2
 3507 0006 00000000 		.4byte	.Ldebug_info0
 3508 000a 04       		.byte	0x4
 3509 000b 00       		.byte	0
 3510 000c 0000     		.2byte	0
 3511 000e 0000     		.2byte	0
 3512 0010 00000000 		.4byte	.LFB0
 3513 0014 60000000 		.4byte	.LFE0-.LFB0
 3514 0018 00000000 		.4byte	.LFB3
 3515 001c 1C000000 		.4byte	.LFE3-.LFB3
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 92


 3516 0020 00000000 		.4byte	.LFB4
 3517 0024 28000000 		.4byte	.LFE4-.LFB4
 3518 0028 00000000 		.4byte	.LFB5
 3519 002c 28000000 		.4byte	.LFE5-.LFB5
 3520 0030 00000000 		.4byte	.LFB6
 3521 0034 28000000 		.4byte	.LFE6-.LFB6
 3522 0038 00000000 		.4byte	.LFB7
 3523 003c 2C000000 		.4byte	.LFE7-.LFB7
 3524 0040 00000000 		.4byte	.LFB8
 3525 0044 10000000 		.4byte	.LFE8-.LFB8
 3526 0048 00000000 		.4byte	.LFB9
 3527 004c 28000000 		.4byte	.LFE9-.LFB9
 3528 0050 00000000 		.4byte	.LFB10
 3529 0054 28000000 		.4byte	.LFE10-.LFB10
 3530 0058 00000000 		.4byte	.LFB11
 3531 005c 2C000000 		.4byte	.LFE11-.LFB11
 3532 0060 00000000 		.4byte	.LFB12
 3533 0064 28000000 		.4byte	.LFE12-.LFB12
 3534 0068 00000000 		.4byte	.LFB13
 3535 006c 0C000000 		.4byte	.LFE13-.LFB13
 3536 0070 00000000 		.4byte	.LFB14
 3537 0074 0C000000 		.4byte	.LFE14-.LFB14
 3538 0078 00000000 		.4byte	.LFB15
 3539 007c 28000000 		.4byte	.LFE15-.LFB15
 3540 0080 00000000 		.4byte	.LFB16
 3541 0084 0C000000 		.4byte	.LFE16-.LFB16
 3542 0088 00000000 		.4byte	.LFB17
 3543 008c 0C000000 		.4byte	.LFE17-.LFB17
 3544 0090 00000000 		.4byte	.LFB18
 3545 0094 24000000 		.4byte	.LFE18-.LFB18
 3546 0098 00000000 		.4byte	.LFB19
 3547 009c 0C000000 		.4byte	.LFE19-.LFB19
 3548 00a0 00000000 		.4byte	.LFB20
 3549 00a4 0C000000 		.4byte	.LFE20-.LFB20
 3550 00a8 00000000 		.4byte	.LFB21
 3551 00ac 28000000 		.4byte	.LFE21-.LFB21
 3552 00b0 00000000 		.4byte	.LFB22
 3553 00b4 0C000000 		.4byte	.LFE22-.LFB22
 3554 00b8 00000000 		.4byte	.LFB23
 3555 00bc 0C000000 		.4byte	.LFE23-.LFB23
 3556 00c0 00000000 		.4byte	.LFB24
 3557 00c4 0C000000 		.4byte	.LFE24-.LFB24
 3558 00c8 00000000 		.4byte	.LFB25
 3559 00cc 0C000000 		.4byte	.LFE25-.LFB25
 3560 00d0 00000000 		.4byte	.LFB26
 3561 00d4 0C000000 		.4byte	.LFE26-.LFB26
 3562 00d8 00000000 		.4byte	.LFB27
 3563 00dc 0C000000 		.4byte	.LFE27-.LFB27
 3564 00e0 00000000 		.4byte	.LFB28
 3565 00e4 24000000 		.4byte	.LFE28-.LFB28
 3566 00e8 00000000 		.4byte	.LFB29
 3567 00ec 24000000 		.4byte	.LFE29-.LFB29
 3568 00f0 00000000 		.4byte	.LFB30
 3569 00f4 28000000 		.4byte	.LFE30-.LFB30
 3570 00f8 00000000 		.4byte	.LFB31
 3571 00fc 24000000 		.4byte	.LFE31-.LFB31
 3572 0100 00000000 		.4byte	.LFB32
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 93


 3573 0104 24000000 		.4byte	.LFE32-.LFB32
 3574 0108 00000000 		.4byte	.LFB33
 3575 010c 1C000000 		.4byte	.LFE33-.LFB33
 3576 0110 00000000 		.4byte	.LFB1
 3577 0114 24000000 		.4byte	.LFE1-.LFB1
 3578 0118 00000000 		.4byte	.LFB2
 3579 011c 1C000000 		.4byte	.LFE2-.LFB2
 3580 0120 00000000 		.4byte	.LFB34
 3581 0124 14000000 		.4byte	.LFE34-.LFB34
 3582 0128 00000000 		.4byte	.LFB35
 3583 012c 0C000000 		.4byte	.LFE35-.LFB35
 3584 0130 00000000 		.4byte	.LFB36
 3585 0134 0C000000 		.4byte	.LFE36-.LFB36
 3586 0138 00000000 		.4byte	.LFB37
 3587 013c 0C000000 		.4byte	.LFE37-.LFB37
 3588 0140 00000000 		.4byte	.LFB38
 3589 0144 0C000000 		.4byte	.LFE38-.LFB38
 3590 0148 00000000 		.4byte	.LFB39
 3591 014c 0C000000 		.4byte	.LFE39-.LFB39
 3592 0150 00000000 		.4byte	0
 3593 0154 00000000 		.4byte	0
 3594              		.section	.debug_ranges,"",%progbits
 3595              	.Ldebug_ranges0:
 3596 0000 02000000 		.4byte	.LBB10
 3597 0004 04000000 		.4byte	.LBE10
 3598 0008 12000000 		.4byte	.LBB14
 3599 000c 14000000 		.4byte	.LBE14
 3600 0010 14000000 		.4byte	.LBB15
 3601 0014 16000000 		.4byte	.LBE15
 3602 0018 00000000 		.4byte	0
 3603 001c 00000000 		.4byte	0
 3604 0020 00000000 		.4byte	.LFB0
 3605 0024 60000000 		.4byte	.LFE0
 3606 0028 00000000 		.4byte	.LFB3
 3607 002c 1C000000 		.4byte	.LFE3
 3608 0030 00000000 		.4byte	.LFB4
 3609 0034 28000000 		.4byte	.LFE4
 3610 0038 00000000 		.4byte	.LFB5
 3611 003c 28000000 		.4byte	.LFE5
 3612 0040 00000000 		.4byte	.LFB6
 3613 0044 28000000 		.4byte	.LFE6
 3614 0048 00000000 		.4byte	.LFB7
 3615 004c 2C000000 		.4byte	.LFE7
 3616 0050 00000000 		.4byte	.LFB8
 3617 0054 10000000 		.4byte	.LFE8
 3618 0058 00000000 		.4byte	.LFB9
 3619 005c 28000000 		.4byte	.LFE9
 3620 0060 00000000 		.4byte	.LFB10
 3621 0064 28000000 		.4byte	.LFE10
 3622 0068 00000000 		.4byte	.LFB11
 3623 006c 2C000000 		.4byte	.LFE11
 3624 0070 00000000 		.4byte	.LFB12
 3625 0074 28000000 		.4byte	.LFE12
 3626 0078 00000000 		.4byte	.LFB13
 3627 007c 0C000000 		.4byte	.LFE13
 3628 0080 00000000 		.4byte	.LFB14
 3629 0084 0C000000 		.4byte	.LFE14
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 94


 3630 0088 00000000 		.4byte	.LFB15
 3631 008c 28000000 		.4byte	.LFE15
 3632 0090 00000000 		.4byte	.LFB16
 3633 0094 0C000000 		.4byte	.LFE16
 3634 0098 00000000 		.4byte	.LFB17
 3635 009c 0C000000 		.4byte	.LFE17
 3636 00a0 00000000 		.4byte	.LFB18
 3637 00a4 24000000 		.4byte	.LFE18
 3638 00a8 00000000 		.4byte	.LFB19
 3639 00ac 0C000000 		.4byte	.LFE19
 3640 00b0 00000000 		.4byte	.LFB20
 3641 00b4 0C000000 		.4byte	.LFE20
 3642 00b8 00000000 		.4byte	.LFB21
 3643 00bc 28000000 		.4byte	.LFE21
 3644 00c0 00000000 		.4byte	.LFB22
 3645 00c4 0C000000 		.4byte	.LFE22
 3646 00c8 00000000 		.4byte	.LFB23
 3647 00cc 0C000000 		.4byte	.LFE23
 3648 00d0 00000000 		.4byte	.LFB24
 3649 00d4 0C000000 		.4byte	.LFE24
 3650 00d8 00000000 		.4byte	.LFB25
 3651 00dc 0C000000 		.4byte	.LFE25
 3652 00e0 00000000 		.4byte	.LFB26
 3653 00e4 0C000000 		.4byte	.LFE26
 3654 00e8 00000000 		.4byte	.LFB27
 3655 00ec 0C000000 		.4byte	.LFE27
 3656 00f0 00000000 		.4byte	.LFB28
 3657 00f4 24000000 		.4byte	.LFE28
 3658 00f8 00000000 		.4byte	.LFB29
 3659 00fc 24000000 		.4byte	.LFE29
 3660 0100 00000000 		.4byte	.LFB30
 3661 0104 28000000 		.4byte	.LFE30
 3662 0108 00000000 		.4byte	.LFB31
 3663 010c 24000000 		.4byte	.LFE31
 3664 0110 00000000 		.4byte	.LFB32
 3665 0114 24000000 		.4byte	.LFE32
 3666 0118 00000000 		.4byte	.LFB33
 3667 011c 1C000000 		.4byte	.LFE33
 3668 0120 00000000 		.4byte	.LFB1
 3669 0124 24000000 		.4byte	.LFE1
 3670 0128 00000000 		.4byte	.LFB2
 3671 012c 1C000000 		.4byte	.LFE2
 3672 0130 00000000 		.4byte	.LFB34
 3673 0134 14000000 		.4byte	.LFE34
 3674 0138 00000000 		.4byte	.LFB35
 3675 013c 0C000000 		.4byte	.LFE35
 3676 0140 00000000 		.4byte	.LFB36
 3677 0144 0C000000 		.4byte	.LFE36
 3678 0148 00000000 		.4byte	.LFB37
 3679 014c 0C000000 		.4byte	.LFE37
 3680 0150 00000000 		.4byte	.LFB38
 3681 0154 0C000000 		.4byte	.LFE38
 3682 0158 00000000 		.4byte	.LFB39
 3683 015c 0C000000 		.4byte	.LFE39
 3684 0160 00000000 		.4byte	0
 3685 0164 00000000 		.4byte	0
 3686              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 95


 3687              	.Ldebug_line0:
 3688 0000 FC030000 		.section	.debug_str,"MS",%progbits,1
 3688      02004B00 
 3688      00000201 
 3688      FB0E0D00 
 3688      01010101 
 3689              	.LASF18:
 3690 0000 636F756E 		.ascii	"count\000"
 3690      7400
 3691              	.LASF76:
 3692 0006 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3692      4320342E 
 3692      392E3320 
 3692      32303135 
 3692      30333033 
 3693 0039 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 3693      20726576 
 3693      6973696F 
 3693      6E203232 
 3693      31323230 
 3694 006c 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 3694      66756E63 
 3694      74696F6E 
 3694      2D736563 
 3694      74696F6E 
 3695              	.LASF69:
 3696 0094 50574D5F 		.ascii	"PWM_Enable\000"
 3696      456E6162 
 3696      6C6500
 3697              	.LASF81:
 3698 009f 43794578 		.ascii	"CyExitCriticalSection\000"
 3698      69744372 
 3698      69746963 
 3698      616C5365 
 3698      6374696F 
 3699              	.LASF37:
 3700 00b5 50574D5F 		.ascii	"PWM_SetPWMSyncKill\000"
 3700      53657450 
 3700      574D5379 
 3700      6E634B69 
 3700      6C6C00
 3701              	.LASF21:
 3702 00c8 70657269 		.ascii	"period\000"
 3702      6F6400
 3703              	.LASF7:
 3704 00cf 6C6F6E67 		.ascii	"long long unsigned int\000"
 3704      206C6F6E 
 3704      6720756E 
 3704      7369676E 
 3704      65642069 
 3705              	.LASF61:
 3706 00e6 50574D5F 		.ascii	"PWM_SetCaptureMode\000"
 3706      53657443 
 3706      61707475 
 3706      72654D6F 
 3706      646500
 3707              	.LASF30:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 96


 3708 00f9 71644D6F 		.ascii	"qdMode\000"
 3708      646500
 3709              	.LASF16:
 3710 0100 50574D5F 		.ascii	"PWM_WriteCounter\000"
 3710      57726974 
 3710      65436F75 
 3710      6E746572 
 3710      00
 3711              	.LASF77:
 3712 0111 47656E65 		.ascii	"Generated_Source\\PSoC4\\PWM.c\000"
 3712      72617465 
 3712      645F536F 
 3712      75726365 
 3712      5C50536F 
 3713              	.LASF47:
 3714 012e 50574D5F 		.ascii	"PWM_ReadCounter\000"
 3714      52656164 
 3714      436F756E 
 3714      74657200 
 3715              	.LASF6:
 3716 013e 6C6F6E67 		.ascii	"long long int\000"
 3716      206C6F6E 
 3716      6720696E 
 3716      7400
 3717              	.LASF0:
 3718 014c 7369676E 		.ascii	"signed char\000"
 3718      65642063 
 3718      68617200 
 3719              	.LASF56:
 3720 0158 50574D5F 		.ascii	"PWM_WriteCompareBuf\000"
 3720      57726974 
 3720      65436F6D 
 3720      70617265 
 3720      42756600 
 3721              	.LASF17:
 3722 016c 50574D5F 		.ascii	"PWM_SetInterruptMode\000"
 3722      53657449 
 3722      6E746572 
 3722      72757074 
 3722      4D6F6465 
 3723              	.LASF74:
 3724 0181 50574D5F 		.ascii	"PWM_ClearInterrupt\000"
 3724      436C6561 
 3724      72496E74 
 3724      65727275 
 3724      707400
 3725              	.LASF4:
 3726 0194 6C6F6E67 		.ascii	"long int\000"
 3726      20696E74 
 3726      00
 3727              	.LASF9:
 3728 019d 75696E74 		.ascii	"uint8\000"
 3728      3800
 3729              	.LASF12:
 3730 01a3 646F7562 		.ascii	"double\000"
 3730      6C6500
 3731              	.LASF58:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 97


 3732 01aa 50574D5F 		.ascii	"PWM_ReadCompareBuf\000"
 3732      52656164 
 3732      436F6D70 
 3732      61726542 
 3732      756600
 3733              	.LASF49:
 3734 01bd 50574D5F 		.ascii	"PWM_SetCompareSwap\000"
 3734      53657443 
 3734      6F6D7061 
 3734      72655377 
 3734      617000
 3735              	.LASF25:
 3736 01d0 50574D5F 		.ascii	"PWM_Stop\000"
 3736      53746F70 
 3736      00
 3737              	.LASF43:
 3738 01d9 50574D5F 		.ascii	"PWM_SetPWMInvert\000"
 3738      53657450 
 3738      574D496E 
 3738      76657274 
 3738      00
 3739              	.LASF10:
 3740 01ea 75696E74 		.ascii	"uint32\000"
 3740      333200
 3741              	.LASF64:
 3742 01f1 50574D5F 		.ascii	"PWM_SetStartMode\000"
 3742      53657453 
 3742      74617274 
 3742      4D6F6465 
 3742      00
 3743              	.LASF62:
 3744 0202 74726967 		.ascii	"triggerMode\000"
 3744      6765724D 
 3744      6F646500 
 3745              	.LASF44:
 3746 020e 6D61736B 		.ascii	"mask\000"
 3746      00
 3747              	.LASF71:
 3748 0213 50574D5F 		.ascii	"PWM_ReadStatus\000"
 3748      52656164 
 3748      53746174 
 3748      757300
 3749              	.LASF42:
 3750 0222 64656164 		.ascii	"deadTime\000"
 3750      54696D65 
 3750      00
 3751              	.LASF65:
 3752 022b 50574D5F 		.ascii	"PWM_SetStopMode\000"
 3752      53657453 
 3752      746F704D 
 3752      6F646500 
 3753              	.LASF8:
 3754 023b 756E7369 		.ascii	"unsigned int\000"
 3754      676E6564 
 3754      20696E74 
 3754      00
 3755              	.LASF41:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 98


 3756 0248 50574D5F 		.ascii	"PWM_SetPWMDeadTime\000"
 3756      53657450 
 3756      574D4465 
 3756      61645469 
 3756      6D6500
 3757              	.LASF68:
 3758 025b 636F6D6D 		.ascii	"command\000"
 3758      616E6400 
 3759              	.LASF5:
 3760 0263 6C6F6E67 		.ascii	"long unsigned int\000"
 3760      20756E73 
 3760      69676E65 
 3760      6420696E 
 3760      7400
 3761              	.LASF36:
 3762 0275 6D6F6465 		.ascii	"modeMask\000"
 3762      4D61736B 
 3762      00
 3763              	.LASF80:
 3764 027e 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3764      74657243 
 3764      72697469 
 3764      63616C53 
 3764      65637469 
 3765              	.LASF3:
 3766 0295 73686F72 		.ascii	"short unsigned int\000"
 3766      7420756E 
 3766      7369676E 
 3766      65642069 
 3766      6E7400
 3767              	.LASF31:
 3768 02a8 50574D5F 		.ascii	"PWM_SetPrescaler\000"
 3768      53657450 
 3768      72657363 
 3768      616C6572 
 3768      00
 3769              	.LASF34:
 3770 02b9 6F6E6553 		.ascii	"oneShotEnable\000"
 3770      686F7445 
 3770      6E61626C 
 3770      6500
 3771              	.LASF67:
 3772 02c7 50574D5F 		.ascii	"PWM_TriggerCommand\000"
 3772      54726967 
 3772      67657243 
 3772      6F6D6D61 
 3772      6E6400
 3773              	.LASF20:
 3774 02da 50574D5F 		.ascii	"PWM_WritePeriod\000"
 3774      57726974 
 3774      65506572 
 3774      696F6400 
 3775              	.LASF14:
 3776 02ea 72656733 		.ascii	"reg32\000"
 3776      3200
 3777              	.LASF79:
 3778 02f0 50574D5F 		.ascii	"PWM_initVar\000"
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 99


 3778      696E6974 
 3778      56617200 
 3779              	.LASF48:
 3780 02fc 50574D5F 		.ascii	"PWM_ReadPeriod\000"
 3780      52656164 
 3780      50657269 
 3780      6F6400
 3781              	.LASF15:
 3782 030b 73697A65 		.ascii	"sizetype\000"
 3782      74797065 
 3782      00
 3783              	.LASF38:
 3784 0314 73796E63 		.ascii	"syncKillEnable\000"
 3784      4B696C6C 
 3784      456E6162 
 3784      6C6500
 3785              	.LASF23:
 3786 0323 636F6D70 		.ascii	"compare\000"
 3786      61726500 
 3787              	.LASF33:
 3788 032b 50574D5F 		.ascii	"PWM_SetOneShot\000"
 3788      5365744F 
 3788      6E655368 
 3788      6F7400
 3789              	.LASF53:
 3790 033a 50574D5F 		.ascii	"PWM_ReadPeriodBuf\000"
 3790      52656164 
 3790      50657269 
 3790      6F644275 
 3790      6600
 3791              	.LASF70:
 3792 034c 50574D5F 		.ascii	"PWM_Start\000"
 3792      53746172 
 3792      7400
 3793              	.LASF11:
 3794 0356 666C6F61 		.ascii	"float\000"
 3794      7400
 3795              	.LASF32:
 3796 035c 70726573 		.ascii	"prescaler\000"
 3796      63616C65 
 3796      7200
 3797              	.LASF59:
 3798 0366 50574D5F 		.ascii	"PWM_ReadCapture\000"
 3798      52656164 
 3798      43617074 
 3798      75726500 
 3799              	.LASF54:
 3800 0376 50574D5F 		.ascii	"PWM_SetPeriodSwap\000"
 3800      53657450 
 3800      6572696F 
 3800      64537761 
 3800      7000
 3801              	.LASF1:
 3802 0388 756E7369 		.ascii	"unsigned char\000"
 3802      676E6564 
 3802      20636861 
 3802      7200
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 100


 3803              	.LASF24:
 3804 0396 50574D5F 		.ascii	"PWM_Init\000"
 3804      496E6974 
 3804      00
 3805              	.LASF40:
 3806 039f 73746F70 		.ascii	"stopOnKillEnable\000"
 3806      4F6E4B69 
 3806      6C6C456E 
 3806      61626C65 
 3806      00
 3807              	.LASF35:
 3808 03b0 50574D5F 		.ascii	"PWM_SetPWMMode\000"
 3808      53657450 
 3808      574D4D6F 
 3808      646500
 3809              	.LASF2:
 3810 03bf 73686F72 		.ascii	"short int\000"
 3810      7420696E 
 3810      7400
 3811              	.LASF72:
 3812 03c9 50574D5F 		.ascii	"PWM_GetInterruptSourceMasked\000"
 3812      47657449 
 3812      6E746572 
 3812      72757074 
 3812      536F7572 
 3813              	.LASF19:
 3814 03e6 696E7465 		.ascii	"interruptMask\000"
 3814      72727570 
 3814      744D6173 
 3814      6B00
 3815              	.LASF51:
 3816 03f4 50574D5F 		.ascii	"PWM_WritePeriodBuf\000"
 3816      57726974 
 3816      65506572 
 3816      696F6442 
 3816      756600
 3817              	.LASF28:
 3818 0407 50574D5F 		.ascii	"PWM_SetQDMode\000"
 3818      53657451 
 3818      444D6F64 
 3818      6500
 3819              	.LASF13:
 3820 0415 63686172 		.ascii	"char\000"
 3820      00
 3821              	.LASF29:
 3822 041a 6D6F6465 		.ascii	"mode\000"
 3822      00
 3823              	.LASF75:
 3824 041f 50574D5F 		.ascii	"PWM_SetInterrupt\000"
 3824      53657449 
 3824      6E746572 
 3824      72757074 
 3824      00
 3825              	.LASF63:
 3826 0430 50574D5F 		.ascii	"PWM_SetReloadMode\000"
 3826      53657452 
 3826      656C6F61 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 101


 3826      644D6F64 
 3826      6500
 3827              	.LASF46:
 3828 0442 636F756E 		.ascii	"counterMode\000"
 3828      7465724D 
 3828      6F646500 
 3829              	.LASF78:
 3830 044e 443A5C63 		.ascii	"D:\\code\\cypress\\Tarocco\\cncboot.cydsn\000"
 3830      6F64655C 
 3830      63797072 
 3830      6573735C 
 3830      5461726F 
 3831              	.LASF57:
 3832 0474 636F6D70 		.ascii	"compareBuf\000"
 3832      61726542 
 3832      756600
 3833              	.LASF52:
 3834 047f 70657269 		.ascii	"periodBuf\000"
 3834      6F644275 
 3834      6600
 3835              	.LASF60:
 3836 0489 50574D5F 		.ascii	"PWM_ReadCaptureBuf\000"
 3836      52656164 
 3836      43617074 
 3836      75726542 
 3836      756600
 3837              	.LASF27:
 3838 049c 656E6162 		.ascii	"enableInterrupts\000"
 3838      6C65496E 
 3838      74657272 
 3838      75707473 
 3838      00
 3839              	.LASF66:
 3840 04ad 50574D5F 		.ascii	"PWM_SetCountMode\000"
 3840      53657443 
 3840      6F756E74 
 3840      4D6F6465 
 3840      00
 3841              	.LASF26:
 3842 04be 50574D5F 		.ascii	"PWM_SetMode\000"
 3842      5365744D 
 3842      6F646500 
 3843              	.LASF39:
 3844 04ca 50574D5F 		.ascii	"PWM_SetPWMStopOnKill\000"
 3844      53657450 
 3844      574D5374 
 3844      6F704F6E 
 3844      4B696C6C 
 3845              	.LASF45:
 3846 04df 50574D5F 		.ascii	"PWM_SetCounterMode\000"
 3846      53657443 
 3846      6F756E74 
 3846      65724D6F 
 3846      646500
 3847              	.LASF50:
 3848 04f2 73776170 		.ascii	"swapEnable\000"
 3848      456E6162 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccbMdbGc.s 			page 102


 3848      6C6500
 3849              	.LASF73:
 3850 04fd 50574D5F 		.ascii	"PWM_GetInterruptSource\000"
 3850      47657449 
 3850      6E746572 
 3850      72757074 
 3850      536F7572 
 3851              	.LASF22:
 3852 0514 50574D5F 		.ascii	"PWM_WriteCompare\000"
 3852      57726974 
 3852      65436F6D 
 3852      70617265 
 3852      00
 3853              	.LASF55:
 3854 0525 50574D5F 		.ascii	"PWM_ReadCompare\000"
 3854      52656164 
 3854      436F6D70 
 3854      61726500 
 3855              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
