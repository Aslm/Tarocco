ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM_MOT.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.PWM_MOT_Stop,"ax",%progbits
  18              		.align	2
  19              		.global	PWM_MOT_Stop
  20              		.code	16
  21              		.thumb_func
  22              		.type	PWM_MOT_Stop, %function
  23              	PWM_MOT_Stop:
  24              	.LFB3:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\PWM_MOT.c"
   1:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM_MOT.c **** * File Name: PWM_MOT.c
   3:.\Generated_Source\PSoC4/PWM_MOT.c **** * Version 2.10
   4:.\Generated_Source\PSoC4/PWM_MOT.c **** *
   5:.\Generated_Source\PSoC4/PWM_MOT.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM_MOT.c **** *  This file provides the source code to the API for the PWM_MOT
   7:.\Generated_Source\PSoC4/PWM_MOT.c **** *  component
   8:.\Generated_Source\PSoC4/PWM_MOT.c **** *
   9:.\Generated_Source\PSoC4/PWM_MOT.c **** * Note:
  10:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
  11:.\Generated_Source\PSoC4/PWM_MOT.c **** *
  12:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/PWM_MOT.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/PWM_MOT.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/PWM_MOT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/PWM_MOT.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/PWM_MOT.c **** 
  19:.\Generated_Source\PSoC4/PWM_MOT.c **** #include "PWM_MOT.h"
  20:.\Generated_Source\PSoC4/PWM_MOT.c **** 
  21:.\Generated_Source\PSoC4/PWM_MOT.c **** uint8 PWM_MOT_initVar = 0u;
  22:.\Generated_Source\PSoC4/PWM_MOT.c **** 
  23:.\Generated_Source\PSoC4/PWM_MOT.c **** 
  24:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_Init
  26:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
  27:.\Generated_Source\PSoC4/PWM_MOT.c **** *
  28:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
  29:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Initialize/Restore default PWM_MOT configuration.
  30:.\Generated_Source\PSoC4/PWM_MOT.c **** *
  31:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
  32:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 2


  33:.\Generated_Source\PSoC4/PWM_MOT.c **** *
  34:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
  35:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
  36:.\Generated_Source\PSoC4/PWM_MOT.c **** *
  37:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
  38:.\Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_Init(void)
  39:.\Generated_Source\PSoC4/PWM_MOT.c **** {
  40:.\Generated_Source\PSoC4/PWM_MOT.c **** 
  41:.\Generated_Source\PSoC4/PWM_MOT.c ****     /* Set values from customizer to CTRL */
  42:.\Generated_Source\PSoC4/PWM_MOT.c ****     #if (PWM_MOT__QUAD == PWM_MOT_CONFIG)
  43:.\Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_CONTROL_REG = PWM_MOT_CTRL_QUAD_BASE_CONFIG;
  44:.\Generated_Source\PSoC4/PWM_MOT.c ****         
  45:.\Generated_Source\PSoC4/PWM_MOT.c ****         /* Set values from customizer to CTRL1 */
  46:.\Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_TRIG_CONTROL1_REG  = PWM_MOT_QUAD_SIGNALS_MODES;
  47:.\Generated_Source\PSoC4/PWM_MOT.c **** 
  48:.\Generated_Source\PSoC4/PWM_MOT.c ****         /* Set values from customizer to INTR */
  49:.\Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_SetInterruptMode(PWM_MOT_QUAD_INTERRUPT_MASK);
  50:.\Generated_Source\PSoC4/PWM_MOT.c ****         
  51:.\Generated_Source\PSoC4/PWM_MOT.c ****          /* Set other values */
  52:.\Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_SetCounterMode(PWM_MOT_COUNT_DOWN);
  53:.\Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_WritePeriod(PWM_MOT_QUAD_PERIOD_INIT_VALUE);
  54:.\Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_WriteCounter(PWM_MOT_QUAD_PERIOD_INIT_VALUE);
  55:.\Generated_Source\PSoC4/PWM_MOT.c ****     #endif  /* (PWM_MOT__QUAD == PWM_MOT_CONFIG) */
  56:.\Generated_Source\PSoC4/PWM_MOT.c **** 
  57:.\Generated_Source\PSoC4/PWM_MOT.c ****     #if (PWM_MOT__TIMER == PWM_MOT_CONFIG)
  58:.\Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_CONTROL_REG = PWM_MOT_CTRL_TIMER_BASE_CONFIG;
  59:.\Generated_Source\PSoC4/PWM_MOT.c ****         
  60:.\Generated_Source\PSoC4/PWM_MOT.c ****         /* Set values from customizer to CTRL1 */
  61:.\Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_TRIG_CONTROL1_REG  = PWM_MOT_TIMER_SIGNALS_MODES;
  62:.\Generated_Source\PSoC4/PWM_MOT.c ****     
  63:.\Generated_Source\PSoC4/PWM_MOT.c ****         /* Set values from customizer to INTR */
  64:.\Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_SetInterruptMode(PWM_MOT_TC_INTERRUPT_MASK);
  65:.\Generated_Source\PSoC4/PWM_MOT.c ****         
  66:.\Generated_Source\PSoC4/PWM_MOT.c ****         /* Set other values from customizer */
  67:.\Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_WritePeriod(PWM_MOT_TC_PERIOD_VALUE );
  68:.\Generated_Source\PSoC4/PWM_MOT.c **** 
  69:.\Generated_Source\PSoC4/PWM_MOT.c ****         #if (PWM_MOT__COMPARE == PWM_MOT_TC_COMP_CAP_MODE)
  70:.\Generated_Source\PSoC4/PWM_MOT.c ****             PWM_MOT_WriteCompare(PWM_MOT_TC_COMPARE_VALUE);
  71:.\Generated_Source\PSoC4/PWM_MOT.c **** 
  72:.\Generated_Source\PSoC4/PWM_MOT.c ****             #if (1u == PWM_MOT_TC_COMPARE_SWAP)
  73:.\Generated_Source\PSoC4/PWM_MOT.c ****                 PWM_MOT_SetCompareSwap(1u);
  74:.\Generated_Source\PSoC4/PWM_MOT.c ****                 PWM_MOT_WriteCompareBuf(PWM_MOT_TC_COMPARE_BUF_VALUE);
  75:.\Generated_Source\PSoC4/PWM_MOT.c ****             #endif  /* (1u == PWM_MOT_TC_COMPARE_SWAP) */
  76:.\Generated_Source\PSoC4/PWM_MOT.c ****         #endif  /* (PWM_MOT__COMPARE == PWM_MOT_TC_COMP_CAP_MODE) */
  77:.\Generated_Source\PSoC4/PWM_MOT.c **** 
  78:.\Generated_Source\PSoC4/PWM_MOT.c ****         /* Initialize counter value */
  79:.\Generated_Source\PSoC4/PWM_MOT.c ****         #if (PWM_MOT_CY_TCPWM_V2 && PWM_MOT_TIMER_UPDOWN_CNT_USED && !PWM_MOT_CY_TCPWM_4000)
  80:.\Generated_Source\PSoC4/PWM_MOT.c ****             PWM_MOT_WriteCounter(1u);
  81:.\Generated_Source\PSoC4/PWM_MOT.c ****         #elif(PWM_MOT__COUNT_DOWN == PWM_MOT_TC_COUNTER_MODE)
  82:.\Generated_Source\PSoC4/PWM_MOT.c ****             PWM_MOT_WriteCounter(PWM_MOT_TC_PERIOD_VALUE);
  83:.\Generated_Source\PSoC4/PWM_MOT.c ****         #else
  84:.\Generated_Source\PSoC4/PWM_MOT.c ****             PWM_MOT_WriteCounter(0u);
  85:.\Generated_Source\PSoC4/PWM_MOT.c ****         #endif /* (PWM_MOT_CY_TCPWM_V2 && PWM_MOT_TIMER_UPDOWN_CNT_USED && !PWM_MOT_CY_TCPWM_4000) 
  86:.\Generated_Source\PSoC4/PWM_MOT.c ****     #endif  /* (PWM_MOT__TIMER == PWM_MOT_CONFIG) */
  87:.\Generated_Source\PSoC4/PWM_MOT.c **** 
  88:.\Generated_Source\PSoC4/PWM_MOT.c ****     #if (PWM_MOT__PWM_SEL == PWM_MOT_CONFIG)
  89:.\Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_CONTROL_REG = PWM_MOT_CTRL_PWM_BASE_CONFIG;
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 3


  90:.\Generated_Source\PSoC4/PWM_MOT.c **** 
  91:.\Generated_Source\PSoC4/PWM_MOT.c ****         #if (PWM_MOT__PWM_PR == PWM_MOT_PWM_MODE)
  92:.\Generated_Source\PSoC4/PWM_MOT.c ****             PWM_MOT_CONTROL_REG |= PWM_MOT_CTRL_PWM_RUN_MODE;
  93:.\Generated_Source\PSoC4/PWM_MOT.c ****             PWM_MOT_WriteCounter(PWM_MOT_PWM_PR_INIT_VALUE);
  94:.\Generated_Source\PSoC4/PWM_MOT.c ****         #else
  95:.\Generated_Source\PSoC4/PWM_MOT.c ****             PWM_MOT_CONTROL_REG |= PWM_MOT_CTRL_PWM_ALIGN | PWM_MOT_CTRL_PWM_KILL_EVENT;
  96:.\Generated_Source\PSoC4/PWM_MOT.c ****             
  97:.\Generated_Source\PSoC4/PWM_MOT.c ****             /* Initialize counter value */
  98:.\Generated_Source\PSoC4/PWM_MOT.c ****             #if (PWM_MOT_CY_TCPWM_V2 && PWM_MOT_PWM_UPDOWN_CNT_USED && !PWM_MOT_CY_TCPWM_4000)
  99:.\Generated_Source\PSoC4/PWM_MOT.c ****                 PWM_MOT_WriteCounter(1u);
 100:.\Generated_Source\PSoC4/PWM_MOT.c ****             #elif (PWM_MOT__RIGHT == PWM_MOT_PWM_ALIGN)
 101:.\Generated_Source\PSoC4/PWM_MOT.c ****                 PWM_MOT_WriteCounter(PWM_MOT_PWM_PERIOD_VALUE);
 102:.\Generated_Source\PSoC4/PWM_MOT.c ****             #else 
 103:.\Generated_Source\PSoC4/PWM_MOT.c ****                 PWM_MOT_WriteCounter(0u);
 104:.\Generated_Source\PSoC4/PWM_MOT.c ****             #endif  /* (PWM_MOT_CY_TCPWM_V2 && PWM_MOT_PWM_UPDOWN_CNT_USED && !PWM_MOT_CY_TCPWM_400
 105:.\Generated_Source\PSoC4/PWM_MOT.c ****         #endif  /* (PWM_MOT__PWM_PR == PWM_MOT_PWM_MODE) */
 106:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 107:.\Generated_Source\PSoC4/PWM_MOT.c ****         #if (PWM_MOT__PWM_DT == PWM_MOT_PWM_MODE)
 108:.\Generated_Source\PSoC4/PWM_MOT.c ****             PWM_MOT_CONTROL_REG |= PWM_MOT_CTRL_PWM_DEAD_TIME_CYCLE;
 109:.\Generated_Source\PSoC4/PWM_MOT.c ****         #endif  /* (PWM_MOT__PWM_DT == PWM_MOT_PWM_MODE) */
 110:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 111:.\Generated_Source\PSoC4/PWM_MOT.c ****         #if (PWM_MOT__PWM == PWM_MOT_PWM_MODE)
 112:.\Generated_Source\PSoC4/PWM_MOT.c ****             PWM_MOT_CONTROL_REG |= PWM_MOT_CTRL_PWM_PRESCALER;
 113:.\Generated_Source\PSoC4/PWM_MOT.c ****         #endif  /* (PWM_MOT__PWM == PWM_MOT_PWM_MODE) */
 114:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 115:.\Generated_Source\PSoC4/PWM_MOT.c ****         /* Set values from customizer to CTRL1 */
 116:.\Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_TRIG_CONTROL1_REG  = PWM_MOT_PWM_SIGNALS_MODES;
 117:.\Generated_Source\PSoC4/PWM_MOT.c ****     
 118:.\Generated_Source\PSoC4/PWM_MOT.c ****         /* Set values from customizer to INTR */
 119:.\Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_SetInterruptMode(PWM_MOT_PWM_INTERRUPT_MASK);
 120:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 121:.\Generated_Source\PSoC4/PWM_MOT.c ****         /* Set values from customizer to CTRL2 */
 122:.\Generated_Source\PSoC4/PWM_MOT.c ****         #if (PWM_MOT__PWM_PR == PWM_MOT_PWM_MODE)
 123:.\Generated_Source\PSoC4/PWM_MOT.c ****             PWM_MOT_TRIG_CONTROL2_REG =
 124:.\Generated_Source\PSoC4/PWM_MOT.c ****                     (PWM_MOT_CC_MATCH_NO_CHANGE    |
 125:.\Generated_Source\PSoC4/PWM_MOT.c ****                     PWM_MOT_OVERLOW_NO_CHANGE      |
 126:.\Generated_Source\PSoC4/PWM_MOT.c ****                     PWM_MOT_UNDERFLOW_NO_CHANGE);
 127:.\Generated_Source\PSoC4/PWM_MOT.c ****         #else
 128:.\Generated_Source\PSoC4/PWM_MOT.c ****             #if (PWM_MOT__LEFT == PWM_MOT_PWM_ALIGN)
 129:.\Generated_Source\PSoC4/PWM_MOT.c ****                 PWM_MOT_TRIG_CONTROL2_REG = PWM_MOT_PWM_MODE_LEFT;
 130:.\Generated_Source\PSoC4/PWM_MOT.c ****             #endif  /* ( PWM_MOT_PWM_LEFT == PWM_MOT_PWM_ALIGN) */
 131:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 132:.\Generated_Source\PSoC4/PWM_MOT.c ****             #if (PWM_MOT__RIGHT == PWM_MOT_PWM_ALIGN)
 133:.\Generated_Source\PSoC4/PWM_MOT.c ****                 PWM_MOT_TRIG_CONTROL2_REG = PWM_MOT_PWM_MODE_RIGHT;
 134:.\Generated_Source\PSoC4/PWM_MOT.c ****             #endif  /* ( PWM_MOT_PWM_RIGHT == PWM_MOT_PWM_ALIGN) */
 135:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 136:.\Generated_Source\PSoC4/PWM_MOT.c ****             #if (PWM_MOT__CENTER == PWM_MOT_PWM_ALIGN)
 137:.\Generated_Source\PSoC4/PWM_MOT.c ****                 PWM_MOT_TRIG_CONTROL2_REG = PWM_MOT_PWM_MODE_CENTER;
 138:.\Generated_Source\PSoC4/PWM_MOT.c ****             #endif  /* ( PWM_MOT_PWM_CENTER == PWM_MOT_PWM_ALIGN) */
 139:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 140:.\Generated_Source\PSoC4/PWM_MOT.c ****             #if (PWM_MOT__ASYMMETRIC == PWM_MOT_PWM_ALIGN)
 141:.\Generated_Source\PSoC4/PWM_MOT.c ****                 PWM_MOT_TRIG_CONTROL2_REG = PWM_MOT_PWM_MODE_ASYM;
 142:.\Generated_Source\PSoC4/PWM_MOT.c ****             #endif  /* (PWM_MOT__ASYMMETRIC == PWM_MOT_PWM_ALIGN) */
 143:.\Generated_Source\PSoC4/PWM_MOT.c ****         #endif  /* (PWM_MOT__PWM_PR == PWM_MOT_PWM_MODE) */
 144:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 145:.\Generated_Source\PSoC4/PWM_MOT.c ****         /* Set other values from customizer */
 146:.\Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_WritePeriod(PWM_MOT_PWM_PERIOD_VALUE );
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 4


 147:.\Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_WriteCompare(PWM_MOT_PWM_COMPARE_VALUE);
 148:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 149:.\Generated_Source\PSoC4/PWM_MOT.c ****         #if (1u == PWM_MOT_PWM_COMPARE_SWAP)
 150:.\Generated_Source\PSoC4/PWM_MOT.c ****             PWM_MOT_SetCompareSwap(1u);
 151:.\Generated_Source\PSoC4/PWM_MOT.c ****             PWM_MOT_WriteCompareBuf(PWM_MOT_PWM_COMPARE_BUF_VALUE);
 152:.\Generated_Source\PSoC4/PWM_MOT.c ****         #endif  /* (1u == PWM_MOT_PWM_COMPARE_SWAP) */
 153:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 154:.\Generated_Source\PSoC4/PWM_MOT.c ****         #if (1u == PWM_MOT_PWM_PERIOD_SWAP)
 155:.\Generated_Source\PSoC4/PWM_MOT.c ****             PWM_MOT_SetPeriodSwap(1u);
 156:.\Generated_Source\PSoC4/PWM_MOT.c ****             PWM_MOT_WritePeriodBuf(PWM_MOT_PWM_PERIOD_BUF_VALUE);
 157:.\Generated_Source\PSoC4/PWM_MOT.c ****         #endif  /* (1u == PWM_MOT_PWM_PERIOD_SWAP) */
 158:.\Generated_Source\PSoC4/PWM_MOT.c ****     #endif  /* (PWM_MOT__PWM_SEL == PWM_MOT_CONFIG) */
 159:.\Generated_Source\PSoC4/PWM_MOT.c ****     
 160:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 161:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 162:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 163:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_Enable
 165:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 166:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 167:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 168:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Enables the PWM_MOT.
 169:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 170:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 171:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
 172:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 173:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 174:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
 175:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 176:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 177:.\Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_Enable(void)
 178:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 179:.\Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 180:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 181:.\Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
 182:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_BLOCK_CONTROL_REG |= PWM_MOT_MASK;
 183:.\Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
 184:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 185:.\Generated_Source\PSoC4/PWM_MOT.c ****     /* Start Timer or PWM if start input is absent */
 186:.\Generated_Source\PSoC4/PWM_MOT.c ****     #if (PWM_MOT__PWM_SEL == PWM_MOT_CONFIG)
 187:.\Generated_Source\PSoC4/PWM_MOT.c ****         #if (0u == PWM_MOT_PWM_START_SIGNAL_PRESENT)
 188:.\Generated_Source\PSoC4/PWM_MOT.c ****             PWM_MOT_TriggerCommand(PWM_MOT_MASK, PWM_MOT_CMD_START);
 189:.\Generated_Source\PSoC4/PWM_MOT.c ****         #endif /* (0u == PWM_MOT_PWM_START_SIGNAL_PRESENT) */
 190:.\Generated_Source\PSoC4/PWM_MOT.c ****     #endif /* (PWM_MOT__PWM_SEL == PWM_MOT_CONFIG) */
 191:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 192:.\Generated_Source\PSoC4/PWM_MOT.c ****     #if (PWM_MOT__TIMER == PWM_MOT_CONFIG)
 193:.\Generated_Source\PSoC4/PWM_MOT.c ****         #if (0u == PWM_MOT_TC_START_SIGNAL_PRESENT)
 194:.\Generated_Source\PSoC4/PWM_MOT.c ****             PWM_MOT_TriggerCommand(PWM_MOT_MASK, PWM_MOT_CMD_START);
 195:.\Generated_Source\PSoC4/PWM_MOT.c ****         #endif /* (0u == PWM_MOT_TC_START_SIGNAL_PRESENT) */
 196:.\Generated_Source\PSoC4/PWM_MOT.c ****     #endif /* (PWM_MOT__TIMER == PWM_MOT_CONFIG) */
 197:.\Generated_Source\PSoC4/PWM_MOT.c ****     
 198:.\Generated_Source\PSoC4/PWM_MOT.c ****     #if (PWM_MOT__QUAD == PWM_MOT_CONFIG)
 199:.\Generated_Source\PSoC4/PWM_MOT.c ****         #if (0u != PWM_MOT_QUAD_AUTO_START)
 200:.\Generated_Source\PSoC4/PWM_MOT.c ****             PWM_MOT_TriggerCommand(PWM_MOT_MASK, PWM_MOT_CMD_RELOAD);
 201:.\Generated_Source\PSoC4/PWM_MOT.c ****         #endif /* (0u != PWM_MOT_QUAD_AUTO_START) */
 202:.\Generated_Source\PSoC4/PWM_MOT.c ****     #endif  /* (PWM_MOT__QUAD == PWM_MOT_CONFIG) */
 203:.\Generated_Source\PSoC4/PWM_MOT.c **** }
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 5


 204:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 205:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 206:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 207:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_Start
 208:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 209:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 210:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 211:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Initializes the PWM_MOT with default customizer
 212:.\Generated_Source\PSoC4/PWM_MOT.c **** *  values when called the first time and enables the PWM_MOT.
 213:.\Generated_Source\PSoC4/PWM_MOT.c **** *  For subsequent calls the configuration is left unchanged and the component is
 214:.\Generated_Source\PSoC4/PWM_MOT.c **** *  just enabled.
 215:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 216:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 217:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
 218:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 219:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 220:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
 221:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 222:.\Generated_Source\PSoC4/PWM_MOT.c **** * Global variables:
 223:.\Generated_Source\PSoC4/PWM_MOT.c **** *  PWM_MOT_initVar: global variable is used to indicate initial
 224:.\Generated_Source\PSoC4/PWM_MOT.c **** *  configuration of this component.  The variable is initialized to zero and set
 225:.\Generated_Source\PSoC4/PWM_MOT.c **** *  to 1 the first time PWM_MOT_Start() is called. This allows
 226:.\Generated_Source\PSoC4/PWM_MOT.c **** *  enabling/disabling a component without re-initialization in all subsequent
 227:.\Generated_Source\PSoC4/PWM_MOT.c **** *  calls to the PWM_MOT_Start() routine.
 228:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 229:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 230:.\Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_Start(void)
 231:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 232:.\Generated_Source\PSoC4/PWM_MOT.c ****     if (0u == PWM_MOT_initVar)
 233:.\Generated_Source\PSoC4/PWM_MOT.c ****     {
 234:.\Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_Init();
 235:.\Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_initVar = 1u;
 236:.\Generated_Source\PSoC4/PWM_MOT.c ****     }
 237:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 238:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_Enable();
 239:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 240:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 241:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 242:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 243:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_Stop
 244:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 245:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 246:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 247:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Disables the PWM_MOT.
 248:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 249:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 250:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
 251:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 252:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 253:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
 254:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 255:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 256:.\Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_Stop(void)
 257:.\Generated_Source\PSoC4/PWM_MOT.c **** {
  26              		.loc 1 257 0
  27              		.cfi_startproc
  28 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 6


  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 3, -8
  31              		.cfi_offset 14, -4
 258:.\Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 259:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 260:.\Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
  32              		.loc 1 260 0
  33 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  34              	.LVL0:
 261:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 262:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_BLOCK_CONTROL_REG &= (uint32)~PWM_MOT_MASK;
  35              		.loc 1 262 0
  36 0006 044A     		ldr	r2, .L2
  37 0008 1368     		ldr	r3, [r2]
  38 000a 0221     		mov	r1, #2
  39 000c 8B43     		bic	r3, r1
  40 000e 1360     		str	r3, [r2]
 263:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 264:.\Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
  41              		.loc 1 264 0
  42 0010 FFF7FEFF 		bl	CyExitCriticalSection
  43              	.LVL1:
 265:.\Generated_Source\PSoC4/PWM_MOT.c **** }
  44              		.loc 1 265 0
  45              		@ sp needed
  46 0014 08BD     		pop	{r3, pc}
  47              	.L3:
  48 0016 C046     		.align	2
  49              	.L2:
  50 0018 00000540 		.word	1074069504
  51              		.cfi_endproc
  52              	.LFE3:
  53              		.size	PWM_MOT_Stop, .-PWM_MOT_Stop
  54              		.section	.text.PWM_MOT_SetMode,"ax",%progbits
  55              		.align	2
  56              		.global	PWM_MOT_SetMode
  57              		.code	16
  58              		.thumb_func
  59              		.type	PWM_MOT_SetMode, %function
  60              	PWM_MOT_SetMode:
  61              	.LFB4:
 266:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 267:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 268:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 269:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetMode
 270:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 271:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 272:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 273:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Sets the operation mode of the PWM_MOT. This function is used when
 274:.\Generated_Source\PSoC4/PWM_MOT.c **** *  configured as a generic PWM_MOT and the actual mode of operation is
 275:.\Generated_Source\PSoC4/PWM_MOT.c **** *  set at runtime. The mode must be set while the component is disabled.
 276:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 277:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 278:.\Generated_Source\PSoC4/PWM_MOT.c **** *  mode: Mode for the PWM_MOT to operate in
 279:.\Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
 280:.\Generated_Source\PSoC4/PWM_MOT.c **** *   - PWM_MOT_MODE_TIMER_COMPARE - Timer / Counter with
 281:.\Generated_Source\PSoC4/PWM_MOT.c **** *                                                 compare capability
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 7


 282:.\Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_MODE_TIMER_CAPTURE - Timer / Counter with
 283:.\Generated_Source\PSoC4/PWM_MOT.c **** *                                                 capture capability
 284:.\Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_MODE_QUAD - Quadrature decoder
 285:.\Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_MODE_PWM - PWM
 286:.\Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_MODE_PWM_DT - PWM with dead time
 287:.\Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_MODE_PWM_PR - PWM with pseudo random capability
 288:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 289:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 290:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
 291:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 292:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 293:.\Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetMode(uint32 mode)
 294:.\Generated_Source\PSoC4/PWM_MOT.c **** {
  62              		.loc 1 294 0
  63              		.cfi_startproc
  64              	.LVL2:
  65 0000 10B5     		push	{r4, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 4, -8
  68              		.cfi_offset 14, -4
  69 0002 041C     		mov	r4, r0
 295:.\Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 296:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 297:.\Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
  70              		.loc 1 297 0
  71 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  72              	.LVL3:
 298:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 299:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG &= (uint32)~PWM_MOT_MODE_MASK;
  73              		.loc 1 299 0
  74 0008 054B     		ldr	r3, .L5
  75 000a 1968     		ldr	r1, [r3]
  76 000c 054A     		ldr	r2, .L5+4
  77 000e 0A40     		and	r2, r1
  78 0010 1A60     		str	r2, [r3]
 300:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= mode;
  79              		.loc 1 300 0
  80 0012 1A68     		ldr	r2, [r3]
  81 0014 1443     		orr	r4, r2
  82              	.LVL4:
  83 0016 1C60     		str	r4, [r3]
 301:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 302:.\Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
  84              		.loc 1 302 0
  85 0018 FFF7FEFF 		bl	CyExitCriticalSection
  86              	.LVL5:
 303:.\Generated_Source\PSoC4/PWM_MOT.c **** }
  87              		.loc 1 303 0
  88              		@ sp needed
  89 001c 10BD     		pop	{r4, pc}
  90              	.L6:
  91 001e C046     		.align	2
  92              	.L5:
  93 0020 40010540 		.word	1074069824
  94 0024 FFFFFFF8 		.word	-117440513
  95              		.cfi_endproc
  96              	.LFE4:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 8


  97              		.size	PWM_MOT_SetMode, .-PWM_MOT_SetMode
  98              		.section	.text.PWM_MOT_SetQDMode,"ax",%progbits
  99              		.align	2
 100              		.global	PWM_MOT_SetQDMode
 101              		.code	16
 102              		.thumb_func
 103              		.type	PWM_MOT_SetQDMode, %function
 104              	PWM_MOT_SetQDMode:
 105              	.LFB5:
 304:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 305:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 306:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 307:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetQDMode
 308:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 309:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 310:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 311:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 312:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 313:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 314:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 315:.\Generated_Source\PSoC4/PWM_MOT.c **** *  qdMode: Quadrature Decoder mode
 316:.\Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
 317:.\Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_MODE_X1 - Counts on phi 1 rising
 318:.\Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_MODE_X2 - Counts on both edges of phi1 (2x faster)
 319:.\Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_MODE_X4 - Counts on both edges of phi1 and phi2
 320:.\Generated_Source\PSoC4/PWM_MOT.c **** *                                        (4x faster)
 321:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 322:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 323:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
 324:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 325:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 326:.\Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetQDMode(uint32 qdMode)
 327:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 106              		.loc 1 327 0
 107              		.cfi_startproc
 108              	.LVL6:
 109 0000 10B5     		push	{r4, lr}
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 4, -8
 112              		.cfi_offset 14, -4
 113 0002 041C     		mov	r4, r0
 328:.\Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 329:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 330:.\Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
 114              		.loc 1 330 0
 115 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 116              	.LVL7:
 331:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 332:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG &= (uint32)~PWM_MOT_QUAD_MODE_MASK;
 117              		.loc 1 332 0
 118 0008 054B     		ldr	r3, .L8
 119 000a 1968     		ldr	r1, [r3]
 120 000c 054A     		ldr	r2, .L8+4
 121 000e 0A40     		and	r2, r1
 122 0010 1A60     		str	r2, [r3]
 333:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= qdMode;
 123              		.loc 1 333 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 9


 124 0012 1A68     		ldr	r2, [r3]
 125 0014 1443     		orr	r4, r2
 126              	.LVL8:
 127 0016 1C60     		str	r4, [r3]
 334:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 335:.\Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
 128              		.loc 1 335 0
 129 0018 FFF7FEFF 		bl	CyExitCriticalSection
 130              	.LVL9:
 336:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 131              		.loc 1 336 0
 132              		@ sp needed
 133 001c 10BD     		pop	{r4, pc}
 134              	.L9:
 135 001e C046     		.align	2
 136              	.L8:
 137 0020 40010540 		.word	1074069824
 138 0024 FFFF8FFF 		.word	-7340033
 139              		.cfi_endproc
 140              	.LFE5:
 141              		.size	PWM_MOT_SetQDMode, .-PWM_MOT_SetQDMode
 142              		.section	.text.PWM_MOT_SetPrescaler,"ax",%progbits
 143              		.align	2
 144              		.global	PWM_MOT_SetPrescaler
 145              		.code	16
 146              		.thumb_func
 147              		.type	PWM_MOT_SetPrescaler, %function
 148              	PWM_MOT_SetPrescaler:
 149              	.LFB6:
 337:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 338:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 339:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 340:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetPrescaler
 341:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 342:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 343:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 344:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 345:.\Generated_Source\PSoC4/PWM_MOT.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 346:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 347:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 348:.\Generated_Source\PSoC4/PWM_MOT.c **** *  prescaler: Prescaler divider value
 349:.\Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
 350:.\Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 351:.\Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_PRESCALE_DIVBY2    - Divide by 2
 352:.\Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_PRESCALE_DIVBY4    - Divide by 4
 353:.\Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_PRESCALE_DIVBY8    - Divide by 8
 354:.\Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_PRESCALE_DIVBY16   - Divide by 16
 355:.\Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_PRESCALE_DIVBY32   - Divide by 32
 356:.\Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_PRESCALE_DIVBY64   - Divide by 64
 357:.\Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_PRESCALE_DIVBY128  - Divide by 128
 358:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 359:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 360:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
 361:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 362:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 363:.\Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetPrescaler(uint32 prescaler)
 364:.\Generated_Source\PSoC4/PWM_MOT.c **** {
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 10


 150              		.loc 1 364 0
 151              		.cfi_startproc
 152              	.LVL10:
 153 0000 10B5     		push	{r4, lr}
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 4, -8
 156              		.cfi_offset 14, -4
 157 0002 041C     		mov	r4, r0
 365:.\Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 366:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 367:.\Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
 158              		.loc 1 367 0
 159 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 160              	.LVL11:
 368:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 369:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG &= (uint32)~PWM_MOT_PRESCALER_MASK;
 161              		.loc 1 369 0
 162 0008 054B     		ldr	r3, .L11
 163 000a 1968     		ldr	r1, [r3]
 164 000c 054A     		ldr	r2, .L11+4
 165 000e 0A40     		and	r2, r1
 166 0010 1A60     		str	r2, [r3]
 370:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= prescaler;
 167              		.loc 1 370 0
 168 0012 1A68     		ldr	r2, [r3]
 169 0014 1443     		orr	r4, r2
 170              	.LVL12:
 171 0016 1C60     		str	r4, [r3]
 371:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 372:.\Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
 172              		.loc 1 372 0
 173 0018 FFF7FEFF 		bl	CyExitCriticalSection
 174              	.LVL13:
 373:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 175              		.loc 1 373 0
 176              		@ sp needed
 177 001c 10BD     		pop	{r4, pc}
 178              	.L12:
 179 001e C046     		.align	2
 180              	.L11:
 181 0020 40010540 		.word	1074069824
 182 0024 FF00FFFF 		.word	-65281
 183              		.cfi_endproc
 184              	.LFE6:
 185              		.size	PWM_MOT_SetPrescaler, .-PWM_MOT_SetPrescaler
 186              		.section	.text.PWM_MOT_SetOneShot,"ax",%progbits
 187              		.align	2
 188              		.global	PWM_MOT_SetOneShot
 189              		.code	16
 190              		.thumb_func
 191              		.type	PWM_MOT_SetOneShot, %function
 192              	PWM_MOT_SetOneShot:
 193              	.LFB7:
 374:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 375:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 376:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 377:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetOneShot
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 11


 378:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 379:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 380:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 381:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Writes the register that controls whether the PWM_MOT runs
 382:.\Generated_Source\PSoC4/PWM_MOT.c **** *  continuously or stops when terminal count is reached.  By default the
 383:.\Generated_Source\PSoC4/PWM_MOT.c **** *  PWM_MOT operates in the continuous mode.
 384:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 385:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 386:.\Generated_Source\PSoC4/PWM_MOT.c **** *  oneShotEnable
 387:.\Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
 388:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - 0 - Continuous
 389:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - 1 - Enable One Shot
 390:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 391:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 392:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
 393:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 394:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 395:.\Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetOneShot(uint32 oneShotEnable)
 396:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 194              		.loc 1 396 0
 195              		.cfi_startproc
 196              	.LVL14:
 197 0000 10B5     		push	{r4, lr}
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 4, -8
 200              		.cfi_offset 14, -4
 201 0002 041C     		mov	r4, r0
 397:.\Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 398:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 399:.\Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
 202              		.loc 1 399 0
 203 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 204              	.LVL15:
 400:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 401:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG &= (uint32)~PWM_MOT_ONESHOT_MASK;
 205              		.loc 1 401 0
 206 0008 064B     		ldr	r3, .L14
 207 000a 1968     		ldr	r1, [r3]
 208 000c 064A     		ldr	r2, .L14+4
 209 000e 0A40     		and	r2, r1
 210 0010 1A60     		str	r2, [r3]
 402:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_MOT_1BIT_MASK) <<
 211              		.loc 1 402 0
 212 0012 1A68     		ldr	r2, [r3]
 213 0014 0121     		mov	r1, #1
 214 0016 0C40     		and	r4, r1
 215              	.LVL16:
 216 0018 A404     		lsl	r4, r4, #18
 217 001a 1443     		orr	r4, r2
 218 001c 1C60     		str	r4, [r3]
 403:.\Generated_Source\PSoC4/PWM_MOT.c ****                                                                PWM_MOT_ONESHOT_SHIFT));
 404:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 405:.\Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
 219              		.loc 1 405 0
 220 001e FFF7FEFF 		bl	CyExitCriticalSection
 221              	.LVL17:
 406:.\Generated_Source\PSoC4/PWM_MOT.c **** }
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 12


 222              		.loc 1 406 0
 223              		@ sp needed
 224 0022 10BD     		pop	{r4, pc}
 225              	.L15:
 226              		.align	2
 227              	.L14:
 228 0024 40010540 		.word	1074069824
 229 0028 FFFFFBFF 		.word	-262145
 230              		.cfi_endproc
 231              	.LFE7:
 232              		.size	PWM_MOT_SetOneShot, .-PWM_MOT_SetOneShot
 233              		.section	.text.PWM_MOT_SetPWMMode,"ax",%progbits
 234              		.align	2
 235              		.global	PWM_MOT_SetPWMMode
 236              		.code	16
 237              		.thumb_func
 238              		.type	PWM_MOT_SetPWMMode, %function
 239              	PWM_MOT_SetPWMMode:
 240              	.LFB8:
 407:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 408:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 409:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 410:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetPWMMode
 411:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 412:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 413:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 414:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Writes the control register that determines what mode of operation the PWM
 415:.\Generated_Source\PSoC4/PWM_MOT.c **** *  output lines are driven in.  There is a setting for what to do on a
 416:.\Generated_Source\PSoC4/PWM_MOT.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 417:.\Generated_Source\PSoC4/PWM_MOT.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 418:.\Generated_Source\PSoC4/PWM_MOT.c **** *  the mode.
 419:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 420:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 421:.\Generated_Source\PSoC4/PWM_MOT.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 422:.\Generated_Source\PSoC4/PWM_MOT.c **** *  for each of the three or use one of the preconfigured PWM settings.
 423:.\Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
 424:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - CC_MATCH_SET        - Set on comparison match
 425:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 426:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 427:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 428:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - OVERLOW_SET         - Set on overflow
 429:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 430:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - OVERLOW_INVERT      - Invert on overflow
 431:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 432:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - UNDERFLOW_SET       - Set on underflow
 433:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 434:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 435:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 436:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 437:.\Generated_Source\PSoC4/PWM_MOT.c **** *                             with up counting mode
 438:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 439:.\Generated_Source\PSoC4/PWM_MOT.c **** *                             with down counting mode
 440:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 441:.\Generated_Source\PSoC4/PWM_MOT.c **** *                             combined with up/down 0 mode
 442:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 443:.\Generated_Source\PSoC4/PWM_MOT.c **** *                             with up/down 1 mode
 444:.\Generated_Source\PSoC4/PWM_MOT.c **** *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 13


 445:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 446:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
 447:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 448:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 449:.\Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetPWMMode(uint32 modeMask)
 450:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 241              		.loc 1 450 0
 242              		.cfi_startproc
 243              	.LVL18:
 451:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_TRIG_CONTROL2_REG = (modeMask & PWM_MOT_6BIT_MASK);
 244              		.loc 1 451 0
 245 0000 3F23     		mov	r3, #63
 246 0002 1840     		and	r0, r3
 247              	.LVL19:
 248 0004 014B     		ldr	r3, .L17
 249 0006 1860     		str	r0, [r3]
 452:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 250              		.loc 1 452 0
 251              		@ sp needed
 252 0008 7047     		bx	lr
 253              	.L18:
 254 000a C046     		.align	2
 255              	.L17:
 256 000c 68010540 		.word	1074069864
 257              		.cfi_endproc
 258              	.LFE8:
 259              		.size	PWM_MOT_SetPWMMode, .-PWM_MOT_SetPWMMode
 260              		.section	.text.PWM_MOT_SetPWMSyncKill,"ax",%progbits
 261              		.align	2
 262              		.global	PWM_MOT_SetPWMSyncKill
 263              		.code	16
 264              		.thumb_func
 265              		.type	PWM_MOT_SetPWMSyncKill, %function
 266              	PWM_MOT_SetPWMSyncKill:
 267              	.LFB9:
 453:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 454:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 455:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 456:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 457:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetPWMSyncKill
 458:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 459:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 460:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 461:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 462:.\Generated_Source\PSoC4/PWM_MOT.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 463:.\Generated_Source\PSoC4/PWM_MOT.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 464:.\Generated_Source\PSoC4/PWM_MOT.c **** *  and PWM with dead time modes.
 465:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 466:.\Generated_Source\PSoC4/PWM_MOT.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 467:.\Generated_Source\PSoC4/PWM_MOT.c **** *  signals until the next terminal count.
 468:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 469:.\Generated_Source\PSoC4/PWM_MOT.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 470:.\Generated_Source\PSoC4/PWM_MOT.c **** *  signals when the kill signal is present.  This mode should only be used
 471:.\Generated_Source\PSoC4/PWM_MOT.c **** *  when the kill signal (stop input) is configured in the pass through mode
 472:.\Generated_Source\PSoC4/PWM_MOT.c **** *  (Level sensitive signal).
 473:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 474:.\Generated_Source\PSoC4/PWM_MOT.c **** *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 14


 475:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 476:.\Generated_Source\PSoC4/PWM_MOT.c **** *  syncKillEnable
 477:.\Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
 478:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - 0 - Asynchronous
 479:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - 1 - Synchronous
 480:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 481:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 482:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
 483:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 484:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 485:.\Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetPWMSyncKill(uint32 syncKillEnable)
 486:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 268              		.loc 1 486 0
 269              		.cfi_startproc
 270              	.LVL20:
 271 0000 10B5     		push	{r4, lr}
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 4, -8
 274              		.cfi_offset 14, -4
 275 0002 041C     		mov	r4, r0
 487:.\Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 488:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 489:.\Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
 276              		.loc 1 489 0
 277 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 278              	.LVL21:
 490:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 491:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG &= (uint32)~PWM_MOT_PWM_SYNC_KILL_MASK;
 279              		.loc 1 491 0
 280 0008 064B     		ldr	r3, .L20
 281 000a 1A68     		ldr	r2, [r3]
 282 000c 0421     		mov	r1, #4
 283 000e 8A43     		bic	r2, r1
 284 0010 1A60     		str	r2, [r3]
 492:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_MOT_1BIT_MASK)  <<
 285              		.loc 1 492 0
 286 0012 1A68     		ldr	r2, [r3]
 287 0014 0339     		sub	r1, r1, #3
 288 0016 0C40     		and	r4, r1
 289              	.LVL22:
 290 0018 A400     		lsl	r4, r4, #2
 291 001a 1443     		orr	r4, r2
 292 001c 1C60     		str	r4, [r3]
 493:.\Generated_Source\PSoC4/PWM_MOT.c ****                                                PWM_MOT_PWM_SYNC_KILL_SHIFT));
 494:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 495:.\Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
 293              		.loc 1 495 0
 294 001e FFF7FEFF 		bl	CyExitCriticalSection
 295              	.LVL23:
 496:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 296              		.loc 1 496 0
 297              		@ sp needed
 298 0022 10BD     		pop	{r4, pc}
 299              	.L21:
 300              		.align	2
 301              	.L20:
 302 0024 40010540 		.word	1074069824
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 15


 303              		.cfi_endproc
 304              	.LFE9:
 305              		.size	PWM_MOT_SetPWMSyncKill, .-PWM_MOT_SetPWMSyncKill
 306              		.section	.text.PWM_MOT_SetPWMStopOnKill,"ax",%progbits
 307              		.align	2
 308              		.global	PWM_MOT_SetPWMStopOnKill
 309              		.code	16
 310              		.thumb_func
 311              		.type	PWM_MOT_SetPWMStopOnKill, %function
 312              	PWM_MOT_SetPWMStopOnKill:
 313              	.LFB10:
 497:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 498:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 499:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 500:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetPWMStopOnKill
 501:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 502:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 503:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 504:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 505:.\Generated_Source\PSoC4/PWM_MOT.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 506:.\Generated_Source\PSoC4/PWM_MOT.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 507:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 508:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 509:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 510:.\Generated_Source\PSoC4/PWM_MOT.c **** *  stopOnKillEnable
 511:.\Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
 512:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - 0 - Don't stop
 513:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - 1 - Stop
 514:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 515:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 516:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
 517:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 518:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 519:.\Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetPWMStopOnKill(uint32 stopOnKillEnable)
 520:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 314              		.loc 1 520 0
 315              		.cfi_startproc
 316              	.LVL24:
 317 0000 10B5     		push	{r4, lr}
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 4, -8
 320              		.cfi_offset 14, -4
 321 0002 041C     		mov	r4, r0
 521:.\Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 522:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 523:.\Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
 322              		.loc 1 523 0
 323 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 324              	.LVL25:
 524:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 525:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG &= (uint32)~PWM_MOT_PWM_STOP_KILL_MASK;
 325              		.loc 1 525 0
 326 0008 064B     		ldr	r3, .L23
 327 000a 1A68     		ldr	r2, [r3]
 328 000c 0821     		mov	r1, #8
 329 000e 8A43     		bic	r2, r1
 330 0010 1A60     		str	r2, [r3]
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 16


 526:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_MOT_1BIT_MASK)  <<
 331              		.loc 1 526 0
 332 0012 1A68     		ldr	r2, [r3]
 333 0014 0739     		sub	r1, r1, #7
 334 0016 0C40     		and	r4, r1
 335              	.LVL26:
 336 0018 E400     		lsl	r4, r4, #3
 337 001a 1443     		orr	r4, r2
 338 001c 1C60     		str	r4, [r3]
 527:.\Generated_Source\PSoC4/PWM_MOT.c ****                                                          PWM_MOT_PWM_STOP_KILL_SHIFT));
 528:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 529:.\Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
 339              		.loc 1 529 0
 340 001e FFF7FEFF 		bl	CyExitCriticalSection
 341              	.LVL27:
 530:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 342              		.loc 1 530 0
 343              		@ sp needed
 344 0022 10BD     		pop	{r4, pc}
 345              	.L24:
 346              		.align	2
 347              	.L23:
 348 0024 40010540 		.word	1074069824
 349              		.cfi_endproc
 350              	.LFE10:
 351              		.size	PWM_MOT_SetPWMStopOnKill, .-PWM_MOT_SetPWMStopOnKill
 352              		.section	.text.PWM_MOT_SetPWMDeadTime,"ax",%progbits
 353              		.align	2
 354              		.global	PWM_MOT_SetPWMDeadTime
 355              		.code	16
 356              		.thumb_func
 357              		.type	PWM_MOT_SetPWMDeadTime, %function
 358              	PWM_MOT_SetPWMDeadTime:
 359              	.LFB11:
 531:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 532:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 533:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 534:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetPWMDeadTime
 535:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 536:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 537:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 538:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Writes the dead time control value.  This value delays the rising edge of
 539:.\Generated_Source\PSoC4/PWM_MOT.c **** *  both the line and line_n signals the designated number of cycles resulting
 540:.\Generated_Source\PSoC4/PWM_MOT.c **** *  in both signals being inactive for that many cycles.  This functionality is
 541:.\Generated_Source\PSoC4/PWM_MOT.c **** *  only applicable to the PWM in the dead time mode.
 542:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 543:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 544:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 545:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Dead time to insert
 546:.\Generated_Source\PSoC4/PWM_MOT.c **** *   Values: 0 to 255
 547:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 548:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 549:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
 550:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 551:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 552:.\Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetPWMDeadTime(uint32 deadTime)
 553:.\Generated_Source\PSoC4/PWM_MOT.c **** {
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 17


 360              		.loc 1 553 0
 361              		.cfi_startproc
 362              	.LVL28:
 363 0000 10B5     		push	{r4, lr}
 364              		.cfi_def_cfa_offset 8
 365              		.cfi_offset 4, -8
 366              		.cfi_offset 14, -4
 367 0002 041C     		mov	r4, r0
 554:.\Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 555:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 556:.\Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
 368              		.loc 1 556 0
 369 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 370              	.LVL29:
 557:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 558:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG &= (uint32)~PWM_MOT_PRESCALER_MASK;
 371              		.loc 1 558 0
 372 0008 064B     		ldr	r3, .L26
 373 000a 1968     		ldr	r1, [r3]
 374 000c 064A     		ldr	r2, .L26+4
 375 000e 0A40     		and	r2, r1
 376 0010 1A60     		str	r2, [r3]
 559:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= ((uint32)((deadTime & PWM_MOT_8BIT_MASK) <<
 377              		.loc 1 559 0
 378 0012 1A68     		ldr	r2, [r3]
 379 0014 2406     		lsl	r4, r4, #24
 380              	.LVL30:
 381 0016 240C     		lsr	r4, r4, #16
 382 0018 1443     		orr	r4, r2
 383 001a 1C60     		str	r4, [r3]
 560:.\Generated_Source\PSoC4/PWM_MOT.c ****                                                           PWM_MOT_PRESCALER_SHIFT));
 561:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 562:.\Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
 384              		.loc 1 562 0
 385 001c FFF7FEFF 		bl	CyExitCriticalSection
 386              	.LVL31:
 563:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 387              		.loc 1 563 0
 388              		@ sp needed
 389 0020 10BD     		pop	{r4, pc}
 390              	.L27:
 391 0022 C046     		.align	2
 392              	.L26:
 393 0024 40010540 		.word	1074069824
 394 0028 FF00FFFF 		.word	-65281
 395              		.cfi_endproc
 396              	.LFE11:
 397              		.size	PWM_MOT_SetPWMDeadTime, .-PWM_MOT_SetPWMDeadTime
 398              		.section	.text.PWM_MOT_SetPWMInvert,"ax",%progbits
 399              		.align	2
 400              		.global	PWM_MOT_SetPWMInvert
 401              		.code	16
 402              		.thumb_func
 403              		.type	PWM_MOT_SetPWMInvert, %function
 404              	PWM_MOT_SetPWMInvert:
 405              	.LFB12:
 564:.\Generated_Source\PSoC4/PWM_MOT.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 18


 565:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 566:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 567:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetPWMInvert
 568:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 569:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 570:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 571:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Writes the bits that control whether the line and line_n outputs are
 572:.\Generated_Source\PSoC4/PWM_MOT.c **** *  inverted from their normal output values.  This functionality is only
 573:.\Generated_Source\PSoC4/PWM_MOT.c **** *  applicable to the three PWM modes.
 574:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 575:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 576:.\Generated_Source\PSoC4/PWM_MOT.c **** *  mask: Mask of outputs to invert.
 577:.\Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
 578:.\Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_INVERT_LINE   - Inverts the line output
 579:.\Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_INVERT_LINE_N - Inverts the line_n output
 580:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 581:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 582:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
 583:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 584:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 585:.\Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetPWMInvert(uint32 mask)
 586:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 406              		.loc 1 586 0
 407              		.cfi_startproc
 408              	.LVL32:
 409 0000 10B5     		push	{r4, lr}
 410              		.cfi_def_cfa_offset 8
 411              		.cfi_offset 4, -8
 412              		.cfi_offset 14, -4
 413 0002 041C     		mov	r4, r0
 587:.\Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 588:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 589:.\Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
 414              		.loc 1 589 0
 415 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 416              	.LVL33:
 590:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 591:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG &= (uint32)~PWM_MOT_INV_OUT_MASK;
 417              		.loc 1 591 0
 418 0008 054B     		ldr	r3, .L29
 419 000a 1968     		ldr	r1, [r3]
 420 000c 054A     		ldr	r2, .L29+4
 421 000e 0A40     		and	r2, r1
 422 0010 1A60     		str	r2, [r3]
 592:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= mask;
 423              		.loc 1 592 0
 424 0012 1A68     		ldr	r2, [r3]
 425 0014 1443     		orr	r4, r2
 426              	.LVL34:
 427 0016 1C60     		str	r4, [r3]
 593:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 594:.\Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
 428              		.loc 1 594 0
 429 0018 FFF7FEFF 		bl	CyExitCriticalSection
 430              	.LVL35:
 595:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 431              		.loc 1 595 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 19


 432              		@ sp needed
 433 001c 10BD     		pop	{r4, pc}
 434              	.L30:
 435 001e C046     		.align	2
 436              	.L29:
 437 0020 40010540 		.word	1074069824
 438 0024 FFFFCFFF 		.word	-3145729
 439              		.cfi_endproc
 440              	.LFE12:
 441              		.size	PWM_MOT_SetPWMInvert, .-PWM_MOT_SetPWMInvert
 442              		.section	.text.PWM_MOT_WriteCounter,"ax",%progbits
 443              		.align	2
 444              		.global	PWM_MOT_WriteCounter
 445              		.code	16
 446              		.thumb_func
 447              		.type	PWM_MOT_WriteCounter, %function
 448              	PWM_MOT_WriteCounter:
 449              	.LFB13:
 596:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 597:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 598:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 599:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 600:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_WriteCounter
 601:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 602:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 603:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 604:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 605:.\Generated_Source\PSoC4/PWM_MOT.c **** *  setting the counter (not the period) to the value written. It is not
 606:.\Generated_Source\PSoC4/PWM_MOT.c **** *  advised to write to this field when the counter is running.
 607:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 608:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 609:.\Generated_Source\PSoC4/PWM_MOT.c **** *  count: value to write
 610:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 611:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 612:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
 613:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 614:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 615:.\Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_WriteCounter(uint32 count)
 616:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 450              		.loc 1 616 0
 451              		.cfi_startproc
 452              	.LVL36:
 617:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_COUNTER_REG = (count & PWM_MOT_16BIT_MASK);
 453              		.loc 1 617 0
 454 0000 0004     		lsl	r0, r0, #16
 455              	.LVL37:
 456 0002 000C     		lsr	r0, r0, #16
 457 0004 014B     		ldr	r3, .L32
 458 0006 1860     		str	r0, [r3]
 618:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 459              		.loc 1 618 0
 460              		@ sp needed
 461 0008 7047     		bx	lr
 462              	.L33:
 463 000a C046     		.align	2
 464              	.L32:
 465 000c 48010540 		.word	1074069832
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 20


 466              		.cfi_endproc
 467              	.LFE13:
 468              		.size	PWM_MOT_WriteCounter, .-PWM_MOT_WriteCounter
 469              		.section	.text.PWM_MOT_ReadCounter,"ax",%progbits
 470              		.align	2
 471              		.global	PWM_MOT_ReadCounter
 472              		.code	16
 473              		.thumb_func
 474              		.type	PWM_MOT_ReadCounter, %function
 475              	PWM_MOT_ReadCounter:
 476              	.LFB14:
 619:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 620:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 621:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 622:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_ReadCounter
 623:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 625:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 626:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Reads the current counter value.
 627:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 628:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 629:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
 630:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 631:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 632:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Current counter value
 633:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 634:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 635:.\Generated_Source\PSoC4/PWM_MOT.c **** uint32 PWM_MOT_ReadCounter(void)
 636:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 477              		.loc 1 636 0
 478              		.cfi_startproc
 637:.\Generated_Source\PSoC4/PWM_MOT.c ****     return (PWM_MOT_COUNTER_REG & PWM_MOT_16BIT_MASK);
 479              		.loc 1 637 0
 480 0000 024B     		ldr	r3, .L35
 481 0002 1868     		ldr	r0, [r3]
 482 0004 0004     		lsl	r0, r0, #16
 483 0006 000C     		lsr	r0, r0, #16
 638:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 484              		.loc 1 638 0
 485              		@ sp needed
 486 0008 7047     		bx	lr
 487              	.L36:
 488 000a C046     		.align	2
 489              	.L35:
 490 000c 48010540 		.word	1074069832
 491              		.cfi_endproc
 492              	.LFE14:
 493              		.size	PWM_MOT_ReadCounter, .-PWM_MOT_ReadCounter
 494              		.section	.text.PWM_MOT_SetCounterMode,"ax",%progbits
 495              		.align	2
 496              		.global	PWM_MOT_SetCounterMode
 497              		.code	16
 498              		.thumb_func
 499              		.type	PWM_MOT_SetCounterMode, %function
 500              	PWM_MOT_SetCounterMode:
 501              	.LFB15:
 639:.\Generated_Source\PSoC4/PWM_MOT.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 21


 640:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 641:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 642:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetCounterMode
 643:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 644:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 645:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 646:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 647:.\Generated_Source\PSoC4/PWM_MOT.c **** *  and the PWM with a pseudo random output.
 648:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 649:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 650:.\Generated_Source\PSoC4/PWM_MOT.c **** *  counterMode: Enumerated counter type values
 651:.\Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
 652:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_COUNT_UP       - Counts up
 653:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_COUNT_DOWN     - Counts down
 654:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_COUNT_UPDOWN0  - Counts up and down. Terminal count
 655:.\Generated_Source\PSoC4/PWM_MOT.c **** *                                         generated when counter reaches 0
 656:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_COUNT_UPDOWN1  - Counts up and down. Terminal count
 657:.\Generated_Source\PSoC4/PWM_MOT.c **** *                                         generated both when counter reaches 0
 658:.\Generated_Source\PSoC4/PWM_MOT.c **** *                                         and period
 659:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 660:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 661:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
 662:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 663:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 664:.\Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetCounterMode(uint32 counterMode)
 665:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 502              		.loc 1 665 0
 503              		.cfi_startproc
 504              	.LVL38:
 505 0000 10B5     		push	{r4, lr}
 506              		.cfi_def_cfa_offset 8
 507              		.cfi_offset 4, -8
 508              		.cfi_offset 14, -4
 509 0002 041C     		mov	r4, r0
 666:.\Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 667:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 668:.\Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
 510              		.loc 1 668 0
 511 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 512              	.LVL39:
 669:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 670:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG &= (uint32)~PWM_MOT_UPDOWN_MASK;
 513              		.loc 1 670 0
 514 0008 054B     		ldr	r3, .L38
 515 000a 1968     		ldr	r1, [r3]
 516 000c 054A     		ldr	r2, .L38+4
 517 000e 0A40     		and	r2, r1
 518 0010 1A60     		str	r2, [r3]
 671:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= counterMode;
 519              		.loc 1 671 0
 520 0012 1A68     		ldr	r2, [r3]
 521 0014 1443     		orr	r4, r2
 522              	.LVL40:
 523 0016 1C60     		str	r4, [r3]
 672:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 673:.\Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
 524              		.loc 1 673 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 22


 525 0018 FFF7FEFF 		bl	CyExitCriticalSection
 526              	.LVL41:
 674:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 527              		.loc 1 674 0
 528              		@ sp needed
 529 001c 10BD     		pop	{r4, pc}
 530              	.L39:
 531 001e C046     		.align	2
 532              	.L38:
 533 0020 40010540 		.word	1074069824
 534 0024 FFFFFCFF 		.word	-196609
 535              		.cfi_endproc
 536              	.LFE15:
 537              		.size	PWM_MOT_SetCounterMode, .-PWM_MOT_SetCounterMode
 538              		.section	.text.PWM_MOT_WritePeriod,"ax",%progbits
 539              		.align	2
 540              		.global	PWM_MOT_WritePeriod
 541              		.code	16
 542              		.thumb_func
 543              		.type	PWM_MOT_WritePeriod, %function
 544              	PWM_MOT_WritePeriod:
 545              	.LFB16:
 675:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 676:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 677:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 678:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_WritePeriod
 679:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 680:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 681:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 682:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Writes the 16 bit period register with the new period value.
 683:.\Generated_Source\PSoC4/PWM_MOT.c **** *  To cause the counter to count for N cycles this register should be written
 684:.\Generated_Source\PSoC4/PWM_MOT.c **** *  with N-1 (counts from 0 to period inclusive).
 685:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 686:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 687:.\Generated_Source\PSoC4/PWM_MOT.c **** *  period: Period value
 688:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 689:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 690:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
 691:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 692:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 693:.\Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_WritePeriod(uint32 period)
 694:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 546              		.loc 1 694 0
 547              		.cfi_startproc
 548              	.LVL42:
 695:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_PERIOD_REG = (period & PWM_MOT_16BIT_MASK);
 549              		.loc 1 695 0
 550 0000 0004     		lsl	r0, r0, #16
 551              	.LVL43:
 552 0002 000C     		lsr	r0, r0, #16
 553 0004 014B     		ldr	r3, .L41
 554 0006 1860     		str	r0, [r3]
 696:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 555              		.loc 1 696 0
 556              		@ sp needed
 557 0008 7047     		bx	lr
 558              	.L42:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 23


 559 000a C046     		.align	2
 560              	.L41:
 561 000c 54010540 		.word	1074069844
 562              		.cfi_endproc
 563              	.LFE16:
 564              		.size	PWM_MOT_WritePeriod, .-PWM_MOT_WritePeriod
 565              		.section	.text.PWM_MOT_ReadPeriod,"ax",%progbits
 566              		.align	2
 567              		.global	PWM_MOT_ReadPeriod
 568              		.code	16
 569              		.thumb_func
 570              		.type	PWM_MOT_ReadPeriod, %function
 571              	PWM_MOT_ReadPeriod:
 572              	.LFB17:
 697:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 698:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 699:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 700:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_ReadPeriod
 701:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 702:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 703:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 704:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Reads the 16 bit period register.
 705:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 706:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 707:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
 708:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 709:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 710:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Period value
 711:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 712:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 713:.\Generated_Source\PSoC4/PWM_MOT.c **** uint32 PWM_MOT_ReadPeriod(void)
 714:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 573              		.loc 1 714 0
 574              		.cfi_startproc
 715:.\Generated_Source\PSoC4/PWM_MOT.c ****     return (PWM_MOT_PERIOD_REG & PWM_MOT_16BIT_MASK);
 575              		.loc 1 715 0
 576 0000 024B     		ldr	r3, .L44
 577 0002 1868     		ldr	r0, [r3]
 578 0004 0004     		lsl	r0, r0, #16
 579 0006 000C     		lsr	r0, r0, #16
 716:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 580              		.loc 1 716 0
 581              		@ sp needed
 582 0008 7047     		bx	lr
 583              	.L45:
 584 000a C046     		.align	2
 585              	.L44:
 586 000c 54010540 		.word	1074069844
 587              		.cfi_endproc
 588              	.LFE17:
 589              		.size	PWM_MOT_ReadPeriod, .-PWM_MOT_ReadPeriod
 590              		.section	.text.PWM_MOT_SetCompareSwap,"ax",%progbits
 591              		.align	2
 592              		.global	PWM_MOT_SetCompareSwap
 593              		.code	16
 594              		.thumb_func
 595              		.type	PWM_MOT_SetCompareSwap, %function
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 24


 596              	PWM_MOT_SetCompareSwap:
 597              	.LFB18:
 717:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 718:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 719:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 720:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetCompareSwap
 721:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 722:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 723:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 724:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Writes the register that controls whether the compare registers are
 725:.\Generated_Source\PSoC4/PWM_MOT.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 726:.\Generated_Source\PSoC4/PWM_MOT.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 727:.\Generated_Source\PSoC4/PWM_MOT.c **** *  following a hardware switch event.
 728:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 729:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 730:.\Generated_Source\PSoC4/PWM_MOT.c **** *  swapEnable
 731:.\Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
 732:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - 0 - Disable swap
 733:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - 1 - Enable swap
 734:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 735:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 736:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
 737:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 738:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 739:.\Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetCompareSwap(uint32 swapEnable)
 740:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 598              		.loc 1 740 0
 599              		.cfi_startproc
 600              	.LVL44:
 601 0000 10B5     		push	{r4, lr}
 602              		.cfi_def_cfa_offset 8
 603              		.cfi_offset 4, -8
 604              		.cfi_offset 14, -4
 605 0002 041C     		mov	r4, r0
 741:.\Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 742:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 743:.\Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
 606              		.loc 1 743 0
 607 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 608              	.LVL45:
 744:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 745:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG &= (uint32)~PWM_MOT_RELOAD_CC_MASK;
 609              		.loc 1 745 0
 610 0008 054B     		ldr	r3, .L47
 611 000a 1A68     		ldr	r2, [r3]
 612 000c 0121     		mov	r1, #1
 613 000e 8A43     		bic	r2, r1
 614 0010 1A60     		str	r2, [r3]
 746:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= (swapEnable & PWM_MOT_1BIT_MASK);
 615              		.loc 1 746 0
 616 0012 1A68     		ldr	r2, [r3]
 617 0014 0C40     		and	r4, r1
 618              	.LVL46:
 619 0016 1443     		orr	r4, r2
 620 0018 1C60     		str	r4, [r3]
 747:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 748:.\Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 25


 621              		.loc 1 748 0
 622 001a FFF7FEFF 		bl	CyExitCriticalSection
 623              	.LVL47:
 749:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 624              		.loc 1 749 0
 625              		@ sp needed
 626 001e 10BD     		pop	{r4, pc}
 627              	.L48:
 628              		.align	2
 629              	.L47:
 630 0020 40010540 		.word	1074069824
 631              		.cfi_endproc
 632              	.LFE18:
 633              		.size	PWM_MOT_SetCompareSwap, .-PWM_MOT_SetCompareSwap
 634              		.section	.text.PWM_MOT_WritePeriodBuf,"ax",%progbits
 635              		.align	2
 636              		.global	PWM_MOT_WritePeriodBuf
 637              		.code	16
 638              		.thumb_func
 639              		.type	PWM_MOT_WritePeriodBuf, %function
 640              	PWM_MOT_WritePeriodBuf:
 641              	.LFB19:
 750:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 751:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 752:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 753:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_WritePeriodBuf
 754:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 755:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 756:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 757:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Writes the 16 bit period buf register with the new period value.
 758:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 759:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 760:.\Generated_Source\PSoC4/PWM_MOT.c **** *  periodBuf: Period value
 761:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 762:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 763:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
 764:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 765:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 766:.\Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_WritePeriodBuf(uint32 periodBuf)
 767:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 642              		.loc 1 767 0
 643              		.cfi_startproc
 644              	.LVL48:
 768:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_PERIOD_BUF_REG = (periodBuf & PWM_MOT_16BIT_MASK);
 645              		.loc 1 768 0
 646 0000 0004     		lsl	r0, r0, #16
 647              	.LVL49:
 648 0002 000C     		lsr	r0, r0, #16
 649 0004 014B     		ldr	r3, .L50
 650 0006 1860     		str	r0, [r3]
 769:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 651              		.loc 1 769 0
 652              		@ sp needed
 653 0008 7047     		bx	lr
 654              	.L51:
 655 000a C046     		.align	2
 656              	.L50:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 26


 657 000c 58010540 		.word	1074069848
 658              		.cfi_endproc
 659              	.LFE19:
 660              		.size	PWM_MOT_WritePeriodBuf, .-PWM_MOT_WritePeriodBuf
 661              		.section	.text.PWM_MOT_ReadPeriodBuf,"ax",%progbits
 662              		.align	2
 663              		.global	PWM_MOT_ReadPeriodBuf
 664              		.code	16
 665              		.thumb_func
 666              		.type	PWM_MOT_ReadPeriodBuf, %function
 667              	PWM_MOT_ReadPeriodBuf:
 668              	.LFB20:
 770:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 771:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 772:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 773:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_ReadPeriodBuf
 774:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 775:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 776:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 777:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Reads the 16 bit period buf register.
 778:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 779:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 780:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
 781:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 782:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 783:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Period value
 784:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 785:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 786:.\Generated_Source\PSoC4/PWM_MOT.c **** uint32 PWM_MOT_ReadPeriodBuf(void)
 787:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 669              		.loc 1 787 0
 670              		.cfi_startproc
 788:.\Generated_Source\PSoC4/PWM_MOT.c ****     return (PWM_MOT_PERIOD_BUF_REG & PWM_MOT_16BIT_MASK);
 671              		.loc 1 788 0
 672 0000 024B     		ldr	r3, .L53
 673 0002 1868     		ldr	r0, [r3]
 674 0004 0004     		lsl	r0, r0, #16
 675 0006 000C     		lsr	r0, r0, #16
 789:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 676              		.loc 1 789 0
 677              		@ sp needed
 678 0008 7047     		bx	lr
 679              	.L54:
 680 000a C046     		.align	2
 681              	.L53:
 682 000c 58010540 		.word	1074069848
 683              		.cfi_endproc
 684              	.LFE20:
 685              		.size	PWM_MOT_ReadPeriodBuf, .-PWM_MOT_ReadPeriodBuf
 686              		.section	.text.PWM_MOT_SetPeriodSwap,"ax",%progbits
 687              		.align	2
 688              		.global	PWM_MOT_SetPeriodSwap
 689              		.code	16
 690              		.thumb_func
 691              		.type	PWM_MOT_SetPeriodSwap, %function
 692              	PWM_MOT_SetPeriodSwap:
 693              	.LFB21:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 27


 790:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 791:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 792:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 793:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetPeriodSwap
 794:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 795:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 796:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 797:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Writes the register that controls whether the period registers are
 798:.\Generated_Source\PSoC4/PWM_MOT.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 799:.\Generated_Source\PSoC4/PWM_MOT.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 800:.\Generated_Source\PSoC4/PWM_MOT.c **** *  switch event.
 801:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 802:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 803:.\Generated_Source\PSoC4/PWM_MOT.c **** *  swapEnable
 804:.\Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
 805:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - 0 - Disable swap
 806:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - 1 - Enable swap
 807:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 808:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 809:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
 810:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 811:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 812:.\Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetPeriodSwap(uint32 swapEnable)
 813:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 694              		.loc 1 813 0
 695              		.cfi_startproc
 696              	.LVL50:
 697 0000 10B5     		push	{r4, lr}
 698              		.cfi_def_cfa_offset 8
 699              		.cfi_offset 4, -8
 700              		.cfi_offset 14, -4
 701 0002 041C     		mov	r4, r0
 814:.\Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 815:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 816:.\Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
 702              		.loc 1 816 0
 703 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 704              	.LVL51:
 817:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 818:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG &= (uint32)~PWM_MOT_RELOAD_PERIOD_MASK;
 705              		.loc 1 818 0
 706 0008 064B     		ldr	r3, .L56
 707 000a 1A68     		ldr	r2, [r3]
 708 000c 0221     		mov	r1, #2
 709 000e 8A43     		bic	r2, r1
 710 0010 1A60     		str	r2, [r3]
 819:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= ((uint32)((swapEnable & PWM_MOT_1BIT_MASK) <<
 711              		.loc 1 819 0
 712 0012 1A68     		ldr	r2, [r3]
 713 0014 0139     		sub	r1, r1, #1
 714 0016 0C40     		and	r4, r1
 715              	.LVL52:
 716 0018 6400     		lsl	r4, r4, #1
 717 001a 1443     		orr	r4, r2
 718 001c 1C60     		str	r4, [r3]
 820:.\Generated_Source\PSoC4/PWM_MOT.c ****                                                             PWM_MOT_RELOAD_PERIOD_SHIFT));
 821:.\Generated_Source\PSoC4/PWM_MOT.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 28


 822:.\Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
 719              		.loc 1 822 0
 720 001e FFF7FEFF 		bl	CyExitCriticalSection
 721              	.LVL53:
 823:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 722              		.loc 1 823 0
 723              		@ sp needed
 724 0022 10BD     		pop	{r4, pc}
 725              	.L57:
 726              		.align	2
 727              	.L56:
 728 0024 40010540 		.word	1074069824
 729              		.cfi_endproc
 730              	.LFE21:
 731              		.size	PWM_MOT_SetPeriodSwap, .-PWM_MOT_SetPeriodSwap
 732              		.section	.text.PWM_MOT_WriteCompare,"ax",%progbits
 733              		.align	2
 734              		.global	PWM_MOT_WriteCompare
 735              		.code	16
 736              		.thumb_func
 737              		.type	PWM_MOT_WriteCompare, %function
 738              	PWM_MOT_WriteCompare:
 739              	.LFB22:
 824:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 825:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 826:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 827:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_WriteCompare
 828:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 829:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 830:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 831:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Writes the 16 bit compare register with the new compare value. Not
 832:.\Generated_Source\PSoC4/PWM_MOT.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 833:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 834:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 835:.\Generated_Source\PSoC4/PWM_MOT.c **** *  compare: Compare value
 836:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 837:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 838:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
 839:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 840:.\Generated_Source\PSoC4/PWM_MOT.c **** * Note:
 841:.\Generated_Source\PSoC4/PWM_MOT.c **** *  It is not recommended to use the value equal to "0" or equal to 
 842:.\Generated_Source\PSoC4/PWM_MOT.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 843:.\Generated_Source\PSoC4/PWM_MOT.c **** *  PSoC 4100/PSoC 4200 devices.
 844:.\Generated_Source\PSoC4/PWM_MOT.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 845:.\Generated_Source\PSoC4/PWM_MOT.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 846:.\Generated_Source\PSoC4/PWM_MOT.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 847:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 848:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 849:.\Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_WriteCompare(uint32 compare)
 850:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 740              		.loc 1 850 0
 741              		.cfi_startproc
 742              	.LVL54:
 851:.\Generated_Source\PSoC4/PWM_MOT.c ****     #if (PWM_MOT_CY_TCPWM_4000)
 852:.\Generated_Source\PSoC4/PWM_MOT.c ****         uint32 currentMode;
 853:.\Generated_Source\PSoC4/PWM_MOT.c ****     #endif /* (PWM_MOT_CY_TCPWM_4000) */
 854:.\Generated_Source\PSoC4/PWM_MOT.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 29


 855:.\Generated_Source\PSoC4/PWM_MOT.c ****     #if (PWM_MOT_CY_TCPWM_4000)
 856:.\Generated_Source\PSoC4/PWM_MOT.c ****         currentMode = ((PWM_MOT_CONTROL_REG & PWM_MOT_UPDOWN_MASK) >> PWM_MOT_UPDOWN_SHIFT);
 857:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 858:.\Generated_Source\PSoC4/PWM_MOT.c ****         if (((uint32)PWM_MOT__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 859:.\Generated_Source\PSoC4/PWM_MOT.c ****         {
 860:.\Generated_Source\PSoC4/PWM_MOT.c ****             compare++;
 861:.\Generated_Source\PSoC4/PWM_MOT.c ****         }
 862:.\Generated_Source\PSoC4/PWM_MOT.c ****         else if (((uint32)PWM_MOT__COUNT_UP == currentMode) && (0u != compare))
 863:.\Generated_Source\PSoC4/PWM_MOT.c ****         {
 864:.\Generated_Source\PSoC4/PWM_MOT.c ****             compare--;
 865:.\Generated_Source\PSoC4/PWM_MOT.c ****         }
 866:.\Generated_Source\PSoC4/PWM_MOT.c ****         else
 867:.\Generated_Source\PSoC4/PWM_MOT.c ****         {
 868:.\Generated_Source\PSoC4/PWM_MOT.c ****         }
 869:.\Generated_Source\PSoC4/PWM_MOT.c ****         
 870:.\Generated_Source\PSoC4/PWM_MOT.c ****     
 871:.\Generated_Source\PSoC4/PWM_MOT.c ****     #endif /* (PWM_MOT_CY_TCPWM_4000) */
 872:.\Generated_Source\PSoC4/PWM_MOT.c ****     
 873:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_COMP_CAP_REG = (compare & PWM_MOT_16BIT_MASK);
 743              		.loc 1 873 0
 744 0000 0004     		lsl	r0, r0, #16
 745              	.LVL55:
 746 0002 000C     		lsr	r0, r0, #16
 747 0004 014B     		ldr	r3, .L59
 748 0006 1860     		str	r0, [r3]
 874:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 749              		.loc 1 874 0
 750              		@ sp needed
 751 0008 7047     		bx	lr
 752              	.L60:
 753 000a C046     		.align	2
 754              	.L59:
 755 000c 4C010540 		.word	1074069836
 756              		.cfi_endproc
 757              	.LFE22:
 758              		.size	PWM_MOT_WriteCompare, .-PWM_MOT_WriteCompare
 759              		.section	.text.PWM_MOT_ReadCompare,"ax",%progbits
 760              		.align	2
 761              		.global	PWM_MOT_ReadCompare
 762              		.code	16
 763              		.thumb_func
 764              		.type	PWM_MOT_ReadCompare, %function
 765              	PWM_MOT_ReadCompare:
 766              	.LFB23:
 875:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 876:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 877:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 878:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_ReadCompare
 879:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 880:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 881:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 882:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 883:.\Generated_Source\PSoC4/PWM_MOT.c **** *  or in Quadrature Decoder modes.
 884:.\Generated_Source\PSoC4/PWM_MOT.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 885:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 886:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Down counting mode (except 0x0u).
 887:.\Generated_Source\PSoC4/PWM_MOT.c **** *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 30


 888:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 889:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
 890:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 891:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 892:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Compare value
 893:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 894:.\Generated_Source\PSoC4/PWM_MOT.c **** * Note:
 895:.\Generated_Source\PSoC4/PWM_MOT.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 896:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 897:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Down counting mode (except 0x0u).
 898:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 899:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 900:.\Generated_Source\PSoC4/PWM_MOT.c **** uint32 PWM_MOT_ReadCompare(void)
 901:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 767              		.loc 1 901 0
 768              		.cfi_startproc
 902:.\Generated_Source\PSoC4/PWM_MOT.c ****     #if (PWM_MOT_CY_TCPWM_4000)
 903:.\Generated_Source\PSoC4/PWM_MOT.c ****         uint32 currentMode;
 904:.\Generated_Source\PSoC4/PWM_MOT.c ****         uint32 regVal;
 905:.\Generated_Source\PSoC4/PWM_MOT.c ****     #endif /* (PWM_MOT_CY_TCPWM_4000) */
 906:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 907:.\Generated_Source\PSoC4/PWM_MOT.c ****     #if (PWM_MOT_CY_TCPWM_4000)
 908:.\Generated_Source\PSoC4/PWM_MOT.c ****         currentMode = ((PWM_MOT_CONTROL_REG & PWM_MOT_UPDOWN_MASK) >> PWM_MOT_UPDOWN_SHIFT);
 909:.\Generated_Source\PSoC4/PWM_MOT.c ****         
 910:.\Generated_Source\PSoC4/PWM_MOT.c ****         regVal = PWM_MOT_COMP_CAP_REG;
 911:.\Generated_Source\PSoC4/PWM_MOT.c ****         
 912:.\Generated_Source\PSoC4/PWM_MOT.c ****         if (((uint32)PWM_MOT__COUNT_DOWN == currentMode) && (0u != regVal))
 913:.\Generated_Source\PSoC4/PWM_MOT.c ****         {
 914:.\Generated_Source\PSoC4/PWM_MOT.c ****             regVal--;
 915:.\Generated_Source\PSoC4/PWM_MOT.c ****         }
 916:.\Generated_Source\PSoC4/PWM_MOT.c ****         else if (((uint32)PWM_MOT__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 917:.\Generated_Source\PSoC4/PWM_MOT.c ****         {
 918:.\Generated_Source\PSoC4/PWM_MOT.c ****             regVal++;
 919:.\Generated_Source\PSoC4/PWM_MOT.c ****         }
 920:.\Generated_Source\PSoC4/PWM_MOT.c ****         else
 921:.\Generated_Source\PSoC4/PWM_MOT.c ****         {
 922:.\Generated_Source\PSoC4/PWM_MOT.c ****         }
 923:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 924:.\Generated_Source\PSoC4/PWM_MOT.c ****         return (regVal & PWM_MOT_16BIT_MASK);
 925:.\Generated_Source\PSoC4/PWM_MOT.c ****     #else
 926:.\Generated_Source\PSoC4/PWM_MOT.c ****         return (PWM_MOT_COMP_CAP_REG & PWM_MOT_16BIT_MASK);
 769              		.loc 1 926 0
 770 0000 024B     		ldr	r3, .L62
 771 0002 1868     		ldr	r0, [r3]
 772 0004 0004     		lsl	r0, r0, #16
 773 0006 000C     		lsr	r0, r0, #16
 927:.\Generated_Source\PSoC4/PWM_MOT.c ****     #endif /* (PWM_MOT_CY_TCPWM_4000) */
 928:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 774              		.loc 1 928 0
 775              		@ sp needed
 776 0008 7047     		bx	lr
 777              	.L63:
 778 000a C046     		.align	2
 779              	.L62:
 780 000c 4C010540 		.word	1074069836
 781              		.cfi_endproc
 782              	.LFE23:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 31


 783              		.size	PWM_MOT_ReadCompare, .-PWM_MOT_ReadCompare
 784              		.section	.text.PWM_MOT_WriteCompareBuf,"ax",%progbits
 785              		.align	2
 786              		.global	PWM_MOT_WriteCompareBuf
 787              		.code	16
 788              		.thumb_func
 789              		.type	PWM_MOT_WriteCompareBuf, %function
 790              	PWM_MOT_WriteCompareBuf:
 791              	.LFB24:
 929:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 930:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 931:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 932:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_WriteCompareBuf
 933:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 934:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 935:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 936:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 937:.\Generated_Source\PSoC4/PWM_MOT.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 938:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 939:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 940:.\Generated_Source\PSoC4/PWM_MOT.c **** *  compareBuf: Compare value
 941:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 942:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 943:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
 944:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 945:.\Generated_Source\PSoC4/PWM_MOT.c **** * Note:
 946:.\Generated_Source\PSoC4/PWM_MOT.c **** *  It is not recommended to use the value equal to "0" or equal to 
 947:.\Generated_Source\PSoC4/PWM_MOT.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 948:.\Generated_Source\PSoC4/PWM_MOT.c **** *  PSoC 4100/PSoC 4200 devices.
 949:.\Generated_Source\PSoC4/PWM_MOT.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 950:.\Generated_Source\PSoC4/PWM_MOT.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 951:.\Generated_Source\PSoC4/PWM_MOT.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 952:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 953:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 954:.\Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_WriteCompareBuf(uint32 compareBuf)
 955:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 792              		.loc 1 955 0
 793              		.cfi_startproc
 794              	.LVL56:
 956:.\Generated_Source\PSoC4/PWM_MOT.c ****     #if (PWM_MOT_CY_TCPWM_4000)
 957:.\Generated_Source\PSoC4/PWM_MOT.c ****         uint32 currentMode;
 958:.\Generated_Source\PSoC4/PWM_MOT.c ****     #endif /* (PWM_MOT_CY_TCPWM_4000) */
 959:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 960:.\Generated_Source\PSoC4/PWM_MOT.c ****     #if (PWM_MOT_CY_TCPWM_4000)
 961:.\Generated_Source\PSoC4/PWM_MOT.c ****         currentMode = ((PWM_MOT_CONTROL_REG & PWM_MOT_UPDOWN_MASK) >> PWM_MOT_UPDOWN_SHIFT);
 962:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 963:.\Generated_Source\PSoC4/PWM_MOT.c ****         if (((uint32)PWM_MOT__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 964:.\Generated_Source\PSoC4/PWM_MOT.c ****         {
 965:.\Generated_Source\PSoC4/PWM_MOT.c ****             compareBuf++;
 966:.\Generated_Source\PSoC4/PWM_MOT.c ****         }
 967:.\Generated_Source\PSoC4/PWM_MOT.c ****         else if (((uint32)PWM_MOT__COUNT_UP == currentMode) && (0u != compareBuf))
 968:.\Generated_Source\PSoC4/PWM_MOT.c ****         {
 969:.\Generated_Source\PSoC4/PWM_MOT.c ****             compareBuf --;
 970:.\Generated_Source\PSoC4/PWM_MOT.c ****         }
 971:.\Generated_Source\PSoC4/PWM_MOT.c ****         else
 972:.\Generated_Source\PSoC4/PWM_MOT.c ****         {
 973:.\Generated_Source\PSoC4/PWM_MOT.c ****         }
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 32


 974:.\Generated_Source\PSoC4/PWM_MOT.c ****     #endif /* (PWM_MOT_CY_TCPWM_4000) */
 975:.\Generated_Source\PSoC4/PWM_MOT.c ****     
 976:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_COMP_CAP_BUF_REG = (compareBuf & PWM_MOT_16BIT_MASK);
 795              		.loc 1 976 0
 796 0000 0004     		lsl	r0, r0, #16
 797              	.LVL57:
 798 0002 000C     		lsr	r0, r0, #16
 799 0004 014B     		ldr	r3, .L65
 800 0006 1860     		str	r0, [r3]
 977:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 801              		.loc 1 977 0
 802              		@ sp needed
 803 0008 7047     		bx	lr
 804              	.L66:
 805 000a C046     		.align	2
 806              	.L65:
 807 000c 50010540 		.word	1074069840
 808              		.cfi_endproc
 809              	.LFE24:
 810              		.size	PWM_MOT_WriteCompareBuf, .-PWM_MOT_WriteCompareBuf
 811              		.section	.text.PWM_MOT_ReadCompareBuf,"ax",%progbits
 812              		.align	2
 813              		.global	PWM_MOT_ReadCompareBuf
 814              		.code	16
 815              		.thumb_func
 816              		.type	PWM_MOT_ReadCompareBuf, %function
 817              	PWM_MOT_ReadCompareBuf:
 818              	.LFB25:
 978:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 979:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 980:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 981:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_ReadCompareBuf
 982:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 983:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 984:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 985:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 986:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Capture or in Quadrature Decoder modes.
 987:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 988:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 989:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
 990:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 991:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 992:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Compare buffer value
 993:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 994:.\Generated_Source\PSoC4/PWM_MOT.c **** * Note:
 995:.\Generated_Source\PSoC4/PWM_MOT.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 996:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 997:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Down counting mode (except 0x0u).
 998:.\Generated_Source\PSoC4/PWM_MOT.c **** *
 999:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
1000:.\Generated_Source\PSoC4/PWM_MOT.c **** uint32 PWM_MOT_ReadCompareBuf(void)
1001:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 819              		.loc 1 1001 0
 820              		.cfi_startproc
1002:.\Generated_Source\PSoC4/PWM_MOT.c ****     #if (PWM_MOT_CY_TCPWM_4000)
1003:.\Generated_Source\PSoC4/PWM_MOT.c ****         uint32 currentMode;
1004:.\Generated_Source\PSoC4/PWM_MOT.c ****         uint32 regVal;
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 33


1005:.\Generated_Source\PSoC4/PWM_MOT.c ****     #endif /* (PWM_MOT_CY_TCPWM_4000) */
1006:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1007:.\Generated_Source\PSoC4/PWM_MOT.c ****     #if (PWM_MOT_CY_TCPWM_4000)
1008:.\Generated_Source\PSoC4/PWM_MOT.c ****         currentMode = ((PWM_MOT_CONTROL_REG & PWM_MOT_UPDOWN_MASK) >> PWM_MOT_UPDOWN_SHIFT);
1009:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1010:.\Generated_Source\PSoC4/PWM_MOT.c ****         regVal = PWM_MOT_COMP_CAP_BUF_REG;
1011:.\Generated_Source\PSoC4/PWM_MOT.c ****         
1012:.\Generated_Source\PSoC4/PWM_MOT.c ****         if (((uint32)PWM_MOT__COUNT_DOWN == currentMode) && (0u != regVal))
1013:.\Generated_Source\PSoC4/PWM_MOT.c ****         {
1014:.\Generated_Source\PSoC4/PWM_MOT.c ****             regVal--;
1015:.\Generated_Source\PSoC4/PWM_MOT.c ****         }
1016:.\Generated_Source\PSoC4/PWM_MOT.c ****         else if (((uint32)PWM_MOT__COUNT_UP == currentMode) && (0xFFFFu != regVal))
1017:.\Generated_Source\PSoC4/PWM_MOT.c ****         {
1018:.\Generated_Source\PSoC4/PWM_MOT.c ****             regVal++;
1019:.\Generated_Source\PSoC4/PWM_MOT.c ****         }
1020:.\Generated_Source\PSoC4/PWM_MOT.c ****         else
1021:.\Generated_Source\PSoC4/PWM_MOT.c ****         {
1022:.\Generated_Source\PSoC4/PWM_MOT.c ****         }
1023:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1024:.\Generated_Source\PSoC4/PWM_MOT.c ****         return (regVal & PWM_MOT_16BIT_MASK);
1025:.\Generated_Source\PSoC4/PWM_MOT.c ****     #else
1026:.\Generated_Source\PSoC4/PWM_MOT.c ****         return (PWM_MOT_COMP_CAP_BUF_REG & PWM_MOT_16BIT_MASK);
 821              		.loc 1 1026 0
 822 0000 024B     		ldr	r3, .L68
 823 0002 1868     		ldr	r0, [r3]
 824 0004 0004     		lsl	r0, r0, #16
 825 0006 000C     		lsr	r0, r0, #16
1027:.\Generated_Source\PSoC4/PWM_MOT.c ****     #endif /* (PWM_MOT_CY_TCPWM_4000) */
1028:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 826              		.loc 1 1028 0
 827              		@ sp needed
 828 0008 7047     		bx	lr
 829              	.L69:
 830 000a C046     		.align	2
 831              	.L68:
 832 000c 50010540 		.word	1074069840
 833              		.cfi_endproc
 834              	.LFE25:
 835              		.size	PWM_MOT_ReadCompareBuf, .-PWM_MOT_ReadCompareBuf
 836              		.section	.text.PWM_MOT_ReadCapture,"ax",%progbits
 837              		.align	2
 838              		.global	PWM_MOT_ReadCapture
 839              		.code	16
 840              		.thumb_func
 841              		.type	PWM_MOT_ReadCapture, %function
 842              	PWM_MOT_ReadCapture:
 843              	.LFB26:
1029:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1030:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1031:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
1032:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_ReadCapture
1033:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
1034:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1035:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
1036:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Reads the captured counter value. This API is applicable only for
1037:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1038:.\Generated_Source\PSoC4/PWM_MOT.c **** *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 34


1039:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
1040:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
1041:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1042:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
1043:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Capture value
1044:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1045:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
1046:.\Generated_Source\PSoC4/PWM_MOT.c **** uint32 PWM_MOT_ReadCapture(void)
1047:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 844              		.loc 1 1047 0
 845              		.cfi_startproc
1048:.\Generated_Source\PSoC4/PWM_MOT.c ****     return (PWM_MOT_COMP_CAP_REG & PWM_MOT_16BIT_MASK);
 846              		.loc 1 1048 0
 847 0000 024B     		ldr	r3, .L71
 848 0002 1868     		ldr	r0, [r3]
 849 0004 0004     		lsl	r0, r0, #16
 850 0006 000C     		lsr	r0, r0, #16
1049:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 851              		.loc 1 1049 0
 852              		@ sp needed
 853 0008 7047     		bx	lr
 854              	.L72:
 855 000a C046     		.align	2
 856              	.L71:
 857 000c 4C010540 		.word	1074069836
 858              		.cfi_endproc
 859              	.LFE26:
 860              		.size	PWM_MOT_ReadCapture, .-PWM_MOT_ReadCapture
 861              		.section	.text.PWM_MOT_ReadCaptureBuf,"ax",%progbits
 862              		.align	2
 863              		.global	PWM_MOT_ReadCaptureBuf
 864              		.code	16
 865              		.thumb_func
 866              		.type	PWM_MOT_ReadCaptureBuf, %function
 867              	PWM_MOT_ReadCaptureBuf:
 868              	.LFB27:
1050:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1051:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1052:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
1053:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_ReadCaptureBuf
1054:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
1055:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1056:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
1057:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Reads the capture buffer register. This API is applicable only for
1058:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1059:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1060:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
1061:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
1062:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1063:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
1064:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Capture buffer value
1065:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1066:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
1067:.\Generated_Source\PSoC4/PWM_MOT.c **** uint32 PWM_MOT_ReadCaptureBuf(void)
1068:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 869              		.loc 1 1068 0
 870              		.cfi_startproc
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 35


1069:.\Generated_Source\PSoC4/PWM_MOT.c ****     return (PWM_MOT_COMP_CAP_BUF_REG & PWM_MOT_16BIT_MASK);
 871              		.loc 1 1069 0
 872 0000 024B     		ldr	r3, .L74
 873 0002 1868     		ldr	r0, [r3]
 874 0004 0004     		lsl	r0, r0, #16
 875 0006 000C     		lsr	r0, r0, #16
1070:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 876              		.loc 1 1070 0
 877              		@ sp needed
 878 0008 7047     		bx	lr
 879              	.L75:
 880 000a C046     		.align	2
 881              	.L74:
 882 000c 50010540 		.word	1074069840
 883              		.cfi_endproc
 884              	.LFE27:
 885              		.size	PWM_MOT_ReadCaptureBuf, .-PWM_MOT_ReadCaptureBuf
 886              		.section	.text.PWM_MOT_SetCaptureMode,"ax",%progbits
 887              		.align	2
 888              		.global	PWM_MOT_SetCaptureMode
 889              		.code	16
 890              		.thumb_func
 891              		.type	PWM_MOT_SetCaptureMode, %function
 892              	PWM_MOT_SetCaptureMode:
 893              	.LFB28:
1071:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1072:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1073:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
1074:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetCaptureMode
1075:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
1076:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1077:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
1078:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1079:.\Generated_Source\PSoC4/PWM_MOT.c **** *  This input is not applicable to the Timer/Counter without Capture and
1080:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Quadrature Decoder modes.
1081:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1082:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
1083:.\Generated_Source\PSoC4/PWM_MOT.c **** *  triggerMode: Enumerated trigger mode value
1084:.\Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
1085:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_LEVEL     - Level
1086:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_RISING    - Rising edge
1087:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_FALLING   - Falling edge
1088:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_BOTH      - Both rising and falling edge
1089:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1090:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
1091:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
1092:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1093:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
1094:.\Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetCaptureMode(uint32 triggerMode)
1095:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 894              		.loc 1 1095 0
 895              		.cfi_startproc
 896              	.LVL58:
 897 0000 10B5     		push	{r4, lr}
 898              		.cfi_def_cfa_offset 8
 899              		.cfi_offset 4, -8
 900              		.cfi_offset 14, -4
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 36


 901 0002 041C     		mov	r4, r0
1096:.\Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
1097:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1098:.\Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
 902              		.loc 1 1098 0
 903 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 904              	.LVL59:
1099:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1100:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_TRIG_CONTROL1_REG &= (uint32)~PWM_MOT_CAPTURE_MASK;
 905              		.loc 1 1100 0
 906 0008 054B     		ldr	r3, .L77
 907 000a 1A68     		ldr	r2, [r3]
 908 000c 0321     		mov	r1, #3
 909 000e 8A43     		bic	r2, r1
 910 0010 1A60     		str	r2, [r3]
1101:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_TRIG_CONTROL1_REG |= triggerMode;
 911              		.loc 1 1101 0
 912 0012 1A68     		ldr	r2, [r3]
 913 0014 1443     		orr	r4, r2
 914              	.LVL60:
 915 0016 1C60     		str	r4, [r3]
1102:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1103:.\Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
 916              		.loc 1 1103 0
 917 0018 FFF7FEFF 		bl	CyExitCriticalSection
 918              	.LVL61:
1104:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 919              		.loc 1 1104 0
 920              		@ sp needed
 921 001c 10BD     		pop	{r4, pc}
 922              	.L78:
 923 001e C046     		.align	2
 924              	.L77:
 925 0020 64010540 		.word	1074069860
 926              		.cfi_endproc
 927              	.LFE28:
 928              		.size	PWM_MOT_SetCaptureMode, .-PWM_MOT_SetCaptureMode
 929              		.section	.text.PWM_MOT_SetReloadMode,"ax",%progbits
 930              		.align	2
 931              		.global	PWM_MOT_SetReloadMode
 932              		.code	16
 933              		.thumb_func
 934              		.type	PWM_MOT_SetReloadMode, %function
 935              	PWM_MOT_SetReloadMode:
 936              	.LFB29:
1105:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1106:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1107:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
1108:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetReloadMode
1109:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
1110:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1111:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
1112:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1113:.\Generated_Source\PSoC4/PWM_MOT.c **** *  input.
1114:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1115:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
1116:.\Generated_Source\PSoC4/PWM_MOT.c **** *  triggerMode: Enumerated trigger mode value
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 37


1117:.\Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
1118:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_LEVEL     - Level
1119:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_RISING    - Rising edge
1120:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_FALLING   - Falling edge
1121:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_BOTH      - Both rising and falling edge
1122:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1123:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
1124:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
1125:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1126:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
1127:.\Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetReloadMode(uint32 triggerMode)
1128:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 937              		.loc 1 1128 0
 938              		.cfi_startproc
 939              	.LVL62:
 940 0000 10B5     		push	{r4, lr}
 941              		.cfi_def_cfa_offset 8
 942              		.cfi_offset 4, -8
 943              		.cfi_offset 14, -4
 944 0002 041C     		mov	r4, r0
1129:.\Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
1130:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1131:.\Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
 945              		.loc 1 1131 0
 946 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 947              	.LVL63:
1132:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1133:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_TRIG_CONTROL1_REG &= (uint32)~PWM_MOT_RELOAD_MASK;
 948              		.loc 1 1133 0
 949 0008 054B     		ldr	r3, .L80
 950 000a 1A68     		ldr	r2, [r3]
 951 000c 3021     		mov	r1, #48
 952 000e 8A43     		bic	r2, r1
 953 0010 1A60     		str	r2, [r3]
1134:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_MOT_RELOAD_SHIFT));
 954              		.loc 1 1134 0
 955 0012 1A68     		ldr	r2, [r3]
 956 0014 2401     		lsl	r4, r4, #4
 957              	.LVL64:
 958 0016 1443     		orr	r4, r2
 959 0018 1C60     		str	r4, [r3]
1135:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1136:.\Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
 960              		.loc 1 1136 0
 961 001a FFF7FEFF 		bl	CyExitCriticalSection
 962              	.LVL65:
1137:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 963              		.loc 1 1137 0
 964              		@ sp needed
 965 001e 10BD     		pop	{r4, pc}
 966              	.L81:
 967              		.align	2
 968              	.L80:
 969 0020 64010540 		.word	1074069860
 970              		.cfi_endproc
 971              	.LFE29:
 972              		.size	PWM_MOT_SetReloadMode, .-PWM_MOT_SetReloadMode
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 38


 973              		.section	.text.PWM_MOT_SetStartMode,"ax",%progbits
 974              		.align	2
 975              		.global	PWM_MOT_SetStartMode
 976              		.code	16
 977              		.thumb_func
 978              		.type	PWM_MOT_SetStartMode, %function
 979              	PWM_MOT_SetStartMode:
 980              	.LFB30:
1138:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1139:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1140:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
1141:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetStartMode
1142:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
1143:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1144:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
1145:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1146:.\Generated_Source\PSoC4/PWM_MOT.c **** *  phiB input.
1147:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1148:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
1149:.\Generated_Source\PSoC4/PWM_MOT.c **** *  triggerMode: Enumerated trigger mode value
1150:.\Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
1151:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_LEVEL     - Level
1152:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_RISING    - Rising edge
1153:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_FALLING   - Falling edge
1154:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_BOTH      - Both rising and falling edge
1155:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1156:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
1157:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
1158:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1159:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
1160:.\Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetStartMode(uint32 triggerMode)
1161:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 981              		.loc 1 1161 0
 982              		.cfi_startproc
 983              	.LVL66:
 984 0000 10B5     		push	{r4, lr}
 985              		.cfi_def_cfa_offset 8
 986              		.cfi_offset 4, -8
 987              		.cfi_offset 14, -4
 988 0002 041C     		mov	r4, r0
1162:.\Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
1163:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1164:.\Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
 989              		.loc 1 1164 0
 990 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 991              	.LVL67:
1165:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1166:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_TRIG_CONTROL1_REG &= (uint32)~PWM_MOT_START_MASK;
 992              		.loc 1 1166 0
 993 0008 054B     		ldr	r3, .L83
 994 000a 1968     		ldr	r1, [r3]
 995 000c 054A     		ldr	r2, .L83+4
 996 000e 0A40     		and	r2, r1
 997 0010 1A60     		str	r2, [r3]
1167:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_MOT_START_SHIFT));
 998              		.loc 1 1167 0
 999 0012 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 39


 1000 0014 2402     		lsl	r4, r4, #8
 1001              	.LVL68:
 1002 0016 1443     		orr	r4, r2
 1003 0018 1C60     		str	r4, [r3]
1168:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1169:.\Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
 1004              		.loc 1 1169 0
 1005 001a FFF7FEFF 		bl	CyExitCriticalSection
 1006              	.LVL69:
1170:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 1007              		.loc 1 1170 0
 1008              		@ sp needed
 1009 001e 10BD     		pop	{r4, pc}
 1010              	.L84:
 1011              		.align	2
 1012              	.L83:
 1013 0020 64010540 		.word	1074069860
 1014 0024 FFFCFFFF 		.word	-769
 1015              		.cfi_endproc
 1016              	.LFE30:
 1017              		.size	PWM_MOT_SetStartMode, .-PWM_MOT_SetStartMode
 1018              		.section	.text.PWM_MOT_SetStopMode,"ax",%progbits
 1019              		.align	2
 1020              		.global	PWM_MOT_SetStopMode
 1021              		.code	16
 1022              		.thumb_func
 1023              		.type	PWM_MOT_SetStopMode, %function
 1024              	PWM_MOT_SetStopMode:
 1025              	.LFB31:
1171:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1172:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1173:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
1174:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetStopMode
1175:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
1176:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1177:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
1178:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1179:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1180:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
1181:.\Generated_Source\PSoC4/PWM_MOT.c **** *  triggerMode: Enumerated trigger mode value
1182:.\Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
1183:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_LEVEL     - Level
1184:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_RISING    - Rising edge
1185:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_FALLING   - Falling edge
1186:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_BOTH      - Both rising and falling edge
1187:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1188:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
1189:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
1190:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1191:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
1192:.\Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetStopMode(uint32 triggerMode)
1193:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 1026              		.loc 1 1193 0
 1027              		.cfi_startproc
 1028              	.LVL70:
 1029 0000 10B5     		push	{r4, lr}
 1030              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 40


 1031              		.cfi_offset 4, -8
 1032              		.cfi_offset 14, -4
 1033 0002 041C     		mov	r4, r0
1194:.\Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
1195:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1196:.\Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
 1034              		.loc 1 1196 0
 1035 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1036              	.LVL71:
1197:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1198:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_TRIG_CONTROL1_REG &= (uint32)~PWM_MOT_STOP_MASK;
 1037              		.loc 1 1198 0
 1038 0008 054B     		ldr	r3, .L86
 1039 000a 1A68     		ldr	r2, [r3]
 1040 000c C021     		mov	r1, #192
 1041 000e 8A43     		bic	r2, r1
 1042 0010 1A60     		str	r2, [r3]
1199:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_MOT_STOP_SHIFT));
 1043              		.loc 1 1199 0
 1044 0012 1A68     		ldr	r2, [r3]
 1045 0014 A401     		lsl	r4, r4, #6
 1046              	.LVL72:
 1047 0016 1443     		orr	r4, r2
 1048 0018 1C60     		str	r4, [r3]
1200:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1201:.\Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
 1049              		.loc 1 1201 0
 1050 001a FFF7FEFF 		bl	CyExitCriticalSection
 1051              	.LVL73:
1202:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 1052              		.loc 1 1202 0
 1053              		@ sp needed
 1054 001e 10BD     		pop	{r4, pc}
 1055              	.L87:
 1056              		.align	2
 1057              	.L86:
 1058 0020 64010540 		.word	1074069860
 1059              		.cfi_endproc
 1060              	.LFE31:
 1061              		.size	PWM_MOT_SetStopMode, .-PWM_MOT_SetStopMode
 1062              		.section	.text.PWM_MOT_SetCountMode,"ax",%progbits
 1063              		.align	2
 1064              		.global	PWM_MOT_SetCountMode
 1065              		.code	16
 1066              		.thumb_func
 1067              		.type	PWM_MOT_SetCountMode, %function
 1068              	PWM_MOT_SetCountMode:
 1069              	.LFB32:
1203:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1204:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1205:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
1206:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetCountMode
1207:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
1208:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1209:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
1210:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1211:.\Generated_Source\PSoC4/PWM_MOT.c **** *  input.
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 41


1212:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1213:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
1214:.\Generated_Source\PSoC4/PWM_MOT.c **** *  triggerMode: Enumerated trigger mode value
1215:.\Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
1216:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_LEVEL     - Level
1217:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_RISING    - Rising edge
1218:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_FALLING   - Falling edge
1219:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_BOTH      - Both rising and falling edge
1220:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1221:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
1222:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
1223:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1224:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
1225:.\Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetCountMode(uint32 triggerMode)
1226:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 1070              		.loc 1 1226 0
 1071              		.cfi_startproc
 1072              	.LVL74:
 1073 0000 10B5     		push	{r4, lr}
 1074              		.cfi_def_cfa_offset 8
 1075              		.cfi_offset 4, -8
 1076              		.cfi_offset 14, -4
 1077 0002 041C     		mov	r4, r0
1227:.\Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
1228:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1229:.\Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
 1078              		.loc 1 1229 0
 1079 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1080              	.LVL75:
1230:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1231:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_TRIG_CONTROL1_REG &= (uint32)~PWM_MOT_COUNT_MASK;
 1081              		.loc 1 1231 0
 1082 0008 054B     		ldr	r3, .L89
 1083 000a 1A68     		ldr	r2, [r3]
 1084 000c 0C21     		mov	r1, #12
 1085 000e 8A43     		bic	r2, r1
 1086 0010 1A60     		str	r2, [r3]
1232:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_MOT_COUNT_SHIFT));
 1087              		.loc 1 1232 0
 1088 0012 1A68     		ldr	r2, [r3]
 1089 0014 A400     		lsl	r4, r4, #2
 1090              	.LVL76:
 1091 0016 1443     		orr	r4, r2
 1092 0018 1C60     		str	r4, [r3]
1233:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1234:.\Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
 1093              		.loc 1 1234 0
 1094 001a FFF7FEFF 		bl	CyExitCriticalSection
 1095              	.LVL77:
1235:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 1096              		.loc 1 1235 0
 1097              		@ sp needed
 1098 001e 10BD     		pop	{r4, pc}
 1099              	.L90:
 1100              		.align	2
 1101              	.L89:
 1102 0020 64010540 		.word	1074069860
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 42


 1103              		.cfi_endproc
 1104              	.LFE32:
 1105              		.size	PWM_MOT_SetCountMode, .-PWM_MOT_SetCountMode
 1106              		.section	.text.PWM_MOT_TriggerCommand,"ax",%progbits
 1107              		.align	2
 1108              		.global	PWM_MOT_TriggerCommand
 1109              		.code	16
 1110              		.thumb_func
 1111              		.type	PWM_MOT_TriggerCommand, %function
 1112              	PWM_MOT_TriggerCommand:
 1113              	.LFB33:
1236:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1237:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1238:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
1239:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_TriggerCommand
1240:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
1241:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1242:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
1243:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1244:.\Generated_Source\PSoC4/PWM_MOT.c **** *  The mask can be used to apply this command simultaneously to more than one
1245:.\Generated_Source\PSoC4/PWM_MOT.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1246:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1247:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
1248:.\Generated_Source\PSoC4/PWM_MOT.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1249:.\Generated_Source\PSoC4/PWM_MOT.c **** *        command should apply to.  This function from one instance can be used
1250:.\Generated_Source\PSoC4/PWM_MOT.c **** *        to apply the command to any of the instances in the design.
1251:.\Generated_Source\PSoC4/PWM_MOT.c **** *        The mask value for a specific instance is available with the MASK
1252:.\Generated_Source\PSoC4/PWM_MOT.c **** *        define.
1253:.\Generated_Source\PSoC4/PWM_MOT.c **** *  command: Enumerated command values. Capture command only applicable for
1254:.\Generated_Source\PSoC4/PWM_MOT.c **** *           Timer/Counter with Capture and PWM modes.
1255:.\Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
1256:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_CMD_CAPTURE    - Trigger Capture/Switch command
1257:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_CMD_RELOAD     - Trigger Reload/Index command
1258:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_CMD_STOP       - Trigger Stop/Kill command
1259:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_CMD_START      - Trigger Start/phiB command
1260:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1261:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
1262:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
1263:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1264:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
1265:.\Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_TriggerCommand(uint32 mask, uint32 command)
1266:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 1114              		.loc 1 1266 0
 1115              		.cfi_startproc
 1116              	.LVL78:
 1117 0000 38B5     		push	{r3, r4, r5, lr}
 1118              		.cfi_def_cfa_offset 16
 1119              		.cfi_offset 3, -16
 1120              		.cfi_offset 4, -12
 1121              		.cfi_offset 5, -8
 1122              		.cfi_offset 14, -4
 1123 0002 041C     		mov	r4, r0
 1124 0004 0D1C     		mov	r5, r1
1267:.\Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
1268:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1269:.\Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
 1125              		.loc 1 1269 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 43


 1126 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1127              	.LVL79:
1270:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1271:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_COMMAND_REG = ((uint32)(mask << command));
 1128              		.loc 1 1271 0
 1129 000a AC40     		lsl	r4, r4, r5
 1130              	.LVL80:
 1131 000c 024B     		ldr	r3, .L92
 1132 000e 1C60     		str	r4, [r3]
1272:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1273:.\Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
 1133              		.loc 1 1273 0
 1134 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1135              	.LVL81:
1274:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 1136              		.loc 1 1274 0
 1137              		@ sp needed
 1138              	.LVL82:
 1139 0014 38BD     		pop	{r3, r4, r5, pc}
 1140              	.L93:
 1141 0016 C046     		.align	2
 1142              	.L92:
 1143 0018 08000540 		.word	1074069512
 1144              		.cfi_endproc
 1145              	.LFE33:
 1146              		.size	PWM_MOT_TriggerCommand, .-PWM_MOT_TriggerCommand
 1147              		.section	.text.PWM_MOT_Enable,"ax",%progbits
 1148              		.align	2
 1149              		.global	PWM_MOT_Enable
 1150              		.code	16
 1151              		.thumb_func
 1152              		.type	PWM_MOT_Enable, %function
 1153              	PWM_MOT_Enable:
 1154              	.LFB1:
 178:.\Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 1155              		.loc 1 178 0
 1156              		.cfi_startproc
 1157 0000 08B5     		push	{r3, lr}
 1158              		.cfi_def_cfa_offset 8
 1159              		.cfi_offset 3, -8
 1160              		.cfi_offset 14, -4
 181:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_BLOCK_CONTROL_REG |= PWM_MOT_MASK;
 1161              		.loc 1 181 0
 1162 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1163              	.LVL83:
 182:.\Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
 1164              		.loc 1 182 0
 1165 0006 064A     		ldr	r2, .L95
 1166 0008 1168     		ldr	r1, [r2]
 1167 000a 0223     		mov	r3, #2
 1168 000c 0B43     		orr	r3, r1
 1169 000e 1360     		str	r3, [r2]
 183:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 1170              		.loc 1 183 0
 1171 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1172              	.LVL84:
 188:.\Generated_Source\PSoC4/PWM_MOT.c ****         #endif /* (0u == PWM_MOT_PWM_START_SIGNAL_PRESENT) */
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 44


 1173              		.loc 1 188 0
 1174 0014 0220     		mov	r0, #2
 1175 0016 1821     		mov	r1, #24
 1176 0018 FFF7FEFF 		bl	PWM_MOT_TriggerCommand
 1177              	.LVL85:
 203:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 1178              		.loc 1 203 0
 1179              		@ sp needed
 1180 001c 08BD     		pop	{r3, pc}
 1181              	.L96:
 1182 001e C046     		.align	2
 1183              	.L95:
 1184 0020 00000540 		.word	1074069504
 1185              		.cfi_endproc
 1186              	.LFE1:
 1187              		.size	PWM_MOT_Enable, .-PWM_MOT_Enable
 1188              		.section	.text.PWM_MOT_ReadStatus,"ax",%progbits
 1189              		.align	2
 1190              		.global	PWM_MOT_ReadStatus
 1191              		.code	16
 1192              		.thumb_func
 1193              		.type	PWM_MOT_ReadStatus, %function
 1194              	PWM_MOT_ReadStatus:
 1195              	.LFB34:
1275:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1276:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1277:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
1278:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_ReadStatus
1279:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
1280:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1281:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
1282:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Reads the status of the PWM_MOT.
1283:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1284:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
1285:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
1286:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1287:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
1288:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Status
1289:.\Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
1290:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_STATUS_DOWN    - Set if counting down
1291:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_STATUS_RUNNING - Set if counter is running
1292:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1293:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
1294:.\Generated_Source\PSoC4/PWM_MOT.c **** uint32 PWM_MOT_ReadStatus(void)
1295:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 1196              		.loc 1 1295 0
 1197              		.cfi_startproc
1296:.\Generated_Source\PSoC4/PWM_MOT.c ****     return ((PWM_MOT_STATUS_REG >> PWM_MOT_RUNNING_STATUS_SHIFT) |
 1198              		.loc 1 1296 0
 1199 0000 034B     		ldr	r3, .L98
 1200 0002 1868     		ldr	r0, [r3]
 1201 0004 820F     		lsr	r2, r0, #30
1297:.\Generated_Source\PSoC4/PWM_MOT.c ****             (PWM_MOT_STATUS_REG & PWM_MOT_STATUS_DOWN));
 1202              		.loc 1 1297 0
 1203 0006 1B68     		ldr	r3, [r3]
 1204 0008 0120     		mov	r0, #1
 1205 000a 1840     		and	r0, r3
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 45


1296:.\Generated_Source\PSoC4/PWM_MOT.c ****     return ((PWM_MOT_STATUS_REG >> PWM_MOT_RUNNING_STATUS_SHIFT) |
 1206              		.loc 1 1296 0
 1207 000c 1043     		orr	r0, r2
1298:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 1208              		.loc 1 1298 0
 1209              		@ sp needed
 1210 000e 7047     		bx	lr
 1211              	.L99:
 1212              		.align	2
 1213              	.L98:
 1214 0010 44010540 		.word	1074069828
 1215              		.cfi_endproc
 1216              	.LFE34:
 1217              		.size	PWM_MOT_ReadStatus, .-PWM_MOT_ReadStatus
 1218              		.section	.text.PWM_MOT_SetInterruptMode,"ax",%progbits
 1219              		.align	2
 1220              		.global	PWM_MOT_SetInterruptMode
 1221              		.code	16
 1222              		.thumb_func
 1223              		.type	PWM_MOT_SetInterruptMode, %function
 1224              	PWM_MOT_SetInterruptMode:
 1225              	.LFB35:
1299:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1300:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1301:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
1302:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetInterruptMode
1303:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
1304:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1305:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
1306:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Sets the interrupt mask to control which interrupt
1307:.\Generated_Source\PSoC4/PWM_MOT.c **** *  requests generate the interrupt signal.
1308:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1309:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
1310:.\Generated_Source\PSoC4/PWM_MOT.c **** *   interruptMask: Mask of bits to be enabled
1311:.\Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
1312:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_INTR_MASK_TC       - Terminal count mask
1313:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_INTR_MASK_CC_MATCH - Compare count / capture mask
1314:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1315:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
1316:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
1317:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1318:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
1319:.\Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetInterruptMode(uint32 interruptMask)
1320:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 1226              		.loc 1 1320 0
 1227              		.cfi_startproc
 1228              	.LVL86:
1321:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_INTERRUPT_MASK_REG =  interruptMask;
 1229              		.loc 1 1321 0
 1230 0000 014B     		ldr	r3, .L101
 1231 0002 1860     		str	r0, [r3]
1322:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 1232              		.loc 1 1322 0
 1233              		@ sp needed
 1234 0004 7047     		bx	lr
 1235              	.L102:
 1236 0006 C046     		.align	2
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 46


 1237              	.L101:
 1238 0008 78010540 		.word	1074069880
 1239              		.cfi_endproc
 1240              	.LFE35:
 1241              		.size	PWM_MOT_SetInterruptMode, .-PWM_MOT_SetInterruptMode
 1242              		.section	.text.PWM_MOT_Init,"ax",%progbits
 1243              		.align	2
 1244              		.global	PWM_MOT_Init
 1245              		.code	16
 1246              		.thumb_func
 1247              		.type	PWM_MOT_Init, %function
 1248              	PWM_MOT_Init:
 1249              	.LFB0:
  39:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 1250              		.loc 1 39 0
 1251              		.cfi_startproc
 1252 0000 10B5     		push	{r4, lr}
 1253              		.cfi_def_cfa_offset 8
 1254              		.cfi_offset 4, -8
 1255              		.cfi_offset 14, -4
  89:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 1256              		.loc 1 89 0
 1257 0002 104C     		ldr	r4, .L104
 1258 0004 8023     		mov	r3, #128
 1259 0006 DB04     		lsl	r3, r3, #19
 1260 0008 2360     		str	r3, [r4]
  95:.\Generated_Source\PSoC4/PWM_MOT.c ****             
 1261              		.loc 1 95 0
 1262 000a 2368     		ldr	r3, [r4]
 1263 000c 8022     		mov	r2, #128
 1264 000e 9202     		lsl	r2, r2, #10
 1265 0010 1343     		orr	r3, r2
 1266 0012 2360     		str	r3, [r4]
 103:.\Generated_Source\PSoC4/PWM_MOT.c ****             #endif  /* (PWM_MOT_CY_TCPWM_V2 && PWM_MOT_PWM_UPDOWN_CNT_USED && !PWM_MOT_CY_TCPWM_400
 1267              		.loc 1 103 0
 1268 0014 0020     		mov	r0, #0
 1269 0016 FFF7FEFF 		bl	PWM_MOT_WriteCounter
 1270              	.LVL87:
 112:.\Generated_Source\PSoC4/PWM_MOT.c ****         #endif  /* (PWM_MOT__PWM == PWM_MOT_PWM_MODE) */
 1271              		.loc 1 112 0
 1272 001a 2368     		ldr	r3, [r4]
 1273 001c 2360     		str	r3, [r4]
 116:.\Generated_Source\PSoC4/PWM_MOT.c ****     
 1274              		.loc 1 116 0
 1275 001e C322     		mov	r2, #195
 1276 0020 9200     		lsl	r2, r2, #2
 1277 0022 094B     		ldr	r3, .L104+4
 1278 0024 1A60     		str	r2, [r3]
 119:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 1279              		.loc 1 119 0
 1280 0026 0020     		mov	r0, #0
 1281 0028 FFF7FEFF 		bl	PWM_MOT_SetInterruptMode
 1282              	.LVL88:
 137:.\Generated_Source\PSoC4/PWM_MOT.c ****             #endif  /* ( PWM_MOT_PWM_CENTER == PWM_MOT_PWM_ALIGN) */
 1283              		.loc 1 137 0
 1284 002c 1E22     		mov	r2, #30
 1285 002e 074B     		ldr	r3, .L104+8
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 47


 1286 0030 1A60     		str	r2, [r3]
 146:.\Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_WriteCompare(PWM_MOT_PWM_COMPARE_VALUE);
 1287              		.loc 1 146 0
 1288 0032 8020     		mov	r0, #128
 1289 0034 4001     		lsl	r0, r0, #5
 1290 0036 FFF7FEFF 		bl	PWM_MOT_WritePeriod
 1291              	.LVL89:
 147:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 1292              		.loc 1 147 0
 1293 003a 0120     		mov	r0, #1
 1294 003c FFF7FEFF 		bl	PWM_MOT_WriteCompare
 1295              	.LVL90:
 160:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 1296              		.loc 1 160 0
 1297              		@ sp needed
 1298 0040 10BD     		pop	{r4, pc}
 1299              	.L105:
 1300 0042 C046     		.align	2
 1301              	.L104:
 1302 0044 40010540 		.word	1074069824
 1303 0048 64010540 		.word	1074069860
 1304 004c 68010540 		.word	1074069864
 1305              		.cfi_endproc
 1306              	.LFE0:
 1307              		.size	PWM_MOT_Init, .-PWM_MOT_Init
 1308              		.section	.text.PWM_MOT_Start,"ax",%progbits
 1309              		.align	2
 1310              		.global	PWM_MOT_Start
 1311              		.code	16
 1312              		.thumb_func
 1313              		.type	PWM_MOT_Start, %function
 1314              	PWM_MOT_Start:
 1315              	.LFB2:
 231:.\Generated_Source\PSoC4/PWM_MOT.c ****     if (0u == PWM_MOT_initVar)
 1316              		.loc 1 231 0
 1317              		.cfi_startproc
 1318 0000 08B5     		push	{r3, lr}
 1319              		.cfi_def_cfa_offset 8
 1320              		.cfi_offset 3, -8
 1321              		.cfi_offset 14, -4
 232:.\Generated_Source\PSoC4/PWM_MOT.c ****     {
 1322              		.loc 1 232 0
 1323 0002 064B     		ldr	r3, .L108
 1324 0004 1B78     		ldrb	r3, [r3]
 1325 0006 002B     		cmp	r3, #0
 1326 0008 04D1     		bne	.L107
 234:.\Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_initVar = 1u;
 1327              		.loc 1 234 0
 1328 000a FFF7FEFF 		bl	PWM_MOT_Init
 1329              	.LVL91:
 235:.\Generated_Source\PSoC4/PWM_MOT.c ****     }
 1330              		.loc 1 235 0
 1331 000e 0122     		mov	r2, #1
 1332 0010 024B     		ldr	r3, .L108
 1333 0012 1A70     		strb	r2, [r3]
 1334              	.L107:
 238:.\Generated_Source\PSoC4/PWM_MOT.c **** }
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 48


 1335              		.loc 1 238 0
 1336 0014 FFF7FEFF 		bl	PWM_MOT_Enable
 1337              	.LVL92:
 239:.\Generated_Source\PSoC4/PWM_MOT.c **** 
 1338              		.loc 1 239 0
 1339              		@ sp needed
 1340 0018 08BD     		pop	{r3, pc}
 1341              	.L109:
 1342 001a C046     		.align	2
 1343              	.L108:
 1344 001c 00000000 		.word	.LANCHOR0
 1345              		.cfi_endproc
 1346              	.LFE2:
 1347              		.size	PWM_MOT_Start, .-PWM_MOT_Start
 1348              		.section	.text.PWM_MOT_GetInterruptSourceMasked,"ax",%progbits
 1349              		.align	2
 1350              		.global	PWM_MOT_GetInterruptSourceMasked
 1351              		.code	16
 1352              		.thumb_func
 1353              		.type	PWM_MOT_GetInterruptSourceMasked, %function
 1354              	PWM_MOT_GetInterruptSourceMasked:
 1355              	.LFB36:
1323:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1324:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1325:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
1326:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_GetInterruptSourceMasked
1327:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
1328:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1329:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
1330:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Gets the interrupt requests masked by the interrupt mask.
1331:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1332:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
1333:.\Generated_Source\PSoC4/PWM_MOT.c **** *   None
1334:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1335:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
1336:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Masked interrupt source
1337:.\Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
1338:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_INTR_MASK_TC       - Terminal count mask
1339:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_INTR_MASK_CC_MATCH - Compare count / capture mask
1340:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1341:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
1342:.\Generated_Source\PSoC4/PWM_MOT.c **** uint32 PWM_MOT_GetInterruptSourceMasked(void)
1343:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 1356              		.loc 1 1343 0
 1357              		.cfi_startproc
1344:.\Generated_Source\PSoC4/PWM_MOT.c ****     return (PWM_MOT_INTERRUPT_MASKED_REG);
 1358              		.loc 1 1344 0
 1359 0000 014B     		ldr	r3, .L111
 1360 0002 1868     		ldr	r0, [r3]
1345:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 1361              		.loc 1 1345 0
 1362              		@ sp needed
 1363 0004 7047     		bx	lr
 1364              	.L112:
 1365 0006 C046     		.align	2
 1366              	.L111:
 1367 0008 7C010540 		.word	1074069884
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 49


 1368              		.cfi_endproc
 1369              	.LFE36:
 1370              		.size	PWM_MOT_GetInterruptSourceMasked, .-PWM_MOT_GetInterruptSourceMasked
 1371              		.section	.text.PWM_MOT_GetInterruptSource,"ax",%progbits
 1372              		.align	2
 1373              		.global	PWM_MOT_GetInterruptSource
 1374              		.code	16
 1375              		.thumb_func
 1376              		.type	PWM_MOT_GetInterruptSource, %function
 1377              	PWM_MOT_GetInterruptSource:
 1378              	.LFB37:
1346:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1347:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1348:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
1349:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_GetInterruptSource
1350:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
1351:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1352:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
1353:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Gets the interrupt requests (without masking).
1354:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1355:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
1356:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
1357:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1358:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
1359:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Interrupt request value
1360:.\Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
1361:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_INTR_MASK_TC       - Terminal count mask
1362:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_INTR_MASK_CC_MATCH - Compare count / capture mask
1363:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1364:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
1365:.\Generated_Source\PSoC4/PWM_MOT.c **** uint32 PWM_MOT_GetInterruptSource(void)
1366:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 1379              		.loc 1 1366 0
 1380              		.cfi_startproc
1367:.\Generated_Source\PSoC4/PWM_MOT.c ****     return (PWM_MOT_INTERRUPT_REQ_REG);
 1381              		.loc 1 1367 0
 1382 0000 014B     		ldr	r3, .L114
 1383 0002 1868     		ldr	r0, [r3]
1368:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 1384              		.loc 1 1368 0
 1385              		@ sp needed
 1386 0004 7047     		bx	lr
 1387              	.L115:
 1388 0006 C046     		.align	2
 1389              	.L114:
 1390 0008 70010540 		.word	1074069872
 1391              		.cfi_endproc
 1392              	.LFE37:
 1393              		.size	PWM_MOT_GetInterruptSource, .-PWM_MOT_GetInterruptSource
 1394              		.section	.text.PWM_MOT_ClearInterrupt,"ax",%progbits
 1395              		.align	2
 1396              		.global	PWM_MOT_ClearInterrupt
 1397              		.code	16
 1398              		.thumb_func
 1399              		.type	PWM_MOT_ClearInterrupt, %function
 1400              	PWM_MOT_ClearInterrupt:
 1401              	.LFB38:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 50


1369:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1370:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1371:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
1372:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_ClearInterrupt
1373:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
1374:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1375:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
1376:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Clears the interrupt request.
1377:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1378:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
1379:.\Generated_Source\PSoC4/PWM_MOT.c **** *   interruptMask: Mask of interrupts to clear
1380:.\Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
1381:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_INTR_MASK_TC       - Terminal count mask
1382:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_INTR_MASK_CC_MATCH - Compare count / capture mask
1383:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1384:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
1385:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
1386:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1387:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
1388:.\Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_ClearInterrupt(uint32 interruptMask)
1389:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 1402              		.loc 1 1389 0
 1403              		.cfi_startproc
 1404              	.LVL93:
1390:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_INTERRUPT_REQ_REG = interruptMask;
 1405              		.loc 1 1390 0
 1406 0000 014B     		ldr	r3, .L117
 1407 0002 1860     		str	r0, [r3]
1391:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 1408              		.loc 1 1391 0
 1409              		@ sp needed
 1410 0004 7047     		bx	lr
 1411              	.L118:
 1412 0006 C046     		.align	2
 1413              	.L117:
 1414 0008 70010540 		.word	1074069872
 1415              		.cfi_endproc
 1416              	.LFE38:
 1417              		.size	PWM_MOT_ClearInterrupt, .-PWM_MOT_ClearInterrupt
 1418              		.section	.text.PWM_MOT_SetInterrupt,"ax",%progbits
 1419              		.align	2
 1420              		.global	PWM_MOT_SetInterrupt
 1421              		.code	16
 1422              		.thumb_func
 1423              		.type	PWM_MOT_SetInterrupt, %function
 1424              	PWM_MOT_SetInterrupt:
 1425              	.LFB39:
1392:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1393:.\Generated_Source\PSoC4/PWM_MOT.c **** 
1394:.\Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
1395:.\Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetInterrupt
1396:.\Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
1397:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1398:.\Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
1399:.\Generated_Source\PSoC4/PWM_MOT.c **** *  Sets a software interrupt request.
1400:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1401:.\Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 51


1402:.\Generated_Source\PSoC4/PWM_MOT.c **** *   interruptMask: Mask of interrupts to set
1403:.\Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
1404:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_INTR_MASK_TC       - Terminal count mask
1405:.\Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_INTR_MASK_CC_MATCH - Compare count / capture mask
1406:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1407:.\Generated_Source\PSoC4/PWM_MOT.c **** * Return:
1408:.\Generated_Source\PSoC4/PWM_MOT.c **** *  None
1409:.\Generated_Source\PSoC4/PWM_MOT.c **** *
1410:.\Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
1411:.\Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetInterrupt(uint32 interruptMask)
1412:.\Generated_Source\PSoC4/PWM_MOT.c **** {
 1426              		.loc 1 1412 0
 1427              		.cfi_startproc
 1428              	.LVL94:
1413:.\Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_INTERRUPT_SET_REG = interruptMask;
 1429              		.loc 1 1413 0
 1430 0000 014B     		ldr	r3, .L120
 1431 0002 1860     		str	r0, [r3]
1414:.\Generated_Source\PSoC4/PWM_MOT.c **** }
 1432              		.loc 1 1414 0
 1433              		@ sp needed
 1434 0004 7047     		bx	lr
 1435              	.L121:
 1436 0006 C046     		.align	2
 1437              	.L120:
 1438 0008 74010540 		.word	1074069876
 1439              		.cfi_endproc
 1440              	.LFE39:
 1441              		.size	PWM_MOT_SetInterrupt, .-PWM_MOT_SetInterrupt
 1442              		.global	PWM_MOT_initVar
 1443              		.bss
 1444              		.set	.LANCHOR0,. + 0
 1445              		.type	PWM_MOT_initVar, %object
 1446              		.size	PWM_MOT_initVar, 1
 1447              	PWM_MOT_initVar:
 1448 0000 00       		.space	1
 1449              		.text
 1450              	.Letext0:
 1451              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1452              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1453              		.section	.debug_info,"",%progbits
 1454              	.Ldebug_info0:
 1455 0000 00090000 		.4byte	0x900
 1456 0004 0400     		.2byte	0x4
 1457 0006 00000000 		.4byte	.Ldebug_abbrev0
 1458 000a 04       		.byte	0x4
 1459 000b 01       		.uleb128 0x1
 1460 000c FA040000 		.4byte	.LASF76
 1461 0010 01       		.byte	0x1
 1462 0011 62000000 		.4byte	.LASF77
 1463 0015 3F040000 		.4byte	.LASF78
 1464 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1465 001d 00000000 		.4byte	0
 1466 0021 00000000 		.4byte	.Ldebug_line0
 1467 0025 02       		.uleb128 0x2
 1468 0026 01       		.byte	0x1
 1469 0027 06       		.byte	0x6
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 52


 1470 0028 EF000000 		.4byte	.LASF0
 1471 002c 02       		.uleb128 0x2
 1472 002d 01       		.byte	0x1
 1473 002e 08       		.byte	0x8
 1474 002f 5B030000 		.4byte	.LASF1
 1475 0033 02       		.uleb128 0x2
 1476 0034 02       		.byte	0x2
 1477 0035 05       		.byte	0x5
 1478 0036 7A030000 		.4byte	.LASF2
 1479 003a 02       		.uleb128 0x2
 1480 003b 02       		.byte	0x2
 1481 003c 07       		.byte	0x7
 1482 003d 9D020000 		.4byte	.LASF3
 1483 0041 02       		.uleb128 0x2
 1484 0042 04       		.byte	0x4
 1485 0043 05       		.byte	0x5
 1486 0044 24010000 		.4byte	.LASF4
 1487 0048 02       		.uleb128 0x2
 1488 0049 04       		.byte	0x4
 1489 004a 07       		.byte	0x7
 1490 004b 27020000 		.4byte	.LASF5
 1491 004f 02       		.uleb128 0x2
 1492 0050 08       		.byte	0x8
 1493 0051 05       		.byte	0x5
 1494 0052 E1000000 		.4byte	.LASF6
 1495 0056 02       		.uleb128 0x2
 1496 0057 08       		.byte	0x8
 1497 0058 07       		.byte	0x7
 1498 0059 85000000 		.4byte	.LASF7
 1499 005d 03       		.uleb128 0x3
 1500 005e 04       		.byte	0x4
 1501 005f 05       		.byte	0x5
 1502 0060 696E7400 		.ascii	"int\000"
 1503 0064 02       		.uleb128 0x2
 1504 0065 04       		.byte	0x4
 1505 0066 07       		.byte	0x7
 1506 0067 FF010000 		.4byte	.LASF8
 1507 006b 04       		.uleb128 0x4
 1508 006c 2D010000 		.4byte	.LASF9
 1509 0070 02       		.byte	0x2
 1510 0071 9801     		.2byte	0x198
 1511 0073 2C000000 		.4byte	0x2c
 1512 0077 04       		.uleb128 0x4
 1513 0078 82010000 		.4byte	.LASF10
 1514 007c 02       		.byte	0x2
 1515 007d 9A01     		.2byte	0x19a
 1516 007f 48000000 		.4byte	0x48
 1517 0083 02       		.uleb128 0x2
 1518 0084 04       		.byte	0x4
 1519 0085 04       		.byte	0x4
 1520 0086 4B030000 		.4byte	.LASF11
 1521 008a 02       		.uleb128 0x2
 1522 008b 08       		.byte	0x8
 1523 008c 04       		.byte	0x4
 1524 008d 43010000 		.4byte	.LASF12
 1525 0091 02       		.uleb128 0x2
 1526 0092 01       		.byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 53


 1527 0093 08       		.byte	0x8
 1528 0094 35040000 		.4byte	.LASF13
 1529 0098 04       		.uleb128 0x4
 1530 0099 BE020000 		.4byte	.LASF14
 1531 009d 02       		.byte	0x2
 1532 009e 4402     		.2byte	0x244
 1533 00a0 A4000000 		.4byte	0xa4
 1534 00a4 05       		.uleb128 0x5
 1535 00a5 77000000 		.4byte	0x77
 1536 00a9 02       		.uleb128 0x2
 1537 00aa 04       		.byte	0x4
 1538 00ab 07       		.byte	0x7
 1539 00ac C4020000 		.4byte	.LASF15
 1540 00b0 06       		.uleb128 0x6
 1541 00b1 89010000 		.4byte	.LASF16
 1542 00b5 01       		.byte	0x1
 1543 00b6 0001     		.2byte	0x100
 1544 00b8 00000000 		.4byte	.LFB3
 1545 00bc 1C000000 		.4byte	.LFE3-.LFB3
 1546 00c0 01       		.uleb128 0x1
 1547 00c1 9C       		.byte	0x9c
 1548 00c2 E9000000 		.4byte	0xe9
 1549 00c6 07       		.uleb128 0x7
 1550 00c7 B8040000 		.4byte	.LASF18
 1551 00cb 01       		.byte	0x1
 1552 00cc 0201     		.2byte	0x102
 1553 00ce 6B000000 		.4byte	0x6b
 1554 00d2 00000000 		.4byte	.LLST0
 1555 00d6 08       		.uleb128 0x8
 1556 00d7 06000000 		.4byte	.LVL0
 1557 00db EB080000 		.4byte	0x8eb
 1558 00df 08       		.uleb128 0x8
 1559 00e0 14000000 		.4byte	.LVL1
 1560 00e4 F6080000 		.4byte	0x8f6
 1561 00e8 00       		.byte	0
 1562 00e9 06       		.uleb128 0x6
 1563 00ea 33010000 		.4byte	.LASF17
 1564 00ee 01       		.byte	0x1
 1565 00ef 2501     		.2byte	0x125
 1566 00f1 00000000 		.4byte	.LFB4
 1567 00f5 28000000 		.4byte	.LFE4-.LFB4
 1568 00f9 01       		.uleb128 0x1
 1569 00fa 9C       		.byte	0x9c
 1570 00fb 32010000 		.4byte	0x132
 1571 00ff 09       		.uleb128 0x9
 1572 0100 3A040000 		.4byte	.LASF20
 1573 0104 01       		.byte	0x1
 1574 0105 2501     		.2byte	0x125
 1575 0107 77000000 		.4byte	0x77
 1576 010b 13000000 		.4byte	.LLST1
 1577 010f 07       		.uleb128 0x7
 1578 0110 B8040000 		.4byte	.LASF18
 1579 0114 01       		.byte	0x1
 1580 0115 2701     		.2byte	0x127
 1581 0117 6B000000 		.4byte	0x6b
 1582 011b 3F000000 		.4byte	.LLST2
 1583 011f 08       		.uleb128 0x8
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 54


 1584 0120 08000000 		.4byte	.LVL3
 1585 0124 EB080000 		.4byte	0x8eb
 1586 0128 08       		.uleb128 0x8
 1587 0129 1C000000 		.4byte	.LVL5
 1588 012d F6080000 		.4byte	0x8f6
 1589 0131 00       		.byte	0
 1590 0132 06       		.uleb128 0x6
 1591 0133 8B020000 		.4byte	.LASF19
 1592 0137 01       		.byte	0x1
 1593 0138 4601     		.2byte	0x146
 1594 013a 00000000 		.4byte	.LFB5
 1595 013e 28000000 		.4byte	.LFE5-.LFB5
 1596 0142 01       		.uleb128 0x1
 1597 0143 9C       		.byte	0x9c
 1598 0144 7B010000 		.4byte	0x17b
 1599 0148 09       		.uleb128 0x9
 1600 0149 C1000000 		.4byte	.LASF21
 1601 014d 01       		.byte	0x1
 1602 014e 4601     		.2byte	0x146
 1603 0150 77000000 		.4byte	0x77
 1604 0154 52000000 		.4byte	.LLST3
 1605 0158 07       		.uleb128 0x7
 1606 0159 B8040000 		.4byte	.LASF18
 1607 015d 01       		.byte	0x1
 1608 015e 4801     		.2byte	0x148
 1609 0160 6B000000 		.4byte	0x6b
 1610 0164 7E000000 		.4byte	.LLST4
 1611 0168 08       		.uleb128 0x8
 1612 0169 08000000 		.4byte	.LVL7
 1613 016d EB080000 		.4byte	0x8eb
 1614 0171 08       		.uleb128 0x8
 1615 0172 1C000000 		.4byte	.LVL9
 1616 0176 F6080000 		.4byte	0x8f6
 1617 017a 00       		.byte	0
 1618 017b 06       		.uleb128 0x6
 1619 017c A8030000 		.4byte	.LASF22
 1620 0180 01       		.byte	0x1
 1621 0181 6B01     		.2byte	0x16b
 1622 0183 00000000 		.4byte	.LFB6
 1623 0187 28000000 		.4byte	.LFE6-.LFB6
 1624 018b 01       		.uleb128 0x1
 1625 018c 9C       		.byte	0x9c
 1626 018d C4010000 		.4byte	0x1c4
 1627 0191 09       		.uleb128 0x9
 1628 0192 51030000 		.4byte	.LASF23
 1629 0196 01       		.byte	0x1
 1630 0197 6B01     		.2byte	0x16b
 1631 0199 77000000 		.4byte	0x77
 1632 019d 91000000 		.4byte	.LLST5
 1633 01a1 07       		.uleb128 0x7
 1634 01a2 B8040000 		.4byte	.LASF18
 1635 01a6 01       		.byte	0x1
 1636 01a7 6D01     		.2byte	0x16d
 1637 01a9 6B000000 		.4byte	0x6b
 1638 01ad BD000000 		.4byte	.LLST6
 1639 01b1 08       		.uleb128 0x8
 1640 01b2 08000000 		.4byte	.LVL11
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 55


 1641 01b6 EB080000 		.4byte	0x8eb
 1642 01ba 08       		.uleb128 0x8
 1643 01bb 1C000000 		.4byte	.LVL13
 1644 01bf F6080000 		.4byte	0x8f6
 1645 01c3 00       		.byte	0
 1646 01c4 06       		.uleb128 0x6
 1647 01c5 38030000 		.4byte	.LASF24
 1648 01c9 01       		.byte	0x1
 1649 01ca 8B01     		.2byte	0x18b
 1650 01cc 00000000 		.4byte	.LFB7
 1651 01d0 2C000000 		.4byte	.LFE7-.LFB7
 1652 01d4 01       		.uleb128 0x1
 1653 01d5 9C       		.byte	0x9c
 1654 01d6 0D020000 		.4byte	0x20d
 1655 01da 09       		.uleb128 0x9
 1656 01db B0020000 		.4byte	.LASF25
 1657 01df 01       		.byte	0x1
 1658 01e0 8B01     		.2byte	0x18b
 1659 01e2 77000000 		.4byte	0x77
 1660 01e6 D0000000 		.4byte	.LLST7
 1661 01ea 07       		.uleb128 0x7
 1662 01eb B8040000 		.4byte	.LASF18
 1663 01ef 01       		.byte	0x1
 1664 01f0 8D01     		.2byte	0x18d
 1665 01f2 6B000000 		.4byte	0x6b
 1666 01f6 FC000000 		.4byte	.LLST8
 1667 01fa 08       		.uleb128 0x8
 1668 01fb 08000000 		.4byte	.LVL15
 1669 01ff EB080000 		.4byte	0x8eb
 1670 0203 08       		.uleb128 0x8
 1671 0204 22000000 		.4byte	.LVL17
 1672 0208 F6080000 		.4byte	0x8f6
 1673 020c 00       		.byte	0
 1674 020d 06       		.uleb128 0x6
 1675 020e F4030000 		.4byte	.LASF26
 1676 0212 01       		.byte	0x1
 1677 0213 C101     		.2byte	0x1c1
 1678 0215 00000000 		.4byte	.LFB8
 1679 0219 10000000 		.4byte	.LFE8-.LFB8
 1680 021d 01       		.uleb128 0x1
 1681 021e 9C       		.byte	0x9c
 1682 021f 34020000 		.4byte	0x234
 1683 0223 09       		.uleb128 0x9
 1684 0224 39020000 		.4byte	.LASF27
 1685 0228 01       		.byte	0x1
 1686 0229 C101     		.2byte	0x1c1
 1687 022b 77000000 		.4byte	0x77
 1688 022f 0F010000 		.4byte	.LLST9
 1689 0233 00       		.byte	0
 1690 0234 06       		.uleb128 0x6
 1691 0235 0C030000 		.4byte	.LASF28
 1692 0239 01       		.byte	0x1
 1693 023a E501     		.2byte	0x1e5
 1694 023c 00000000 		.4byte	.LFB9
 1695 0240 28000000 		.4byte	.LFE9-.LFB9
 1696 0244 01       		.uleb128 0x1
 1697 0245 9C       		.byte	0x9c
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 56


 1698 0246 7D020000 		.4byte	0x27d
 1699 024a 09       		.uleb128 0x9
 1700 024b CD020000 		.4byte	.LASF29
 1701 024f 01       		.byte	0x1
 1702 0250 E501     		.2byte	0x1e5
 1703 0252 77000000 		.4byte	0x77
 1704 0256 30010000 		.4byte	.LLST10
 1705 025a 07       		.uleb128 0x7
 1706 025b B8040000 		.4byte	.LASF18
 1707 025f 01       		.byte	0x1
 1708 0260 E701     		.2byte	0x1e7
 1709 0262 6B000000 		.4byte	0x6b
 1710 0266 5C010000 		.4byte	.LLST11
 1711 026a 08       		.uleb128 0x8
 1712 026b 08000000 		.4byte	.LVL21
 1713 026f EB080000 		.4byte	0x8eb
 1714 0273 08       		.uleb128 0x8
 1715 0274 22000000 		.4byte	.LVL23
 1716 0278 F6080000 		.4byte	0x8f6
 1717 027c 00       		.byte	0
 1718 027d 06       		.uleb128 0x6
 1719 027e C9040000 		.4byte	.LASF30
 1720 0282 01       		.byte	0x1
 1721 0283 0702     		.2byte	0x207
 1722 0285 00000000 		.4byte	.LFB10
 1723 0289 28000000 		.4byte	.LFE10-.LFB10
 1724 028d 01       		.uleb128 0x1
 1725 028e 9C       		.byte	0x9c
 1726 028f C6020000 		.4byte	0x2c6
 1727 0293 09       		.uleb128 0x9
 1728 0294 69030000 		.4byte	.LASF31
 1729 0298 01       		.byte	0x1
 1730 0299 0702     		.2byte	0x207
 1731 029b 77000000 		.4byte	0x77
 1732 029f 6F010000 		.4byte	.LLST12
 1733 02a3 07       		.uleb128 0x7
 1734 02a4 B8040000 		.4byte	.LASF18
 1735 02a8 01       		.byte	0x1
 1736 02a9 0902     		.2byte	0x209
 1737 02ab 6B000000 		.4byte	0x6b
 1738 02af 9B010000 		.4byte	.LLST13
 1739 02b3 08       		.uleb128 0x8
 1740 02b4 08000000 		.4byte	.LVL25
 1741 02b8 EB080000 		.4byte	0x8eb
 1742 02bc 08       		.uleb128 0x8
 1743 02bd 22000000 		.4byte	.LVL27
 1744 02c1 F6080000 		.4byte	0x8f6
 1745 02c5 00       		.byte	0
 1746 02c6 06       		.uleb128 0x6
 1747 02c7 A1040000 		.4byte	.LASF32
 1748 02cb 01       		.byte	0x1
 1749 02cc 2802     		.2byte	0x228
 1750 02ce 00000000 		.4byte	.LFB11
 1751 02d2 2C000000 		.4byte	.LFE11-.LFB11
 1752 02d6 01       		.uleb128 0x1
 1753 02d7 9C       		.byte	0x9c
 1754 02d8 0F030000 		.4byte	0x30f
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 57


 1755 02dc 09       		.uleb128 0x9
 1756 02dd CB010000 		.4byte	.LASF33
 1757 02e1 01       		.byte	0x1
 1758 02e2 2802     		.2byte	0x228
 1759 02e4 77000000 		.4byte	0x77
 1760 02e8 AE010000 		.4byte	.LLST14
 1761 02ec 07       		.uleb128 0x7
 1762 02ed B8040000 		.4byte	.LASF18
 1763 02f1 01       		.byte	0x1
 1764 02f2 2A02     		.2byte	0x22a
 1765 02f4 6B000000 		.4byte	0x6b
 1766 02f8 DA010000 		.4byte	.LLST15
 1767 02fc 08       		.uleb128 0x8
 1768 02fd 08000000 		.4byte	.LVL29
 1769 0301 EB080000 		.4byte	0x8eb
 1770 0305 08       		.uleb128 0x8
 1771 0306 20000000 		.4byte	.LVL31
 1772 030a F6080000 		.4byte	0x8f6
 1773 030e 00       		.byte	0
 1774 030f 06       		.uleb128 0x6
 1775 0310 DC020000 		.4byte	.LASF34
 1776 0314 01       		.byte	0x1
 1777 0315 4902     		.2byte	0x249
 1778 0317 00000000 		.4byte	.LFB12
 1779 031b 28000000 		.4byte	.LFE12-.LFB12
 1780 031f 01       		.uleb128 0x1
 1781 0320 9C       		.byte	0x9c
 1782 0321 58030000 		.4byte	0x358
 1783 0325 09       		.uleb128 0x9
 1784 0326 A2010000 		.4byte	.LASF35
 1785 032a 01       		.byte	0x1
 1786 032b 4902     		.2byte	0x249
 1787 032d 77000000 		.4byte	0x77
 1788 0331 ED010000 		.4byte	.LLST16
 1789 0335 07       		.uleb128 0x7
 1790 0336 B8040000 		.4byte	.LASF18
 1791 033a 01       		.byte	0x1
 1792 033b 4B02     		.2byte	0x24b
 1793 033d 6B000000 		.4byte	0x6b
 1794 0341 19020000 		.4byte	.LLST17
 1795 0345 08       		.uleb128 0x8
 1796 0346 08000000 		.4byte	.LVL33
 1797 034a EB080000 		.4byte	0x8eb
 1798 034e 08       		.uleb128 0x8
 1799 034f 1C000000 		.4byte	.LVL35
 1800 0353 F6080000 		.4byte	0x8f6
 1801 0357 00       		.byte	0
 1802 0358 06       		.uleb128 0x6
 1803 0359 BD030000 		.4byte	.LASF36
 1804 035d 01       		.byte	0x1
 1805 035e 6702     		.2byte	0x267
 1806 0360 00000000 		.4byte	.LFB13
 1807 0364 10000000 		.4byte	.LFE13-.LFB13
 1808 0368 01       		.uleb128 0x1
 1809 0369 9C       		.byte	0x9c
 1810 036a 7F030000 		.4byte	0x37f
 1811 036e 09       		.uleb128 0x9
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 58


 1812 036f 00000000 		.4byte	.LASF37
 1813 0373 01       		.byte	0x1
 1814 0374 6702     		.2byte	0x267
 1815 0376 77000000 		.4byte	0x77
 1816 037a 2C020000 		.4byte	.LLST18
 1817 037e 00       		.byte	0
 1818 037f 0A       		.uleb128 0xa
 1819 0380 82040000 		.4byte	.LASF42
 1820 0384 01       		.byte	0x1
 1821 0385 7B02     		.2byte	0x27b
 1822 0387 77000000 		.4byte	0x77
 1823 038b 00000000 		.4byte	.LFB14
 1824 038f 10000000 		.4byte	.LFE14-.LFB14
 1825 0393 01       		.uleb128 0x1
 1826 0394 9C       		.byte	0x9c
 1827 0395 06       		.uleb128 0x6
 1828 0396 9C050000 		.4byte	.LASF38
 1829 039a 01       		.byte	0x1
 1830 039b 9802     		.2byte	0x298
 1831 039d 00000000 		.4byte	.LFB15
 1832 03a1 28000000 		.4byte	.LFE15-.LFB15
 1833 03a5 01       		.uleb128 0x1
 1834 03a6 9C       		.byte	0x9c
 1835 03a7 DE030000 		.4byte	0x3de
 1836 03ab 09       		.uleb128 0x9
 1837 03ac 66040000 		.4byte	.LASF39
 1838 03b0 01       		.byte	0x1
 1839 03b1 9802     		.2byte	0x298
 1840 03b3 77000000 		.4byte	0x77
 1841 03b7 4D020000 		.4byte	.LLST19
 1842 03bb 07       		.uleb128 0x7
 1843 03bc B8040000 		.4byte	.LASF18
 1844 03c0 01       		.byte	0x1
 1845 03c1 9A02     		.2byte	0x29a
 1846 03c3 6B000000 		.4byte	0x6b
 1847 03c7 79020000 		.4byte	.LLST20
 1848 03cb 08       		.uleb128 0x8
 1849 03cc 08000000 		.4byte	.LVL39
 1850 03d0 EB080000 		.4byte	0x8eb
 1851 03d4 08       		.uleb128 0x8
 1852 03d5 1C000000 		.4byte	.LVL41
 1853 03d9 F6080000 		.4byte	0x8f6
 1854 03dd 00       		.byte	0
 1855 03de 06       		.uleb128 0x6
 1856 03df FB000000 		.4byte	.LASF40
 1857 03e3 01       		.byte	0x1
 1858 03e4 B502     		.2byte	0x2b5
 1859 03e6 00000000 		.4byte	.LFB16
 1860 03ea 10000000 		.4byte	.LFE16-.LFB16
 1861 03ee 01       		.uleb128 0x1
 1862 03ef 9C       		.byte	0x9c
 1863 03f0 05040000 		.4byte	0x405
 1864 03f4 09       		.uleb128 0x9
 1865 03f5 5B000000 		.4byte	.LASF41
 1866 03f9 01       		.byte	0x1
 1867 03fa B502     		.2byte	0x2b5
 1868 03fc 77000000 		.4byte	0x77
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 59


 1869 0400 8C020000 		.4byte	.LLST21
 1870 0404 00       		.byte	0
 1871 0405 0A       		.uleb128 0xa
 1872 0406 F1020000 		.4byte	.LASF43
 1873 040a 01       		.byte	0x1
 1874 040b C902     		.2byte	0x2c9
 1875 040d 77000000 		.4byte	0x77
 1876 0411 00000000 		.4byte	.LFB17
 1877 0415 10000000 		.4byte	.LFE17-.LFB17
 1878 0419 01       		.uleb128 0x1
 1879 041a 9C       		.byte	0x9c
 1880 041b 06       		.uleb128 0x6
 1881 041c 1E040000 		.4byte	.LASF44
 1882 0420 01       		.byte	0x1
 1883 0421 E302     		.2byte	0x2e3
 1884 0423 00000000 		.4byte	.LFB18
 1885 0427 24000000 		.4byte	.LFE18-.LFB18
 1886 042b 01       		.uleb128 0x1
 1887 042c 9C       		.byte	0x9c
 1888 042d 64040000 		.4byte	0x464
 1889 0431 09       		.uleb128 0x9
 1890 0432 91050000 		.4byte	.LASF45
 1891 0436 01       		.byte	0x1
 1892 0437 E302     		.2byte	0x2e3
 1893 0439 77000000 		.4byte	0x77
 1894 043d AD020000 		.4byte	.LLST22
 1895 0441 07       		.uleb128 0x7
 1896 0442 B8040000 		.4byte	.LASF18
 1897 0446 01       		.byte	0x1
 1898 0447 E502     		.2byte	0x2e5
 1899 0449 6B000000 		.4byte	0x6b
 1900 044d D9020000 		.4byte	.LLST23
 1901 0451 08       		.uleb128 0x8
 1902 0452 08000000 		.4byte	.LVL45
 1903 0456 EB080000 		.4byte	0x8eb
 1904 045a 08       		.uleb128 0x8
 1905 045b 1E000000 		.4byte	.LVL47
 1906 045f F6080000 		.4byte	0x8f6
 1907 0463 00       		.byte	0
 1908 0464 06       		.uleb128 0x6
 1909 0465 6B010000 		.4byte	.LASF46
 1910 0469 01       		.byte	0x1
 1911 046a FE02     		.2byte	0x2fe
 1912 046c 00000000 		.4byte	.LFB19
 1913 0470 10000000 		.4byte	.LFE19-.LFB19
 1914 0474 01       		.uleb128 0x1
 1915 0475 9C       		.byte	0x9c
 1916 0476 8B040000 		.4byte	0x48b
 1917 047a 09       		.uleb128 0x9
 1918 047b DF050000 		.4byte	.LASF47
 1919 047f 01       		.byte	0x1
 1920 0480 FE02     		.2byte	0x2fe
 1921 0482 77000000 		.4byte	0x77
 1922 0486 EC020000 		.4byte	.LLST24
 1923 048a 00       		.byte	0
 1924 048b 0A       		.uleb128 0xa
 1925 048c 45000000 		.4byte	.LASF48
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 60


 1926 0490 01       		.byte	0x1
 1927 0491 1203     		.2byte	0x312
 1928 0493 77000000 		.4byte	0x77
 1929 0497 00000000 		.4byte	.LFB20
 1930 049b 10000000 		.4byte	.LFE20-.LFB20
 1931 049f 01       		.uleb128 0x1
 1932 04a0 9C       		.byte	0x9c
 1933 04a1 06       		.uleb128 0x6
 1934 04a2 AB000000 		.4byte	.LASF49
 1935 04a6 01       		.byte	0x1
 1936 04a7 2C03     		.2byte	0x32c
 1937 04a9 00000000 		.4byte	.LFB21
 1938 04ad 28000000 		.4byte	.LFE21-.LFB21
 1939 04b1 01       		.uleb128 0x1
 1940 04b2 9C       		.byte	0x9c
 1941 04b3 EA040000 		.4byte	0x4ea
 1942 04b7 09       		.uleb128 0x9
 1943 04b8 91050000 		.4byte	.LASF45
 1944 04bc 01       		.byte	0x1
 1945 04bd 2C03     		.2byte	0x32c
 1946 04bf 77000000 		.4byte	0x77
 1947 04c3 0D030000 		.4byte	.LLST25
 1948 04c7 07       		.uleb128 0x7
 1949 04c8 B8040000 		.4byte	.LASF18
 1950 04cc 01       		.byte	0x1
 1951 04cd 2E03     		.2byte	0x32e
 1952 04cf 6B000000 		.4byte	0x6b
 1953 04d3 39030000 		.4byte	.LLST26
 1954 04d7 08       		.uleb128 0x8
 1955 04d8 08000000 		.4byte	.LVL51
 1956 04dc EB080000 		.4byte	0x8eb
 1957 04e0 08       		.uleb128 0x8
 1958 04e1 22000000 		.4byte	.LVL53
 1959 04e5 F6080000 		.4byte	0x8f6
 1960 04e9 00       		.byte	0
 1961 04ea 06       		.uleb128 0x6
 1962 04eb 23030000 		.4byte	.LASF50
 1963 04ef 01       		.byte	0x1
 1964 04f0 5103     		.2byte	0x351
 1965 04f2 00000000 		.4byte	.LFB22
 1966 04f6 10000000 		.4byte	.LFE22-.LFB22
 1967 04fa 01       		.uleb128 0x1
 1968 04fb 9C       		.byte	0x9c
 1969 04fc 11050000 		.4byte	0x511
 1970 0500 09       		.uleb128 0x9
 1971 0501 04030000 		.4byte	.LASF51
 1972 0505 01       		.byte	0x1
 1973 0506 5103     		.2byte	0x351
 1974 0508 77000000 		.4byte	0x77
 1975 050c 4C030000 		.4byte	.LLST27
 1976 0510 00       		.byte	0
 1977 0511 0A       		.uleb128 0xa
 1978 0512 E0030000 		.4byte	.LASF52
 1979 0516 01       		.byte	0x1
 1980 0517 8403     		.2byte	0x384
 1981 0519 77000000 		.4byte	0x77
 1982 051d 00000000 		.4byte	.LFB23
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 61


 1983 0521 10000000 		.4byte	.LFE23-.LFB23
 1984 0525 01       		.uleb128 0x1
 1985 0526 9C       		.byte	0x9c
 1986 0527 06       		.uleb128 0x6
 1987 0528 E2040000 		.4byte	.LASF53
 1988 052c 01       		.byte	0x1
 1989 052d BA03     		.2byte	0x3ba
 1990 052f 00000000 		.4byte	.LFB24
 1991 0533 10000000 		.4byte	.LFE24-.LFB24
 1992 0537 01       		.uleb128 0x1
 1993 0538 9C       		.byte	0x9c
 1994 0539 4E050000 		.4byte	0x54e
 1995 053d 09       		.uleb128 0x9
 1996 053e 96040000 		.4byte	.LASF54
 1997 0542 01       		.byte	0x1
 1998 0543 BA03     		.2byte	0x3ba
 1999 0545 77000000 		.4byte	0x77
 2000 0549 6D030000 		.4byte	.LLST28
 2001 054d 00       		.byte	0
 2002 054e 0A       		.uleb128 0xa
 2003 054f 07040000 		.4byte	.LASF55
 2004 0553 01       		.byte	0x1
 2005 0554 E803     		.2byte	0x3e8
 2006 0556 77000000 		.4byte	0x77
 2007 055a 00000000 		.4byte	.LFB25
 2008 055e 10000000 		.4byte	.LFE25-.LFB25
 2009 0562 01       		.uleb128 0x1
 2010 0563 9C       		.byte	0x9c
 2011 0564 0A       		.uleb128 0xa
 2012 0565 D4010000 		.4byte	.LASF56
 2013 0569 01       		.byte	0x1
 2014 056a 1604     		.2byte	0x416
 2015 056c 77000000 		.4byte	0x77
 2016 0570 00000000 		.4byte	.LFB26
 2017 0574 10000000 		.4byte	.LFE26-.LFB26
 2018 0578 01       		.uleb128 0x1
 2019 0579 9C       		.byte	0x9c
 2020 057a 0A       		.uleb128 0xa
 2021 057b 5D020000 		.4byte	.LASF57
 2022 057f 01       		.byte	0x1
 2023 0580 2B04     		.2byte	0x42b
 2024 0582 77000000 		.4byte	0x77
 2025 0586 00000000 		.4byte	.LFB27
 2026 058a 10000000 		.4byte	.LFE27-.LFB27
 2027 058e 01       		.uleb128 0x1
 2028 058f 9C       		.byte	0x9c
 2029 0590 06       		.uleb128 0x6
 2030 0591 E8010000 		.4byte	.LASF58
 2031 0595 01       		.byte	0x1
 2032 0596 4604     		.2byte	0x446
 2033 0598 00000000 		.4byte	.LFB28
 2034 059c 24000000 		.4byte	.LFE28-.LFB28
 2035 05a0 01       		.uleb128 0x1
 2036 05a1 9C       		.byte	0x9c
 2037 05a2 D9050000 		.4byte	0x5d9
 2038 05a6 09       		.uleb128 0x9
 2039 05a7 96010000 		.4byte	.LASF59
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 62


 2040 05ab 01       		.byte	0x1
 2041 05ac 4604     		.2byte	0x446
 2042 05ae 77000000 		.4byte	0x77
 2043 05b2 8E030000 		.4byte	.LLST29
 2044 05b6 07       		.uleb128 0x7
 2045 05b7 B8040000 		.4byte	.LASF18
 2046 05bb 01       		.byte	0x1
 2047 05bc 4804     		.2byte	0x448
 2048 05be 6B000000 		.4byte	0x6b
 2049 05c2 BA030000 		.4byte	.LLST30
 2050 05c6 08       		.uleb128 0x8
 2051 05c7 08000000 		.4byte	.LVL59
 2052 05cb EB080000 		.4byte	0x8eb
 2053 05cf 08       		.uleb128 0x8
 2054 05d0 1C000000 		.4byte	.LVL61
 2055 05d4 F6080000 		.4byte	0x8f6
 2056 05d8 00       		.byte	0
 2057 05d9 06       		.uleb128 0x6
 2058 05da A7010000 		.4byte	.LASF60
 2059 05de 01       		.byte	0x1
 2060 05df 6704     		.2byte	0x467
 2061 05e1 00000000 		.4byte	.LFB29
 2062 05e5 24000000 		.4byte	.LFE29-.LFB29
 2063 05e9 01       		.uleb128 0x1
 2064 05ea 9C       		.byte	0x9c
 2065 05eb 22060000 		.4byte	0x622
 2066 05ef 09       		.uleb128 0x9
 2067 05f0 96010000 		.4byte	.LASF59
 2068 05f4 01       		.byte	0x1
 2069 05f5 6704     		.2byte	0x467
 2070 05f7 77000000 		.4byte	0x77
 2071 05fb CD030000 		.4byte	.LLST31
 2072 05ff 07       		.uleb128 0x7
 2073 0600 B8040000 		.4byte	.LASF18
 2074 0604 01       		.byte	0x1
 2075 0605 6904     		.2byte	0x469
 2076 0607 6B000000 		.4byte	0x6b
 2077 060b F9030000 		.4byte	.LLST32
 2078 060f 08       		.uleb128 0x8
 2079 0610 08000000 		.4byte	.LVL63
 2080 0614 EB080000 		.4byte	0x8eb
 2081 0618 08       		.uleb128 0x8
 2082 0619 1E000000 		.4byte	.LVL65
 2083 061d F6080000 		.4byte	0x8f6
 2084 0621 00       		.byte	0
 2085 0622 06       		.uleb128 0x6
 2086 0623 CA050000 		.4byte	.LASF61
 2087 0627 01       		.byte	0x1
 2088 0628 8804     		.2byte	0x488
 2089 062a 00000000 		.4byte	.LFB30
 2090 062e 28000000 		.4byte	.LFE30-.LFB30
 2091 0632 01       		.uleb128 0x1
 2092 0633 9C       		.byte	0x9c
 2093 0634 6B060000 		.4byte	0x66b
 2094 0638 09       		.uleb128 0x9
 2095 0639 96010000 		.4byte	.LASF59
 2096 063d 01       		.byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 63


 2097 063e 8804     		.2byte	0x488
 2098 0640 77000000 		.4byte	0x77
 2099 0644 0C040000 		.4byte	.LLST33
 2100 0648 07       		.uleb128 0x7
 2101 0649 B8040000 		.4byte	.LASF18
 2102 064d 01       		.byte	0x1
 2103 064e 8A04     		.2byte	0x48a
 2104 0650 6B000000 		.4byte	0x6b
 2105 0654 38040000 		.4byte	.LLST34
 2106 0658 08       		.uleb128 0x8
 2107 0659 08000000 		.4byte	.LVL67
 2108 065d EB080000 		.4byte	0x8eb
 2109 0661 08       		.uleb128 0x8
 2110 0662 1E000000 		.4byte	.LVL69
 2111 0666 F6080000 		.4byte	0x8f6
 2112 066a 00       		.byte	0
 2113 066b 06       		.uleb128 0x6
 2114 066c 06000000 		.4byte	.LASF62
 2115 0670 01       		.byte	0x1
 2116 0671 A804     		.2byte	0x4a8
 2117 0673 00000000 		.4byte	.LFB31
 2118 0677 24000000 		.4byte	.LFE31-.LFB31
 2119 067b 01       		.uleb128 0x1
 2120 067c 9C       		.byte	0x9c
 2121 067d B4060000 		.4byte	0x6b4
 2122 0681 09       		.uleb128 0x9
 2123 0682 96010000 		.4byte	.LASF59
 2124 0686 01       		.byte	0x1
 2125 0687 A804     		.2byte	0x4a8
 2126 0689 77000000 		.4byte	0x77
 2127 068d 4B040000 		.4byte	.LLST35
 2128 0691 07       		.uleb128 0x7
 2129 0692 B8040000 		.4byte	.LASF18
 2130 0696 01       		.byte	0x1
 2131 0697 AA04     		.2byte	0x4aa
 2132 0699 6B000000 		.4byte	0x6b
 2133 069d 77040000 		.4byte	.LLST36
 2134 06a1 08       		.uleb128 0x8
 2135 06a2 08000000 		.4byte	.LVL71
 2136 06a6 EB080000 		.4byte	0x8eb
 2137 06aa 08       		.uleb128 0x8
 2138 06ab 1E000000 		.4byte	.LVL73
 2139 06af F6080000 		.4byte	0x8f6
 2140 06b3 00       		.byte	0
 2141 06b4 06       		.uleb128 0x6
 2142 06b5 0F010000 		.4byte	.LASF63
 2143 06b9 01       		.byte	0x1
 2144 06ba C904     		.2byte	0x4c9
 2145 06bc 00000000 		.4byte	.LFB32
 2146 06c0 24000000 		.4byte	.LFE32-.LFB32
 2147 06c4 01       		.uleb128 0x1
 2148 06c5 9C       		.byte	0x9c
 2149 06c6 FD060000 		.4byte	0x6fd
 2150 06ca 09       		.uleb128 0x9
 2151 06cb 96010000 		.4byte	.LASF59
 2152 06cf 01       		.byte	0x1
 2153 06d0 C904     		.2byte	0x4c9
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 64


 2154 06d2 77000000 		.4byte	0x77
 2155 06d6 8A040000 		.4byte	.LLST37
 2156 06da 07       		.uleb128 0x7
 2157 06db B8040000 		.4byte	.LASF18
 2158 06df 01       		.byte	0x1
 2159 06e0 CB04     		.2byte	0x4cb
 2160 06e2 6B000000 		.4byte	0x6b
 2161 06e6 B6040000 		.4byte	.LLST38
 2162 06ea 08       		.uleb128 0x8
 2163 06eb 08000000 		.4byte	.LVL75
 2164 06ef EB080000 		.4byte	0x8eb
 2165 06f3 08       		.uleb128 0x8
 2166 06f4 1E000000 		.4byte	.LVL77
 2167 06f8 F6080000 		.4byte	0x8f6
 2168 06fc 00       		.byte	0
 2169 06fd 06       		.uleb128 0x6
 2170 06fe B3050000 		.4byte	.LASF64
 2171 0702 01       		.byte	0x1
 2172 0703 F104     		.2byte	0x4f1
 2173 0705 00000000 		.4byte	.LFB33
 2174 0709 1C000000 		.4byte	.LFE33-.LFB33
 2175 070d 01       		.uleb128 0x1
 2176 070e 9C       		.byte	0x9c
 2177 070f 56070000 		.4byte	0x756
 2178 0713 09       		.uleb128 0x9
 2179 0714 A2010000 		.4byte	.LASF35
 2180 0718 01       		.byte	0x1
 2181 0719 F104     		.2byte	0x4f1
 2182 071b 77000000 		.4byte	0x77
 2183 071f C9040000 		.4byte	.LLST39
 2184 0723 09       		.uleb128 0x9
 2185 0724 1F020000 		.4byte	.LASF65
 2186 0728 01       		.byte	0x1
 2187 0729 F104     		.2byte	0x4f1
 2188 072b 77000000 		.4byte	0x77
 2189 072f F5040000 		.4byte	.LLST40
 2190 0733 07       		.uleb128 0x7
 2191 0734 B8040000 		.4byte	.LASF18
 2192 0738 01       		.byte	0x1
 2193 0739 F304     		.2byte	0x4f3
 2194 073b 6B000000 		.4byte	0x6b
 2195 073f 21050000 		.4byte	.LLST41
 2196 0743 08       		.uleb128 0x8
 2197 0744 0A000000 		.4byte	.LVL79
 2198 0748 EB080000 		.4byte	0x8eb
 2199 074c 08       		.uleb128 0x8
 2200 074d 14000000 		.4byte	.LVL81
 2201 0751 F6080000 		.4byte	0x8f6
 2202 0755 00       		.byte	0
 2203 0756 0B       		.uleb128 0xb
 2204 0757 9C000000 		.4byte	.LASF66
 2205 075b 01       		.byte	0x1
 2206 075c B1       		.byte	0xb1
 2207 075d 00000000 		.4byte	.LFB1
 2208 0761 24000000 		.4byte	.LFE1-.LFB1
 2209 0765 01       		.uleb128 0x1
 2210 0766 9C       		.byte	0x9c
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 65


 2211 0767 A1070000 		.4byte	0x7a1
 2212 076b 0C       		.uleb128 0xc
 2213 076c B8040000 		.4byte	.LASF18
 2214 0770 01       		.byte	0x1
 2215 0771 B3       		.byte	0xb3
 2216 0772 6B000000 		.4byte	0x6b
 2217 0776 34050000 		.4byte	.LLST42
 2218 077a 08       		.uleb128 0x8
 2219 077b 06000000 		.4byte	.LVL83
 2220 077f EB080000 		.4byte	0x8eb
 2221 0783 08       		.uleb128 0x8
 2222 0784 14000000 		.4byte	.LVL84
 2223 0788 F6080000 		.4byte	0x8f6
 2224 078c 0D       		.uleb128 0xd
 2225 078d 1C000000 		.4byte	.LVL85
 2226 0791 FD060000 		.4byte	0x6fd
 2227 0795 0E       		.uleb128 0xe
 2228 0796 01       		.uleb128 0x1
 2229 0797 51       		.byte	0x51
 2230 0798 01       		.uleb128 0x1
 2231 0799 48       		.byte	0x48
 2232 079a 0E       		.uleb128 0xe
 2233 079b 01       		.uleb128 0x1
 2234 079c 50       		.byte	0x50
 2235 079d 01       		.uleb128 0x1
 2236 079e 32       		.byte	0x32
 2237 079f 00       		.byte	0
 2238 07a0 00       		.byte	0
 2239 07a1 0A       		.uleb128 0xa
 2240 07a2 0C020000 		.4byte	.LASF67
 2241 07a6 01       		.byte	0x1
 2242 07a7 0E05     		.2byte	0x50e
 2243 07a9 77000000 		.4byte	0x77
 2244 07ad 00000000 		.4byte	.LFB34
 2245 07b1 14000000 		.4byte	.LFE34-.LFB34
 2246 07b5 01       		.uleb128 0x1
 2247 07b6 9C       		.byte	0x9c
 2248 07b7 06       		.uleb128 0x6
 2249 07b8 C8000000 		.4byte	.LASF68
 2250 07bc 01       		.byte	0x1
 2251 07bd 2705     		.2byte	0x527
 2252 07bf 00000000 		.4byte	.LFB35
 2253 07c3 0C000000 		.4byte	.LFE35-.LFB35
 2254 07c7 01       		.uleb128 0x1
 2255 07c8 9C       		.byte	0x9c
 2256 07c9 DC070000 		.4byte	0x7dc
 2257 07cd 0F       		.uleb128 0xf
 2258 07ce D2030000 		.4byte	.LASF69
 2259 07d2 01       		.byte	0x1
 2260 07d3 2705     		.2byte	0x527
 2261 07d5 77000000 		.4byte	0x77
 2262 07d9 01       		.uleb128 0x1
 2263 07da 50       		.byte	0x50
 2264 07db 00       		.byte	0
 2265 07dc 0B       		.uleb128 0xb
 2266 07dd 84030000 		.4byte	.LASF70
 2267 07e1 01       		.byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 66


 2268 07e2 26       		.byte	0x26
 2269 07e3 00000000 		.4byte	.LFB0
 2270 07e7 50000000 		.4byte	.LFE0-.LFB0
 2271 07eb 01       		.uleb128 0x1
 2272 07ec 9C       		.byte	0x9c
 2273 07ed 3C080000 		.4byte	0x83c
 2274 07f1 10       		.uleb128 0x10
 2275 07f2 1A000000 		.4byte	.LVL87
 2276 07f6 58030000 		.4byte	0x358
 2277 07fa 04080000 		.4byte	0x804
 2278 07fe 0E       		.uleb128 0xe
 2279 07ff 01       		.uleb128 0x1
 2280 0800 50       		.byte	0x50
 2281 0801 01       		.uleb128 0x1
 2282 0802 30       		.byte	0x30
 2283 0803 00       		.byte	0
 2284 0804 10       		.uleb128 0x10
 2285 0805 2C000000 		.4byte	.LVL88
 2286 0809 B7070000 		.4byte	0x7b7
 2287 080d 17080000 		.4byte	0x817
 2288 0811 0E       		.uleb128 0xe
 2289 0812 01       		.uleb128 0x1
 2290 0813 50       		.byte	0x50
 2291 0814 01       		.uleb128 0x1
 2292 0815 30       		.byte	0x30
 2293 0816 00       		.byte	0
 2294 0817 10       		.uleb128 0x10
 2295 0818 3A000000 		.4byte	.LVL89
 2296 081c DE030000 		.4byte	0x3de
 2297 0820 2C080000 		.4byte	0x82c
 2298 0824 0E       		.uleb128 0xe
 2299 0825 01       		.uleb128 0x1
 2300 0826 50       		.byte	0x50
 2301 0827 03       		.uleb128 0x3
 2302 0828 0A       		.byte	0xa
 2303 0829 0010     		.2byte	0x1000
 2304 082b 00       		.byte	0
 2305 082c 0D       		.uleb128 0xd
 2306 082d 40000000 		.4byte	.LVL90
 2307 0831 EA040000 		.4byte	0x4ea
 2308 0835 0E       		.uleb128 0xe
 2309 0836 01       		.uleb128 0x1
 2310 0837 50       		.byte	0x50
 2311 0838 01       		.uleb128 0x1
 2312 0839 31       		.byte	0x31
 2313 083a 00       		.byte	0
 2314 083b 00       		.byte	0
 2315 083c 0B       		.uleb128 0xb
 2316 083d BD010000 		.4byte	.LASF71
 2317 0841 01       		.byte	0x1
 2318 0842 E6       		.byte	0xe6
 2319 0843 00000000 		.4byte	.LFB2
 2320 0847 20000000 		.4byte	.LFE2-.LFB2
 2321 084b 01       		.uleb128 0x1
 2322 084c 9C       		.byte	0x9c
 2323 084d 64080000 		.4byte	0x864
 2324 0851 08       		.uleb128 0x8
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 67


 2325 0852 0E000000 		.4byte	.LVL91
 2326 0856 DC070000 		.4byte	0x7dc
 2327 085a 08       		.uleb128 0x8
 2328 085b 18000000 		.4byte	.LVL92
 2329 085f 56070000 		.4byte	0x756
 2330 0863 00       		.byte	0
 2331 0864 0A       		.uleb128 0xa
 2332 0865 4A010000 		.4byte	.LASF72
 2333 0869 01       		.byte	0x1
 2334 086a 3E05     		.2byte	0x53e
 2335 086c 77000000 		.4byte	0x77
 2336 0870 00000000 		.4byte	.LFB36
 2337 0874 0C000000 		.4byte	.LFE36-.LFB36
 2338 0878 01       		.uleb128 0x1
 2339 0879 9C       		.byte	0x9c
 2340 087a 0A       		.uleb128 0xa
 2341 087b 42020000 		.4byte	.LASF73
 2342 087f 01       		.byte	0x1
 2343 0880 5505     		.2byte	0x555
 2344 0882 77000000 		.4byte	0x77
 2345 0886 00000000 		.4byte	.LFB37
 2346 088a 0C000000 		.4byte	.LFE37-.LFB37
 2347 088e 01       		.uleb128 0x1
 2348 088f 9C       		.byte	0x9c
 2349 0890 06       		.uleb128 0x6
 2350 0891 91030000 		.4byte	.LASF74
 2351 0895 01       		.byte	0x1
 2352 0896 6C05     		.2byte	0x56c
 2353 0898 00000000 		.4byte	.LFB38
 2354 089c 0C000000 		.4byte	.LFE38-.LFB38
 2355 08a0 01       		.uleb128 0x1
 2356 08a1 9C       		.byte	0x9c
 2357 08a2 B5080000 		.4byte	0x8b5
 2358 08a6 0F       		.uleb128 0xf
 2359 08a7 D2030000 		.4byte	.LASF69
 2360 08ab 01       		.byte	0x1
 2361 08ac 6C05     		.2byte	0x56c
 2362 08ae 77000000 		.4byte	0x77
 2363 08b2 01       		.uleb128 0x1
 2364 08b3 50       		.byte	0x50
 2365 08b4 00       		.byte	0
 2366 08b5 06       		.uleb128 0x6
 2367 08b6 30000000 		.4byte	.LASF75
 2368 08ba 01       		.byte	0x1
 2369 08bb 8305     		.2byte	0x583
 2370 08bd 00000000 		.4byte	.LFB39
 2371 08c1 0C000000 		.4byte	.LFE39-.LFB39
 2372 08c5 01       		.uleb128 0x1
 2373 08c6 9C       		.byte	0x9c
 2374 08c7 DA080000 		.4byte	0x8da
 2375 08cb 0F       		.uleb128 0xf
 2376 08cc D2030000 		.4byte	.LASF69
 2377 08d0 01       		.byte	0x1
 2378 08d1 8305     		.2byte	0x583
 2379 08d3 77000000 		.4byte	0x77
 2380 08d7 01       		.uleb128 0x1
 2381 08d8 50       		.byte	0x50
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 68


 2382 08d9 00       		.byte	0
 2383 08da 11       		.uleb128 0x11
 2384 08db 72040000 		.4byte	.LASF79
 2385 08df 01       		.byte	0x1
 2386 08e0 15       		.byte	0x15
 2387 08e1 6B000000 		.4byte	0x6b
 2388 08e5 05       		.uleb128 0x5
 2389 08e6 03       		.byte	0x3
 2390 08e7 00000000 		.4byte	PWM_MOT_initVar
 2391 08eb 12       		.uleb128 0x12
 2392 08ec 74020000 		.4byte	.LASF80
 2393 08f0 03       		.byte	0x3
 2394 08f1 E3       		.byte	0xe3
 2395 08f2 6B000000 		.4byte	0x6b
 2396 08f6 13       		.uleb128 0x13
 2397 08f7 1A000000 		.4byte	.LASF81
 2398 08fb 03       		.byte	0x3
 2399 08fc E4       		.byte	0xe4
 2400 08fd 14       		.uleb128 0x14
 2401 08fe 6B000000 		.4byte	0x6b
 2402 0902 00       		.byte	0
 2403 0903 00       		.byte	0
 2404              		.section	.debug_abbrev,"",%progbits
 2405              	.Ldebug_abbrev0:
 2406 0000 01       		.uleb128 0x1
 2407 0001 11       		.uleb128 0x11
 2408 0002 01       		.byte	0x1
 2409 0003 25       		.uleb128 0x25
 2410 0004 0E       		.uleb128 0xe
 2411 0005 13       		.uleb128 0x13
 2412 0006 0B       		.uleb128 0xb
 2413 0007 03       		.uleb128 0x3
 2414 0008 0E       		.uleb128 0xe
 2415 0009 1B       		.uleb128 0x1b
 2416 000a 0E       		.uleb128 0xe
 2417 000b 55       		.uleb128 0x55
 2418 000c 17       		.uleb128 0x17
 2419 000d 11       		.uleb128 0x11
 2420 000e 01       		.uleb128 0x1
 2421 000f 10       		.uleb128 0x10
 2422 0010 17       		.uleb128 0x17
 2423 0011 00       		.byte	0
 2424 0012 00       		.byte	0
 2425 0013 02       		.uleb128 0x2
 2426 0014 24       		.uleb128 0x24
 2427 0015 00       		.byte	0
 2428 0016 0B       		.uleb128 0xb
 2429 0017 0B       		.uleb128 0xb
 2430 0018 3E       		.uleb128 0x3e
 2431 0019 0B       		.uleb128 0xb
 2432 001a 03       		.uleb128 0x3
 2433 001b 0E       		.uleb128 0xe
 2434 001c 00       		.byte	0
 2435 001d 00       		.byte	0
 2436 001e 03       		.uleb128 0x3
 2437 001f 24       		.uleb128 0x24
 2438 0020 00       		.byte	0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 69


 2439 0021 0B       		.uleb128 0xb
 2440 0022 0B       		.uleb128 0xb
 2441 0023 3E       		.uleb128 0x3e
 2442 0024 0B       		.uleb128 0xb
 2443 0025 03       		.uleb128 0x3
 2444 0026 08       		.uleb128 0x8
 2445 0027 00       		.byte	0
 2446 0028 00       		.byte	0
 2447 0029 04       		.uleb128 0x4
 2448 002a 16       		.uleb128 0x16
 2449 002b 00       		.byte	0
 2450 002c 03       		.uleb128 0x3
 2451 002d 0E       		.uleb128 0xe
 2452 002e 3A       		.uleb128 0x3a
 2453 002f 0B       		.uleb128 0xb
 2454 0030 3B       		.uleb128 0x3b
 2455 0031 05       		.uleb128 0x5
 2456 0032 49       		.uleb128 0x49
 2457 0033 13       		.uleb128 0x13
 2458 0034 00       		.byte	0
 2459 0035 00       		.byte	0
 2460 0036 05       		.uleb128 0x5
 2461 0037 35       		.uleb128 0x35
 2462 0038 00       		.byte	0
 2463 0039 49       		.uleb128 0x49
 2464 003a 13       		.uleb128 0x13
 2465 003b 00       		.byte	0
 2466 003c 00       		.byte	0
 2467 003d 06       		.uleb128 0x6
 2468 003e 2E       		.uleb128 0x2e
 2469 003f 01       		.byte	0x1
 2470 0040 3F       		.uleb128 0x3f
 2471 0041 19       		.uleb128 0x19
 2472 0042 03       		.uleb128 0x3
 2473 0043 0E       		.uleb128 0xe
 2474 0044 3A       		.uleb128 0x3a
 2475 0045 0B       		.uleb128 0xb
 2476 0046 3B       		.uleb128 0x3b
 2477 0047 05       		.uleb128 0x5
 2478 0048 27       		.uleb128 0x27
 2479 0049 19       		.uleb128 0x19
 2480 004a 11       		.uleb128 0x11
 2481 004b 01       		.uleb128 0x1
 2482 004c 12       		.uleb128 0x12
 2483 004d 06       		.uleb128 0x6
 2484 004e 40       		.uleb128 0x40
 2485 004f 18       		.uleb128 0x18
 2486 0050 9742     		.uleb128 0x2117
 2487 0052 19       		.uleb128 0x19
 2488 0053 01       		.uleb128 0x1
 2489 0054 13       		.uleb128 0x13
 2490 0055 00       		.byte	0
 2491 0056 00       		.byte	0
 2492 0057 07       		.uleb128 0x7
 2493 0058 34       		.uleb128 0x34
 2494 0059 00       		.byte	0
 2495 005a 03       		.uleb128 0x3
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 70


 2496 005b 0E       		.uleb128 0xe
 2497 005c 3A       		.uleb128 0x3a
 2498 005d 0B       		.uleb128 0xb
 2499 005e 3B       		.uleb128 0x3b
 2500 005f 05       		.uleb128 0x5
 2501 0060 49       		.uleb128 0x49
 2502 0061 13       		.uleb128 0x13
 2503 0062 02       		.uleb128 0x2
 2504 0063 17       		.uleb128 0x17
 2505 0064 00       		.byte	0
 2506 0065 00       		.byte	0
 2507 0066 08       		.uleb128 0x8
 2508 0067 898201   		.uleb128 0x4109
 2509 006a 00       		.byte	0
 2510 006b 11       		.uleb128 0x11
 2511 006c 01       		.uleb128 0x1
 2512 006d 31       		.uleb128 0x31
 2513 006e 13       		.uleb128 0x13
 2514 006f 00       		.byte	0
 2515 0070 00       		.byte	0
 2516 0071 09       		.uleb128 0x9
 2517 0072 05       		.uleb128 0x5
 2518 0073 00       		.byte	0
 2519 0074 03       		.uleb128 0x3
 2520 0075 0E       		.uleb128 0xe
 2521 0076 3A       		.uleb128 0x3a
 2522 0077 0B       		.uleb128 0xb
 2523 0078 3B       		.uleb128 0x3b
 2524 0079 05       		.uleb128 0x5
 2525 007a 49       		.uleb128 0x49
 2526 007b 13       		.uleb128 0x13
 2527 007c 02       		.uleb128 0x2
 2528 007d 17       		.uleb128 0x17
 2529 007e 00       		.byte	0
 2530 007f 00       		.byte	0
 2531 0080 0A       		.uleb128 0xa
 2532 0081 2E       		.uleb128 0x2e
 2533 0082 00       		.byte	0
 2534 0083 3F       		.uleb128 0x3f
 2535 0084 19       		.uleb128 0x19
 2536 0085 03       		.uleb128 0x3
 2537 0086 0E       		.uleb128 0xe
 2538 0087 3A       		.uleb128 0x3a
 2539 0088 0B       		.uleb128 0xb
 2540 0089 3B       		.uleb128 0x3b
 2541 008a 05       		.uleb128 0x5
 2542 008b 27       		.uleb128 0x27
 2543 008c 19       		.uleb128 0x19
 2544 008d 49       		.uleb128 0x49
 2545 008e 13       		.uleb128 0x13
 2546 008f 11       		.uleb128 0x11
 2547 0090 01       		.uleb128 0x1
 2548 0091 12       		.uleb128 0x12
 2549 0092 06       		.uleb128 0x6
 2550 0093 40       		.uleb128 0x40
 2551 0094 18       		.uleb128 0x18
 2552 0095 9742     		.uleb128 0x2117
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 71


 2553 0097 19       		.uleb128 0x19
 2554 0098 00       		.byte	0
 2555 0099 00       		.byte	0
 2556 009a 0B       		.uleb128 0xb
 2557 009b 2E       		.uleb128 0x2e
 2558 009c 01       		.byte	0x1
 2559 009d 3F       		.uleb128 0x3f
 2560 009e 19       		.uleb128 0x19
 2561 009f 03       		.uleb128 0x3
 2562 00a0 0E       		.uleb128 0xe
 2563 00a1 3A       		.uleb128 0x3a
 2564 00a2 0B       		.uleb128 0xb
 2565 00a3 3B       		.uleb128 0x3b
 2566 00a4 0B       		.uleb128 0xb
 2567 00a5 27       		.uleb128 0x27
 2568 00a6 19       		.uleb128 0x19
 2569 00a7 11       		.uleb128 0x11
 2570 00a8 01       		.uleb128 0x1
 2571 00a9 12       		.uleb128 0x12
 2572 00aa 06       		.uleb128 0x6
 2573 00ab 40       		.uleb128 0x40
 2574 00ac 18       		.uleb128 0x18
 2575 00ad 9742     		.uleb128 0x2117
 2576 00af 19       		.uleb128 0x19
 2577 00b0 01       		.uleb128 0x1
 2578 00b1 13       		.uleb128 0x13
 2579 00b2 00       		.byte	0
 2580 00b3 00       		.byte	0
 2581 00b4 0C       		.uleb128 0xc
 2582 00b5 34       		.uleb128 0x34
 2583 00b6 00       		.byte	0
 2584 00b7 03       		.uleb128 0x3
 2585 00b8 0E       		.uleb128 0xe
 2586 00b9 3A       		.uleb128 0x3a
 2587 00ba 0B       		.uleb128 0xb
 2588 00bb 3B       		.uleb128 0x3b
 2589 00bc 0B       		.uleb128 0xb
 2590 00bd 49       		.uleb128 0x49
 2591 00be 13       		.uleb128 0x13
 2592 00bf 02       		.uleb128 0x2
 2593 00c0 17       		.uleb128 0x17
 2594 00c1 00       		.byte	0
 2595 00c2 00       		.byte	0
 2596 00c3 0D       		.uleb128 0xd
 2597 00c4 898201   		.uleb128 0x4109
 2598 00c7 01       		.byte	0x1
 2599 00c8 11       		.uleb128 0x11
 2600 00c9 01       		.uleb128 0x1
 2601 00ca 31       		.uleb128 0x31
 2602 00cb 13       		.uleb128 0x13
 2603 00cc 00       		.byte	0
 2604 00cd 00       		.byte	0
 2605 00ce 0E       		.uleb128 0xe
 2606 00cf 8A8201   		.uleb128 0x410a
 2607 00d2 00       		.byte	0
 2608 00d3 02       		.uleb128 0x2
 2609 00d4 18       		.uleb128 0x18
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 72


 2610 00d5 9142     		.uleb128 0x2111
 2611 00d7 18       		.uleb128 0x18
 2612 00d8 00       		.byte	0
 2613 00d9 00       		.byte	0
 2614 00da 0F       		.uleb128 0xf
 2615 00db 05       		.uleb128 0x5
 2616 00dc 00       		.byte	0
 2617 00dd 03       		.uleb128 0x3
 2618 00de 0E       		.uleb128 0xe
 2619 00df 3A       		.uleb128 0x3a
 2620 00e0 0B       		.uleb128 0xb
 2621 00e1 3B       		.uleb128 0x3b
 2622 00e2 05       		.uleb128 0x5
 2623 00e3 49       		.uleb128 0x49
 2624 00e4 13       		.uleb128 0x13
 2625 00e5 02       		.uleb128 0x2
 2626 00e6 18       		.uleb128 0x18
 2627 00e7 00       		.byte	0
 2628 00e8 00       		.byte	0
 2629 00e9 10       		.uleb128 0x10
 2630 00ea 898201   		.uleb128 0x4109
 2631 00ed 01       		.byte	0x1
 2632 00ee 11       		.uleb128 0x11
 2633 00ef 01       		.uleb128 0x1
 2634 00f0 31       		.uleb128 0x31
 2635 00f1 13       		.uleb128 0x13
 2636 00f2 01       		.uleb128 0x1
 2637 00f3 13       		.uleb128 0x13
 2638 00f4 00       		.byte	0
 2639 00f5 00       		.byte	0
 2640 00f6 11       		.uleb128 0x11
 2641 00f7 34       		.uleb128 0x34
 2642 00f8 00       		.byte	0
 2643 00f9 03       		.uleb128 0x3
 2644 00fa 0E       		.uleb128 0xe
 2645 00fb 3A       		.uleb128 0x3a
 2646 00fc 0B       		.uleb128 0xb
 2647 00fd 3B       		.uleb128 0x3b
 2648 00fe 0B       		.uleb128 0xb
 2649 00ff 49       		.uleb128 0x49
 2650 0100 13       		.uleb128 0x13
 2651 0101 3F       		.uleb128 0x3f
 2652 0102 19       		.uleb128 0x19
 2653 0103 02       		.uleb128 0x2
 2654 0104 18       		.uleb128 0x18
 2655 0105 00       		.byte	0
 2656 0106 00       		.byte	0
 2657 0107 12       		.uleb128 0x12
 2658 0108 2E       		.uleb128 0x2e
 2659 0109 00       		.byte	0
 2660 010a 3F       		.uleb128 0x3f
 2661 010b 19       		.uleb128 0x19
 2662 010c 03       		.uleb128 0x3
 2663 010d 0E       		.uleb128 0xe
 2664 010e 3A       		.uleb128 0x3a
 2665 010f 0B       		.uleb128 0xb
 2666 0110 3B       		.uleb128 0x3b
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 73


 2667 0111 0B       		.uleb128 0xb
 2668 0112 27       		.uleb128 0x27
 2669 0113 19       		.uleb128 0x19
 2670 0114 49       		.uleb128 0x49
 2671 0115 13       		.uleb128 0x13
 2672 0116 3C       		.uleb128 0x3c
 2673 0117 19       		.uleb128 0x19
 2674 0118 00       		.byte	0
 2675 0119 00       		.byte	0
 2676 011a 13       		.uleb128 0x13
 2677 011b 2E       		.uleb128 0x2e
 2678 011c 01       		.byte	0x1
 2679 011d 3F       		.uleb128 0x3f
 2680 011e 19       		.uleb128 0x19
 2681 011f 03       		.uleb128 0x3
 2682 0120 0E       		.uleb128 0xe
 2683 0121 3A       		.uleb128 0x3a
 2684 0122 0B       		.uleb128 0xb
 2685 0123 3B       		.uleb128 0x3b
 2686 0124 0B       		.uleb128 0xb
 2687 0125 27       		.uleb128 0x27
 2688 0126 19       		.uleb128 0x19
 2689 0127 3C       		.uleb128 0x3c
 2690 0128 19       		.uleb128 0x19
 2691 0129 00       		.byte	0
 2692 012a 00       		.byte	0
 2693 012b 14       		.uleb128 0x14
 2694 012c 05       		.uleb128 0x5
 2695 012d 00       		.byte	0
 2696 012e 49       		.uleb128 0x49
 2697 012f 13       		.uleb128 0x13
 2698 0130 00       		.byte	0
 2699 0131 00       		.byte	0
 2700 0132 00       		.byte	0
 2701              		.section	.debug_loc,"",%progbits
 2702              	.Ldebug_loc0:
 2703              	.LLST0:
 2704 0000 06000000 		.4byte	.LVL0
 2705 0004 13000000 		.4byte	.LVL1-1
 2706 0008 0100     		.2byte	0x1
 2707 000a 50       		.byte	0x50
 2708 000b 00000000 		.4byte	0
 2709 000f 00000000 		.4byte	0
 2710              	.LLST1:
 2711 0013 00000000 		.4byte	.LVL2
 2712 0017 07000000 		.4byte	.LVL3-1
 2713 001b 0100     		.2byte	0x1
 2714 001d 50       		.byte	0x50
 2715 001e 07000000 		.4byte	.LVL3-1
 2716 0022 16000000 		.4byte	.LVL4
 2717 0026 0100     		.2byte	0x1
 2718 0028 54       		.byte	0x54
 2719 0029 16000000 		.4byte	.LVL4
 2720 002d 28000000 		.4byte	.LFE4
 2721 0031 0400     		.2byte	0x4
 2722 0033 F3       		.byte	0xf3
 2723 0034 01       		.uleb128 0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 74


 2724 0035 50       		.byte	0x50
 2725 0036 9F       		.byte	0x9f
 2726 0037 00000000 		.4byte	0
 2727 003b 00000000 		.4byte	0
 2728              	.LLST2:
 2729 003f 08000000 		.4byte	.LVL3
 2730 0043 1B000000 		.4byte	.LVL5-1
 2731 0047 0100     		.2byte	0x1
 2732 0049 50       		.byte	0x50
 2733 004a 00000000 		.4byte	0
 2734 004e 00000000 		.4byte	0
 2735              	.LLST3:
 2736 0052 00000000 		.4byte	.LVL6
 2737 0056 07000000 		.4byte	.LVL7-1
 2738 005a 0100     		.2byte	0x1
 2739 005c 50       		.byte	0x50
 2740 005d 07000000 		.4byte	.LVL7-1
 2741 0061 16000000 		.4byte	.LVL8
 2742 0065 0100     		.2byte	0x1
 2743 0067 54       		.byte	0x54
 2744 0068 16000000 		.4byte	.LVL8
 2745 006c 28000000 		.4byte	.LFE5
 2746 0070 0400     		.2byte	0x4
 2747 0072 F3       		.byte	0xf3
 2748 0073 01       		.uleb128 0x1
 2749 0074 50       		.byte	0x50
 2750 0075 9F       		.byte	0x9f
 2751 0076 00000000 		.4byte	0
 2752 007a 00000000 		.4byte	0
 2753              	.LLST4:
 2754 007e 08000000 		.4byte	.LVL7
 2755 0082 1B000000 		.4byte	.LVL9-1
 2756 0086 0100     		.2byte	0x1
 2757 0088 50       		.byte	0x50
 2758 0089 00000000 		.4byte	0
 2759 008d 00000000 		.4byte	0
 2760              	.LLST5:
 2761 0091 00000000 		.4byte	.LVL10
 2762 0095 07000000 		.4byte	.LVL11-1
 2763 0099 0100     		.2byte	0x1
 2764 009b 50       		.byte	0x50
 2765 009c 07000000 		.4byte	.LVL11-1
 2766 00a0 16000000 		.4byte	.LVL12
 2767 00a4 0100     		.2byte	0x1
 2768 00a6 54       		.byte	0x54
 2769 00a7 16000000 		.4byte	.LVL12
 2770 00ab 28000000 		.4byte	.LFE6
 2771 00af 0400     		.2byte	0x4
 2772 00b1 F3       		.byte	0xf3
 2773 00b2 01       		.uleb128 0x1
 2774 00b3 50       		.byte	0x50
 2775 00b4 9F       		.byte	0x9f
 2776 00b5 00000000 		.4byte	0
 2777 00b9 00000000 		.4byte	0
 2778              	.LLST6:
 2779 00bd 08000000 		.4byte	.LVL11
 2780 00c1 1B000000 		.4byte	.LVL13-1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 75


 2781 00c5 0100     		.2byte	0x1
 2782 00c7 50       		.byte	0x50
 2783 00c8 00000000 		.4byte	0
 2784 00cc 00000000 		.4byte	0
 2785              	.LLST7:
 2786 00d0 00000000 		.4byte	.LVL14
 2787 00d4 07000000 		.4byte	.LVL15-1
 2788 00d8 0100     		.2byte	0x1
 2789 00da 50       		.byte	0x50
 2790 00db 07000000 		.4byte	.LVL15-1
 2791 00df 18000000 		.4byte	.LVL16
 2792 00e3 0100     		.2byte	0x1
 2793 00e5 54       		.byte	0x54
 2794 00e6 18000000 		.4byte	.LVL16
 2795 00ea 2C000000 		.4byte	.LFE7
 2796 00ee 0400     		.2byte	0x4
 2797 00f0 F3       		.byte	0xf3
 2798 00f1 01       		.uleb128 0x1
 2799 00f2 50       		.byte	0x50
 2800 00f3 9F       		.byte	0x9f
 2801 00f4 00000000 		.4byte	0
 2802 00f8 00000000 		.4byte	0
 2803              	.LLST8:
 2804 00fc 08000000 		.4byte	.LVL15
 2805 0100 21000000 		.4byte	.LVL17-1
 2806 0104 0100     		.2byte	0x1
 2807 0106 50       		.byte	0x50
 2808 0107 00000000 		.4byte	0
 2809 010b 00000000 		.4byte	0
 2810              	.LLST9:
 2811 010f 00000000 		.4byte	.LVL18
 2812 0113 04000000 		.4byte	.LVL19
 2813 0117 0100     		.2byte	0x1
 2814 0119 50       		.byte	0x50
 2815 011a 04000000 		.4byte	.LVL19
 2816 011e 10000000 		.4byte	.LFE8
 2817 0122 0400     		.2byte	0x4
 2818 0124 F3       		.byte	0xf3
 2819 0125 01       		.uleb128 0x1
 2820 0126 50       		.byte	0x50
 2821 0127 9F       		.byte	0x9f
 2822 0128 00000000 		.4byte	0
 2823 012c 00000000 		.4byte	0
 2824              	.LLST10:
 2825 0130 00000000 		.4byte	.LVL20
 2826 0134 07000000 		.4byte	.LVL21-1
 2827 0138 0100     		.2byte	0x1
 2828 013a 50       		.byte	0x50
 2829 013b 07000000 		.4byte	.LVL21-1
 2830 013f 18000000 		.4byte	.LVL22
 2831 0143 0100     		.2byte	0x1
 2832 0145 54       		.byte	0x54
 2833 0146 18000000 		.4byte	.LVL22
 2834 014a 28000000 		.4byte	.LFE9
 2835 014e 0400     		.2byte	0x4
 2836 0150 F3       		.byte	0xf3
 2837 0151 01       		.uleb128 0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 76


 2838 0152 50       		.byte	0x50
 2839 0153 9F       		.byte	0x9f
 2840 0154 00000000 		.4byte	0
 2841 0158 00000000 		.4byte	0
 2842              	.LLST11:
 2843 015c 08000000 		.4byte	.LVL21
 2844 0160 21000000 		.4byte	.LVL23-1
 2845 0164 0100     		.2byte	0x1
 2846 0166 50       		.byte	0x50
 2847 0167 00000000 		.4byte	0
 2848 016b 00000000 		.4byte	0
 2849              	.LLST12:
 2850 016f 00000000 		.4byte	.LVL24
 2851 0173 07000000 		.4byte	.LVL25-1
 2852 0177 0100     		.2byte	0x1
 2853 0179 50       		.byte	0x50
 2854 017a 07000000 		.4byte	.LVL25-1
 2855 017e 18000000 		.4byte	.LVL26
 2856 0182 0100     		.2byte	0x1
 2857 0184 54       		.byte	0x54
 2858 0185 18000000 		.4byte	.LVL26
 2859 0189 28000000 		.4byte	.LFE10
 2860 018d 0400     		.2byte	0x4
 2861 018f F3       		.byte	0xf3
 2862 0190 01       		.uleb128 0x1
 2863 0191 50       		.byte	0x50
 2864 0192 9F       		.byte	0x9f
 2865 0193 00000000 		.4byte	0
 2866 0197 00000000 		.4byte	0
 2867              	.LLST13:
 2868 019b 08000000 		.4byte	.LVL25
 2869 019f 21000000 		.4byte	.LVL27-1
 2870 01a3 0100     		.2byte	0x1
 2871 01a5 50       		.byte	0x50
 2872 01a6 00000000 		.4byte	0
 2873 01aa 00000000 		.4byte	0
 2874              	.LLST14:
 2875 01ae 00000000 		.4byte	.LVL28
 2876 01b2 07000000 		.4byte	.LVL29-1
 2877 01b6 0100     		.2byte	0x1
 2878 01b8 50       		.byte	0x50
 2879 01b9 07000000 		.4byte	.LVL29-1
 2880 01bd 16000000 		.4byte	.LVL30
 2881 01c1 0100     		.2byte	0x1
 2882 01c3 54       		.byte	0x54
 2883 01c4 16000000 		.4byte	.LVL30
 2884 01c8 2C000000 		.4byte	.LFE11
 2885 01cc 0400     		.2byte	0x4
 2886 01ce F3       		.byte	0xf3
 2887 01cf 01       		.uleb128 0x1
 2888 01d0 50       		.byte	0x50
 2889 01d1 9F       		.byte	0x9f
 2890 01d2 00000000 		.4byte	0
 2891 01d6 00000000 		.4byte	0
 2892              	.LLST15:
 2893 01da 08000000 		.4byte	.LVL29
 2894 01de 1F000000 		.4byte	.LVL31-1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 77


 2895 01e2 0100     		.2byte	0x1
 2896 01e4 50       		.byte	0x50
 2897 01e5 00000000 		.4byte	0
 2898 01e9 00000000 		.4byte	0
 2899              	.LLST16:
 2900 01ed 00000000 		.4byte	.LVL32
 2901 01f1 07000000 		.4byte	.LVL33-1
 2902 01f5 0100     		.2byte	0x1
 2903 01f7 50       		.byte	0x50
 2904 01f8 07000000 		.4byte	.LVL33-1
 2905 01fc 16000000 		.4byte	.LVL34
 2906 0200 0100     		.2byte	0x1
 2907 0202 54       		.byte	0x54
 2908 0203 16000000 		.4byte	.LVL34
 2909 0207 28000000 		.4byte	.LFE12
 2910 020b 0400     		.2byte	0x4
 2911 020d F3       		.byte	0xf3
 2912 020e 01       		.uleb128 0x1
 2913 020f 50       		.byte	0x50
 2914 0210 9F       		.byte	0x9f
 2915 0211 00000000 		.4byte	0
 2916 0215 00000000 		.4byte	0
 2917              	.LLST17:
 2918 0219 08000000 		.4byte	.LVL33
 2919 021d 1B000000 		.4byte	.LVL35-1
 2920 0221 0100     		.2byte	0x1
 2921 0223 50       		.byte	0x50
 2922 0224 00000000 		.4byte	0
 2923 0228 00000000 		.4byte	0
 2924              	.LLST18:
 2925 022c 00000000 		.4byte	.LVL36
 2926 0230 02000000 		.4byte	.LVL37
 2927 0234 0100     		.2byte	0x1
 2928 0236 50       		.byte	0x50
 2929 0237 02000000 		.4byte	.LVL37
 2930 023b 10000000 		.4byte	.LFE13
 2931 023f 0400     		.2byte	0x4
 2932 0241 F3       		.byte	0xf3
 2933 0242 01       		.uleb128 0x1
 2934 0243 50       		.byte	0x50
 2935 0244 9F       		.byte	0x9f
 2936 0245 00000000 		.4byte	0
 2937 0249 00000000 		.4byte	0
 2938              	.LLST19:
 2939 024d 00000000 		.4byte	.LVL38
 2940 0251 07000000 		.4byte	.LVL39-1
 2941 0255 0100     		.2byte	0x1
 2942 0257 50       		.byte	0x50
 2943 0258 07000000 		.4byte	.LVL39-1
 2944 025c 16000000 		.4byte	.LVL40
 2945 0260 0100     		.2byte	0x1
 2946 0262 54       		.byte	0x54
 2947 0263 16000000 		.4byte	.LVL40
 2948 0267 28000000 		.4byte	.LFE15
 2949 026b 0400     		.2byte	0x4
 2950 026d F3       		.byte	0xf3
 2951 026e 01       		.uleb128 0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 78


 2952 026f 50       		.byte	0x50
 2953 0270 9F       		.byte	0x9f
 2954 0271 00000000 		.4byte	0
 2955 0275 00000000 		.4byte	0
 2956              	.LLST20:
 2957 0279 08000000 		.4byte	.LVL39
 2958 027d 1B000000 		.4byte	.LVL41-1
 2959 0281 0100     		.2byte	0x1
 2960 0283 50       		.byte	0x50
 2961 0284 00000000 		.4byte	0
 2962 0288 00000000 		.4byte	0
 2963              	.LLST21:
 2964 028c 00000000 		.4byte	.LVL42
 2965 0290 02000000 		.4byte	.LVL43
 2966 0294 0100     		.2byte	0x1
 2967 0296 50       		.byte	0x50
 2968 0297 02000000 		.4byte	.LVL43
 2969 029b 10000000 		.4byte	.LFE16
 2970 029f 0400     		.2byte	0x4
 2971 02a1 F3       		.byte	0xf3
 2972 02a2 01       		.uleb128 0x1
 2973 02a3 50       		.byte	0x50
 2974 02a4 9F       		.byte	0x9f
 2975 02a5 00000000 		.4byte	0
 2976 02a9 00000000 		.4byte	0
 2977              	.LLST22:
 2978 02ad 00000000 		.4byte	.LVL44
 2979 02b1 07000000 		.4byte	.LVL45-1
 2980 02b5 0100     		.2byte	0x1
 2981 02b7 50       		.byte	0x50
 2982 02b8 07000000 		.4byte	.LVL45-1
 2983 02bc 16000000 		.4byte	.LVL46
 2984 02c0 0100     		.2byte	0x1
 2985 02c2 54       		.byte	0x54
 2986 02c3 16000000 		.4byte	.LVL46
 2987 02c7 24000000 		.4byte	.LFE18
 2988 02cb 0400     		.2byte	0x4
 2989 02cd F3       		.byte	0xf3
 2990 02ce 01       		.uleb128 0x1
 2991 02cf 50       		.byte	0x50
 2992 02d0 9F       		.byte	0x9f
 2993 02d1 00000000 		.4byte	0
 2994 02d5 00000000 		.4byte	0
 2995              	.LLST23:
 2996 02d9 08000000 		.4byte	.LVL45
 2997 02dd 1D000000 		.4byte	.LVL47-1
 2998 02e1 0100     		.2byte	0x1
 2999 02e3 50       		.byte	0x50
 3000 02e4 00000000 		.4byte	0
 3001 02e8 00000000 		.4byte	0
 3002              	.LLST24:
 3003 02ec 00000000 		.4byte	.LVL48
 3004 02f0 02000000 		.4byte	.LVL49
 3005 02f4 0100     		.2byte	0x1
 3006 02f6 50       		.byte	0x50
 3007 02f7 02000000 		.4byte	.LVL49
 3008 02fb 10000000 		.4byte	.LFE19
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 79


 3009 02ff 0400     		.2byte	0x4
 3010 0301 F3       		.byte	0xf3
 3011 0302 01       		.uleb128 0x1
 3012 0303 50       		.byte	0x50
 3013 0304 9F       		.byte	0x9f
 3014 0305 00000000 		.4byte	0
 3015 0309 00000000 		.4byte	0
 3016              	.LLST25:
 3017 030d 00000000 		.4byte	.LVL50
 3018 0311 07000000 		.4byte	.LVL51-1
 3019 0315 0100     		.2byte	0x1
 3020 0317 50       		.byte	0x50
 3021 0318 07000000 		.4byte	.LVL51-1
 3022 031c 18000000 		.4byte	.LVL52
 3023 0320 0100     		.2byte	0x1
 3024 0322 54       		.byte	0x54
 3025 0323 18000000 		.4byte	.LVL52
 3026 0327 28000000 		.4byte	.LFE21
 3027 032b 0400     		.2byte	0x4
 3028 032d F3       		.byte	0xf3
 3029 032e 01       		.uleb128 0x1
 3030 032f 50       		.byte	0x50
 3031 0330 9F       		.byte	0x9f
 3032 0331 00000000 		.4byte	0
 3033 0335 00000000 		.4byte	0
 3034              	.LLST26:
 3035 0339 08000000 		.4byte	.LVL51
 3036 033d 21000000 		.4byte	.LVL53-1
 3037 0341 0100     		.2byte	0x1
 3038 0343 50       		.byte	0x50
 3039 0344 00000000 		.4byte	0
 3040 0348 00000000 		.4byte	0
 3041              	.LLST27:
 3042 034c 00000000 		.4byte	.LVL54
 3043 0350 02000000 		.4byte	.LVL55
 3044 0354 0100     		.2byte	0x1
 3045 0356 50       		.byte	0x50
 3046 0357 02000000 		.4byte	.LVL55
 3047 035b 10000000 		.4byte	.LFE22
 3048 035f 0400     		.2byte	0x4
 3049 0361 F3       		.byte	0xf3
 3050 0362 01       		.uleb128 0x1
 3051 0363 50       		.byte	0x50
 3052 0364 9F       		.byte	0x9f
 3053 0365 00000000 		.4byte	0
 3054 0369 00000000 		.4byte	0
 3055              	.LLST28:
 3056 036d 00000000 		.4byte	.LVL56
 3057 0371 02000000 		.4byte	.LVL57
 3058 0375 0100     		.2byte	0x1
 3059 0377 50       		.byte	0x50
 3060 0378 02000000 		.4byte	.LVL57
 3061 037c 10000000 		.4byte	.LFE24
 3062 0380 0400     		.2byte	0x4
 3063 0382 F3       		.byte	0xf3
 3064 0383 01       		.uleb128 0x1
 3065 0384 50       		.byte	0x50
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 80


 3066 0385 9F       		.byte	0x9f
 3067 0386 00000000 		.4byte	0
 3068 038a 00000000 		.4byte	0
 3069              	.LLST29:
 3070 038e 00000000 		.4byte	.LVL58
 3071 0392 07000000 		.4byte	.LVL59-1
 3072 0396 0100     		.2byte	0x1
 3073 0398 50       		.byte	0x50
 3074 0399 07000000 		.4byte	.LVL59-1
 3075 039d 16000000 		.4byte	.LVL60
 3076 03a1 0100     		.2byte	0x1
 3077 03a3 54       		.byte	0x54
 3078 03a4 16000000 		.4byte	.LVL60
 3079 03a8 24000000 		.4byte	.LFE28
 3080 03ac 0400     		.2byte	0x4
 3081 03ae F3       		.byte	0xf3
 3082 03af 01       		.uleb128 0x1
 3083 03b0 50       		.byte	0x50
 3084 03b1 9F       		.byte	0x9f
 3085 03b2 00000000 		.4byte	0
 3086 03b6 00000000 		.4byte	0
 3087              	.LLST30:
 3088 03ba 08000000 		.4byte	.LVL59
 3089 03be 1B000000 		.4byte	.LVL61-1
 3090 03c2 0100     		.2byte	0x1
 3091 03c4 50       		.byte	0x50
 3092 03c5 00000000 		.4byte	0
 3093 03c9 00000000 		.4byte	0
 3094              	.LLST31:
 3095 03cd 00000000 		.4byte	.LVL62
 3096 03d1 07000000 		.4byte	.LVL63-1
 3097 03d5 0100     		.2byte	0x1
 3098 03d7 50       		.byte	0x50
 3099 03d8 07000000 		.4byte	.LVL63-1
 3100 03dc 16000000 		.4byte	.LVL64
 3101 03e0 0100     		.2byte	0x1
 3102 03e2 54       		.byte	0x54
 3103 03e3 16000000 		.4byte	.LVL64
 3104 03e7 24000000 		.4byte	.LFE29
 3105 03eb 0400     		.2byte	0x4
 3106 03ed F3       		.byte	0xf3
 3107 03ee 01       		.uleb128 0x1
 3108 03ef 50       		.byte	0x50
 3109 03f0 9F       		.byte	0x9f
 3110 03f1 00000000 		.4byte	0
 3111 03f5 00000000 		.4byte	0
 3112              	.LLST32:
 3113 03f9 08000000 		.4byte	.LVL63
 3114 03fd 1D000000 		.4byte	.LVL65-1
 3115 0401 0100     		.2byte	0x1
 3116 0403 50       		.byte	0x50
 3117 0404 00000000 		.4byte	0
 3118 0408 00000000 		.4byte	0
 3119              	.LLST33:
 3120 040c 00000000 		.4byte	.LVL66
 3121 0410 07000000 		.4byte	.LVL67-1
 3122 0414 0100     		.2byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 81


 3123 0416 50       		.byte	0x50
 3124 0417 07000000 		.4byte	.LVL67-1
 3125 041b 16000000 		.4byte	.LVL68
 3126 041f 0100     		.2byte	0x1
 3127 0421 54       		.byte	0x54
 3128 0422 16000000 		.4byte	.LVL68
 3129 0426 28000000 		.4byte	.LFE30
 3130 042a 0400     		.2byte	0x4
 3131 042c F3       		.byte	0xf3
 3132 042d 01       		.uleb128 0x1
 3133 042e 50       		.byte	0x50
 3134 042f 9F       		.byte	0x9f
 3135 0430 00000000 		.4byte	0
 3136 0434 00000000 		.4byte	0
 3137              	.LLST34:
 3138 0438 08000000 		.4byte	.LVL67
 3139 043c 1D000000 		.4byte	.LVL69-1
 3140 0440 0100     		.2byte	0x1
 3141 0442 50       		.byte	0x50
 3142 0443 00000000 		.4byte	0
 3143 0447 00000000 		.4byte	0
 3144              	.LLST35:
 3145 044b 00000000 		.4byte	.LVL70
 3146 044f 07000000 		.4byte	.LVL71-1
 3147 0453 0100     		.2byte	0x1
 3148 0455 50       		.byte	0x50
 3149 0456 07000000 		.4byte	.LVL71-1
 3150 045a 16000000 		.4byte	.LVL72
 3151 045e 0100     		.2byte	0x1
 3152 0460 54       		.byte	0x54
 3153 0461 16000000 		.4byte	.LVL72
 3154 0465 24000000 		.4byte	.LFE31
 3155 0469 0400     		.2byte	0x4
 3156 046b F3       		.byte	0xf3
 3157 046c 01       		.uleb128 0x1
 3158 046d 50       		.byte	0x50
 3159 046e 9F       		.byte	0x9f
 3160 046f 00000000 		.4byte	0
 3161 0473 00000000 		.4byte	0
 3162              	.LLST36:
 3163 0477 08000000 		.4byte	.LVL71
 3164 047b 1D000000 		.4byte	.LVL73-1
 3165 047f 0100     		.2byte	0x1
 3166 0481 50       		.byte	0x50
 3167 0482 00000000 		.4byte	0
 3168 0486 00000000 		.4byte	0
 3169              	.LLST37:
 3170 048a 00000000 		.4byte	.LVL74
 3171 048e 07000000 		.4byte	.LVL75-1
 3172 0492 0100     		.2byte	0x1
 3173 0494 50       		.byte	0x50
 3174 0495 07000000 		.4byte	.LVL75-1
 3175 0499 16000000 		.4byte	.LVL76
 3176 049d 0100     		.2byte	0x1
 3177 049f 54       		.byte	0x54
 3178 04a0 16000000 		.4byte	.LVL76
 3179 04a4 24000000 		.4byte	.LFE32
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 82


 3180 04a8 0400     		.2byte	0x4
 3181 04aa F3       		.byte	0xf3
 3182 04ab 01       		.uleb128 0x1
 3183 04ac 50       		.byte	0x50
 3184 04ad 9F       		.byte	0x9f
 3185 04ae 00000000 		.4byte	0
 3186 04b2 00000000 		.4byte	0
 3187              	.LLST38:
 3188 04b6 08000000 		.4byte	.LVL75
 3189 04ba 1D000000 		.4byte	.LVL77-1
 3190 04be 0100     		.2byte	0x1
 3191 04c0 50       		.byte	0x50
 3192 04c1 00000000 		.4byte	0
 3193 04c5 00000000 		.4byte	0
 3194              	.LLST39:
 3195 04c9 00000000 		.4byte	.LVL78
 3196 04cd 09000000 		.4byte	.LVL79-1
 3197 04d1 0100     		.2byte	0x1
 3198 04d3 50       		.byte	0x50
 3199 04d4 09000000 		.4byte	.LVL79-1
 3200 04d8 0C000000 		.4byte	.LVL80
 3201 04dc 0100     		.2byte	0x1
 3202 04de 54       		.byte	0x54
 3203 04df 0C000000 		.4byte	.LVL80
 3204 04e3 1C000000 		.4byte	.LFE33
 3205 04e7 0400     		.2byte	0x4
 3206 04e9 F3       		.byte	0xf3
 3207 04ea 01       		.uleb128 0x1
 3208 04eb 50       		.byte	0x50
 3209 04ec 9F       		.byte	0x9f
 3210 04ed 00000000 		.4byte	0
 3211 04f1 00000000 		.4byte	0
 3212              	.LLST40:
 3213 04f5 00000000 		.4byte	.LVL78
 3214 04f9 09000000 		.4byte	.LVL79-1
 3215 04fd 0100     		.2byte	0x1
 3216 04ff 51       		.byte	0x51
 3217 0500 09000000 		.4byte	.LVL79-1
 3218 0504 14000000 		.4byte	.LVL82
 3219 0508 0100     		.2byte	0x1
 3220 050a 55       		.byte	0x55
 3221 050b 14000000 		.4byte	.LVL82
 3222 050f 1C000000 		.4byte	.LFE33
 3223 0513 0400     		.2byte	0x4
 3224 0515 F3       		.byte	0xf3
 3225 0516 01       		.uleb128 0x1
 3226 0517 51       		.byte	0x51
 3227 0518 9F       		.byte	0x9f
 3228 0519 00000000 		.4byte	0
 3229 051d 00000000 		.4byte	0
 3230              	.LLST41:
 3231 0521 0A000000 		.4byte	.LVL79
 3232 0525 13000000 		.4byte	.LVL81-1
 3233 0529 0100     		.2byte	0x1
 3234 052b 50       		.byte	0x50
 3235 052c 00000000 		.4byte	0
 3236 0530 00000000 		.4byte	0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 83


 3237              	.LLST42:
 3238 0534 06000000 		.4byte	.LVL83
 3239 0538 13000000 		.4byte	.LVL84-1
 3240 053c 0100     		.2byte	0x1
 3241 053e 50       		.byte	0x50
 3242 053f 00000000 		.4byte	0
 3243 0543 00000000 		.4byte	0
 3244              		.section	.debug_aranges,"",%progbits
 3245 0000 54010000 		.4byte	0x154
 3246 0004 0200     		.2byte	0x2
 3247 0006 00000000 		.4byte	.Ldebug_info0
 3248 000a 04       		.byte	0x4
 3249 000b 00       		.byte	0
 3250 000c 0000     		.2byte	0
 3251 000e 0000     		.2byte	0
 3252 0010 00000000 		.4byte	.LFB3
 3253 0014 1C000000 		.4byte	.LFE3-.LFB3
 3254 0018 00000000 		.4byte	.LFB4
 3255 001c 28000000 		.4byte	.LFE4-.LFB4
 3256 0020 00000000 		.4byte	.LFB5
 3257 0024 28000000 		.4byte	.LFE5-.LFB5
 3258 0028 00000000 		.4byte	.LFB6
 3259 002c 28000000 		.4byte	.LFE6-.LFB6
 3260 0030 00000000 		.4byte	.LFB7
 3261 0034 2C000000 		.4byte	.LFE7-.LFB7
 3262 0038 00000000 		.4byte	.LFB8
 3263 003c 10000000 		.4byte	.LFE8-.LFB8
 3264 0040 00000000 		.4byte	.LFB9
 3265 0044 28000000 		.4byte	.LFE9-.LFB9
 3266 0048 00000000 		.4byte	.LFB10
 3267 004c 28000000 		.4byte	.LFE10-.LFB10
 3268 0050 00000000 		.4byte	.LFB11
 3269 0054 2C000000 		.4byte	.LFE11-.LFB11
 3270 0058 00000000 		.4byte	.LFB12
 3271 005c 28000000 		.4byte	.LFE12-.LFB12
 3272 0060 00000000 		.4byte	.LFB13
 3273 0064 10000000 		.4byte	.LFE13-.LFB13
 3274 0068 00000000 		.4byte	.LFB14
 3275 006c 10000000 		.4byte	.LFE14-.LFB14
 3276 0070 00000000 		.4byte	.LFB15
 3277 0074 28000000 		.4byte	.LFE15-.LFB15
 3278 0078 00000000 		.4byte	.LFB16
 3279 007c 10000000 		.4byte	.LFE16-.LFB16
 3280 0080 00000000 		.4byte	.LFB17
 3281 0084 10000000 		.4byte	.LFE17-.LFB17
 3282 0088 00000000 		.4byte	.LFB18
 3283 008c 24000000 		.4byte	.LFE18-.LFB18
 3284 0090 00000000 		.4byte	.LFB19
 3285 0094 10000000 		.4byte	.LFE19-.LFB19
 3286 0098 00000000 		.4byte	.LFB20
 3287 009c 10000000 		.4byte	.LFE20-.LFB20
 3288 00a0 00000000 		.4byte	.LFB21
 3289 00a4 28000000 		.4byte	.LFE21-.LFB21
 3290 00a8 00000000 		.4byte	.LFB22
 3291 00ac 10000000 		.4byte	.LFE22-.LFB22
 3292 00b0 00000000 		.4byte	.LFB23
 3293 00b4 10000000 		.4byte	.LFE23-.LFB23
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 84


 3294 00b8 00000000 		.4byte	.LFB24
 3295 00bc 10000000 		.4byte	.LFE24-.LFB24
 3296 00c0 00000000 		.4byte	.LFB25
 3297 00c4 10000000 		.4byte	.LFE25-.LFB25
 3298 00c8 00000000 		.4byte	.LFB26
 3299 00cc 10000000 		.4byte	.LFE26-.LFB26
 3300 00d0 00000000 		.4byte	.LFB27
 3301 00d4 10000000 		.4byte	.LFE27-.LFB27
 3302 00d8 00000000 		.4byte	.LFB28
 3303 00dc 24000000 		.4byte	.LFE28-.LFB28
 3304 00e0 00000000 		.4byte	.LFB29
 3305 00e4 24000000 		.4byte	.LFE29-.LFB29
 3306 00e8 00000000 		.4byte	.LFB30
 3307 00ec 28000000 		.4byte	.LFE30-.LFB30
 3308 00f0 00000000 		.4byte	.LFB31
 3309 00f4 24000000 		.4byte	.LFE31-.LFB31
 3310 00f8 00000000 		.4byte	.LFB32
 3311 00fc 24000000 		.4byte	.LFE32-.LFB32
 3312 0100 00000000 		.4byte	.LFB33
 3313 0104 1C000000 		.4byte	.LFE33-.LFB33
 3314 0108 00000000 		.4byte	.LFB1
 3315 010c 24000000 		.4byte	.LFE1-.LFB1
 3316 0110 00000000 		.4byte	.LFB34
 3317 0114 14000000 		.4byte	.LFE34-.LFB34
 3318 0118 00000000 		.4byte	.LFB35
 3319 011c 0C000000 		.4byte	.LFE35-.LFB35
 3320 0120 00000000 		.4byte	.LFB0
 3321 0124 50000000 		.4byte	.LFE0-.LFB0
 3322 0128 00000000 		.4byte	.LFB2
 3323 012c 20000000 		.4byte	.LFE2-.LFB2
 3324 0130 00000000 		.4byte	.LFB36
 3325 0134 0C000000 		.4byte	.LFE36-.LFB36
 3326 0138 00000000 		.4byte	.LFB37
 3327 013c 0C000000 		.4byte	.LFE37-.LFB37
 3328 0140 00000000 		.4byte	.LFB38
 3329 0144 0C000000 		.4byte	.LFE38-.LFB38
 3330 0148 00000000 		.4byte	.LFB39
 3331 014c 0C000000 		.4byte	.LFE39-.LFB39
 3332 0150 00000000 		.4byte	0
 3333 0154 00000000 		.4byte	0
 3334              		.section	.debug_ranges,"",%progbits
 3335              	.Ldebug_ranges0:
 3336 0000 00000000 		.4byte	.LFB3
 3337 0004 1C000000 		.4byte	.LFE3
 3338 0008 00000000 		.4byte	.LFB4
 3339 000c 28000000 		.4byte	.LFE4
 3340 0010 00000000 		.4byte	.LFB5
 3341 0014 28000000 		.4byte	.LFE5
 3342 0018 00000000 		.4byte	.LFB6
 3343 001c 28000000 		.4byte	.LFE6
 3344 0020 00000000 		.4byte	.LFB7
 3345 0024 2C000000 		.4byte	.LFE7
 3346 0028 00000000 		.4byte	.LFB8
 3347 002c 10000000 		.4byte	.LFE8
 3348 0030 00000000 		.4byte	.LFB9
 3349 0034 28000000 		.4byte	.LFE9
 3350 0038 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 85


 3351 003c 28000000 		.4byte	.LFE10
 3352 0040 00000000 		.4byte	.LFB11
 3353 0044 2C000000 		.4byte	.LFE11
 3354 0048 00000000 		.4byte	.LFB12
 3355 004c 28000000 		.4byte	.LFE12
 3356 0050 00000000 		.4byte	.LFB13
 3357 0054 10000000 		.4byte	.LFE13
 3358 0058 00000000 		.4byte	.LFB14
 3359 005c 10000000 		.4byte	.LFE14
 3360 0060 00000000 		.4byte	.LFB15
 3361 0064 28000000 		.4byte	.LFE15
 3362 0068 00000000 		.4byte	.LFB16
 3363 006c 10000000 		.4byte	.LFE16
 3364 0070 00000000 		.4byte	.LFB17
 3365 0074 10000000 		.4byte	.LFE17
 3366 0078 00000000 		.4byte	.LFB18
 3367 007c 24000000 		.4byte	.LFE18
 3368 0080 00000000 		.4byte	.LFB19
 3369 0084 10000000 		.4byte	.LFE19
 3370 0088 00000000 		.4byte	.LFB20
 3371 008c 10000000 		.4byte	.LFE20
 3372 0090 00000000 		.4byte	.LFB21
 3373 0094 28000000 		.4byte	.LFE21
 3374 0098 00000000 		.4byte	.LFB22
 3375 009c 10000000 		.4byte	.LFE22
 3376 00a0 00000000 		.4byte	.LFB23
 3377 00a4 10000000 		.4byte	.LFE23
 3378 00a8 00000000 		.4byte	.LFB24
 3379 00ac 10000000 		.4byte	.LFE24
 3380 00b0 00000000 		.4byte	.LFB25
 3381 00b4 10000000 		.4byte	.LFE25
 3382 00b8 00000000 		.4byte	.LFB26
 3383 00bc 10000000 		.4byte	.LFE26
 3384 00c0 00000000 		.4byte	.LFB27
 3385 00c4 10000000 		.4byte	.LFE27
 3386 00c8 00000000 		.4byte	.LFB28
 3387 00cc 24000000 		.4byte	.LFE28
 3388 00d0 00000000 		.4byte	.LFB29
 3389 00d4 24000000 		.4byte	.LFE29
 3390 00d8 00000000 		.4byte	.LFB30
 3391 00dc 28000000 		.4byte	.LFE30
 3392 00e0 00000000 		.4byte	.LFB31
 3393 00e4 24000000 		.4byte	.LFE31
 3394 00e8 00000000 		.4byte	.LFB32
 3395 00ec 24000000 		.4byte	.LFE32
 3396 00f0 00000000 		.4byte	.LFB33
 3397 00f4 1C000000 		.4byte	.LFE33
 3398 00f8 00000000 		.4byte	.LFB1
 3399 00fc 24000000 		.4byte	.LFE1
 3400 0100 00000000 		.4byte	.LFB34
 3401 0104 14000000 		.4byte	.LFE34
 3402 0108 00000000 		.4byte	.LFB35
 3403 010c 0C000000 		.4byte	.LFE35
 3404 0110 00000000 		.4byte	.LFB0
 3405 0114 50000000 		.4byte	.LFE0
 3406 0118 00000000 		.4byte	.LFB2
 3407 011c 20000000 		.4byte	.LFE2
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 86


 3408 0120 00000000 		.4byte	.LFB36
 3409 0124 0C000000 		.4byte	.LFE36
 3410 0128 00000000 		.4byte	.LFB37
 3411 012c 0C000000 		.4byte	.LFE37
 3412 0130 00000000 		.4byte	.LFB38
 3413 0134 0C000000 		.4byte	.LFE38
 3414 0138 00000000 		.4byte	.LFB39
 3415 013c 0C000000 		.4byte	.LFE39
 3416 0140 00000000 		.4byte	0
 3417 0144 00000000 		.4byte	0
 3418              		.section	.debug_line,"",%progbits
 3419              	.Ldebug_line0:
 3420 0000 7E030000 		.section	.debug_str,"MS",%progbits,1
 3420      02005100 
 3420      00000201 
 3420      FB0E0D00 
 3420      01010101 
 3421              	.LASF37:
 3422 0000 636F756E 		.ascii	"count\000"
 3422      7400
 3423              	.LASF62:
 3424 0006 50574D5F 		.ascii	"PWM_MOT_SetStopMode\000"
 3424      4D4F545F 
 3424      53657453 
 3424      746F704D 
 3424      6F646500 
 3425              	.LASF81:
 3426 001a 43794578 		.ascii	"CyExitCriticalSection\000"
 3426      69744372 
 3426      69746963 
 3426      616C5365 
 3426      6374696F 
 3427              	.LASF75:
 3428 0030 50574D5F 		.ascii	"PWM_MOT_SetInterrupt\000"
 3428      4D4F545F 
 3428      53657449 
 3428      6E746572 
 3428      72757074 
 3429              	.LASF48:
 3430 0045 50574D5F 		.ascii	"PWM_MOT_ReadPeriodBuf\000"
 3430      4D4F545F 
 3430      52656164 
 3430      50657269 
 3430      6F644275 
 3431              	.LASF41:
 3432 005b 70657269 		.ascii	"period\000"
 3432      6F6400
 3433              	.LASF77:
 3434 0062 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM_MOT.c\000"
 3434      6E657261 
 3434      7465645F 
 3434      536F7572 
 3434      63655C50 
 3435              	.LASF7:
 3436 0085 6C6F6E67 		.ascii	"long long unsigned int\000"
 3436      206C6F6E 
 3436      6720756E 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 87


 3436      7369676E 
 3436      65642069 
 3437              	.LASF66:
 3438 009c 50574D5F 		.ascii	"PWM_MOT_Enable\000"
 3438      4D4F545F 
 3438      456E6162 
 3438      6C6500
 3439              	.LASF49:
 3440 00ab 50574D5F 		.ascii	"PWM_MOT_SetPeriodSwap\000"
 3440      4D4F545F 
 3440      53657450 
 3440      6572696F 
 3440      64537761 
 3441              	.LASF21:
 3442 00c1 71644D6F 		.ascii	"qdMode\000"
 3442      646500
 3443              	.LASF68:
 3444 00c8 50574D5F 		.ascii	"PWM_MOT_SetInterruptMode\000"
 3444      4D4F545F 
 3444      53657449 
 3444      6E746572 
 3444      72757074 
 3445              	.LASF6:
 3446 00e1 6C6F6E67 		.ascii	"long long int\000"
 3446      206C6F6E 
 3446      6720696E 
 3446      7400
 3447              	.LASF0:
 3448 00ef 7369676E 		.ascii	"signed char\000"
 3448      65642063 
 3448      68617200 
 3449              	.LASF40:
 3450 00fb 50574D5F 		.ascii	"PWM_MOT_WritePeriod\000"
 3450      4D4F545F 
 3450      57726974 
 3450      65506572 
 3450      696F6400 
 3451              	.LASF63:
 3452 010f 50574D5F 		.ascii	"PWM_MOT_SetCountMode\000"
 3452      4D4F545F 
 3452      53657443 
 3452      6F756E74 
 3452      4D6F6465 
 3453              	.LASF4:
 3454 0124 6C6F6E67 		.ascii	"long int\000"
 3454      20696E74 
 3454      00
 3455              	.LASF9:
 3456 012d 75696E74 		.ascii	"uint8\000"
 3456      3800
 3457              	.LASF17:
 3458 0133 50574D5F 		.ascii	"PWM_MOT_SetMode\000"
 3458      4D4F545F 
 3458      5365744D 
 3458      6F646500 
 3459              	.LASF12:
 3460 0143 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 88


 3460      6C6500
 3461              	.LASF72:
 3462 014a 50574D5F 		.ascii	"PWM_MOT_GetInterruptSourceMasked\000"
 3462      4D4F545F 
 3462      47657449 
 3462      6E746572 
 3462      72757074 
 3463              	.LASF46:
 3464 016b 50574D5F 		.ascii	"PWM_MOT_WritePeriodBuf\000"
 3464      4D4F545F 
 3464      57726974 
 3464      65506572 
 3464      696F6442 
 3465              	.LASF10:
 3466 0182 75696E74 		.ascii	"uint32\000"
 3466      333200
 3467              	.LASF16:
 3468 0189 50574D5F 		.ascii	"PWM_MOT_Stop\000"
 3468      4D4F545F 
 3468      53746F70 
 3468      00
 3469              	.LASF59:
 3470 0196 74726967 		.ascii	"triggerMode\000"
 3470      6765724D 
 3470      6F646500 
 3471              	.LASF35:
 3472 01a2 6D61736B 		.ascii	"mask\000"
 3472      00
 3473              	.LASF60:
 3474 01a7 50574D5F 		.ascii	"PWM_MOT_SetReloadMode\000"
 3474      4D4F545F 
 3474      53657452 
 3474      656C6F61 
 3474      644D6F64 
 3475              	.LASF71:
 3476 01bd 50574D5F 		.ascii	"PWM_MOT_Start\000"
 3476      4D4F545F 
 3476      53746172 
 3476      7400
 3477              	.LASF33:
 3478 01cb 64656164 		.ascii	"deadTime\000"
 3478      54696D65 
 3478      00
 3479              	.LASF56:
 3480 01d4 50574D5F 		.ascii	"PWM_MOT_ReadCapture\000"
 3480      4D4F545F 
 3480      52656164 
 3480      43617074 
 3480      75726500 
 3481              	.LASF58:
 3482 01e8 50574D5F 		.ascii	"PWM_MOT_SetCaptureMode\000"
 3482      4D4F545F 
 3482      53657443 
 3482      61707475 
 3482      72654D6F 
 3483              	.LASF8:
 3484 01ff 756E7369 		.ascii	"unsigned int\000"
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 89


 3484      676E6564 
 3484      20696E74 
 3484      00
 3485              	.LASF67:
 3486 020c 50574D5F 		.ascii	"PWM_MOT_ReadStatus\000"
 3486      4D4F545F 
 3486      52656164 
 3486      53746174 
 3486      757300
 3487              	.LASF65:
 3488 021f 636F6D6D 		.ascii	"command\000"
 3488      616E6400 
 3489              	.LASF5:
 3490 0227 6C6F6E67 		.ascii	"long unsigned int\000"
 3490      20756E73 
 3490      69676E65 
 3490      6420696E 
 3490      7400
 3491              	.LASF27:
 3492 0239 6D6F6465 		.ascii	"modeMask\000"
 3492      4D61736B 
 3492      00
 3493              	.LASF73:
 3494 0242 50574D5F 		.ascii	"PWM_MOT_GetInterruptSource\000"
 3494      4D4F545F 
 3494      47657449 
 3494      6E746572 
 3494      72757074 
 3495              	.LASF57:
 3496 025d 50574D5F 		.ascii	"PWM_MOT_ReadCaptureBuf\000"
 3496      4D4F545F 
 3496      52656164 
 3496      43617074 
 3496      75726542 
 3497              	.LASF80:
 3498 0274 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3498      74657243 
 3498      72697469 
 3498      63616C53 
 3498      65637469 
 3499              	.LASF19:
 3500 028b 50574D5F 		.ascii	"PWM_MOT_SetQDMode\000"
 3500      4D4F545F 
 3500      53657451 
 3500      444D6F64 
 3500      6500
 3501              	.LASF3:
 3502 029d 73686F72 		.ascii	"short unsigned int\000"
 3502      7420756E 
 3502      7369676E 
 3502      65642069 
 3502      6E7400
 3503              	.LASF25:
 3504 02b0 6F6E6553 		.ascii	"oneShotEnable\000"
 3504      686F7445 
 3504      6E61626C 
 3504      6500
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 90


 3505              	.LASF14:
 3506 02be 72656733 		.ascii	"reg32\000"
 3506      3200
 3507              	.LASF15:
 3508 02c4 73697A65 		.ascii	"sizetype\000"
 3508      74797065 
 3508      00
 3509              	.LASF29:
 3510 02cd 73796E63 		.ascii	"syncKillEnable\000"
 3510      4B696C6C 
 3510      456E6162 
 3510      6C6500
 3511              	.LASF34:
 3512 02dc 50574D5F 		.ascii	"PWM_MOT_SetPWMInvert\000"
 3512      4D4F545F 
 3512      53657450 
 3512      574D496E 
 3512      76657274 
 3513              	.LASF43:
 3514 02f1 50574D5F 		.ascii	"PWM_MOT_ReadPeriod\000"
 3514      4D4F545F 
 3514      52656164 
 3514      50657269 
 3514      6F6400
 3515              	.LASF51:
 3516 0304 636F6D70 		.ascii	"compare\000"
 3516      61726500 
 3517              	.LASF28:
 3518 030c 50574D5F 		.ascii	"PWM_MOT_SetPWMSyncKill\000"
 3518      4D4F545F 
 3518      53657450 
 3518      574D5379 
 3518      6E634B69 
 3519              	.LASF50:
 3520 0323 50574D5F 		.ascii	"PWM_MOT_WriteCompare\000"
 3520      4D4F545F 
 3520      57726974 
 3520      65436F6D 
 3520      70617265 
 3521              	.LASF24:
 3522 0338 50574D5F 		.ascii	"PWM_MOT_SetOneShot\000"
 3522      4D4F545F 
 3522      5365744F 
 3522      6E655368 
 3522      6F7400
 3523              	.LASF11:
 3524 034b 666C6F61 		.ascii	"float\000"
 3524      7400
 3525              	.LASF23:
 3526 0351 70726573 		.ascii	"prescaler\000"
 3526      63616C65 
 3526      7200
 3527              	.LASF1:
 3528 035b 756E7369 		.ascii	"unsigned char\000"
 3528      676E6564 
 3528      20636861 
 3528      7200
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 91


 3529              	.LASF31:
 3530 0369 73746F70 		.ascii	"stopOnKillEnable\000"
 3530      4F6E4B69 
 3530      6C6C456E 
 3530      61626C65 
 3530      00
 3531              	.LASF2:
 3532 037a 73686F72 		.ascii	"short int\000"
 3532      7420696E 
 3532      7400
 3533              	.LASF70:
 3534 0384 50574D5F 		.ascii	"PWM_MOT_Init\000"
 3534      4D4F545F 
 3534      496E6974 
 3534      00
 3535              	.LASF74:
 3536 0391 50574D5F 		.ascii	"PWM_MOT_ClearInterrupt\000"
 3536      4D4F545F 
 3536      436C6561 
 3536      72496E74 
 3536      65727275 
 3537              	.LASF22:
 3538 03a8 50574D5F 		.ascii	"PWM_MOT_SetPrescaler\000"
 3538      4D4F545F 
 3538      53657450 
 3538      72657363 
 3538      616C6572 
 3539              	.LASF36:
 3540 03bd 50574D5F 		.ascii	"PWM_MOT_WriteCounter\000"
 3540      4D4F545F 
 3540      57726974 
 3540      65436F75 
 3540      6E746572 
 3541              	.LASF69:
 3542 03d2 696E7465 		.ascii	"interruptMask\000"
 3542      72727570 
 3542      744D6173 
 3542      6B00
 3543              	.LASF52:
 3544 03e0 50574D5F 		.ascii	"PWM_MOT_ReadCompare\000"
 3544      4D4F545F 
 3544      52656164 
 3544      436F6D70 
 3544      61726500 
 3545              	.LASF26:
 3546 03f4 50574D5F 		.ascii	"PWM_MOT_SetPWMMode\000"
 3546      4D4F545F 
 3546      53657450 
 3546      574D4D6F 
 3546      646500
 3547              	.LASF55:
 3548 0407 50574D5F 		.ascii	"PWM_MOT_ReadCompareBuf\000"
 3548      4D4F545F 
 3548      52656164 
 3548      436F6D70 
 3548      61726542 
 3549              	.LASF44:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 92


 3550 041e 50574D5F 		.ascii	"PWM_MOT_SetCompareSwap\000"
 3550      4D4F545F 
 3550      53657443 
 3550      6F6D7061 
 3550      72655377 
 3551              	.LASF13:
 3552 0435 63686172 		.ascii	"char\000"
 3552      00
 3553              	.LASF20:
 3554 043a 6D6F6465 		.ascii	"mode\000"
 3554      00
 3555              	.LASF78:
 3556 043f 443A5C63 		.ascii	"D:\\code\\cypress\\controllers\\dcsd.cydsn\000"
 3556      6F64655C 
 3556      63797072 
 3556      6573735C 
 3556      636F6E74 
 3557              	.LASF39:
 3558 0466 636F756E 		.ascii	"counterMode\000"
 3558      7465724D 
 3558      6F646500 
 3559              	.LASF79:
 3560 0472 50574D5F 		.ascii	"PWM_MOT_initVar\000"
 3560      4D4F545F 
 3560      696E6974 
 3560      56617200 
 3561              	.LASF42:
 3562 0482 50574D5F 		.ascii	"PWM_MOT_ReadCounter\000"
 3562      4D4F545F 
 3562      52656164 
 3562      436F756E 
 3562      74657200 
 3563              	.LASF54:
 3564 0496 636F6D70 		.ascii	"compareBuf\000"
 3564      61726542 
 3564      756600
 3565              	.LASF32:
 3566 04a1 50574D5F 		.ascii	"PWM_MOT_SetPWMDeadTime\000"
 3566      4D4F545F 
 3566      53657450 
 3566      574D4465 
 3566      61645469 
 3567              	.LASF18:
 3568 04b8 656E6162 		.ascii	"enableInterrupts\000"
 3568      6C65496E 
 3568      74657272 
 3568      75707473 
 3568      00
 3569              	.LASF30:
 3570 04c9 50574D5F 		.ascii	"PWM_MOT_SetPWMStopOnKill\000"
 3570      4D4F545F 
 3570      53657450 
 3570      574D5374 
 3570      6F704F6E 
 3571              	.LASF53:
 3572 04e2 50574D5F 		.ascii	"PWM_MOT_WriteCompareBuf\000"
 3572      4D4F545F 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccpfwvVD.s 			page 93


 3572      57726974 
 3572      65436F6D 
 3572      70617265 
 3573              	.LASF76:
 3574 04fa 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3574      4320342E 
 3574      392E3320 
 3574      32303135 
 3574      30333033 
 3575 052d 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 3575      20726576 
 3575      6973696F 
 3575      6E203232 
 3575      31323230 
 3576 0560 67202D73 		.ascii	"g -std=c99 -ffunction-sections -ffat-lto-objects\000"
 3576      74643D63 
 3576      3939202D 
 3576      6666756E 
 3576      6374696F 
 3577              	.LASF45:
 3578 0591 73776170 		.ascii	"swapEnable\000"
 3578      456E6162 
 3578      6C6500
 3579              	.LASF38:
 3580 059c 50574D5F 		.ascii	"PWM_MOT_SetCounterMode\000"
 3580      4D4F545F 
 3580      53657443 
 3580      6F756E74 
 3580      65724D6F 
 3581              	.LASF64:
 3582 05b3 50574D5F 		.ascii	"PWM_MOT_TriggerCommand\000"
 3582      4D4F545F 
 3582      54726967 
 3582      67657243 
 3582      6F6D6D61 
 3583              	.LASF61:
 3584 05ca 50574D5F 		.ascii	"PWM_MOT_SetStartMode\000"
 3584      4D4F545F 
 3584      53657453 
 3584      74617274 
 3584      4D6F6465 
 3585              	.LASF47:
 3586 05df 70657269 		.ascii	"periodBuf\000"
 3586      6F644275 
 3586      6600
 3587              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
