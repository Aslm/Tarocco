ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADC_Init,"ax",%progbits
  18              		.align	2
  19              		.global	ADC_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	ADC_Init, %function
  23              	ADC_Init:
  24              	.LFB1:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\ADC.c"
   1:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:.\Generated_Source\PSoC4/ADC.c **** * Version 2.40
   4:.\Generated_Source\PSoC4/ADC.c **** *
   5:.\Generated_Source\PSoC4/ADC.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC.c **** *
   9:.\Generated_Source\PSoC4/ADC.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC.c **** *
  11:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC.c **** 
  18:.\Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:.\Generated_Source\PSoC4/ADC.c **** 
  20:.\Generated_Source\PSoC4/ADC.c **** 
  21:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  22:.\Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:.\Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:.\Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:.\Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:.\Generated_Source\PSoC4/ADC.c **** 
  28:.\Generated_Source\PSoC4/ADC.c **** 
  29:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  30:.\Generated_Source\PSoC4/ADC.c **** * Local data allocation
  31:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:.\Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 2


  33:.\Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000000u };
  34:.\Generated_Source\PSoC4/ADC.c **** 
  35:.\Generated_Source\PSoC4/ADC.c **** 
  36:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:.\Generated_Source\PSoC4/ADC.c **** *
  40:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  41:.\Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:.\Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:.\Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:.\Generated_Source\PSoC4/ADC.c **** *
  45:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:.\Generated_Source\PSoC4/ADC.c **** *  None.
  47:.\Generated_Source\PSoC4/ADC.c **** *
  48:.\Generated_Source\PSoC4/ADC.c **** * Return:
  49:.\Generated_Source\PSoC4/ADC.c **** *  None.
  50:.\Generated_Source\PSoC4/ADC.c **** *
  51:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:.\Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:.\Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:.\Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:.\Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:.\Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:.\Generated_Source\PSoC4/ADC.c **** *
  62:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:.\Generated_Source\PSoC4/ADC.c **** {
  65:.\Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  67:.\Generated_Source\PSoC4/ADC.c ****     {
  68:.\Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  69:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  70:.\Generated_Source\PSoC4/ADC.c ****     }
  71:.\Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  72:.\Generated_Source\PSoC4/ADC.c **** }
  73:.\Generated_Source\PSoC4/ADC.c **** 
  74:.\Generated_Source\PSoC4/ADC.c **** 
  75:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:.\Generated_Source\PSoC4/ADC.c **** *
  79:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  80:.\Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:.\Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:.\Generated_Source\PSoC4/ADC.c **** *
  84:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:.\Generated_Source\PSoC4/ADC.c **** *  None.
  86:.\Generated_Source\PSoC4/ADC.c **** *
  87:.\Generated_Source\PSoC4/ADC.c **** * Return:
  88:.\Generated_Source\PSoC4/ADC.c **** *  None.
  89:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 3


  90:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:.\Generated_Source\PSoC4/ADC.c **** *
  93:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:.\Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:.\Generated_Source\PSoC4/ADC.c **** {
  26              		.loc 1 95 0
  27              		.cfi_startproc
  28 0000 08B5     		push	{r3, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 3, -8
  31              		.cfi_offset 14, -4
  96:.\Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:.\Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:.\Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:.\Generated_Source\PSoC4/ADC.c **** 
 100:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:.\Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:.\Generated_Source\PSoC4/ADC.c ****         {
 103:.\Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:.\Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:.\Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:.\Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 9u)
 136:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_9_PIN
 138:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 9u */
 139:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 10u)
 140:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 4


 141:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 10u */
 143:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 11u)
 144:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 11u */
 147:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 12u)
 148:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 12u */
 151:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 13u)
 152:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 13u */
 155:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 14u)
 156:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 14u */
 159:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 15u)
 160:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 15u */
 163:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 16u)
 164:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 16u */
 167:.\Generated_Source\PSoC4/ADC.c ****         };
 168:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 169:.\Generated_Source\PSoC4/ADC.c **** 
 170:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 171:.\Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 172:.\Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  32              		.loc 1 172 0
  33 0002 0E20     		mov	r0, #14
  34 0004 0321     		mov	r1, #3
  35 0006 FFF7FEFF 		bl	CyIntSetPriority
  36              	.LVL0:
 173:.\Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  37              		.loc 1 173 0
  38 000a 0E20     		mov	r0, #14
  39 000c 2449     		ldr	r1, .L6
  40 000e FFF7FEFF 		bl	CyIntSetVector
  41              	.LVL1:
 174:.\Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 175:.\Generated_Source\PSoC4/ADC.c **** 
 176:.\Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 177:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
  42              		.loc 1 177 0
  43 0012 0122     		mov	r2, #1
  44 0014 234B     		ldr	r3, .L6+4
  45 0016 1A60     		str	r2, [r3]
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 179:.\Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:.\Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
  46              		.loc 1 180 0
  47 0018 234B     		ldr	r3, .L6+8
  48 001a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 5


 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  49              		.loc 1 178 0
  50 001c 002B     		cmp	r3, #0
  51 001e 01DA     		bge	.L5
  52 0020 2249     		ldr	r1, .L6+12
  53 0022 00E0     		b	.L2
  54              	.L5:
  55 0024 2249     		ldr	r1, .L6+16
  56              	.L2:
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  57              		.loc 1 178 0 is_stmt 0 discriminator 4
  58 0026 234A     		ldr	r2, .L6+20
  59 0028 1368     		ldr	r3, [r2]
  60 002a 0B43     		orr	r3, r1
  61 002c 1360     		str	r3, [r2]
 181:.\Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 182:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
  62              		.loc 1 182 0 is_stmt 1 discriminator 4
  63 002e 224A     		ldr	r2, .L6+24
  64 0030 224B     		ldr	r3, .L6+28
  65 0032 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
  66              		.loc 1 183 0 discriminator 4
  67 0034 224A     		ldr	r2, .L6+32
  68 0036 234B     		ldr	r3, .L6+36
  69 0038 1A60     		str	r2, [r3]
 184:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
  70              		.loc 1 184 0 discriminator 4
  71 003a 8022     		mov	r2, #128
  72 003c 1206     		lsl	r2, r2, #24
  73 003e 224B     		ldr	r3, .L6+40
  74 0040 1A60     		str	r2, [r3]
 185:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
  75              		.loc 1 185 0 discriminator 4
  76 0042 224B     		ldr	r3, .L6+44
  77 0044 224A     		ldr	r2, .L6+48
  78 0046 1360     		str	r3, [r2]
 186:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
  79              		.loc 1 186 0 discriminator 4
  80 0048 224A     		ldr	r2, .L6+52
  81 004a 1360     		str	r3, [r2]
 187:.\Generated_Source\PSoC4/ADC.c ****     
 188:.\Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 190:.\Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
  82              		.loc 1 190 0 discriminator 4
  83 004c 224A     		ldr	r2, .L6+56
  84 004e 1368     		ldr	r3, [r2]
  85 0050 8021     		mov	r1, #128
  86 0052 4902     		lsl	r1, r1, #9
  87 0054 0B43     		orr	r3, r1
  88 0056 1360     		str	r3, [r2]
 191:.\Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 193:.\Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 194:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 195:.\Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 6


 196:.\Generated_Source\PSoC4/ADC.c **** 
 197:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
  89              		.loc 1 197 0 discriminator 4
  90 0058 0023     		mov	r3, #0
  91 005a 204A     		ldr	r2, .L6+60
  92 005c 1360     		str	r3, [r2]
 198:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
  93              		.loc 1 198 0 discriminator 4
  94 005e 204A     		ldr	r2, .L6+64
  95 0060 1360     		str	r3, [r2]
 199:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
  96              		.loc 1 199 0 discriminator 4
  97 0062 0133     		add	r3, r3, #1
  98 0064 1F4A     		ldr	r2, .L6+68
  99 0066 1360     		str	r3, [r2]
 200:.\Generated_Source\PSoC4/ADC.c **** 
 201:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 202:.\Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 100              		.loc 1 202 0 discriminator 4
 101 0068 0221     		mov	r1, #2
 102 006a 1F4A     		ldr	r2, .L6+72
 103 006c 1160     		str	r1, [r2]
 203:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 204:.\Generated_Source\PSoC4/ADC.c **** 
 205:.\Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 206:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 104              		.loc 1 206 0 discriminator 4
 105 006e 1F49     		ldr	r1, .L6+76
 106 0070 0868     		ldr	r0, [r1]
 107              	.LVL2:
 207:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 108              		.loc 1 207 0 discriminator 4
 109 0072 1F4A     		ldr	r2, .L6+80
 110 0074 0240     		and	r2, r0
 111              	.LVL3:
 208:.\Generated_Source\PSoC4/ADC.c ****     
 209:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 210:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 211:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 212:.\Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 112              		.loc 1 213 0 discriminator 4
 113 0076 1343     		orr	r3, r2
 114              	.LVL4:
 214:.\Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:.\Generated_Source\PSoC4/ADC.c ****     #else
 216:.\Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 217:.\Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 218:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 219:.\Generated_Source\PSoC4/ADC.c ****         #else
 220:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 221:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 222:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 223:.\Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 224:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 225:.\Generated_Source\PSoC4/ADC.c ****     
 226:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 7


 115              		.loc 1 226 0 discriminator 4
 116 0078 0B60     		str	r3, [r1]
 117              	.LVL5:
 227:.\Generated_Source\PSoC4/ADC.c **** 
 228:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 229:.\Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 230:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 231:.\Generated_Source\PSoC4/ADC.c **** 
 232:.\Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 118              		.loc 1 232 0 discriminator 4
 119 007a 0023     		mov	r3, #0
 120              	.LVL6:
 121 007c 0DE0     		b	.L3
 122              	.LVL7:
 123              	.L4:
 233:.\Generated_Source\PSoC4/ADC.c ****     {
 234:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 235:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 236:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 237:.\Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 238:.\Generated_Source\PSoC4/ADC.c ****         
 239:.\Generated_Source\PSoC4/ADC.c ****         
 240:.\Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:.\Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:.\Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:.\Generated_Source\PSoC4/ADC.c ****         */
 244:.\Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 245:.\Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 246:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 247:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 248:.\Generated_Source\PSoC4/ADC.c **** 
 249:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 250:.\Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 251:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 252:.\Generated_Source\PSoC4/ADC.c ****         {
 253:.\Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 124              		.loc 1 253 0
 125 007e 9A00     		lsl	r2, r3, #2
 126 0080 1C49     		ldr	r1, .L6+84
 127 0082 8C46     		mov	ip, r1
 128 0084 6244     		add	r2, r2, ip
 129 0086 0021     		mov	r1, #0
 130 0088 1160     		str	r1, [r2]
 131              	.LVL8:
 254:.\Generated_Source\PSoC4/ADC.c **** 
 255:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 256:.\Generated_Source\PSoC4/ADC.c ****             {
 257:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 258:.\Generated_Source\PSoC4/ADC.c ****             }
 259:.\Generated_Source\PSoC4/ADC.c **** 
 260:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 261:.\Generated_Source\PSoC4/ADC.c ****             {
 262:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 263:.\Generated_Source\PSoC4/ADC.c ****             }
 264:.\Generated_Source\PSoC4/ADC.c ****         }
 265:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 266:.\Generated_Source\PSoC4/ADC.c ****             else
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 8


 267:.\Generated_Source\PSoC4/ADC.c ****             {
 268:.\Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 269:.\Generated_Source\PSoC4/ADC.c **** 
 270:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 271:.\Generated_Source\PSoC4/ADC.c ****                 {
 272:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 273:.\Generated_Source\PSoC4/ADC.c ****                 }
 274:.\Generated_Source\PSoC4/ADC.c **** 
 275:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:.\Generated_Source\PSoC4/ADC.c ****                 {
 277:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 278:.\Generated_Source\PSoC4/ADC.c ****                 }
 279:.\Generated_Source\PSoC4/ADC.c ****             }
 280:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 281:.\Generated_Source\PSoC4/ADC.c **** 
 282:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 283:.\Generated_Source\PSoC4/ADC.c ****         {
 284:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 285:.\Generated_Source\PSoC4/ADC.c ****         }
 286:.\Generated_Source\PSoC4/ADC.c ****         else
 287:.\Generated_Source\PSoC4/ADC.c ****         {
 288:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 289:.\Generated_Source\PSoC4/ADC.c ****         }
 290:.\Generated_Source\PSoC4/ADC.c **** 
 291:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 292:.\Generated_Source\PSoC4/ADC.c ****         {
 293:.\Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 294:.\Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 295:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 297:.\Generated_Source\PSoC4/ADC.c ****             #else
 298:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 132              		.loc 1 298 0
 133 008a 5800     		lsl	r0, r3, #1
 134 008c 1A4A     		ldr	r2, .L6+88
 135 008e 8152     		strh	r1, [r0, r2]
 299:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 300:.\Generated_Source\PSoC4/ADC.c ****         }
 301:.\Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 302:.\Generated_Source\PSoC4/ADC.c ****         {
 303:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 304:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 306:.\Generated_Source\PSoC4/ADC.c ****             #else
 307:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 308:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 309:.\Generated_Source\PSoC4/ADC.c ****         }
 310:.\Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 136              		.loc 1 311 0
 137 0090 9900     		lsl	r1, r3, #2
 138 0092 1A48     		ldr	r0, .L6+92
 139 0094 1A4A     		ldr	r2, .L6+96
 140 0096 8850     		str	r0, [r1, r2]
 232:.\Generated_Source\PSoC4/ADC.c ****     {
 141              		.loc 1 232 0
 142 0098 0133     		add	r3, r3, #1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 9


 143              	.LVL9:
 144              	.L3:
 232:.\Generated_Source\PSoC4/ADC.c ****     {
 145              		.loc 1 232 0 is_stmt 0 discriminator 1
 146 009a 002B     		cmp	r3, #0
 147 009c EFD0     		beq	.L4
 312:.\Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 313:.\Generated_Source\PSoC4/ADC.c ****     }
 314:.\Generated_Source\PSoC4/ADC.c **** }
 148              		.loc 1 314 0 is_stmt 1
 149              		@ sp needed
 150 009e 08BD     		pop	{r3, pc}
 151              	.L7:
 152              		.align	2
 153              	.L6:
 154 00a0 00000000 		.word	ADC_ISR
 155 00a4 20001A40 		.word	1075445792
 156 00a8 80031A40 		.word	1075446656
 157 00ac E0021050 		.word	1343226592
 158 00b0 E0020050 		.word	1342178016
 159 00b4 00001A40 		.word	1075445760
 160 00b8 AC000A80 		.word	-2146828116
 161 00bc 04001A40 		.word	1075445764
 162 00c0 0000DC05 		.word	98304000
 163 00c4 18001A40 		.word	1075445784
 164 00c8 1C001A40 		.word	1075445788
 165 00cc 04000400 		.word	262148
 166 00d0 10001A40 		.word	1075445776
 167 00d4 14001A40 		.word	1075445780
 168 00d8 00031A40 		.word	1075446528
 169 00dc 28021A40 		.word	1075446312
 170 00e0 38021A40 		.word	1075446328
 171 00e4 18021A40 		.word	1075446296
 172 00e8 000F1A40 		.word	1075449600
 173 00ec 30001A40 		.word	1075445808
 174 00f0 FFFFFFDF 		.word	-536870913
 175 00f4 80001A40 		.word	1075445888
 176 00f8 00000000 		.word	ADC_offset
 177 00fc 7C300000 		.word	12412
 178 0100 00000000 		.word	ADC_countsPer10Volt
 179              		.cfi_endproc
 180              	.LFE1:
 181              		.size	ADC_Init, .-ADC_Init
 182              		.section	.text.ADC_Enable,"ax",%progbits
 183              		.align	2
 184              		.global	ADC_Enable
 185              		.code	16
 186              		.thumb_func
 187              		.type	ADC_Enable, %function
 188              	ADC_Enable:
 189              	.LFB2:
 315:.\Generated_Source\PSoC4/ADC.c **** 
 316:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 317:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 319:.\Generated_Source\PSoC4/ADC.c **** *
 320:.\Generated_Source\PSoC4/ADC.c **** * Summary:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 10


 321:.\Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:.\Generated_Source\PSoC4/ADC.c **** *
 323:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 324:.\Generated_Source\PSoC4/ADC.c **** *  None.
 325:.\Generated_Source\PSoC4/ADC.c **** *
 326:.\Generated_Source\PSoC4/ADC.c **** * Return:
 327:.\Generated_Source\PSoC4/ADC.c **** *  None.
 328:.\Generated_Source\PSoC4/ADC.c **** *
 329:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:.\Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 331:.\Generated_Source\PSoC4/ADC.c **** {
 190              		.loc 1 331 0
 191              		.cfi_startproc
 192 0000 08B5     		push	{r3, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 3, -8
 195              		.cfi_offset 14, -4
 332:.\Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 196              		.loc 1 332 0
 197 0002 074B     		ldr	r3, .L10
 198 0004 1B68     		ldr	r3, [r3]
 199 0006 002B     		cmp	r3, #0
 200 0008 08DB     		blt	.L8
 333:.\Generated_Source\PSoC4/ADC.c ****     {
 334:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0)
 335:.\Generated_Source\PSoC4/ADC.c **** 
 336:.\Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 337:.\Generated_Source\PSoC4/ADC.c ****             {
 338:.\Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:.\Generated_Source\PSoC4/ADC.c ****             }
 340:.\Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0) */
 341:.\Generated_Source\PSoC4/ADC.c ****         
 342:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 201              		.loc 1 342 0
 202 000a 054A     		ldr	r2, .L10
 203 000c 1368     		ldr	r3, [r2]
 204 000e 8021     		mov	r1, #128
 205 0010 0906     		lsl	r1, r1, #24
 206 0012 0B43     		orr	r3, r1
 207 0014 1360     		str	r3, [r2]
 343:.\Generated_Source\PSoC4/ADC.c ****         
 344:.\Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:.\Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 208              		.loc 1 345 0
 209 0016 0A20     		mov	r0, #10
 210 0018 FFF7FEFF 		bl	CyDelayUs
 211              	.LVL10:
 212              	.L8:
 346:.\Generated_Source\PSoC4/ADC.c ****     }
 347:.\Generated_Source\PSoC4/ADC.c **** }
 213              		.loc 1 347 0
 214              		@ sp needed
 215 001c 08BD     		pop	{r3, pc}
 216              	.L11:
 217 001e C046     		.align	2
 218              	.L10:
 219 0020 00001A40 		.word	1075445760
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 11


 220              		.cfi_endproc
 221              	.LFE2:
 222              		.size	ADC_Enable, .-ADC_Enable
 223              		.section	.text.ADC_Start,"ax",%progbits
 224              		.align	2
 225              		.global	ADC_Start
 226              		.code	16
 227              		.thumb_func
 228              		.type	ADC_Start, %function
 229              	ADC_Start:
 230              	.LFB0:
  64:.\Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
 231              		.loc 1 64 0
 232              		.cfi_startproc
 233 0000 08B5     		push	{r3, lr}
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 3, -8
 236              		.cfi_offset 14, -4
  66:.\Generated_Source\PSoC4/ADC.c ****     {
 237              		.loc 1 66 0
 238 0002 064B     		ldr	r3, .L14
 239 0004 1B78     		ldrb	r3, [r3]
 240 0006 002B     		cmp	r3, #0
 241 0008 04D1     		bne	.L13
  68:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
 242              		.loc 1 68 0
 243 000a FFF7FEFF 		bl	ADC_Init
 244              	.LVL11:
  69:.\Generated_Source\PSoC4/ADC.c ****     }
 245              		.loc 1 69 0
 246 000e 0122     		mov	r2, #1
 247 0010 024B     		ldr	r3, .L14
 248 0012 1A70     		strb	r2, [r3]
 249              	.L13:
  71:.\Generated_Source\PSoC4/ADC.c **** }
 250              		.loc 1 71 0
 251 0014 FFF7FEFF 		bl	ADC_Enable
 252              	.LVL12:
  72:.\Generated_Source\PSoC4/ADC.c **** 
 253              		.loc 1 72 0
 254              		@ sp needed
 255 0018 08BD     		pop	{r3, pc}
 256              	.L15:
 257 001a C046     		.align	2
 258              	.L14:
 259 001c 00000000 		.word	.LANCHOR0
 260              		.cfi_endproc
 261              	.LFE0:
 262              		.size	ADC_Start, .-ADC_Start
 263              		.section	.text.ADC_Stop,"ax",%progbits
 264              		.align	2
 265              		.global	ADC_Stop
 266              		.code	16
 267              		.thumb_func
 268              		.type	ADC_Stop, %function
 269              	ADC_Stop:
 270              	.LFB3:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 12


 348:.\Generated_Source\PSoC4/ADC.c **** 
 349:.\Generated_Source\PSoC4/ADC.c **** 
 350:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 351:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 352:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 353:.\Generated_Source\PSoC4/ADC.c **** *
 354:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 355:.\Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:.\Generated_Source\PSoC4/ADC.c **** *  mode.
 357:.\Generated_Source\PSoC4/ADC.c **** *
 358:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 359:.\Generated_Source\PSoC4/ADC.c **** *  None.
 360:.\Generated_Source\PSoC4/ADC.c **** *
 361:.\Generated_Source\PSoC4/ADC.c **** * Return:
 362:.\Generated_Source\PSoC4/ADC.c **** *  None.
 363:.\Generated_Source\PSoC4/ADC.c **** *
 364:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 365:.\Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 366:.\Generated_Source\PSoC4/ADC.c **** {
 271              		.loc 1 366 0
 272              		.cfi_startproc
 367:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 273              		.loc 1 367 0
 274 0000 024A     		ldr	r2, .L17
 275 0002 1368     		ldr	r3, [r2]
 276 0004 5B00     		lsl	r3, r3, #1
 277 0006 5B08     		lsr	r3, r3, #1
 278 0008 1360     		str	r3, [r2]
 368:.\Generated_Source\PSoC4/ADC.c **** }
 279              		.loc 1 368 0
 280              		@ sp needed
 281 000a 7047     		bx	lr
 282              	.L18:
 283              		.align	2
 284              	.L17:
 285 000c 00001A40 		.word	1075445760
 286              		.cfi_endproc
 287              	.LFE3:
 288              		.size	ADC_Stop, .-ADC_Stop
 289              		.section	.text.ADC_StartConvert,"ax",%progbits
 290              		.align	2
 291              		.global	ADC_StartConvert
 292              		.code	16
 293              		.thumb_func
 294              		.type	ADC_StartConvert, %function
 295              	ADC_StartConvert:
 296              	.LFB4:
 369:.\Generated_Source\PSoC4/ADC.c **** 
 370:.\Generated_Source\PSoC4/ADC.c **** 
 371:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 372:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 373:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 374:.\Generated_Source\PSoC4/ADC.c **** *
 375:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 376:.\Generated_Source\PSoC4/ADC.c **** *  Description:
 377:.\Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:.\Generated_Source\PSoC4/ADC.c **** *  runs continuously.
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 13


 379:.\Generated_Source\PSoC4/ADC.c **** *
 380:.\Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:.\Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:.\Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 383:.\Generated_Source\PSoC4/ADC.c **** *
 384:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 385:.\Generated_Source\PSoC4/ADC.c **** *  None.
 386:.\Generated_Source\PSoC4/ADC.c **** *
 387:.\Generated_Source\PSoC4/ADC.c **** * Return:
 388:.\Generated_Source\PSoC4/ADC.c **** *  None.
 389:.\Generated_Source\PSoC4/ADC.c **** *
 390:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 391:.\Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 392:.\Generated_Source\PSoC4/ADC.c **** {
 297              		.loc 1 392 0
 298              		.cfi_startproc
 393:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 394:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 395:.\Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 396:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 299              		.loc 1 396 0
 300 0000 0122     		mov	r2, #1
 301 0002 014B     		ldr	r3, .L20
 302 0004 1A60     		str	r2, [r3]
 397:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 398:.\Generated_Source\PSoC4/ADC.c **** 
 399:.\Generated_Source\PSoC4/ADC.c **** }
 303              		.loc 1 399 0
 304              		@ sp needed
 305 0006 7047     		bx	lr
 306              	.L21:
 307              		.align	2
 308              	.L20:
 309 0008 24001A40 		.word	1075445796
 310              		.cfi_endproc
 311              	.LFE4:
 312              		.size	ADC_StartConvert, .-ADC_StartConvert
 313              		.section	.text.ADC_StopConvert,"ax",%progbits
 314              		.align	2
 315              		.global	ADC_StopConvert
 316              		.code	16
 317              		.thumb_func
 318              		.type	ADC_StopConvert, %function
 319              	ADC_StopConvert:
 320              	.LFB5:
 400:.\Generated_Source\PSoC4/ADC.c **** 
 401:.\Generated_Source\PSoC4/ADC.c **** 
 402:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 403:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 404:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 405:.\Generated_Source\PSoC4/ADC.c **** *
 406:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 407:.\Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 408:.\Generated_Source\PSoC4/ADC.c **** *
 409:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 410:.\Generated_Source\PSoC4/ADC.c **** *  None.
 411:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 14


 412:.\Generated_Source\PSoC4/ADC.c **** * Return:
 413:.\Generated_Source\PSoC4/ADC.c **** *  None.
 414:.\Generated_Source\PSoC4/ADC.c **** *
 415:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 416:.\Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 417:.\Generated_Source\PSoC4/ADC.c **** {
 321              		.loc 1 417 0
 322              		.cfi_startproc
 418:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 419:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 420:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 421:.\Generated_Source\PSoC4/ADC.c **** }
 323              		.loc 1 421 0
 324              		@ sp needed
 325 0000 7047     		bx	lr
 326              		.cfi_endproc
 327              	.LFE5:
 328              		.size	ADC_StopConvert, .-ADC_StopConvert
 329 0002 C046     		.section	.text.ADC_IsEndConversion,"ax",%progbits
 330              		.align	2
 331              		.global	ADC_IsEndConversion
 332              		.code	16
 333              		.thumb_func
 334              		.type	ADC_IsEndConversion, %function
 335              	ADC_IsEndConversion:
 336              	.LFB6:
 422:.\Generated_Source\PSoC4/ADC.c **** 
 423:.\Generated_Source\PSoC4/ADC.c **** 
 424:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 426:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:.\Generated_Source\PSoC4/ADC.c **** *
 428:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 429:.\Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:.\Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:.\Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 432:.\Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 433:.\Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:.\Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 435:.\Generated_Source\PSoC4/ADC.c **** *  completed.
 436:.\Generated_Source\PSoC4/ADC.c **** *
 437:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 438:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:.\Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 442:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:.\Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 444:.\Generated_Source\PSoC4/ADC.c **** *
 445:.\Generated_Source\PSoC4/ADC.c **** * Return:
 446:.\Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:.\Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:.\Generated_Source\PSoC4/ADC.c **** *
 449:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 450:.\Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 451:.\Generated_Source\PSoC4/ADC.c **** {
 337              		.loc 1 451 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 15


 338              		.cfi_startproc
 339              	.LVL13:
 340 0000 021C     		mov	r2, r0
 341              	.LVL14:
 452:.\Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 453:.\Generated_Source\PSoC4/ADC.c **** 
 454:.\Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 342              		.loc 1 454 0
 343 0002 8307     		lsl	r3, r0, #30
 344 0004 0CD0     		beq	.L27
 345              	.LVL15:
 346              	.L26:
 455:.\Generated_Source\PSoC4/ADC.c ****     {
 456:.\Generated_Source\PSoC4/ADC.c ****         do
 457:.\Generated_Source\PSoC4/ADC.c ****         {
 458:.\Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 347              		.loc 1 458 0 discriminator 2
 348 0006 074B     		ldr	r3, .L28
 349 0008 1B68     		ldr	r3, [r3]
 350 000a 0120     		mov	r0, #1
 351 000c 1840     		and	r0, r3
 352              	.LVL16:
 459:.\Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 353              		.loc 1 459 0 discriminator 2
 354 000e 01D1     		bne	.L25
 355              		.loc 1 459 0 is_stmt 0 discriminator 1
 356 0010 9307     		lsl	r3, r2, #30
 357 0012 F8D4     		bmi	.L26
 358              	.L25:
 460:.\Generated_Source\PSoC4/ADC.c **** 
 461:.\Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 359              		.loc 1 461 0 is_stmt 1
 360 0014 0028     		cmp	r0, #0
 361 0016 04D0     		beq	.L24
 462:.\Generated_Source\PSoC4/ADC.c ****         {
 463:.\Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 464:.\Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 362              		.loc 1 464 0
 363 0018 0122     		mov	r2, #1
 364              	.LVL17:
 365 001a 024B     		ldr	r3, .L28
 366 001c 1A60     		str	r2, [r3]
 367 001e 00E0     		b	.L24
 368              	.LVL18:
 369              	.L27:
 452:.\Generated_Source\PSoC4/ADC.c **** 
 370              		.loc 1 452 0
 371 0020 0020     		mov	r0, #0
 372              	.LVL19:
 373              	.L24:
 465:.\Generated_Source\PSoC4/ADC.c ****         }
 466:.\Generated_Source\PSoC4/ADC.c ****     }
 467:.\Generated_Source\PSoC4/ADC.c **** 
 468:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 469:.\Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 470:.\Generated_Source\PSoC4/ADC.c ****         {
 471:.\Generated_Source\PSoC4/ADC.c ****             do
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 16


 472:.\Generated_Source\PSoC4/ADC.c ****             {
 473:.\Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 474:.\Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 475:.\Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 476:.\Generated_Source\PSoC4/ADC.c **** 
 477:.\Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 478:.\Generated_Source\PSoC4/ADC.c ****             {
 479:.\Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 480:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 481:.\Generated_Source\PSoC4/ADC.c ****             }
 482:.\Generated_Source\PSoC4/ADC.c ****         }
 483:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 484:.\Generated_Source\PSoC4/ADC.c **** 
 485:.\Generated_Source\PSoC4/ADC.c ****     return (status);
 486:.\Generated_Source\PSoC4/ADC.c **** }
 374              		.loc 1 486 0
 375              		@ sp needed
 376 0022 7047     		bx	lr
 377              	.L29:
 378              		.align	2
 379              	.L28:
 380 0024 10021A40 		.word	1075446288
 381              		.cfi_endproc
 382              	.LFE6:
 383              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 384              		.section	.text.ADC_GetResult16,"ax",%progbits
 385              		.align	2
 386              		.global	ADC_GetResult16
 387              		.code	16
 388              		.thumb_func
 389              		.type	ADC_GetResult16, %function
 390              	ADC_GetResult16:
 391              	.LFB7:
 487:.\Generated_Source\PSoC4/ADC.c **** 
 488:.\Generated_Source\PSoC4/ADC.c **** 
 489:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 490:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 491:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 492:.\Generated_Source\PSoC4/ADC.c **** *
 493:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 494:.\Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 495:.\Generated_Source\PSoC4/ADC.c **** *
 496:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 497:.\Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:.\Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:.\Generated_Source\PSoC4/ADC.c **** *
 500:.\Generated_Source\PSoC4/ADC.c **** * Return:
 501:.\Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:.\Generated_Source\PSoC4/ADC.c **** *
 503:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 504:.\Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 505:.\Generated_Source\PSoC4/ADC.c **** {
 392              		.loc 1 505 0
 393              		.cfi_startproc
 394              	.LVL20:
 395 0000 10B5     		push	{r4, lr}
 396              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 17


 397              		.cfi_offset 4, -8
 398              		.cfi_offset 14, -4
 399 0002 041E     		sub	r4, r0, #0
 506:.\Generated_Source\PSoC4/ADC.c ****     uint32 result;
 507:.\Generated_Source\PSoC4/ADC.c **** 
 508:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 400              		.loc 1 509 0
 401 0004 02D0     		beq	.L31
 402              		.loc 1 509 0 is_stmt 0 discriminator 1
 403 0006 0020     		mov	r0, #0
 404              	.LVL21:
 405 0008 FFF7FEFF 		bl	CyHalt
 406              	.LVL22:
 407              	.L31:
 510:.\Generated_Source\PSoC4/ADC.c **** 
 511:.\Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 408              		.loc 1 511 0 is_stmt 1
 409 000c 002C     		cmp	r4, #0
 410 000e 07D1     		bne	.L33
 512:.\Generated_Source\PSoC4/ADC.c ****     {
 513:.\Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 411              		.loc 1 513 0
 412 0010 A400     		lsl	r4, r4, #2
 413              	.LVL23:
 414 0012 054B     		ldr	r3, .L34
 415 0014 9C46     		mov	ip, r3
 416 0016 6444     		add	r4, r4, ip
 417 0018 2068     		ldr	r0, [r4]
 418 001a 0004     		lsl	r0, r0, #16
 419 001c 000C     		lsr	r0, r0, #16
 420              	.LVL24:
 421 001e 00E0     		b	.L32
 422              	.LVL25:
 423              	.L33:
 514:.\Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 515:.\Generated_Source\PSoC4/ADC.c ****     }
 516:.\Generated_Source\PSoC4/ADC.c ****     else
 517:.\Generated_Source\PSoC4/ADC.c ****     {
 518:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 519:.\Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 520:.\Generated_Source\PSoC4/ADC.c ****         #else
 521:.\Generated_Source\PSoC4/ADC.c ****             result = 0u;
 424              		.loc 1 521 0
 425 0020 0020     		mov	r0, #0
 426              	.LVL26:
 427              	.L32:
 522:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 523:.\Generated_Source\PSoC4/ADC.c ****     }
 524:.\Generated_Source\PSoC4/ADC.c **** 
 525:.\Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 428              		.loc 1 525 0
 429 0022 00B2     		sxth	r0, r0
 430              	.LVL27:
 526:.\Generated_Source\PSoC4/ADC.c **** }
 431              		.loc 1 526 0
 432              		@ sp needed
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 18


 433 0024 10BD     		pop	{r4, pc}
 434              	.L35:
 435 0026 C046     		.align	2
 436              	.L34:
 437 0028 80011A40 		.word	1075446144
 438              		.cfi_endproc
 439              	.LFE7:
 440              		.size	ADC_GetResult16, .-ADC_GetResult16
 441              		.section	.text.ADC_SetChanMask,"ax",%progbits
 442              		.align	2
 443              		.global	ADC_SetChanMask
 444              		.code	16
 445              		.thumb_func
 446              		.type	ADC_SetChanMask, %function
 447              	ADC_SetChanMask:
 448              	.LFB8:
 527:.\Generated_Source\PSoC4/ADC.c **** 
 528:.\Generated_Source\PSoC4/ADC.c **** 
 529:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 530:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 531:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 532:.\Generated_Source\PSoC4/ADC.c **** *
 533:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 534:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 535:.\Generated_Source\PSoC4/ADC.c **** *
 536:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 537:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 538:.\Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:.\Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:.\Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:.\Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 542:.\Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:.\Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:.\Generated_Source\PSoC4/ADC.c **** *
 545:.\Generated_Source\PSoC4/ADC.c **** * Return:
 546:.\Generated_Source\PSoC4/ADC.c **** *  None.
 547:.\Generated_Source\PSoC4/ADC.c **** *
 548:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 550:.\Generated_Source\PSoC4/ADC.c **** {
 449              		.loc 1 550 0
 450              		.cfi_startproc
 451              	.LVL28:
 551:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 452              		.loc 1 551 0
 453 0000 0123     		mov	r3, #1
 454 0002 1840     		and	r0, r3
 455              	.LVL29:
 456 0004 014B     		ldr	r3, .L37
 457 0006 1860     		str	r0, [r3]
 552:.\Generated_Source\PSoC4/ADC.c **** }
 458              		.loc 1 552 0
 459              		@ sp needed
 460 0008 7047     		bx	lr
 461              	.L38:
 462 000a C046     		.align	2
 463              	.L37:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 19


 464 000c 20001A40 		.word	1075445792
 465              		.cfi_endproc
 466              	.LFE8:
 467              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 468              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 469              		.align	2
 470              		.global	ADC_SetLowLimit
 471              		.code	16
 472              		.thumb_func
 473              		.type	ADC_SetLowLimit, %function
 474              	ADC_SetLowLimit:
 475              	.LFB9:
 553:.\Generated_Source\PSoC4/ADC.c **** 
 554:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 555:.\Generated_Source\PSoC4/ADC.c **** 
 556:.\Generated_Source\PSoC4/ADC.c **** 
 557:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 558:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 559:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 560:.\Generated_Source\PSoC4/ADC.c ****     *
 561:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 562:.\Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 563:.\Generated_Source\PSoC4/ADC.c ****     *
 564:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 565:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 566:.\Generated_Source\PSoC4/ADC.c ****     *
 567:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 568:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 569:.\Generated_Source\PSoC4/ADC.c ****     *
 570:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 571:.\Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 572:.\Generated_Source\PSoC4/ADC.c ****     {
 573:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 574:.\Generated_Source\PSoC4/ADC.c ****     }
 575:.\Generated_Source\PSoC4/ADC.c **** 
 576:.\Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 577:.\Generated_Source\PSoC4/ADC.c **** 
 578:.\Generated_Source\PSoC4/ADC.c **** 
 579:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 581:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:.\Generated_Source\PSoC4/ADC.c **** *
 583:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 584:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:.\Generated_Source\PSoC4/ADC.c **** *
 586:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:.\Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:.\Generated_Source\PSoC4/ADC.c **** *
 589:.\Generated_Source\PSoC4/ADC.c **** * Return:
 590:.\Generated_Source\PSoC4/ADC.c **** *  None.
 591:.\Generated_Source\PSoC4/ADC.c **** *
 592:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 593:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 594:.\Generated_Source\PSoC4/ADC.c **** {
 476              		.loc 1 594 0
 477              		.cfi_startproc
 478              	.LVL30:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 20


 595:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 479              		.loc 1 595 0
 480 0000 054A     		ldr	r2, .L40
 481 0002 1368     		ldr	r3, [r2]
 482 0004 1B0C     		lsr	r3, r3, #16
 483 0006 1B04     		lsl	r3, r3, #16
 484 0008 1360     		str	r3, [r2]
 596:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 485              		.loc 1 596 0
 486 000a 1368     		ldr	r3, [r2]
 487 000c 0004     		lsl	r0, r0, #16
 488              	.LVL31:
 489 000e 000C     		lsr	r0, r0, #16
 490 0010 1843     		orr	r0, r3
 491 0012 1060     		str	r0, [r2]
 597:.\Generated_Source\PSoC4/ADC.c **** }
 492              		.loc 1 597 0
 493              		@ sp needed
 494 0014 7047     		bx	lr
 495              	.L41:
 496 0016 C046     		.align	2
 497              	.L40:
 498 0018 18001A40 		.word	1075445784
 499              		.cfi_endproc
 500              	.LFE9:
 501              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 502              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 503              		.align	2
 504              		.global	ADC_SetHighLimit
 505              		.code	16
 506              		.thumb_func
 507              		.type	ADC_SetHighLimit, %function
 508              	ADC_SetHighLimit:
 509              	.LFB10:
 598:.\Generated_Source\PSoC4/ADC.c **** 
 599:.\Generated_Source\PSoC4/ADC.c **** 
 600:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 601:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 602:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 603:.\Generated_Source\PSoC4/ADC.c **** *
 604:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 605:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:.\Generated_Source\PSoC4/ADC.c **** *
 607:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 608:.\Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 609:.\Generated_Source\PSoC4/ADC.c **** *
 610:.\Generated_Source\PSoC4/ADC.c **** * Return:
 611:.\Generated_Source\PSoC4/ADC.c **** *  None.
 612:.\Generated_Source\PSoC4/ADC.c **** *
 613:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 614:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 615:.\Generated_Source\PSoC4/ADC.c **** {
 510              		.loc 1 615 0
 511              		.cfi_startproc
 512              	.LVL32:
 616:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 513              		.loc 1 616 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 21


 514 0000 044A     		ldr	r2, .L43
 515 0002 1368     		ldr	r3, [r2]
 516 0004 1B04     		lsl	r3, r3, #16
 517 0006 1B0C     		lsr	r3, r3, #16
 518 0008 1360     		str	r3, [r2]
 617:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 519              		.loc 1 617 0
 520 000a 1368     		ldr	r3, [r2]
 521 000c 0004     		lsl	r0, r0, #16
 522              	.LVL33:
 523 000e 1843     		orr	r0, r3
 524 0010 1060     		str	r0, [r2]
 618:.\Generated_Source\PSoC4/ADC.c **** }
 525              		.loc 1 618 0
 526              		@ sp needed
 527 0012 7047     		bx	lr
 528              	.L44:
 529              		.align	2
 530              	.L43:
 531 0014 18001A40 		.word	1075445784
 532              		.cfi_endproc
 533              	.LFE10:
 534              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 535              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 536              		.align	2
 537              		.global	ADC_SetLimitMask
 538              		.code	16
 539              		.thumb_func
 540              		.type	ADC_SetLimitMask, %function
 541              	ADC_SetLimitMask:
 542              	.LFB11:
 619:.\Generated_Source\PSoC4/ADC.c **** 
 620:.\Generated_Source\PSoC4/ADC.c **** 
 621:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 622:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 623:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/ADC.c **** *
 625:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 626:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 627:.\Generated_Source\PSoC4/ADC.c **** *
 628:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 629:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 630:.\Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:.\Generated_Source\PSoC4/ADC.c **** *
 634:.\Generated_Source\PSoC4/ADC.c **** * Return:
 635:.\Generated_Source\PSoC4/ADC.c **** *  None.
 636:.\Generated_Source\PSoC4/ADC.c **** *
 637:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 639:.\Generated_Source\PSoC4/ADC.c **** {
 543              		.loc 1 639 0
 544              		.cfi_startproc
 545              	.LVL34:
 640:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 546              		.loc 1 640 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 22


 547 0000 0123     		mov	r3, #1
 548 0002 1840     		and	r0, r3
 549              	.LVL35:
 550 0004 014B     		ldr	r3, .L46
 551 0006 1860     		str	r0, [r3]
 641:.\Generated_Source\PSoC4/ADC.c **** }
 552              		.loc 1 641 0
 553              		@ sp needed
 554 0008 7047     		bx	lr
 555              	.L47:
 556 000a C046     		.align	2
 557              	.L46:
 558 000c 38021A40 		.word	1075446328
 559              		.cfi_endproc
 560              	.LFE11:
 561              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 562              		.section	.text.ADC_SetSatMask,"ax",%progbits
 563              		.align	2
 564              		.global	ADC_SetSatMask
 565              		.code	16
 566              		.thumb_func
 567              		.type	ADC_SetSatMask, %function
 568              	ADC_SetSatMask:
 569              	.LFB12:
 642:.\Generated_Source\PSoC4/ADC.c **** 
 643:.\Generated_Source\PSoC4/ADC.c **** 
 644:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 645:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 646:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 647:.\Generated_Source\PSoC4/ADC.c **** *
 648:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 649:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 650:.\Generated_Source\PSoC4/ADC.c **** *
 651:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 652:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 653:.\Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:.\Generated_Source\PSoC4/ADC.c **** *
 657:.\Generated_Source\PSoC4/ADC.c **** * Return:
 658:.\Generated_Source\PSoC4/ADC.c **** *  None.
 659:.\Generated_Source\PSoC4/ADC.c **** *
 660:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 661:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 662:.\Generated_Source\PSoC4/ADC.c **** {
 570              		.loc 1 662 0
 571              		.cfi_startproc
 572              	.LVL36:
 663:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 573              		.loc 1 663 0
 574 0000 0123     		mov	r3, #1
 575 0002 1840     		and	r0, r3
 576              	.LVL37:
 577 0004 014B     		ldr	r3, .L49
 578 0006 1860     		str	r0, [r3]
 664:.\Generated_Source\PSoC4/ADC.c **** }
 579              		.loc 1 664 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 23


 580              		@ sp needed
 581 0008 7047     		bx	lr
 582              	.L50:
 583 000a C046     		.align	2
 584              	.L49:
 585 000c 28021A40 		.word	1075446312
 586              		.cfi_endproc
 587              	.LFE12:
 588              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 589              		.section	.text.ADC_SetOffset,"ax",%progbits
 590              		.align	2
 591              		.global	ADC_SetOffset
 592              		.code	16
 593              		.thumb_func
 594              		.type	ADC_SetOffset, %function
 595              	ADC_SetOffset:
 596              	.LFB13:
 665:.\Generated_Source\PSoC4/ADC.c **** 
 666:.\Generated_Source\PSoC4/ADC.c **** 
 667:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 668:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 669:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 670:.\Generated_Source\PSoC4/ADC.c **** *
 671:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 672:.\Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:.\Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:.\Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 675:.\Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 676:.\Generated_Source\PSoC4/ADC.c **** *
 677:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 678:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 679:.\Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 680:.\Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:.\Generated_Source\PSoC4/ADC.c **** *
 682:.\Generated_Source\PSoC4/ADC.c **** * Return:
 683:.\Generated_Source\PSoC4/ADC.c **** *  None.
 684:.\Generated_Source\PSoC4/ADC.c **** *
 685:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 686:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 687:.\Generated_Source\PSoC4/ADC.c **** *
 688:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 689:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 690:.\Generated_Source\PSoC4/ADC.c **** {
 597              		.loc 1 690 0
 598              		.cfi_startproc
 599              	.LVL38:
 600 0000 38B5     		push	{r3, r4, r5, lr}
 601              		.cfi_def_cfa_offset 16
 602              		.cfi_offset 3, -16
 603              		.cfi_offset 4, -12
 604              		.cfi_offset 5, -8
 605              		.cfi_offset 14, -4
 606 0002 041C     		mov	r4, r0
 607 0004 0D1C     		mov	r5, r1
 691:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 608              		.loc 1 692 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 24


 609 0006 0028     		cmp	r0, #0
 610 0008 02D0     		beq	.L52
 611              		.loc 1 692 0 is_stmt 0 discriminator 1
 612 000a 0020     		mov	r0, #0
 613              	.LVL39:
 614 000c FFF7FEFF 		bl	CyHalt
 615              	.LVL40:
 616              	.L52:
 693:.\Generated_Source\PSoC4/ADC.c **** 
 694:.\Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 617              		.loc 1 694 0 is_stmt 1
 618 0010 6400     		lsl	r4, r4, #1
 619              	.LVL41:
 620 0012 014B     		ldr	r3, .L53
 621 0014 E552     		strh	r5, [r4, r3]
 695:.\Generated_Source\PSoC4/ADC.c **** }
 622              		.loc 1 695 0
 623              		@ sp needed
 624 0016 38BD     		pop	{r3, r4, r5, pc}
 625              	.L54:
 626              		.align	2
 627              	.L53:
 628 0018 00000000 		.word	ADC_offset
 629              		.cfi_endproc
 630              	.LFE13:
 631              		.size	ADC_SetOffset, .-ADC_SetOffset
 632              		.section	.text.ADC_SetGain,"ax",%progbits
 633              		.align	2
 634              		.global	ADC_SetGain
 635              		.code	16
 636              		.thumb_func
 637              		.type	ADC_SetGain, %function
 638              	ADC_SetGain:
 639              	.LFB14:
 696:.\Generated_Source\PSoC4/ADC.c **** 
 697:.\Generated_Source\PSoC4/ADC.c **** 
 698:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 699:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 700:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 701:.\Generated_Source\PSoC4/ADC.c **** *
 702:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 703:.\Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:.\Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 705:.\Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 706:.\Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:.\Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:.\Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:.\Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 710:.\Generated_Source\PSoC4/ADC.c **** *
 711:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 712:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 713:.\Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:.\Generated_Source\PSoC4/ADC.c **** *
 715:.\Generated_Source\PSoC4/ADC.c **** * Return:
 716:.\Generated_Source\PSoC4/ADC.c **** *  None.
 717:.\Generated_Source\PSoC4/ADC.c **** *
 718:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 25


 719:.\Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:.\Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 721:.\Generated_Source\PSoC4/ADC.c **** *
 722:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 723:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 724:.\Generated_Source\PSoC4/ADC.c **** {
 640              		.loc 1 724 0
 641              		.cfi_startproc
 642              	.LVL42:
 643 0000 38B5     		push	{r3, r4, r5, lr}
 644              		.cfi_def_cfa_offset 16
 645              		.cfi_offset 3, -16
 646              		.cfi_offset 4, -12
 647              		.cfi_offset 5, -8
 648              		.cfi_offset 14, -4
 649 0002 041C     		mov	r4, r0
 650 0004 0D1C     		mov	r5, r1
 725:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 651              		.loc 1 726 0
 652 0006 0028     		cmp	r0, #0
 653 0008 02D0     		beq	.L56
 654              		.loc 1 726 0 is_stmt 0 discriminator 1
 655 000a 0020     		mov	r0, #0
 656              	.LVL43:
 657 000c FFF7FEFF 		bl	CyHalt
 658              	.LVL44:
 659              	.L56:
 727:.\Generated_Source\PSoC4/ADC.c **** 
 728:.\Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 660              		.loc 1 728 0 is_stmt 1
 661 0010 A400     		lsl	r4, r4, #2
 662              	.LVL45:
 663 0012 014B     		ldr	r3, .L57
 664 0014 E550     		str	r5, [r4, r3]
 729:.\Generated_Source\PSoC4/ADC.c **** }
 665              		.loc 1 729 0
 666              		@ sp needed
 667              	.LVL46:
 668 0016 38BD     		pop	{r3, r4, r5, pc}
 669              	.L58:
 670              		.align	2
 671              	.L57:
 672 0018 00000000 		.word	ADC_countsPer10Volt
 673              		.cfi_endproc
 674              	.LFE14:
 675              		.size	ADC_SetGain, .-ADC_SetGain
 676              		.global	__aeabi_idiv
 677              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 678              		.align	2
 679              		.global	ADC_CountsTo_mVolts
 680              		.code	16
 681              		.thumb_func
 682              		.type	ADC_CountsTo_mVolts, %function
 683              	ADC_CountsTo_mVolts:
 684              	.LFB15:
 730:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 26


 731:.\Generated_Source\PSoC4/ADC.c **** 
 732:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 733:.\Generated_Source\PSoC4/ADC.c **** 
 734:.\Generated_Source\PSoC4/ADC.c **** 
 735:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 736:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 737:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 738:.\Generated_Source\PSoC4/ADC.c ****     *
 739:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 740:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 741:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 742:.\Generated_Source\PSoC4/ADC.c ****     *
 743:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 744:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 745:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:.\Generated_Source\PSoC4/ADC.c ****     *
 747:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 748:.\Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 749:.\Generated_Source\PSoC4/ADC.c ****     *
 750:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 751:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 753:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 754:.\Generated_Source\PSoC4/ADC.c ****     *
 755:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 756:.\Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:.\Generated_Source\PSoC4/ADC.c ****     {
 685              		.loc 1 757 0
 686              		.cfi_startproc
 687              	.LVL47:
 688 0000 38B5     		push	{r3, r4, r5, lr}
 689              		.cfi_def_cfa_offset 16
 690              		.cfi_offset 3, -16
 691              		.cfi_offset 4, -12
 692              		.cfi_offset 5, -8
 693              		.cfi_offset 14, -4
 694 0002 041C     		mov	r4, r0
 695 0004 0D1C     		mov	r5, r1
 758:.\Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 759:.\Generated_Source\PSoC4/ADC.c **** 
 760:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 696              		.loc 1 761 0
 697 0006 0028     		cmp	r0, #0
 698 0008 02D0     		beq	.L60
 699              		.loc 1 761 0 is_stmt 0 discriminator 1
 700 000a 0020     		mov	r0, #0
 701              	.LVL48:
 702 000c FFF7FEFF 		bl	CyHalt
 703              	.LVL49:
 704              	.L60:
 762:.\Generated_Source\PSoC4/ADC.c **** 
 763:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 765:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 766:.\Generated_Source\PSoC4/ADC.c ****             {
 767:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 27


 768:.\Generated_Source\PSoC4/ADC.c ****             }
 769:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 770:.\Generated_Source\PSoC4/ADC.c **** 
 771:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 772:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 705              		.loc 1 772 0 is_stmt 1
 706 0010 6300     		lsl	r3, r4, #1
 707 0012 0F4A     		ldr	r2, .L63
 708 0014 995A     		ldrh	r1, [r3, r2]
 709 0016 691A     		sub	r1, r5, r1
 710 0018 09B2     		sxth	r1, r1
 711              	.LVL50:
 773:.\Generated_Source\PSoC4/ADC.c **** 
 774:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 712              		.loc 1 774 0
 713 001a 0E48     		ldr	r0, .L63+4
 714 001c 021C     		mov	r2, r0
 715 001e 4A43     		mul	r2, r1
 775:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 716              		.loc 1 775 0
 717 0020 0029     		cmp	r1, #0
 718 0022 06DD     		ble	.L61
 719              		.loc 1 775 0 is_stmt 0 discriminator 1
 720 0024 A300     		lsl	r3, r4, #2
 721 0026 0C49     		ldr	r1, .L63+8
 722              	.LVL51:
 723 0028 5B58     		ldr	r3, [r3, r1]
 724 002a D80F     		lsr	r0, r3, #31
 725 002c C018     		add	r0, r0, r3
 726 002e 4310     		asr	r3, r0, #1
 727 0030 06E0     		b	.L62
 728              	.LVL52:
 729              	.L61:
 730              		.loc 1 775 0 discriminator 2
 731 0032 A300     		lsl	r3, r4, #2
 732 0034 0849     		ldr	r1, .L63+8
 733              	.LVL53:
 734 0036 5B58     		ldr	r3, [r3, r1]
 735 0038 D80F     		lsr	r0, r3, #31
 736 003a C318     		add	r3, r0, r3
 737 003c 5B10     		asr	r3, r3, #1
 738 003e 5B42     		neg	r3, r3
 739              	.L62:
 774:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 740              		.loc 1 774 0 is_stmt 1
 741 0040 D018     		add	r0, r2, r3
 776:.\Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 742              		.loc 1 776 0
 743 0042 A400     		lsl	r4, r4, #2
 744              	.LVL54:
 745 0044 044B     		ldr	r3, .L63+8
 746 0046 E158     		ldr	r1, [r4, r3]
 747 0048 FFF7FEFF 		bl	__aeabi_idiv
 748              	.LVL55:
 777:.\Generated_Source\PSoC4/ADC.c **** 
 778:.\Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 749              		.loc 1 778 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 28


 750 004c 00B2     		sxth	r0, r0
 779:.\Generated_Source\PSoC4/ADC.c ****     }
 751              		.loc 1 779 0
 752              		@ sp needed
 753 004e 38BD     		pop	{r3, r4, r5, pc}
 754              	.L64:
 755              		.align	2
 756              	.L63:
 757 0050 00000000 		.word	ADC_offset
 758 0054 10270000 		.word	10000
 759 0058 00000000 		.word	ADC_countsPer10Volt
 760              		.cfi_endproc
 761              	.LFE15:
 762              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 763              		.global	__aeabi_lmul
 764              		.global	__aeabi_ldivmod
 765              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 766              		.align	2
 767              		.global	ADC_CountsTo_uVolts
 768              		.code	16
 769              		.thumb_func
 770              		.type	ADC_CountsTo_uVolts, %function
 771              	ADC_CountsTo_uVolts:
 772              	.LFB16:
 780:.\Generated_Source\PSoC4/ADC.c **** 
 781:.\Generated_Source\PSoC4/ADC.c **** 
 782:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 783:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 784:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 785:.\Generated_Source\PSoC4/ADC.c ****     *
 786:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 787:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 788:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 789:.\Generated_Source\PSoC4/ADC.c ****     *
 790:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 791:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 792:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:.\Generated_Source\PSoC4/ADC.c ****     *
 794:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 795:.\Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 796:.\Generated_Source\PSoC4/ADC.c ****     *
 797:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 798:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 800:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 801:.\Generated_Source\PSoC4/ADC.c ****     *
 802:.\Generated_Source\PSoC4/ADC.c ****     * Theory:
 803:.\Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:.\Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:.\Generated_Source\PSoC4/ADC.c ****     *  resolution.
 806:.\Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:.\Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:.\Generated_Source\PSoC4/ADC.c ****     *
 809:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 810:.\Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:.\Generated_Source\PSoC4/ADC.c ****     {
 773              		.loc 1 811 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 29


 774              		.cfi_startproc
 775              	.LVL56:
 776 0000 38B5     		push	{r3, r4, r5, lr}
 777              		.cfi_def_cfa_offset 16
 778              		.cfi_offset 3, -16
 779              		.cfi_offset 4, -12
 780              		.cfi_offset 5, -8
 781              		.cfi_offset 14, -4
 782 0002 051C     		mov	r5, r0
 783 0004 0C1C     		mov	r4, r1
 812:.\Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 813:.\Generated_Source\PSoC4/ADC.c **** 
 814:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 784              		.loc 1 815 0
 785 0006 0028     		cmp	r0, #0
 786 0008 02D0     		beq	.L66
 787              		.loc 1 815 0 is_stmt 0 discriminator 1
 788 000a 0020     		mov	r0, #0
 789              	.LVL57:
 790 000c FFF7FEFF 		bl	CyHalt
 791              	.LVL58:
 792              	.L66:
 816:.\Generated_Source\PSoC4/ADC.c **** 
 817:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 819:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 820:.\Generated_Source\PSoC4/ADC.c ****             {
 821:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:.\Generated_Source\PSoC4/ADC.c ****             }
 823:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 824:.\Generated_Source\PSoC4/ADC.c **** 
 825:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 826:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 793              		.loc 1 826 0 is_stmt 1
 794 0010 6A00     		lsl	r2, r5, #1
 795 0012 084B     		ldr	r3, .L67
 796 0014 D05A     		ldrh	r0, [r2, r3]
 797 0016 201A     		sub	r0, r4, r0
 798 0018 00B2     		sxth	r0, r0
 799              	.LVL59:
 827:.\Generated_Source\PSoC4/ADC.c **** 
 828:.\Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 800              		.loc 1 828 0
 801 001a C117     		asr	r1, r0, #31
 802 001c 064A     		ldr	r2, .L67+4
 803 001e 0023     		mov	r3, #0
 804 0020 FFF7FEFF 		bl	__aeabi_lmul
 805              	.LVL60:
 806 0024 AD00     		lsl	r5, r5, #2
 807              	.LVL61:
 808 0026 054B     		ldr	r3, .L67+8
 809 0028 EA58     		ldr	r2, [r5, r3]
 810 002a D317     		asr	r3, r2, #31
 811 002c FFF7FEFF 		bl	__aeabi_ldivmod
 812              	.LVL62:
 829:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 30


 830:.\Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 831:.\Generated_Source\PSoC4/ADC.c ****     }
 813              		.loc 1 831 0
 814              		@ sp needed
 815 0030 38BD     		pop	{r3, r4, r5, pc}
 816              	.L68:
 817 0032 C046     		.align	2
 818              	.L67:
 819 0034 00000000 		.word	ADC_offset
 820 0038 80969800 		.word	10000000
 821 003c 00000000 		.word	ADC_countsPer10Volt
 822              		.cfi_endproc
 823              	.LFE16:
 824              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 825              		.global	__aeabi_i2f
 826              		.global	__aeabi_fmul
 827              		.global	__aeabi_fdiv
 828              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 829              		.align	2
 830              		.global	ADC_CountsTo_Volts
 831              		.code	16
 832              		.thumb_func
 833              		.type	ADC_CountsTo_Volts, %function
 834              	ADC_CountsTo_Volts:
 835              	.LFB17:
 832:.\Generated_Source\PSoC4/ADC.c **** 
 833:.\Generated_Source\PSoC4/ADC.c **** 
 834:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 835:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 836:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 837:.\Generated_Source\PSoC4/ADC.c ****     *
 838:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 839:.\Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 841:.\Generated_Source\PSoC4/ADC.c ****     *
 842:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 843:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 844:.\Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 845:.\Generated_Source\PSoC4/ADC.c ****     *
 846:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 847:.\Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 848:.\Generated_Source\PSoC4/ADC.c ****     *
 849:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 850:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 852:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 853:.\Generated_Source\PSoC4/ADC.c ****     *
 854:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 855:.\Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:.\Generated_Source\PSoC4/ADC.c ****     {
 836              		.loc 1 856 0
 837              		.cfi_startproc
 838              	.LVL63:
 839 0000 38B5     		push	{r3, r4, r5, lr}
 840              		.cfi_def_cfa_offset 16
 841              		.cfi_offset 3, -16
 842              		.cfi_offset 4, -12
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 31


 843              		.cfi_offset 5, -8
 844              		.cfi_offset 14, -4
 845 0002 041C     		mov	r4, r0
 846 0004 0D1C     		mov	r5, r1
 857:.\Generated_Source\PSoC4/ADC.c ****         float32 volts;
 858:.\Generated_Source\PSoC4/ADC.c **** 
 859:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 847              		.loc 1 860 0
 848 0006 0028     		cmp	r0, #0
 849 0008 02D0     		beq	.L70
 850              		.loc 1 860 0 is_stmt 0 discriminator 1
 851 000a 0020     		mov	r0, #0
 852              	.LVL64:
 853 000c FFF7FEFF 		bl	CyHalt
 854              	.LVL65:
 855              	.L70:
 861:.\Generated_Source\PSoC4/ADC.c **** 
 862:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 864:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 865:.\Generated_Source\PSoC4/ADC.c ****             {
 866:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:.\Generated_Source\PSoC4/ADC.c ****             }
 868:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 869:.\Generated_Source\PSoC4/ADC.c **** 
 870:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 871:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 856              		.loc 1 871 0 is_stmt 1
 857 0010 6200     		lsl	r2, r4, #1
 858 0012 0A4B     		ldr	r3, .L71
 859 0014 D05A     		ldrh	r0, [r2, r3]
 860 0016 281A     		sub	r0, r5, r0
 861 0018 00B2     		sxth	r0, r0
 862              	.LVL66:
 872:.\Generated_Source\PSoC4/ADC.c **** 
 873:.\Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 863              		.loc 1 873 0
 864 001a FFF7FEFF 		bl	__aeabi_i2f
 865              	.LVL67:
 866 001e 0849     		ldr	r1, .L71+4
 867 0020 FFF7FEFF 		bl	__aeabi_fmul
 868              	.LVL68:
 869 0024 051C     		add	r5, r0, #0
 870 0026 A400     		lsl	r4, r4, #2
 871              	.LVL69:
 872 0028 064B     		ldr	r3, .L71+8
 873 002a E058     		ldr	r0, [r4, r3]
 874 002c FFF7FEFF 		bl	__aeabi_i2f
 875              	.LVL70:
 876 0030 011C     		add	r1, r0, #0
 877 0032 281C     		add	r0, r5, #0
 878 0034 FFF7FEFF 		bl	__aeabi_fdiv
 879              	.LVL71:
 874:.\Generated_Source\PSoC4/ADC.c **** 
 875:.\Generated_Source\PSoC4/ADC.c ****         return( volts );
 876:.\Generated_Source\PSoC4/ADC.c ****     }
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 32


 880              		.loc 1 876 0
 881              		@ sp needed
 882 0038 38BD     		pop	{r3, r4, r5, pc}
 883              	.L72:
 884 003a C046     		.align	2
 885              	.L71:
 886 003c 00000000 		.word	ADC_offset
 887 0040 00002041 		.word	1092616192
 888 0044 00000000 		.word	ADC_countsPer10Volt
 889              		.cfi_endproc
 890              	.LFE17:
 891              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 892              		.comm	ADC_countsPer10Volt,4,4
 893              		.comm	ADC_offset,2,4
 894              		.global	ADC_initVar
 895              		.bss
 896              		.set	.LANCHOR0,. + 0
 897              		.type	ADC_initVar, %object
 898              		.size	ADC_initVar, 1
 899              	ADC_initVar:
 900 0000 00       		.space	1
 901              		.text
 902              	.Letext0:
 903              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 904              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 905              		.section	.debug_info,"",%progbits
 906              	.Ldebug_info0:
 907 0000 94050000 		.4byte	0x594
 908 0004 0400     		.2byte	0x4
 909 0006 00000000 		.4byte	.Ldebug_abbrev0
 910 000a 04       		.byte	0x4
 911 000b 01       		.uleb128 0x1
 912 000c F9020000 		.4byte	.LASF61
 913 0010 01       		.byte	0x1
 914 0011 35020000 		.4byte	.LASF62
 915 0015 B0020000 		.4byte	.LASF63
 916 0019 00000000 		.4byte	.Ldebug_ranges0+0
 917 001d 00000000 		.4byte	0
 918 0021 00000000 		.4byte	.Ldebug_line0
 919 0025 02       		.uleb128 0x2
 920 0026 01       		.byte	0x1
 921 0027 06       		.byte	0x6
 922 0028 68000000 		.4byte	.LASF0
 923 002c 02       		.uleb128 0x2
 924 002d 01       		.byte	0x1
 925 002e 08       		.byte	0x8
 926 002f 54020000 		.4byte	.LASF1
 927 0033 02       		.uleb128 0x2
 928 0034 02       		.byte	0x2
 929 0035 05       		.byte	0x5
 930 0036 6D020000 		.4byte	.LASF2
 931 003a 02       		.uleb128 0x2
 932 003b 02       		.byte	0x2
 933 003c 07       		.byte	0x7
 934 003d 49010000 		.4byte	.LASF3
 935 0041 02       		.uleb128 0x2
 936 0042 04       		.byte	0x4
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 33


 937 0043 05       		.byte	0x5
 938 0044 8B000000 		.4byte	.LASF4
 939 0048 02       		.uleb128 0x2
 940 0049 04       		.byte	0x4
 941 004a 07       		.byte	0x7
 942 004b 18010000 		.4byte	.LASF5
 943 004f 02       		.uleb128 0x2
 944 0050 08       		.byte	0x8
 945 0051 05       		.byte	0x5
 946 0052 5A000000 		.4byte	.LASF6
 947 0056 02       		.uleb128 0x2
 948 0057 08       		.byte	0x8
 949 0058 07       		.byte	0x7
 950 0059 32000000 		.4byte	.LASF7
 951 005d 03       		.uleb128 0x3
 952 005e 04       		.byte	0x4
 953 005f 05       		.byte	0x5
 954 0060 696E7400 		.ascii	"int\000"
 955 0064 02       		.uleb128 0x2
 956 0065 04       		.byte	0x4
 957 0066 07       		.byte	0x7
 958 0067 04010000 		.4byte	.LASF8
 959 006b 04       		.uleb128 0x4
 960 006c BC000000 		.4byte	.LASF9
 961 0070 02       		.byte	0x2
 962 0071 9801     		.2byte	0x198
 963 0073 2C000000 		.4byte	0x2c
 964 0077 04       		.uleb128 0x4
 965 0078 00000000 		.4byte	.LASF10
 966 007c 02       		.byte	0x2
 967 007d 9901     		.2byte	0x199
 968 007f 3A000000 		.4byte	0x3a
 969 0083 04       		.uleb128 0x4
 970 0084 D3000000 		.4byte	.LASF11
 971 0088 02       		.byte	0x2
 972 0089 9A01     		.2byte	0x19a
 973 008b 48000000 		.4byte	0x48
 974 008f 04       		.uleb128 0x4
 975 0090 F3020000 		.4byte	.LASF12
 976 0094 02       		.byte	0x2
 977 0095 9C01     		.2byte	0x19c
 978 0097 33000000 		.4byte	0x33
 979 009b 04       		.uleb128 0x4
 980 009c 7B000000 		.4byte	.LASF13
 981 00a0 02       		.byte	0x2
 982 00a1 9D01     		.2byte	0x19d
 983 00a3 41000000 		.4byte	0x41
 984 00a7 04       		.uleb128 0x4
 985 00a8 88010000 		.4byte	.LASF14
 986 00ac 02       		.byte	0x2
 987 00ad 9E01     		.2byte	0x19e
 988 00af B3000000 		.4byte	0xb3
 989 00b3 02       		.uleb128 0x2
 990 00b4 04       		.byte	0x4
 991 00b5 04       		.byte	0x4
 992 00b6 FA010000 		.4byte	.LASF15
 993 00ba 02       		.uleb128 0x2
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 34


 994 00bb 08       		.byte	0x8
 995 00bc 04       		.byte	0x4
 996 00bd CC000000 		.4byte	.LASF16
 997 00c1 04       		.uleb128 0x4
 998 00c2 C7010000 		.4byte	.LASF17
 999 00c6 02       		.byte	0x2
 1000 00c7 A301     		.2byte	0x1a3
 1001 00c9 4F000000 		.4byte	0x4f
 1002 00cd 02       		.uleb128 0x2
 1003 00ce 01       		.byte	0x1
 1004 00cf 08       		.byte	0x8
 1005 00d0 8B020000 		.4byte	.LASF18
 1006 00d4 04       		.uleb128 0x4
 1007 00d5 82010000 		.4byte	.LASF19
 1008 00d9 02       		.byte	0x2
 1009 00da 4402     		.2byte	0x244
 1010 00dc E0000000 		.4byte	0xe0
 1011 00e0 05       		.uleb128 0x5
 1012 00e1 83000000 		.4byte	0x83
 1013 00e5 04       		.uleb128 0x4
 1014 00e6 90020000 		.4byte	.LASF20
 1015 00ea 02       		.byte	0x2
 1016 00eb 5402     		.2byte	0x254
 1017 00ed F1000000 		.4byte	0xf1
 1018 00f1 06       		.uleb128 0x6
 1019 00f2 04       		.byte	0x4
 1020 00f3 F7000000 		.4byte	0xf7
 1021 00f7 07       		.uleb128 0x7
 1022 00f8 02       		.uleb128 0x2
 1023 00f9 04       		.byte	0x4
 1024 00fa 07       		.byte	0x7
 1025 00fb 90010000 		.4byte	.LASF21
 1026 00ff 08       		.uleb128 0x8
 1027 0100 29000000 		.4byte	.LASF25
 1028 0104 01       		.byte	0x1
 1029 0105 5E       		.byte	0x5e
 1030 0106 00000000 		.4byte	.LFB1
 1031 010a 04010000 		.4byte	.LFE1-.LFB1
 1032 010e 01       		.uleb128 0x1
 1033 010f 9C       		.byte	0x9c
 1034 0110 69010000 		.4byte	0x169
 1035 0114 09       		.uleb128 0x9
 1036 0115 80020000 		.4byte	.LASF22
 1037 0119 01       		.byte	0x1
 1038 011a 60       		.byte	0x60
 1039 011b 83000000 		.4byte	0x83
 1040 011f 00000000 		.4byte	.LLST0
 1041 0123 09       		.uleb128 0x9
 1042 0124 3F010000 		.4byte	.LASF23
 1043 0128 01       		.byte	0x1
 1044 0129 61       		.byte	0x61
 1045 012a 83000000 		.4byte	0x83
 1046 012e 1F000000 		.4byte	.LLST1
 1047 0132 09       		.uleb128 0x9
 1048 0133 0F000000 		.4byte	.LASF24
 1049 0137 01       		.byte	0x1
 1050 0138 62       		.byte	0x62
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 35


 1051 0139 9B000000 		.4byte	0x9b
 1052 013d 60000000 		.4byte	.LLST2
 1053 0141 0A       		.uleb128 0xa
 1054 0142 0A000000 		.4byte	.LVL0
 1055 0146 49050000 		.4byte	0x549
 1056 014a 59010000 		.4byte	0x159
 1057 014e 0B       		.uleb128 0xb
 1058 014f 01       		.uleb128 0x1
 1059 0150 51       		.byte	0x51
 1060 0151 01       		.uleb128 0x1
 1061 0152 33       		.byte	0x33
 1062 0153 0B       		.uleb128 0xb
 1063 0154 01       		.uleb128 0x1
 1064 0155 50       		.byte	0x50
 1065 0156 01       		.uleb128 0x1
 1066 0157 3E       		.byte	0x3e
 1067 0158 00       		.byte	0
 1068 0159 0C       		.uleb128 0xc
 1069 015a 12000000 		.4byte	.LVL1
 1070 015e 5F050000 		.4byte	0x55f
 1071 0162 0B       		.uleb128 0xb
 1072 0163 01       		.uleb128 0x1
 1073 0164 50       		.byte	0x50
 1074 0165 01       		.uleb128 0x1
 1075 0166 3E       		.byte	0x3e
 1076 0167 00       		.byte	0
 1077 0168 00       		.byte	0
 1078 0169 0D       		.uleb128 0xd
 1079 016a E8020000 		.4byte	.LASF26
 1080 016e 01       		.byte	0x1
 1081 016f 4A01     		.2byte	0x14a
 1082 0171 00000000 		.4byte	.LFB2
 1083 0175 24000000 		.4byte	.LFE2-.LFB2
 1084 0179 01       		.uleb128 0x1
 1085 017a 9C       		.byte	0x9c
 1086 017b 8F010000 		.4byte	0x18f
 1087 017f 0C       		.uleb128 0xc
 1088 0180 1C000000 		.4byte	.LVL10
 1089 0184 79050000 		.4byte	0x579
 1090 0188 0B       		.uleb128 0xb
 1091 0189 01       		.uleb128 0x1
 1092 018a 50       		.byte	0x50
 1093 018b 01       		.uleb128 0x1
 1094 018c 3A       		.byte	0x3a
 1095 018d 00       		.byte	0
 1096 018e 00       		.byte	0
 1097 018f 08       		.uleb128 0x8
 1098 0190 81000000 		.4byte	.LASF27
 1099 0194 01       		.byte	0x1
 1100 0195 3F       		.byte	0x3f
 1101 0196 00000000 		.4byte	.LFB0
 1102 019a 20000000 		.4byte	.LFE0-.LFB0
 1103 019e 01       		.uleb128 0x1
 1104 019f 9C       		.byte	0x9c
 1105 01a0 B7010000 		.4byte	0x1b7
 1106 01a4 0E       		.uleb128 0xe
 1107 01a5 0E000000 		.4byte	.LVL11
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 36


 1108 01a9 FF000000 		.4byte	0xff
 1109 01ad 0E       		.uleb128 0xe
 1110 01ae 18000000 		.4byte	.LVL12
 1111 01b2 69010000 		.4byte	0x169
 1112 01b6 00       		.byte	0
 1113 01b7 0F       		.uleb128 0xf
 1114 01b8 77020000 		.4byte	.LASF28
 1115 01bc 01       		.byte	0x1
 1116 01bd 6D01     		.2byte	0x16d
 1117 01bf 00000000 		.4byte	.LFB3
 1118 01c3 10000000 		.4byte	.LFE3-.LFB3
 1119 01c7 01       		.uleb128 0x1
 1120 01c8 9C       		.byte	0x9c
 1121 01c9 0F       		.uleb128 0xf
 1122 01ca 49000000 		.4byte	.LASF29
 1123 01ce 01       		.byte	0x1
 1124 01cf 8701     		.2byte	0x187
 1125 01d1 00000000 		.4byte	.LFB4
 1126 01d5 0C000000 		.4byte	.LFE4-.LFB4
 1127 01d9 01       		.uleb128 0x1
 1128 01da 9C       		.byte	0x9c
 1129 01db 0F       		.uleb128 0xf
 1130 01dc 6B010000 		.4byte	.LASF30
 1131 01e0 01       		.byte	0x1
 1132 01e1 A001     		.2byte	0x1a0
 1133 01e3 00000000 		.4byte	.LFB5
 1134 01e7 02000000 		.4byte	.LFE5-.LFB5
 1135 01eb 01       		.uleb128 0x1
 1136 01ec 9C       		.byte	0x9c
 1137 01ed 10       		.uleb128 0x10
 1138 01ee B3010000 		.4byte	.LASF32
 1139 01f2 01       		.byte	0x1
 1140 01f3 C201     		.2byte	0x1c2
 1141 01f5 83000000 		.4byte	0x83
 1142 01f9 00000000 		.4byte	.LFB6
 1143 01fd 28000000 		.4byte	.LFE6-.LFB6
 1144 0201 01       		.uleb128 0x1
 1145 0202 9C       		.byte	0x9c
 1146 0203 28020000 		.4byte	0x228
 1147 0207 11       		.uleb128 0x11
 1148 0208 EB000000 		.4byte	.LASF34
 1149 020c 01       		.byte	0x1
 1150 020d C201     		.2byte	0x1c2
 1151 020f 83000000 		.4byte	0x83
 1152 0213 76000000 		.4byte	.LLST3
 1153 0217 12       		.uleb128 0x12
 1154 0218 74000000 		.4byte	.LASF31
 1155 021c 01       		.byte	0x1
 1156 021d C401     		.2byte	0x1c4
 1157 021f 83000000 		.4byte	0x83
 1158 0223 BB000000 		.4byte	.LLST4
 1159 0227 00       		.byte	0
 1160 0228 10       		.uleb128 0x10
 1161 0229 A5030000 		.4byte	.LASF33
 1162 022d 01       		.byte	0x1
 1163 022e F801     		.2byte	0x1f8
 1164 0230 8F000000 		.4byte	0x8f
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 37


 1165 0234 00000000 		.4byte	.LFB7
 1166 0238 2C000000 		.4byte	.LFE7-.LFB7
 1167 023c 01       		.uleb128 0x1
 1168 023d 9C       		.byte	0x9c
 1169 023e 72020000 		.4byte	0x272
 1170 0242 11       		.uleb128 0x11
 1171 0243 86020000 		.4byte	.LASF35
 1172 0247 01       		.byte	0x1
 1173 0248 F801     		.2byte	0x1f8
 1174 024a 83000000 		.4byte	0x83
 1175 024e F1000000 		.4byte	.LLST5
 1176 0252 12       		.uleb128 0x12
 1177 0253 9E030000 		.4byte	.LASF36
 1178 0257 01       		.byte	0x1
 1179 0258 FA01     		.2byte	0x1fa
 1180 025a 83000000 		.4byte	0x83
 1181 025e 36010000 		.4byte	.LLST6
 1182 0262 0C       		.uleb128 0xc
 1183 0263 0C000000 		.4byte	.LVL22
 1184 0267 8A050000 		.4byte	0x58a
 1185 026b 0B       		.uleb128 0xb
 1186 026c 01       		.uleb128 0x1
 1187 026d 50       		.byte	0x50
 1188 026e 01       		.uleb128 0x1
 1189 026f 30       		.byte	0x30
 1190 0270 00       		.byte	0
 1191 0271 00       		.byte	0
 1192 0272 0D       		.uleb128 0xd
 1193 0273 DE010000 		.4byte	.LASF37
 1194 0277 01       		.byte	0x1
 1195 0278 2502     		.2byte	0x225
 1196 027a 00000000 		.4byte	.LFB8
 1197 027e 10000000 		.4byte	.LFE8-.LFB8
 1198 0282 01       		.uleb128 0x1
 1199 0283 9C       		.byte	0x9c
 1200 0284 99020000 		.4byte	0x299
 1201 0288 11       		.uleb128 0x11
 1202 0289 DA000000 		.4byte	.LASF38
 1203 028d 01       		.byte	0x1
 1204 028e 2502     		.2byte	0x225
 1205 0290 83000000 		.4byte	0x83
 1206 0294 54010000 		.4byte	.LLST7
 1207 0298 00       		.byte	0
 1208 0299 0D       		.uleb128 0xd
 1209 029a 1E020000 		.4byte	.LASF39
 1210 029e 01       		.byte	0x1
 1211 029f 5102     		.2byte	0x251
 1212 02a1 00000000 		.4byte	.LFB9
 1213 02a5 1C000000 		.4byte	.LFE9-.LFB9
 1214 02a9 01       		.uleb128 0x1
 1215 02aa 9C       		.byte	0x9c
 1216 02ab C0020000 		.4byte	0x2c0
 1217 02af 11       		.uleb128 0x11
 1218 02b0 99010000 		.4byte	.LASF40
 1219 02b4 01       		.byte	0x1
 1220 02b5 5102     		.2byte	0x251
 1221 02b7 83000000 		.4byte	0x83
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 38


 1222 02bb 75010000 		.4byte	.LLST8
 1223 02bf 00       		.byte	0
 1224 02c0 0D       		.uleb128 0xd
 1225 02c1 A2010000 		.4byte	.LASF41
 1226 02c5 01       		.byte	0x1
 1227 02c6 6602     		.2byte	0x266
 1228 02c8 00000000 		.4byte	.LFB10
 1229 02cc 18000000 		.4byte	.LFE10-.LFB10
 1230 02d0 01       		.uleb128 0x1
 1231 02d1 9C       		.byte	0x9c
 1232 02d2 E7020000 		.4byte	0x2e7
 1233 02d6 11       		.uleb128 0x11
 1234 02d7 00020000 		.4byte	.LASF42
 1235 02db 01       		.byte	0x1
 1236 02dc 6602     		.2byte	0x266
 1237 02de 83000000 		.4byte	0x83
 1238 02e2 96010000 		.4byte	.LLST9
 1239 02e6 00       		.byte	0
 1240 02e7 0D       		.uleb128 0xd
 1241 02e8 F3000000 		.4byte	.LASF43
 1242 02ec 01       		.byte	0x1
 1243 02ed 7E02     		.2byte	0x27e
 1244 02ef 00000000 		.4byte	.LFB11
 1245 02f3 10000000 		.4byte	.LFE11-.LFB11
 1246 02f7 01       		.uleb128 0x1
 1247 02f8 9C       		.byte	0x9c
 1248 02f9 0E030000 		.4byte	0x30e
 1249 02fd 11       		.uleb128 0x11
 1250 02fe DA000000 		.4byte	.LASF38
 1251 0302 01       		.byte	0x1
 1252 0303 7E02     		.2byte	0x27e
 1253 0305 83000000 		.4byte	0x83
 1254 0309 B7010000 		.4byte	.LLST10
 1255 030d 00       		.byte	0
 1256 030e 0D       		.uleb128 0xd
 1257 030f 2A010000 		.4byte	.LASF44
 1258 0313 01       		.byte	0x1
 1259 0314 9502     		.2byte	0x295
 1260 0316 00000000 		.4byte	.LFB12
 1261 031a 10000000 		.4byte	.LFE12-.LFB12
 1262 031e 01       		.uleb128 0x1
 1263 031f 9C       		.byte	0x9c
 1264 0320 35030000 		.4byte	0x335
 1265 0324 11       		.uleb128 0x11
 1266 0325 DA000000 		.4byte	.LASF38
 1267 0329 01       		.byte	0x1
 1268 032a 9502     		.2byte	0x295
 1269 032c 83000000 		.4byte	0x83
 1270 0330 D8010000 		.4byte	.LLST11
 1271 0334 00       		.byte	0
 1272 0335 0D       		.uleb128 0xd
 1273 0336 90030000 		.4byte	.LASF45
 1274 033a 01       		.byte	0x1
 1275 033b B102     		.2byte	0x2b1
 1276 033d 00000000 		.4byte	.LFB13
 1277 0341 1C000000 		.4byte	.LFE13-.LFB13
 1278 0345 01       		.uleb128 0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 39


 1279 0346 9C       		.byte	0x9c
 1280 0347 7B030000 		.4byte	0x37b
 1281 034b 11       		.uleb128 0x11
 1282 034c 86020000 		.4byte	.LASF35
 1283 0350 01       		.byte	0x1
 1284 0351 B102     		.2byte	0x2b1
 1285 0353 83000000 		.4byte	0x83
 1286 0357 F9010000 		.4byte	.LLST12
 1287 035b 11       		.uleb128 0x11
 1288 035c D7020000 		.4byte	.LASF46
 1289 0360 01       		.byte	0x1
 1290 0361 B102     		.2byte	0x2b1
 1291 0363 8F000000 		.4byte	0x8f
 1292 0367 25020000 		.4byte	.LLST13
 1293 036b 0C       		.uleb128 0xc
 1294 036c 10000000 		.4byte	.LVL40
 1295 0370 8A050000 		.4byte	0x58a
 1296 0374 0B       		.uleb128 0xb
 1297 0375 01       		.uleb128 0x1
 1298 0376 50       		.byte	0x50
 1299 0377 01       		.uleb128 0x1
 1300 0378 30       		.byte	0x30
 1301 0379 00       		.byte	0
 1302 037a 00       		.byte	0
 1303 037b 0D       		.uleb128 0xd
 1304 037c EE010000 		.4byte	.LASF47
 1305 0380 01       		.byte	0x1
 1306 0381 D302     		.2byte	0x2d3
 1307 0383 00000000 		.4byte	.LFB14
 1308 0387 1C000000 		.4byte	.LFE14-.LFB14
 1309 038b 01       		.uleb128 0x1
 1310 038c 9C       		.byte	0x9c
 1311 038d C1030000 		.4byte	0x3c1
 1312 0391 11       		.uleb128 0x11
 1313 0392 86020000 		.4byte	.LASF35
 1314 0396 01       		.byte	0x1
 1315 0397 D302     		.2byte	0x2d3
 1316 0399 83000000 		.4byte	0x83
 1317 039d 46020000 		.4byte	.LLST14
 1318 03a1 11       		.uleb128 0x11
 1319 03a2 07000000 		.4byte	.LASF48
 1320 03a6 01       		.byte	0x1
 1321 03a7 D302     		.2byte	0x2d3
 1322 03a9 9B000000 		.4byte	0x9b
 1323 03ad 72020000 		.4byte	.LLST15
 1324 03b1 0C       		.uleb128 0xc
 1325 03b2 10000000 		.4byte	.LVL44
 1326 03b6 8A050000 		.4byte	0x58a
 1327 03ba 0B       		.uleb128 0xb
 1328 03bb 01       		.uleb128 0x1
 1329 03bc 50       		.byte	0x50
 1330 03bd 01       		.uleb128 0x1
 1331 03be 30       		.byte	0x30
 1332 03bf 00       		.byte	0
 1333 03c0 00       		.byte	0
 1334 03c1 13       		.uleb128 0x13
 1335 03c2 0A020000 		.4byte	.LASF49
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 40


 1336 03c6 01       		.byte	0x1
 1337 03c7 F402     		.2byte	0x2f4
 1338 03c9 8F000000 		.4byte	0x8f
 1339 03cd 00000000 		.4byte	.LFB15
 1340 03d1 5C000000 		.4byte	.LFE15-.LFB15
 1341 03d5 01       		.uleb128 0x1
 1342 03d6 9C       		.byte	0x9c
 1343 03d7 19040000 		.4byte	0x419
 1344 03db 11       		.uleb128 0x11
 1345 03dc 86020000 		.4byte	.LASF35
 1346 03e0 01       		.byte	0x1
 1347 03e1 F402     		.2byte	0x2f4
 1348 03e3 83000000 		.4byte	0x83
 1349 03e7 A2020000 		.4byte	.LLST16
 1350 03eb 11       		.uleb128 0x11
 1351 03ec DE020000 		.4byte	.LASF50
 1352 03f0 01       		.byte	0x1
 1353 03f1 F402     		.2byte	0x2f4
 1354 03f3 8F000000 		.4byte	0x8f
 1355 03f7 CE020000 		.4byte	.LLST17
 1356 03fb 14       		.uleb128 0x14
 1357 03fc 7B010000 		.4byte	.LASF51
 1358 0400 01       		.byte	0x1
 1359 0401 F602     		.2byte	0x2f6
 1360 0403 8F000000 		.4byte	0x8f
 1361 0407 01       		.uleb128 0x1
 1362 0408 50       		.byte	0x50
 1363 0409 0C       		.uleb128 0xc
 1364 040a 10000000 		.4byte	.LVL49
 1365 040e 8A050000 		.4byte	0x58a
 1366 0412 0B       		.uleb128 0xb
 1367 0413 01       		.uleb128 0x1
 1368 0414 50       		.byte	0x50
 1369 0415 01       		.uleb128 0x1
 1370 0416 30       		.byte	0x30
 1371 0417 00       		.byte	0
 1372 0418 00       		.byte	0
 1373 0419 13       		.uleb128 0x13
 1374 041a 94000000 		.4byte	.LASF52
 1375 041e 01       		.byte	0x1
 1376 041f 2A03     		.2byte	0x32a
 1377 0421 9B000000 		.4byte	0x9b
 1378 0425 00000000 		.4byte	.LFB16
 1379 0429 40000000 		.4byte	.LFE16-.LFB16
 1380 042d 01       		.uleb128 0x1
 1381 042e 9C       		.byte	0x9c
 1382 042f 6F040000 		.4byte	0x46f
 1383 0433 11       		.uleb128 0x11
 1384 0434 86020000 		.4byte	.LASF35
 1385 0438 01       		.byte	0x1
 1386 0439 2A03     		.2byte	0x32a
 1387 043b 83000000 		.4byte	0x83
 1388 043f 05030000 		.4byte	.LLST18
 1389 0443 11       		.uleb128 0x11
 1390 0444 DE020000 		.4byte	.LASF50
 1391 0448 01       		.byte	0x1
 1392 0449 2A03     		.2byte	0x32a
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 41


 1393 044b 8F000000 		.4byte	0x8f
 1394 044f 31030000 		.4byte	.LLST19
 1395 0453 15       		.uleb128 0x15
 1396 0454 11010000 		.4byte	.LASF64
 1397 0458 01       		.byte	0x1
 1398 0459 2C03     		.2byte	0x32c
 1399 045b C1000000 		.4byte	0xc1
 1400 045f 0C       		.uleb128 0xc
 1401 0460 10000000 		.4byte	.LVL58
 1402 0464 8A050000 		.4byte	0x58a
 1403 0468 0B       		.uleb128 0xb
 1404 0469 01       		.uleb128 0x1
 1405 046a 50       		.byte	0x50
 1406 046b 01       		.uleb128 0x1
 1407 046c 30       		.byte	0x30
 1408 046d 00       		.byte	0
 1409 046e 00       		.byte	0
 1410 046f 13       		.uleb128 0x13
 1411 0470 16000000 		.4byte	.LASF53
 1412 0474 01       		.byte	0x1
 1413 0475 5703     		.2byte	0x357
 1414 0477 A7000000 		.4byte	0xa7
 1415 047b 00000000 		.4byte	.LFB17
 1416 047f 48000000 		.4byte	.LFE17-.LFB17
 1417 0483 01       		.uleb128 0x1
 1418 0484 9C       		.byte	0x9c
 1419 0485 C7040000 		.4byte	0x4c7
 1420 0489 11       		.uleb128 0x11
 1421 048a 86020000 		.4byte	.LASF35
 1422 048e 01       		.byte	0x1
 1423 048f 5703     		.2byte	0x357
 1424 0491 83000000 		.4byte	0x83
 1425 0495 5D030000 		.4byte	.LLST20
 1426 0499 11       		.uleb128 0x11
 1427 049a DE020000 		.4byte	.LASF50
 1428 049e 01       		.byte	0x1
 1429 049f 5703     		.2byte	0x357
 1430 04a1 8F000000 		.4byte	0x8f
 1431 04a5 89030000 		.4byte	.LLST21
 1432 04a9 14       		.uleb128 0x14
 1433 04aa 39010000 		.4byte	.LASF54
 1434 04ae 01       		.byte	0x1
 1435 04af 5903     		.2byte	0x359
 1436 04b1 A7000000 		.4byte	0xa7
 1437 04b5 01       		.uleb128 0x1
 1438 04b6 50       		.byte	0x50
 1439 04b7 0C       		.uleb128 0xc
 1440 04b8 10000000 		.4byte	.LVL65
 1441 04bc 8A050000 		.4byte	0x58a
 1442 04c0 0B       		.uleb128 0xb
 1443 04c1 01       		.uleb128 0x1
 1444 04c2 50       		.byte	0x50
 1445 04c3 01       		.uleb128 0x1
 1446 04c4 30       		.byte	0x30
 1447 04c5 00       		.byte	0
 1448 04c6 00       		.byte	0
 1449 04c7 16       		.uleb128 0x16
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 42


 1450 04c8 83000000 		.4byte	0x83
 1451 04cc D7040000 		.4byte	0x4d7
 1452 04d0 17       		.uleb128 0x17
 1453 04d1 F8000000 		.4byte	0xf8
 1454 04d5 00       		.byte	0
 1455 04d6 00       		.byte	0
 1456 04d7 18       		.uleb128 0x18
 1457 04d8 9D020000 		.4byte	.LASF55
 1458 04dc 01       		.byte	0x1
 1459 04dd 21       		.byte	0x21
 1460 04de E7040000 		.4byte	0x4e7
 1461 04e2 04       		.byte	0x4
 1462 04e3 00       		.byte	0
 1463 04e4 00       		.byte	0
 1464 04e5 00       		.byte	0
 1465 04e6 00       		.byte	0
 1466 04e7 19       		.uleb128 0x19
 1467 04e8 C7040000 		.4byte	0x4c7
 1468 04ec 1A       		.uleb128 0x1a
 1469 04ed DF000000 		.4byte	.LASF56
 1470 04f1 01       		.byte	0x1
 1471 04f2 18       		.byte	0x18
 1472 04f3 6B000000 		.4byte	0x6b
 1473 04f7 05       		.uleb128 0x5
 1474 04f8 03       		.byte	0x3
 1475 04f9 00000000 		.4byte	ADC_initVar
 1476 04fd 16       		.uleb128 0x16
 1477 04fe 8F000000 		.4byte	0x8f
 1478 0502 0D050000 		.4byte	0x50d
 1479 0506 17       		.uleb128 0x17
 1480 0507 F8000000 		.4byte	0xf8
 1481 050b 00       		.byte	0
 1482 050c 00       		.byte	0
 1483 050d 1A       		.uleb128 0x1a
 1484 050e 62020000 		.4byte	.LASF57
 1485 0512 01       		.byte	0x1
 1486 0513 19       		.byte	0x19
 1487 0514 1E050000 		.4byte	0x51e
 1488 0518 05       		.uleb128 0x5
 1489 0519 03       		.byte	0x3
 1490 051a 00000000 		.4byte	ADC_offset
 1491 051e 05       		.uleb128 0x5
 1492 051f FD040000 		.4byte	0x4fd
 1493 0523 16       		.uleb128 0x16
 1494 0524 9B000000 		.4byte	0x9b
 1495 0528 33050000 		.4byte	0x533
 1496 052c 17       		.uleb128 0x17
 1497 052d F8000000 		.4byte	0xf8
 1498 0531 00       		.byte	0
 1499 0532 00       		.byte	0
 1500 0533 1A       		.uleb128 0x1a
 1501 0534 A8000000 		.4byte	.LASF58
 1502 0538 01       		.byte	0x1
 1503 0539 1A       		.byte	0x1a
 1504 053a 44050000 		.4byte	0x544
 1505 053e 05       		.uleb128 0x5
 1506 053f 03       		.byte	0x3
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 43


 1507 0540 00000000 		.4byte	ADC_countsPer10Volt
 1508 0544 05       		.uleb128 0x5
 1509 0545 23050000 		.4byte	0x523
 1510 0549 1B       		.uleb128 0x1b
 1511 054a CD010000 		.4byte	.LASF59
 1512 054e 03       		.byte	0x3
 1513 054f BE       		.byte	0xbe
 1514 0550 5F050000 		.4byte	0x55f
 1515 0554 1C       		.uleb128 0x1c
 1516 0555 6B000000 		.4byte	0x6b
 1517 0559 1C       		.uleb128 0x1c
 1518 055a 6B000000 		.4byte	0x6b
 1519 055e 00       		.byte	0
 1520 055f 1D       		.uleb128 0x1d
 1521 0560 5C010000 		.4byte	.LASF65
 1522 0564 03       		.byte	0x3
 1523 0565 BB       		.byte	0xbb
 1524 0566 E5000000 		.4byte	0xe5
 1525 056a 79050000 		.4byte	0x579
 1526 056e 1C       		.uleb128 0x1c
 1527 056f 6B000000 		.4byte	0x6b
 1528 0573 1C       		.uleb128 0x1c
 1529 0574 E5000000 		.4byte	0xe5
 1530 0578 00       		.byte	0
 1531 0579 1B       		.uleb128 0x1b
 1532 057a C2000000 		.4byte	.LASF60
 1533 057e 03       		.byte	0x3
 1534 057f D8       		.byte	0xd8
 1535 0580 8A050000 		.4byte	0x58a
 1536 0584 1C       		.uleb128 0x1c
 1537 0585 77000000 		.4byte	0x77
 1538 0589 00       		.byte	0
 1539 058a 1E       		.uleb128 0x1e
 1540 058b 2E020000 		.4byte	.LASF66
 1541 058f 03       		.byte	0x3
 1542 0590 E5       		.byte	0xe5
 1543 0591 1C       		.uleb128 0x1c
 1544 0592 6B000000 		.4byte	0x6b
 1545 0596 00       		.byte	0
 1546 0597 00       		.byte	0
 1547              		.section	.debug_abbrev,"",%progbits
 1548              	.Ldebug_abbrev0:
 1549 0000 01       		.uleb128 0x1
 1550 0001 11       		.uleb128 0x11
 1551 0002 01       		.byte	0x1
 1552 0003 25       		.uleb128 0x25
 1553 0004 0E       		.uleb128 0xe
 1554 0005 13       		.uleb128 0x13
 1555 0006 0B       		.uleb128 0xb
 1556 0007 03       		.uleb128 0x3
 1557 0008 0E       		.uleb128 0xe
 1558 0009 1B       		.uleb128 0x1b
 1559 000a 0E       		.uleb128 0xe
 1560 000b 55       		.uleb128 0x55
 1561 000c 17       		.uleb128 0x17
 1562 000d 11       		.uleb128 0x11
 1563 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 44


 1564 000f 10       		.uleb128 0x10
 1565 0010 17       		.uleb128 0x17
 1566 0011 00       		.byte	0
 1567 0012 00       		.byte	0
 1568 0013 02       		.uleb128 0x2
 1569 0014 24       		.uleb128 0x24
 1570 0015 00       		.byte	0
 1571 0016 0B       		.uleb128 0xb
 1572 0017 0B       		.uleb128 0xb
 1573 0018 3E       		.uleb128 0x3e
 1574 0019 0B       		.uleb128 0xb
 1575 001a 03       		.uleb128 0x3
 1576 001b 0E       		.uleb128 0xe
 1577 001c 00       		.byte	0
 1578 001d 00       		.byte	0
 1579 001e 03       		.uleb128 0x3
 1580 001f 24       		.uleb128 0x24
 1581 0020 00       		.byte	0
 1582 0021 0B       		.uleb128 0xb
 1583 0022 0B       		.uleb128 0xb
 1584 0023 3E       		.uleb128 0x3e
 1585 0024 0B       		.uleb128 0xb
 1586 0025 03       		.uleb128 0x3
 1587 0026 08       		.uleb128 0x8
 1588 0027 00       		.byte	0
 1589 0028 00       		.byte	0
 1590 0029 04       		.uleb128 0x4
 1591 002a 16       		.uleb128 0x16
 1592 002b 00       		.byte	0
 1593 002c 03       		.uleb128 0x3
 1594 002d 0E       		.uleb128 0xe
 1595 002e 3A       		.uleb128 0x3a
 1596 002f 0B       		.uleb128 0xb
 1597 0030 3B       		.uleb128 0x3b
 1598 0031 05       		.uleb128 0x5
 1599 0032 49       		.uleb128 0x49
 1600 0033 13       		.uleb128 0x13
 1601 0034 00       		.byte	0
 1602 0035 00       		.byte	0
 1603 0036 05       		.uleb128 0x5
 1604 0037 35       		.uleb128 0x35
 1605 0038 00       		.byte	0
 1606 0039 49       		.uleb128 0x49
 1607 003a 13       		.uleb128 0x13
 1608 003b 00       		.byte	0
 1609 003c 00       		.byte	0
 1610 003d 06       		.uleb128 0x6
 1611 003e 0F       		.uleb128 0xf
 1612 003f 00       		.byte	0
 1613 0040 0B       		.uleb128 0xb
 1614 0041 0B       		.uleb128 0xb
 1615 0042 49       		.uleb128 0x49
 1616 0043 13       		.uleb128 0x13
 1617 0044 00       		.byte	0
 1618 0045 00       		.byte	0
 1619 0046 07       		.uleb128 0x7
 1620 0047 15       		.uleb128 0x15
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 45


 1621 0048 00       		.byte	0
 1622 0049 27       		.uleb128 0x27
 1623 004a 19       		.uleb128 0x19
 1624 004b 00       		.byte	0
 1625 004c 00       		.byte	0
 1626 004d 08       		.uleb128 0x8
 1627 004e 2E       		.uleb128 0x2e
 1628 004f 01       		.byte	0x1
 1629 0050 3F       		.uleb128 0x3f
 1630 0051 19       		.uleb128 0x19
 1631 0052 03       		.uleb128 0x3
 1632 0053 0E       		.uleb128 0xe
 1633 0054 3A       		.uleb128 0x3a
 1634 0055 0B       		.uleb128 0xb
 1635 0056 3B       		.uleb128 0x3b
 1636 0057 0B       		.uleb128 0xb
 1637 0058 27       		.uleb128 0x27
 1638 0059 19       		.uleb128 0x19
 1639 005a 11       		.uleb128 0x11
 1640 005b 01       		.uleb128 0x1
 1641 005c 12       		.uleb128 0x12
 1642 005d 06       		.uleb128 0x6
 1643 005e 40       		.uleb128 0x40
 1644 005f 18       		.uleb128 0x18
 1645 0060 9742     		.uleb128 0x2117
 1646 0062 19       		.uleb128 0x19
 1647 0063 01       		.uleb128 0x1
 1648 0064 13       		.uleb128 0x13
 1649 0065 00       		.byte	0
 1650 0066 00       		.byte	0
 1651 0067 09       		.uleb128 0x9
 1652 0068 34       		.uleb128 0x34
 1653 0069 00       		.byte	0
 1654 006a 03       		.uleb128 0x3
 1655 006b 0E       		.uleb128 0xe
 1656 006c 3A       		.uleb128 0x3a
 1657 006d 0B       		.uleb128 0xb
 1658 006e 3B       		.uleb128 0x3b
 1659 006f 0B       		.uleb128 0xb
 1660 0070 49       		.uleb128 0x49
 1661 0071 13       		.uleb128 0x13
 1662 0072 02       		.uleb128 0x2
 1663 0073 17       		.uleb128 0x17
 1664 0074 00       		.byte	0
 1665 0075 00       		.byte	0
 1666 0076 0A       		.uleb128 0xa
 1667 0077 898201   		.uleb128 0x4109
 1668 007a 01       		.byte	0x1
 1669 007b 11       		.uleb128 0x11
 1670 007c 01       		.uleb128 0x1
 1671 007d 31       		.uleb128 0x31
 1672 007e 13       		.uleb128 0x13
 1673 007f 01       		.uleb128 0x1
 1674 0080 13       		.uleb128 0x13
 1675 0081 00       		.byte	0
 1676 0082 00       		.byte	0
 1677 0083 0B       		.uleb128 0xb
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 46


 1678 0084 8A8201   		.uleb128 0x410a
 1679 0087 00       		.byte	0
 1680 0088 02       		.uleb128 0x2
 1681 0089 18       		.uleb128 0x18
 1682 008a 9142     		.uleb128 0x2111
 1683 008c 18       		.uleb128 0x18
 1684 008d 00       		.byte	0
 1685 008e 00       		.byte	0
 1686 008f 0C       		.uleb128 0xc
 1687 0090 898201   		.uleb128 0x4109
 1688 0093 01       		.byte	0x1
 1689 0094 11       		.uleb128 0x11
 1690 0095 01       		.uleb128 0x1
 1691 0096 31       		.uleb128 0x31
 1692 0097 13       		.uleb128 0x13
 1693 0098 00       		.byte	0
 1694 0099 00       		.byte	0
 1695 009a 0D       		.uleb128 0xd
 1696 009b 2E       		.uleb128 0x2e
 1697 009c 01       		.byte	0x1
 1698 009d 3F       		.uleb128 0x3f
 1699 009e 19       		.uleb128 0x19
 1700 009f 03       		.uleb128 0x3
 1701 00a0 0E       		.uleb128 0xe
 1702 00a1 3A       		.uleb128 0x3a
 1703 00a2 0B       		.uleb128 0xb
 1704 00a3 3B       		.uleb128 0x3b
 1705 00a4 05       		.uleb128 0x5
 1706 00a5 27       		.uleb128 0x27
 1707 00a6 19       		.uleb128 0x19
 1708 00a7 11       		.uleb128 0x11
 1709 00a8 01       		.uleb128 0x1
 1710 00a9 12       		.uleb128 0x12
 1711 00aa 06       		.uleb128 0x6
 1712 00ab 40       		.uleb128 0x40
 1713 00ac 18       		.uleb128 0x18
 1714 00ad 9742     		.uleb128 0x2117
 1715 00af 19       		.uleb128 0x19
 1716 00b0 01       		.uleb128 0x1
 1717 00b1 13       		.uleb128 0x13
 1718 00b2 00       		.byte	0
 1719 00b3 00       		.byte	0
 1720 00b4 0E       		.uleb128 0xe
 1721 00b5 898201   		.uleb128 0x4109
 1722 00b8 00       		.byte	0
 1723 00b9 11       		.uleb128 0x11
 1724 00ba 01       		.uleb128 0x1
 1725 00bb 31       		.uleb128 0x31
 1726 00bc 13       		.uleb128 0x13
 1727 00bd 00       		.byte	0
 1728 00be 00       		.byte	0
 1729 00bf 0F       		.uleb128 0xf
 1730 00c0 2E       		.uleb128 0x2e
 1731 00c1 00       		.byte	0
 1732 00c2 3F       		.uleb128 0x3f
 1733 00c3 19       		.uleb128 0x19
 1734 00c4 03       		.uleb128 0x3
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 47


 1735 00c5 0E       		.uleb128 0xe
 1736 00c6 3A       		.uleb128 0x3a
 1737 00c7 0B       		.uleb128 0xb
 1738 00c8 3B       		.uleb128 0x3b
 1739 00c9 05       		.uleb128 0x5
 1740 00ca 27       		.uleb128 0x27
 1741 00cb 19       		.uleb128 0x19
 1742 00cc 11       		.uleb128 0x11
 1743 00cd 01       		.uleb128 0x1
 1744 00ce 12       		.uleb128 0x12
 1745 00cf 06       		.uleb128 0x6
 1746 00d0 40       		.uleb128 0x40
 1747 00d1 18       		.uleb128 0x18
 1748 00d2 9742     		.uleb128 0x2117
 1749 00d4 19       		.uleb128 0x19
 1750 00d5 00       		.byte	0
 1751 00d6 00       		.byte	0
 1752 00d7 10       		.uleb128 0x10
 1753 00d8 2E       		.uleb128 0x2e
 1754 00d9 01       		.byte	0x1
 1755 00da 3F       		.uleb128 0x3f
 1756 00db 19       		.uleb128 0x19
 1757 00dc 03       		.uleb128 0x3
 1758 00dd 0E       		.uleb128 0xe
 1759 00de 3A       		.uleb128 0x3a
 1760 00df 0B       		.uleb128 0xb
 1761 00e0 3B       		.uleb128 0x3b
 1762 00e1 05       		.uleb128 0x5
 1763 00e2 27       		.uleb128 0x27
 1764 00e3 19       		.uleb128 0x19
 1765 00e4 49       		.uleb128 0x49
 1766 00e5 13       		.uleb128 0x13
 1767 00e6 11       		.uleb128 0x11
 1768 00e7 01       		.uleb128 0x1
 1769 00e8 12       		.uleb128 0x12
 1770 00e9 06       		.uleb128 0x6
 1771 00ea 40       		.uleb128 0x40
 1772 00eb 18       		.uleb128 0x18
 1773 00ec 9742     		.uleb128 0x2117
 1774 00ee 19       		.uleb128 0x19
 1775 00ef 01       		.uleb128 0x1
 1776 00f0 13       		.uleb128 0x13
 1777 00f1 00       		.byte	0
 1778 00f2 00       		.byte	0
 1779 00f3 11       		.uleb128 0x11
 1780 00f4 05       		.uleb128 0x5
 1781 00f5 00       		.byte	0
 1782 00f6 03       		.uleb128 0x3
 1783 00f7 0E       		.uleb128 0xe
 1784 00f8 3A       		.uleb128 0x3a
 1785 00f9 0B       		.uleb128 0xb
 1786 00fa 3B       		.uleb128 0x3b
 1787 00fb 05       		.uleb128 0x5
 1788 00fc 49       		.uleb128 0x49
 1789 00fd 13       		.uleb128 0x13
 1790 00fe 02       		.uleb128 0x2
 1791 00ff 17       		.uleb128 0x17
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 48


 1792 0100 00       		.byte	0
 1793 0101 00       		.byte	0
 1794 0102 12       		.uleb128 0x12
 1795 0103 34       		.uleb128 0x34
 1796 0104 00       		.byte	0
 1797 0105 03       		.uleb128 0x3
 1798 0106 0E       		.uleb128 0xe
 1799 0107 3A       		.uleb128 0x3a
 1800 0108 0B       		.uleb128 0xb
 1801 0109 3B       		.uleb128 0x3b
 1802 010a 05       		.uleb128 0x5
 1803 010b 49       		.uleb128 0x49
 1804 010c 13       		.uleb128 0x13
 1805 010d 02       		.uleb128 0x2
 1806 010e 17       		.uleb128 0x17
 1807 010f 00       		.byte	0
 1808 0110 00       		.byte	0
 1809 0111 13       		.uleb128 0x13
 1810 0112 2E       		.uleb128 0x2e
 1811 0113 01       		.byte	0x1
 1812 0114 3F       		.uleb128 0x3f
 1813 0115 19       		.uleb128 0x19
 1814 0116 03       		.uleb128 0x3
 1815 0117 0E       		.uleb128 0xe
 1816 0118 3A       		.uleb128 0x3a
 1817 0119 0B       		.uleb128 0xb
 1818 011a 3B       		.uleb128 0x3b
 1819 011b 05       		.uleb128 0x5
 1820 011c 27       		.uleb128 0x27
 1821 011d 19       		.uleb128 0x19
 1822 011e 49       		.uleb128 0x49
 1823 011f 13       		.uleb128 0x13
 1824 0120 11       		.uleb128 0x11
 1825 0121 01       		.uleb128 0x1
 1826 0122 12       		.uleb128 0x12
 1827 0123 06       		.uleb128 0x6
 1828 0124 40       		.uleb128 0x40
 1829 0125 18       		.uleb128 0x18
 1830 0126 9642     		.uleb128 0x2116
 1831 0128 19       		.uleb128 0x19
 1832 0129 01       		.uleb128 0x1
 1833 012a 13       		.uleb128 0x13
 1834 012b 00       		.byte	0
 1835 012c 00       		.byte	0
 1836 012d 14       		.uleb128 0x14
 1837 012e 34       		.uleb128 0x34
 1838 012f 00       		.byte	0
 1839 0130 03       		.uleb128 0x3
 1840 0131 0E       		.uleb128 0xe
 1841 0132 3A       		.uleb128 0x3a
 1842 0133 0B       		.uleb128 0xb
 1843 0134 3B       		.uleb128 0x3b
 1844 0135 05       		.uleb128 0x5
 1845 0136 49       		.uleb128 0x49
 1846 0137 13       		.uleb128 0x13
 1847 0138 02       		.uleb128 0x2
 1848 0139 18       		.uleb128 0x18
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 49


 1849 013a 00       		.byte	0
 1850 013b 00       		.byte	0
 1851 013c 15       		.uleb128 0x15
 1852 013d 34       		.uleb128 0x34
 1853 013e 00       		.byte	0
 1854 013f 03       		.uleb128 0x3
 1855 0140 0E       		.uleb128 0xe
 1856 0141 3A       		.uleb128 0x3a
 1857 0142 0B       		.uleb128 0xb
 1858 0143 3B       		.uleb128 0x3b
 1859 0144 05       		.uleb128 0x5
 1860 0145 49       		.uleb128 0x49
 1861 0146 13       		.uleb128 0x13
 1862 0147 00       		.byte	0
 1863 0148 00       		.byte	0
 1864 0149 16       		.uleb128 0x16
 1865 014a 01       		.uleb128 0x1
 1866 014b 01       		.byte	0x1
 1867 014c 49       		.uleb128 0x49
 1868 014d 13       		.uleb128 0x13
 1869 014e 01       		.uleb128 0x1
 1870 014f 13       		.uleb128 0x13
 1871 0150 00       		.byte	0
 1872 0151 00       		.byte	0
 1873 0152 17       		.uleb128 0x17
 1874 0153 21       		.uleb128 0x21
 1875 0154 00       		.byte	0
 1876 0155 49       		.uleb128 0x49
 1877 0156 13       		.uleb128 0x13
 1878 0157 2F       		.uleb128 0x2f
 1879 0158 0B       		.uleb128 0xb
 1880 0159 00       		.byte	0
 1881 015a 00       		.byte	0
 1882 015b 18       		.uleb128 0x18
 1883 015c 34       		.uleb128 0x34
 1884 015d 00       		.byte	0
 1885 015e 03       		.uleb128 0x3
 1886 015f 0E       		.uleb128 0xe
 1887 0160 3A       		.uleb128 0x3a
 1888 0161 0B       		.uleb128 0xb
 1889 0162 3B       		.uleb128 0x3b
 1890 0163 0B       		.uleb128 0xb
 1891 0164 49       		.uleb128 0x49
 1892 0165 13       		.uleb128 0x13
 1893 0166 1C       		.uleb128 0x1c
 1894 0167 0A       		.uleb128 0xa
 1895 0168 00       		.byte	0
 1896 0169 00       		.byte	0
 1897 016a 19       		.uleb128 0x19
 1898 016b 26       		.uleb128 0x26
 1899 016c 00       		.byte	0
 1900 016d 49       		.uleb128 0x49
 1901 016e 13       		.uleb128 0x13
 1902 016f 00       		.byte	0
 1903 0170 00       		.byte	0
 1904 0171 1A       		.uleb128 0x1a
 1905 0172 34       		.uleb128 0x34
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 50


 1906 0173 00       		.byte	0
 1907 0174 03       		.uleb128 0x3
 1908 0175 0E       		.uleb128 0xe
 1909 0176 3A       		.uleb128 0x3a
 1910 0177 0B       		.uleb128 0xb
 1911 0178 3B       		.uleb128 0x3b
 1912 0179 0B       		.uleb128 0xb
 1913 017a 49       		.uleb128 0x49
 1914 017b 13       		.uleb128 0x13
 1915 017c 3F       		.uleb128 0x3f
 1916 017d 19       		.uleb128 0x19
 1917 017e 02       		.uleb128 0x2
 1918 017f 18       		.uleb128 0x18
 1919 0180 00       		.byte	0
 1920 0181 00       		.byte	0
 1921 0182 1B       		.uleb128 0x1b
 1922 0183 2E       		.uleb128 0x2e
 1923 0184 01       		.byte	0x1
 1924 0185 3F       		.uleb128 0x3f
 1925 0186 19       		.uleb128 0x19
 1926 0187 03       		.uleb128 0x3
 1927 0188 0E       		.uleb128 0xe
 1928 0189 3A       		.uleb128 0x3a
 1929 018a 0B       		.uleb128 0xb
 1930 018b 3B       		.uleb128 0x3b
 1931 018c 0B       		.uleb128 0xb
 1932 018d 27       		.uleb128 0x27
 1933 018e 19       		.uleb128 0x19
 1934 018f 3C       		.uleb128 0x3c
 1935 0190 19       		.uleb128 0x19
 1936 0191 01       		.uleb128 0x1
 1937 0192 13       		.uleb128 0x13
 1938 0193 00       		.byte	0
 1939 0194 00       		.byte	0
 1940 0195 1C       		.uleb128 0x1c
 1941 0196 05       		.uleb128 0x5
 1942 0197 00       		.byte	0
 1943 0198 49       		.uleb128 0x49
 1944 0199 13       		.uleb128 0x13
 1945 019a 00       		.byte	0
 1946 019b 00       		.byte	0
 1947 019c 1D       		.uleb128 0x1d
 1948 019d 2E       		.uleb128 0x2e
 1949 019e 01       		.byte	0x1
 1950 019f 3F       		.uleb128 0x3f
 1951 01a0 19       		.uleb128 0x19
 1952 01a1 03       		.uleb128 0x3
 1953 01a2 0E       		.uleb128 0xe
 1954 01a3 3A       		.uleb128 0x3a
 1955 01a4 0B       		.uleb128 0xb
 1956 01a5 3B       		.uleb128 0x3b
 1957 01a6 0B       		.uleb128 0xb
 1958 01a7 27       		.uleb128 0x27
 1959 01a8 19       		.uleb128 0x19
 1960 01a9 49       		.uleb128 0x49
 1961 01aa 13       		.uleb128 0x13
 1962 01ab 3C       		.uleb128 0x3c
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 51


 1963 01ac 19       		.uleb128 0x19
 1964 01ad 01       		.uleb128 0x1
 1965 01ae 13       		.uleb128 0x13
 1966 01af 00       		.byte	0
 1967 01b0 00       		.byte	0
 1968 01b1 1E       		.uleb128 0x1e
 1969 01b2 2E       		.uleb128 0x2e
 1970 01b3 01       		.byte	0x1
 1971 01b4 3F       		.uleb128 0x3f
 1972 01b5 19       		.uleb128 0x19
 1973 01b6 03       		.uleb128 0x3
 1974 01b7 0E       		.uleb128 0xe
 1975 01b8 3A       		.uleb128 0x3a
 1976 01b9 0B       		.uleb128 0xb
 1977 01ba 3B       		.uleb128 0x3b
 1978 01bb 0B       		.uleb128 0xb
 1979 01bc 27       		.uleb128 0x27
 1980 01bd 19       		.uleb128 0x19
 1981 01be 3C       		.uleb128 0x3c
 1982 01bf 19       		.uleb128 0x19
 1983 01c0 00       		.byte	0
 1984 01c1 00       		.byte	0
 1985 01c2 00       		.byte	0
 1986              		.section	.debug_loc,"",%progbits
 1987              	.Ldebug_loc0:
 1988              	.LLST0:
 1989 0000 7A000000 		.4byte	.LVL5
 1990 0004 7E000000 		.4byte	.LVL7
 1991 0008 0200     		.2byte	0x2
 1992 000a 30       		.byte	0x30
 1993 000b 9F       		.byte	0x9f
 1994 000c 7E000000 		.4byte	.LVL7
 1995 0010 04010000 		.4byte	.LFE1
 1996 0014 0100     		.2byte	0x1
 1997 0016 53       		.byte	0x53
 1998 0017 00000000 		.4byte	0
 1999 001b 00000000 		.4byte	0
 2000              	.LLST1:
 2001 001f 72000000 		.4byte	.LVL2
 2002 0023 76000000 		.4byte	.LVL3
 2003 0027 0100     		.2byte	0x1
 2004 0029 50       		.byte	0x50
 2005 002a 76000000 		.4byte	.LVL3
 2006 002e 78000000 		.4byte	.LVL4
 2007 0032 0100     		.2byte	0x1
 2008 0034 52       		.byte	0x52
 2009 0035 78000000 		.4byte	.LVL4
 2010 0039 7C000000 		.4byte	.LVL6
 2011 003d 0100     		.2byte	0x1
 2012 003f 53       		.byte	0x53
 2013 0040 7C000000 		.4byte	.LVL6
 2014 0044 7E000000 		.4byte	.LVL7
 2015 0048 0200     		.2byte	0x2
 2016 004a 71       		.byte	0x71
 2017 004b 00       		.sleb128 0
 2018 004c 7E000000 		.4byte	.LVL7
 2019 0050 9A000000 		.4byte	.LVL9
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 52


 2020 0054 0200     		.2byte	0x2
 2021 0056 30       		.byte	0x30
 2022 0057 9F       		.byte	0x9f
 2023 0058 00000000 		.4byte	0
 2024 005c 00000000 		.4byte	0
 2025              	.LLST2:
 2026 0060 8A000000 		.4byte	.LVL8
 2027 0064 9A000000 		.4byte	.LVL9
 2028 0068 0400     		.2byte	0x4
 2029 006a 0A       		.byte	0xa
 2030 006b 0010     		.2byte	0x1000
 2031 006d 9F       		.byte	0x9f
 2032 006e 00000000 		.4byte	0
 2033 0072 00000000 		.4byte	0
 2034              	.LLST3:
 2035 0076 00000000 		.4byte	.LVL13
 2036 007a 06000000 		.4byte	.LVL15
 2037 007e 0100     		.2byte	0x1
 2038 0080 50       		.byte	0x50
 2039 0081 06000000 		.4byte	.LVL15
 2040 0085 1A000000 		.4byte	.LVL17
 2041 0089 0100     		.2byte	0x1
 2042 008b 52       		.byte	0x52
 2043 008c 1A000000 		.4byte	.LVL17
 2044 0090 20000000 		.4byte	.LVL18
 2045 0094 0400     		.2byte	0x4
 2046 0096 F3       		.byte	0xf3
 2047 0097 01       		.uleb128 0x1
 2048 0098 50       		.byte	0x50
 2049 0099 9F       		.byte	0x9f
 2050 009a 20000000 		.4byte	.LVL18
 2051 009e 22000000 		.4byte	.LVL19
 2052 00a2 0100     		.2byte	0x1
 2053 00a4 50       		.byte	0x50
 2054 00a5 22000000 		.4byte	.LVL19
 2055 00a9 28000000 		.4byte	.LFE6
 2056 00ad 0400     		.2byte	0x4
 2057 00af F3       		.byte	0xf3
 2058 00b0 01       		.uleb128 0x1
 2059 00b1 50       		.byte	0x50
 2060 00b2 9F       		.byte	0x9f
 2061 00b3 00000000 		.4byte	0
 2062 00b7 00000000 		.4byte	0
 2063              	.LLST4:
 2064 00bb 02000000 		.4byte	.LVL14
 2065 00bf 06000000 		.4byte	.LVL15
 2066 00c3 0200     		.2byte	0x2
 2067 00c5 30       		.byte	0x30
 2068 00c6 9F       		.byte	0x9f
 2069 00c7 0E000000 		.4byte	.LVL16
 2070 00cb 20000000 		.4byte	.LVL18
 2071 00cf 0100     		.2byte	0x1
 2072 00d1 50       		.byte	0x50
 2073 00d2 20000000 		.4byte	.LVL18
 2074 00d6 22000000 		.4byte	.LVL19
 2075 00da 0200     		.2byte	0x2
 2076 00dc 30       		.byte	0x30
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 53


 2077 00dd 9F       		.byte	0x9f
 2078 00de 22000000 		.4byte	.LVL19
 2079 00e2 28000000 		.4byte	.LFE6
 2080 00e6 0100     		.2byte	0x1
 2081 00e8 50       		.byte	0x50
 2082 00e9 00000000 		.4byte	0
 2083 00ed 00000000 		.4byte	0
 2084              	.LLST5:
 2085 00f1 00000000 		.4byte	.LVL20
 2086 00f5 08000000 		.4byte	.LVL21
 2087 00f9 0100     		.2byte	0x1
 2088 00fb 50       		.byte	0x50
 2089 00fc 08000000 		.4byte	.LVL21
 2090 0100 12000000 		.4byte	.LVL23
 2091 0104 0100     		.2byte	0x1
 2092 0106 54       		.byte	0x54
 2093 0107 12000000 		.4byte	.LVL23
 2094 010b 20000000 		.4byte	.LVL25
 2095 010f 0400     		.2byte	0x4
 2096 0111 F3       		.byte	0xf3
 2097 0112 01       		.uleb128 0x1
 2098 0113 50       		.byte	0x50
 2099 0114 9F       		.byte	0x9f
 2100 0115 20000000 		.4byte	.LVL25
 2101 0119 22000000 		.4byte	.LVL26
 2102 011d 0100     		.2byte	0x1
 2103 011f 54       		.byte	0x54
 2104 0120 22000000 		.4byte	.LVL26
 2105 0124 2C000000 		.4byte	.LFE7
 2106 0128 0400     		.2byte	0x4
 2107 012a F3       		.byte	0xf3
 2108 012b 01       		.uleb128 0x1
 2109 012c 50       		.byte	0x50
 2110 012d 9F       		.byte	0x9f
 2111 012e 00000000 		.4byte	0
 2112 0132 00000000 		.4byte	0
 2113              	.LLST6:
 2114 0136 1E000000 		.4byte	.LVL24
 2115 013a 20000000 		.4byte	.LVL25
 2116 013e 0100     		.2byte	0x1
 2117 0140 50       		.byte	0x50
 2118 0141 22000000 		.4byte	.LVL26
 2119 0145 24000000 		.4byte	.LVL27
 2120 0149 0100     		.2byte	0x1
 2121 014b 50       		.byte	0x50
 2122 014c 00000000 		.4byte	0
 2123 0150 00000000 		.4byte	0
 2124              	.LLST7:
 2125 0154 00000000 		.4byte	.LVL28
 2126 0158 04000000 		.4byte	.LVL29
 2127 015c 0100     		.2byte	0x1
 2128 015e 50       		.byte	0x50
 2129 015f 04000000 		.4byte	.LVL29
 2130 0163 10000000 		.4byte	.LFE8
 2131 0167 0400     		.2byte	0x4
 2132 0169 F3       		.byte	0xf3
 2133 016a 01       		.uleb128 0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 54


 2134 016b 50       		.byte	0x50
 2135 016c 9F       		.byte	0x9f
 2136 016d 00000000 		.4byte	0
 2137 0171 00000000 		.4byte	0
 2138              	.LLST8:
 2139 0175 00000000 		.4byte	.LVL30
 2140 0179 0E000000 		.4byte	.LVL31
 2141 017d 0100     		.2byte	0x1
 2142 017f 50       		.byte	0x50
 2143 0180 0E000000 		.4byte	.LVL31
 2144 0184 1C000000 		.4byte	.LFE9
 2145 0188 0400     		.2byte	0x4
 2146 018a F3       		.byte	0xf3
 2147 018b 01       		.uleb128 0x1
 2148 018c 50       		.byte	0x50
 2149 018d 9F       		.byte	0x9f
 2150 018e 00000000 		.4byte	0
 2151 0192 00000000 		.4byte	0
 2152              	.LLST9:
 2153 0196 00000000 		.4byte	.LVL32
 2154 019a 0E000000 		.4byte	.LVL33
 2155 019e 0100     		.2byte	0x1
 2156 01a0 50       		.byte	0x50
 2157 01a1 0E000000 		.4byte	.LVL33
 2158 01a5 18000000 		.4byte	.LFE10
 2159 01a9 0400     		.2byte	0x4
 2160 01ab F3       		.byte	0xf3
 2161 01ac 01       		.uleb128 0x1
 2162 01ad 50       		.byte	0x50
 2163 01ae 9F       		.byte	0x9f
 2164 01af 00000000 		.4byte	0
 2165 01b3 00000000 		.4byte	0
 2166              	.LLST10:
 2167 01b7 00000000 		.4byte	.LVL34
 2168 01bb 04000000 		.4byte	.LVL35
 2169 01bf 0100     		.2byte	0x1
 2170 01c1 50       		.byte	0x50
 2171 01c2 04000000 		.4byte	.LVL35
 2172 01c6 10000000 		.4byte	.LFE11
 2173 01ca 0400     		.2byte	0x4
 2174 01cc F3       		.byte	0xf3
 2175 01cd 01       		.uleb128 0x1
 2176 01ce 50       		.byte	0x50
 2177 01cf 9F       		.byte	0x9f
 2178 01d0 00000000 		.4byte	0
 2179 01d4 00000000 		.4byte	0
 2180              	.LLST11:
 2181 01d8 00000000 		.4byte	.LVL36
 2182 01dc 04000000 		.4byte	.LVL37
 2183 01e0 0100     		.2byte	0x1
 2184 01e2 50       		.byte	0x50
 2185 01e3 04000000 		.4byte	.LVL37
 2186 01e7 10000000 		.4byte	.LFE12
 2187 01eb 0400     		.2byte	0x4
 2188 01ed F3       		.byte	0xf3
 2189 01ee 01       		.uleb128 0x1
 2190 01ef 50       		.byte	0x50
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 55


 2191 01f0 9F       		.byte	0x9f
 2192 01f1 00000000 		.4byte	0
 2193 01f5 00000000 		.4byte	0
 2194              	.LLST12:
 2195 01f9 00000000 		.4byte	.LVL38
 2196 01fd 0C000000 		.4byte	.LVL39
 2197 0201 0100     		.2byte	0x1
 2198 0203 50       		.byte	0x50
 2199 0204 0C000000 		.4byte	.LVL39
 2200 0208 12000000 		.4byte	.LVL41
 2201 020c 0100     		.2byte	0x1
 2202 020e 54       		.byte	0x54
 2203 020f 12000000 		.4byte	.LVL41
 2204 0213 1C000000 		.4byte	.LFE13
 2205 0217 0400     		.2byte	0x4
 2206 0219 F3       		.byte	0xf3
 2207 021a 01       		.uleb128 0x1
 2208 021b 50       		.byte	0x50
 2209 021c 9F       		.byte	0x9f
 2210 021d 00000000 		.4byte	0
 2211 0221 00000000 		.4byte	0
 2212              	.LLST13:
 2213 0225 00000000 		.4byte	.LVL38
 2214 0229 0F000000 		.4byte	.LVL40-1
 2215 022d 0100     		.2byte	0x1
 2216 022f 51       		.byte	0x51
 2217 0230 0F000000 		.4byte	.LVL40-1
 2218 0234 1C000000 		.4byte	.LFE13
 2219 0238 0400     		.2byte	0x4
 2220 023a F3       		.byte	0xf3
 2221 023b 01       		.uleb128 0x1
 2222 023c 51       		.byte	0x51
 2223 023d 9F       		.byte	0x9f
 2224 023e 00000000 		.4byte	0
 2225 0242 00000000 		.4byte	0
 2226              	.LLST14:
 2227 0246 00000000 		.4byte	.LVL42
 2228 024a 0C000000 		.4byte	.LVL43
 2229 024e 0100     		.2byte	0x1
 2230 0250 50       		.byte	0x50
 2231 0251 0C000000 		.4byte	.LVL43
 2232 0255 12000000 		.4byte	.LVL45
 2233 0259 0100     		.2byte	0x1
 2234 025b 54       		.byte	0x54
 2235 025c 12000000 		.4byte	.LVL45
 2236 0260 1C000000 		.4byte	.LFE14
 2237 0264 0400     		.2byte	0x4
 2238 0266 F3       		.byte	0xf3
 2239 0267 01       		.uleb128 0x1
 2240 0268 50       		.byte	0x50
 2241 0269 9F       		.byte	0x9f
 2242 026a 00000000 		.4byte	0
 2243 026e 00000000 		.4byte	0
 2244              	.LLST15:
 2245 0272 00000000 		.4byte	.LVL42
 2246 0276 0F000000 		.4byte	.LVL44-1
 2247 027a 0100     		.2byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 56


 2248 027c 51       		.byte	0x51
 2249 027d 0F000000 		.4byte	.LVL44-1
 2250 0281 16000000 		.4byte	.LVL46
 2251 0285 0100     		.2byte	0x1
 2252 0287 55       		.byte	0x55
 2253 0288 16000000 		.4byte	.LVL46
 2254 028c 1C000000 		.4byte	.LFE14
 2255 0290 0800     		.2byte	0x8
 2256 0292 F3       		.byte	0xf3
 2257 0293 01       		.uleb128 0x1
 2258 0294 50       		.byte	0x50
 2259 0295 32       		.byte	0x32
 2260 0296 24       		.byte	0x24
 2261 0297 73       		.byte	0x73
 2262 0298 00       		.sleb128 0
 2263 0299 22       		.byte	0x22
 2264 029a 00000000 		.4byte	0
 2265 029e 00000000 		.4byte	0
 2266              	.LLST16:
 2267 02a2 00000000 		.4byte	.LVL47
 2268 02a6 0C000000 		.4byte	.LVL48
 2269 02aa 0100     		.2byte	0x1
 2270 02ac 50       		.byte	0x50
 2271 02ad 0C000000 		.4byte	.LVL48
 2272 02b1 44000000 		.4byte	.LVL54
 2273 02b5 0100     		.2byte	0x1
 2274 02b7 54       		.byte	0x54
 2275 02b8 44000000 		.4byte	.LVL54
 2276 02bc 5C000000 		.4byte	.LFE15
 2277 02c0 0400     		.2byte	0x4
 2278 02c2 F3       		.byte	0xf3
 2279 02c3 01       		.uleb128 0x1
 2280 02c4 50       		.byte	0x50
 2281 02c5 9F       		.byte	0x9f
 2282 02c6 00000000 		.4byte	0
 2283 02ca 00000000 		.4byte	0
 2284              	.LLST17:
 2285 02ce 00000000 		.4byte	.LVL47
 2286 02d2 0F000000 		.4byte	.LVL49-1
 2287 02d6 0100     		.2byte	0x1
 2288 02d8 51       		.byte	0x51
 2289 02d9 0F000000 		.4byte	.LVL49-1
 2290 02dd 1A000000 		.4byte	.LVL50
 2291 02e1 0400     		.2byte	0x4
 2292 02e3 F3       		.byte	0xf3
 2293 02e4 01       		.uleb128 0x1
 2294 02e5 51       		.byte	0x51
 2295 02e6 9F       		.byte	0x9f
 2296 02e7 1A000000 		.4byte	.LVL50
 2297 02eb 28000000 		.4byte	.LVL51
 2298 02ef 0100     		.2byte	0x1
 2299 02f1 51       		.byte	0x51
 2300 02f2 32000000 		.4byte	.LVL52
 2301 02f6 36000000 		.4byte	.LVL53
 2302 02fa 0100     		.2byte	0x1
 2303 02fc 51       		.byte	0x51
 2304 02fd 00000000 		.4byte	0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 57


 2305 0301 00000000 		.4byte	0
 2306              	.LLST18:
 2307 0305 00000000 		.4byte	.LVL56
 2308 0309 0C000000 		.4byte	.LVL57
 2309 030d 0100     		.2byte	0x1
 2310 030f 50       		.byte	0x50
 2311 0310 0C000000 		.4byte	.LVL57
 2312 0314 26000000 		.4byte	.LVL61
 2313 0318 0100     		.2byte	0x1
 2314 031a 55       		.byte	0x55
 2315 031b 26000000 		.4byte	.LVL61
 2316 031f 40000000 		.4byte	.LFE16
 2317 0323 0400     		.2byte	0x4
 2318 0325 F3       		.byte	0xf3
 2319 0326 01       		.uleb128 0x1
 2320 0327 50       		.byte	0x50
 2321 0328 9F       		.byte	0x9f
 2322 0329 00000000 		.4byte	0
 2323 032d 00000000 		.4byte	0
 2324              	.LLST19:
 2325 0331 00000000 		.4byte	.LVL56
 2326 0335 0F000000 		.4byte	.LVL58-1
 2327 0339 0100     		.2byte	0x1
 2328 033b 51       		.byte	0x51
 2329 033c 0F000000 		.4byte	.LVL58-1
 2330 0340 1A000000 		.4byte	.LVL59
 2331 0344 0400     		.2byte	0x4
 2332 0346 F3       		.byte	0xf3
 2333 0347 01       		.uleb128 0x1
 2334 0348 51       		.byte	0x51
 2335 0349 9F       		.byte	0x9f
 2336 034a 1A000000 		.4byte	.LVL59
 2337 034e 23000000 		.4byte	.LVL60-1
 2338 0352 0100     		.2byte	0x1
 2339 0354 50       		.byte	0x50
 2340 0355 00000000 		.4byte	0
 2341 0359 00000000 		.4byte	0
 2342              	.LLST20:
 2343 035d 00000000 		.4byte	.LVL63
 2344 0361 0C000000 		.4byte	.LVL64
 2345 0365 0100     		.2byte	0x1
 2346 0367 50       		.byte	0x50
 2347 0368 0C000000 		.4byte	.LVL64
 2348 036c 28000000 		.4byte	.LVL69
 2349 0370 0100     		.2byte	0x1
 2350 0372 54       		.byte	0x54
 2351 0373 28000000 		.4byte	.LVL69
 2352 0377 48000000 		.4byte	.LFE17
 2353 037b 0400     		.2byte	0x4
 2354 037d F3       		.byte	0xf3
 2355 037e 01       		.uleb128 0x1
 2356 037f 50       		.byte	0x50
 2357 0380 9F       		.byte	0x9f
 2358 0381 00000000 		.4byte	0
 2359 0385 00000000 		.4byte	0
 2360              	.LLST21:
 2361 0389 00000000 		.4byte	.LVL63
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 58


 2362 038d 0F000000 		.4byte	.LVL65-1
 2363 0391 0100     		.2byte	0x1
 2364 0393 51       		.byte	0x51
 2365 0394 0F000000 		.4byte	.LVL65-1
 2366 0398 1A000000 		.4byte	.LVL66
 2367 039c 0400     		.2byte	0x4
 2368 039e F3       		.byte	0xf3
 2369 039f 01       		.uleb128 0x1
 2370 03a0 51       		.byte	0x51
 2371 03a1 9F       		.byte	0x9f
 2372 03a2 1A000000 		.4byte	.LVL66
 2373 03a6 1D000000 		.4byte	.LVL67-1
 2374 03aa 0100     		.2byte	0x1
 2375 03ac 50       		.byte	0x50
 2376 03ad 00000000 		.4byte	0
 2377 03b1 00000000 		.4byte	0
 2378              		.section	.debug_aranges,"",%progbits
 2379 0000 A4000000 		.4byte	0xa4
 2380 0004 0200     		.2byte	0x2
 2381 0006 00000000 		.4byte	.Ldebug_info0
 2382 000a 04       		.byte	0x4
 2383 000b 00       		.byte	0
 2384 000c 0000     		.2byte	0
 2385 000e 0000     		.2byte	0
 2386 0010 00000000 		.4byte	.LFB1
 2387 0014 04010000 		.4byte	.LFE1-.LFB1
 2388 0018 00000000 		.4byte	.LFB2
 2389 001c 24000000 		.4byte	.LFE2-.LFB2
 2390 0020 00000000 		.4byte	.LFB0
 2391 0024 20000000 		.4byte	.LFE0-.LFB0
 2392 0028 00000000 		.4byte	.LFB3
 2393 002c 10000000 		.4byte	.LFE3-.LFB3
 2394 0030 00000000 		.4byte	.LFB4
 2395 0034 0C000000 		.4byte	.LFE4-.LFB4
 2396 0038 00000000 		.4byte	.LFB5
 2397 003c 02000000 		.4byte	.LFE5-.LFB5
 2398 0040 00000000 		.4byte	.LFB6
 2399 0044 28000000 		.4byte	.LFE6-.LFB6
 2400 0048 00000000 		.4byte	.LFB7
 2401 004c 2C000000 		.4byte	.LFE7-.LFB7
 2402 0050 00000000 		.4byte	.LFB8
 2403 0054 10000000 		.4byte	.LFE8-.LFB8
 2404 0058 00000000 		.4byte	.LFB9
 2405 005c 1C000000 		.4byte	.LFE9-.LFB9
 2406 0060 00000000 		.4byte	.LFB10
 2407 0064 18000000 		.4byte	.LFE10-.LFB10
 2408 0068 00000000 		.4byte	.LFB11
 2409 006c 10000000 		.4byte	.LFE11-.LFB11
 2410 0070 00000000 		.4byte	.LFB12
 2411 0074 10000000 		.4byte	.LFE12-.LFB12
 2412 0078 00000000 		.4byte	.LFB13
 2413 007c 1C000000 		.4byte	.LFE13-.LFB13
 2414 0080 00000000 		.4byte	.LFB14
 2415 0084 1C000000 		.4byte	.LFE14-.LFB14
 2416 0088 00000000 		.4byte	.LFB15
 2417 008c 5C000000 		.4byte	.LFE15-.LFB15
 2418 0090 00000000 		.4byte	.LFB16
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 59


 2419 0094 40000000 		.4byte	.LFE16-.LFB16
 2420 0098 00000000 		.4byte	.LFB17
 2421 009c 48000000 		.4byte	.LFE17-.LFB17
 2422 00a0 00000000 		.4byte	0
 2423 00a4 00000000 		.4byte	0
 2424              		.section	.debug_ranges,"",%progbits
 2425              	.Ldebug_ranges0:
 2426 0000 00000000 		.4byte	.LFB1
 2427 0004 04010000 		.4byte	.LFE1
 2428 0008 00000000 		.4byte	.LFB2
 2429 000c 24000000 		.4byte	.LFE2
 2430 0010 00000000 		.4byte	.LFB0
 2431 0014 20000000 		.4byte	.LFE0
 2432 0018 00000000 		.4byte	.LFB3
 2433 001c 10000000 		.4byte	.LFE3
 2434 0020 00000000 		.4byte	.LFB4
 2435 0024 0C000000 		.4byte	.LFE4
 2436 0028 00000000 		.4byte	.LFB5
 2437 002c 02000000 		.4byte	.LFE5
 2438 0030 00000000 		.4byte	.LFB6
 2439 0034 28000000 		.4byte	.LFE6
 2440 0038 00000000 		.4byte	.LFB7
 2441 003c 2C000000 		.4byte	.LFE7
 2442 0040 00000000 		.4byte	.LFB8
 2443 0044 10000000 		.4byte	.LFE8
 2444 0048 00000000 		.4byte	.LFB9
 2445 004c 1C000000 		.4byte	.LFE9
 2446 0050 00000000 		.4byte	.LFB10
 2447 0054 18000000 		.4byte	.LFE10
 2448 0058 00000000 		.4byte	.LFB11
 2449 005c 10000000 		.4byte	.LFE11
 2450 0060 00000000 		.4byte	.LFB12
 2451 0064 10000000 		.4byte	.LFE12
 2452 0068 00000000 		.4byte	.LFB13
 2453 006c 1C000000 		.4byte	.LFE13
 2454 0070 00000000 		.4byte	.LFB14
 2455 0074 1C000000 		.4byte	.LFE14
 2456 0078 00000000 		.4byte	.LFB15
 2457 007c 5C000000 		.4byte	.LFE15
 2458 0080 00000000 		.4byte	.LFB16
 2459 0084 40000000 		.4byte	.LFE16
 2460 0088 00000000 		.4byte	.LFB17
 2461 008c 48000000 		.4byte	.LFE17
 2462 0090 00000000 		.4byte	0
 2463 0094 00000000 		.4byte	0
 2464              		.section	.debug_line,"",%progbits
 2465              	.Ldebug_line0:
 2466 0000 74020000 		.section	.debug_str,"MS",%progbits,1
 2466      02004D00 
 2466      00000201 
 2466      FB0E0D00 
 2466      01010101 
 2467              	.LASF10:
 2468 0000 75696E74 		.ascii	"uint16\000"
 2468      313600
 2469              	.LASF48:
 2470 0007 61646347 		.ascii	"adcGain\000"
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 60


 2470      61696E00 
 2471              	.LASF24:
 2472 000f 636F756E 		.ascii	"counts\000"
 2472      747300
 2473              	.LASF53:
 2474 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2474      436F756E 
 2474      7473546F 
 2474      5F566F6C 
 2474      747300
 2475              	.LASF25:
 2476 0029 4144435F 		.ascii	"ADC_Init\000"
 2476      496E6974 
 2476      00
 2477              	.LASF7:
 2478 0032 6C6F6E67 		.ascii	"long long unsigned int\000"
 2478      206C6F6E 
 2478      6720756E 
 2478      7369676E 
 2478      65642069 
 2479              	.LASF29:
 2480 0049 4144435F 		.ascii	"ADC_StartConvert\000"
 2480      53746172 
 2480      74436F6E 
 2480      76657274 
 2480      00
 2481              	.LASF6:
 2482 005a 6C6F6E67 		.ascii	"long long int\000"
 2482      206C6F6E 
 2482      6720696E 
 2482      7400
 2483              	.LASF0:
 2484 0068 7369676E 		.ascii	"signed char\000"
 2484      65642063 
 2484      68617200 
 2485              	.LASF31:
 2486 0074 73746174 		.ascii	"status\000"
 2486      757300
 2487              	.LASF13:
 2488 007b 696E7433 		.ascii	"int32\000"
 2488      3200
 2489              	.LASF27:
 2490 0081 4144435F 		.ascii	"ADC_Start\000"
 2490      53746172 
 2490      7400
 2491              	.LASF4:
 2492 008b 6C6F6E67 		.ascii	"long int\000"
 2492      20696E74 
 2492      00
 2493              	.LASF52:
 2494 0094 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2494      436F756E 
 2494      7473546F 
 2494      5F75566F 
 2494      6C747300 
 2495              	.LASF58:
 2496 00a8 4144435F 		.ascii	"ADC_countsPer10Volt\000"
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 61


 2496      636F756E 
 2496      74735065 
 2496      72313056 
 2496      6F6C7400 
 2497              	.LASF9:
 2498 00bc 75696E74 		.ascii	"uint8\000"
 2498      3800
 2499              	.LASF60:
 2500 00c2 43794465 		.ascii	"CyDelayUs\000"
 2500      6C617955 
 2500      7300
 2501              	.LASF16:
 2502 00cc 646F7562 		.ascii	"double\000"
 2502      6C6500
 2503              	.LASF11:
 2504 00d3 75696E74 		.ascii	"uint32\000"
 2504      333200
 2505              	.LASF38:
 2506 00da 6D61736B 		.ascii	"mask\000"
 2506      00
 2507              	.LASF56:
 2508 00df 4144435F 		.ascii	"ADC_initVar\000"
 2508      696E6974 
 2508      56617200 
 2509              	.LASF34:
 2510 00eb 7265744D 		.ascii	"retMode\000"
 2510      6F646500 
 2511              	.LASF43:
 2512 00f3 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2512      5365744C 
 2512      696D6974 
 2512      4D61736B 
 2512      00
 2513              	.LASF8:
 2514 0104 756E7369 		.ascii	"unsigned int\000"
 2514      676E6564 
 2514      20696E74 
 2514      00
 2515              	.LASF64:
 2516 0111 75566F6C 		.ascii	"uVolts\000"
 2516      747300
 2517              	.LASF5:
 2518 0118 6C6F6E67 		.ascii	"long unsigned int\000"
 2518      20756E73 
 2518      69676E65 
 2518      6420696E 
 2518      7400
 2519              	.LASF44:
 2520 012a 4144435F 		.ascii	"ADC_SetSatMask\000"
 2520      53657453 
 2520      61744D61 
 2520      736B00
 2521              	.LASF54:
 2522 0139 766F6C74 		.ascii	"volts\000"
 2522      7300
 2523              	.LASF23:
 2524 013f 746D7052 		.ascii	"tmpRegVal\000"
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 62


 2524      65675661 
 2524      6C00
 2525              	.LASF3:
 2526 0149 73686F72 		.ascii	"short unsigned int\000"
 2526      7420756E 
 2526      7369676E 
 2526      65642069 
 2526      6E7400
 2527              	.LASF65:
 2528 015c 4379496E 		.ascii	"CyIntSetVector\000"
 2528      74536574 
 2528      56656374 
 2528      6F7200
 2529              	.LASF30:
 2530 016b 4144435F 		.ascii	"ADC_StopConvert\000"
 2530      53746F70 
 2530      436F6E76 
 2530      65727400 
 2531              	.LASF51:
 2532 017b 6D566F6C 		.ascii	"mVolts\000"
 2532      747300
 2533              	.LASF19:
 2534 0182 72656733 		.ascii	"reg32\000"
 2534      3200
 2535              	.LASF14:
 2536 0188 666C6F61 		.ascii	"float32\000"
 2536      74333200 
 2537              	.LASF21:
 2538 0190 73697A65 		.ascii	"sizetype\000"
 2538      74797065 
 2538      00
 2539              	.LASF40:
 2540 0199 6C6F774C 		.ascii	"lowLimit\000"
 2540      696D6974 
 2540      00
 2541              	.LASF41:
 2542 01a2 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2542      53657448 
 2542      6967684C 
 2542      696D6974 
 2542      00
 2543              	.LASF32:
 2544 01b3 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2544      4973456E 
 2544      64436F6E 
 2544      76657273 
 2544      696F6E00 
 2545              	.LASF17:
 2546 01c7 696E7436 		.ascii	"int64\000"
 2546      3400
 2547              	.LASF59:
 2548 01cd 4379496E 		.ascii	"CyIntSetPriority\000"
 2548      74536574 
 2548      5072696F 
 2548      72697479 
 2548      00
 2549              	.LASF37:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 63


 2550 01de 4144435F 		.ascii	"ADC_SetChanMask\000"
 2550      53657443 
 2550      68616E4D 
 2550      61736B00 
 2551              	.LASF47:
 2552 01ee 4144435F 		.ascii	"ADC_SetGain\000"
 2552      53657447 
 2552      61696E00 
 2553              	.LASF15:
 2554 01fa 666C6F61 		.ascii	"float\000"
 2554      7400
 2555              	.LASF42:
 2556 0200 68696768 		.ascii	"highLimit\000"
 2556      4C696D69 
 2556      7400
 2557              	.LASF49:
 2558 020a 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2558      436F756E 
 2558      7473546F 
 2558      5F6D566F 
 2558      6C747300 
 2559              	.LASF39:
 2560 021e 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2560      5365744C 
 2560      6F774C69 
 2560      6D697400 
 2561              	.LASF66:
 2562 022e 43794861 		.ascii	"CyHalt\000"
 2562      6C7400
 2563              	.LASF62:
 2564 0235 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC.c\000"
 2564      6E657261 
 2564      7465645F 
 2564      536F7572 
 2564      63655C50 
 2565              	.LASF1:
 2566 0254 756E7369 		.ascii	"unsigned char\000"
 2566      676E6564 
 2566      20636861 
 2566      7200
 2567              	.LASF57:
 2568 0262 4144435F 		.ascii	"ADC_offset\000"
 2568      6F666673 
 2568      657400
 2569              	.LASF2:
 2570 026d 73686F72 		.ascii	"short int\000"
 2570      7420696E 
 2570      7400
 2571              	.LASF28:
 2572 0277 4144435F 		.ascii	"ADC_Stop\000"
 2572      53746F70 
 2572      00
 2573              	.LASF22:
 2574 0280 63684E75 		.ascii	"chNum\000"
 2574      6D00
 2575              	.LASF35:
 2576 0286 6368616E 		.ascii	"chan\000"
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 64


 2576      00
 2577              	.LASF18:
 2578 028b 63686172 		.ascii	"char\000"
 2578      00
 2579              	.LASF20:
 2580 0290 63796973 		.ascii	"cyisraddress\000"
 2580      72616464 
 2580      72657373 
 2580      00
 2581              	.LASF55:
 2582 029d 4144435F 		.ascii	"ADC_channelsConfig\000"
 2582      6368616E 
 2582      6E656C73 
 2582      436F6E66 
 2582      696700
 2583              	.LASF63:
 2584 02b0 443A5C63 		.ascii	"D:\\code\\cypress\\controllers\\dcsd.cydsn\000"
 2584      6F64655C 
 2584      63797072 
 2584      6573735C 
 2584      636F6E74 
 2585              	.LASF46:
 2586 02d7 6F666673 		.ascii	"offset\000"
 2586      657400
 2587              	.LASF50:
 2588 02de 61646343 		.ascii	"adcCounts\000"
 2588      6F756E74 
 2588      7300
 2589              	.LASF26:
 2590 02e8 4144435F 		.ascii	"ADC_Enable\000"
 2590      456E6162 
 2590      6C6500
 2591              	.LASF12:
 2592 02f3 696E7431 		.ascii	"int16\000"
 2592      3600
 2593              	.LASF61:
 2594 02f9 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2594      4320342E 
 2594      392E3320 
 2594      32303135 
 2594      30333033 
 2595 032c 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2595      20726576 
 2595      6973696F 
 2595      6E203232 
 2595      31323230 
 2596 035f 67202D73 		.ascii	"g -std=c99 -ffunction-sections -ffat-lto-objects\000"
 2596      74643D63 
 2596      3939202D 
 2596      6666756E 
 2596      6374696F 
 2597              	.LASF45:
 2598 0390 4144435F 		.ascii	"ADC_SetOffset\000"
 2598      5365744F 
 2598      66667365 
 2598      7400
 2599              	.LASF36:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccqCK5N3.s 			page 65


 2600 039e 72657375 		.ascii	"result\000"
 2600      6C7400
 2601              	.LASF33:
 2602 03a5 4144435F 		.ascii	"ADC_GetResult16\000"
 2602      47657452 
 2602      6573756C 
 2602      74313600 
 2603              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
